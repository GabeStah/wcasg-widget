(function webpackUniversalModuleDefinition(root, factory) {
    if (typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if (typeof define === 'function' && define.amd)
        define([], factory);
    else {
        var a = factory();
        for (var i in a)
            (typeof exports === 'object' ? exports : root)[i] = a[i];
    }
}
)(window, function() {
    return /******/
    (function(modules) {
        // webpackBootstrap
        /******/
        // The module cache
        /******/
        var installedModules = {};
        /******/
        /******/
        // The require function
        /******/
        function __webpack_require__(moduleId) {
            /******/
            /******/
            // Check if module is in cache
            /******/
            if (installedModules[moduleId]) {
                /******/
                return installedModules[moduleId].exports;
                /******/
            }
            /******/
            // Create a new module (and put it into the cache)
            /******/
            var module = installedModules[moduleId] = {
                /******/
                i: moduleId,
                /******/
                l: false,
                /******/
                exports: {}/******/
            };
            /******/
            /******/
            // Execute the module function
            /******/
            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/
            // Flag the module as loaded
            /******/
            module.l = true;
            /******/
            /******/
            // Return the exports of the module
            /******/
            return module.exports;
            /******/
        }
        /******/
        /******/
        /******/
        // expose the modules object (__webpack_modules__)
        /******/
        __webpack_require__.m = modules;
        /******/
        /******/
        // expose the module cache
        /******/
        __webpack_require__.c = installedModules;
        /******/
        /******/
        // define getter function for harmony exports
        /******/
        __webpack_require__.d = function(exports, name, getter) {
            /******/
            if (!__webpack_require__.o(exports, name)) {
                /******/
                Object.defineProperty(exports, name, {
                    enumerable: true,
                    get: getter
                });
                /******/
            }
            /******/
        }
        ;
        /******/
        /******/
        // define __esModule on exports
        /******/
        __webpack_require__.r = function(exports) {
            /******/
            if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                /******/
                Object.defineProperty(exports, Symbol.toStringTag, {
                    value: 'Module'
                });
                /******/
            }
            /******/
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            /******/
        }
        ;
        /******/
        /******/
        // create a fake namespace object
        /******/
        // mode & 1: value is a module id, require it
        /******/
        // mode & 2: merge all properties of value into the ns
        /******/
        // mode & 4: return value when already ns object
        /******/
        // mode & 8|1: behave like require
        /******/
        __webpack_require__.t = function(value, mode) {
            /******/
            if (mode & 1)
                value = __webpack_require__(value);
            /******/
            if (mode & 8)
                return value;
            /******/
            if ((mode & 4) && typeof value === 'object' && value && value.__esModule)
                return value;
            /******/
            var ns = Object.create(null);
            /******/
            __webpack_require__.r(ns);
            /******/
            Object.defineProperty(ns, 'default', {
                enumerable: true,
                value: value
            });
            /******/
            if (mode & 2 && typeof value != 'string')
                for (var key in value)
                    __webpack_require__.d(ns, key, function(key) {
                        return value[key];
                    }
                    .bind(null, key));
            /******/
            return ns;
            /******/
        }
        ;
        /******/
        /******/
        // getDefaultExport function for compatibility with non-harmony modules
        /******/
        __webpack_require__.n = function(module) {
            /******/
            var getter = module && module.__esModule ? /******/
            function getDefault() {
                return module['default'];
            }
            : /******/
            function getModuleExports() {
                return module;
            }
            ;
            /******/
            __webpack_require__.d(getter, 'a', getter);
            /******/
            return getter;
            /******/
        }
        ;
        /******/
        /******/
        // Object.prototype.hasOwnProperty.call
        /******/
        __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
        }
        ;
        /******/
        /******/
        // __webpack_public_path__
        /******/
        __webpack_require__.p = "/";
        /******/
        /******/
        /******/
        // Load entry module and return exports
        /******/
        return __webpack_require__(__webpack_require__.s = 442);
        /******/
    }
    )/************************************************************************/
    /******/
    ([/* 0 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // CONCATENATED MODULE: ../node_modules/preact/dist/preact.module.js
        var preact_module_n, l, preact_module_u, preact_module_t, i, preact_module_o, preact_module_r, f = {}, preact_module_e = [], c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;
        function s(n, l) {
            for (var u in l)
                n[u] = l[u];
            return n
        }
        function a(n) {
            var l = n.parentNode;
            l && l.removeChild(n)
        }
        function h(n, l, u) {
            var t, i = arguments, o = {};
            for (t in l)
                "key" !== t && "ref" !== t && (o[t] = l[t]);
            if (arguments.length > 3)
                for (u = [u],
                t = 3; t < arguments.length; t++)
                    u.push(i[t]);
            if (null != u && (o.children = u),
            "function" == typeof n && null != n.defaultProps)
                for (t in n.defaultProps)
                    void 0 === o[t] && (o[t] = n.defaultProps[t]);
            return v(n, o, l && l.key, l && l.ref)
        }
        function v(l, u, t, i) {
            var o = {
                type: l,
                props: u,
                key: t,
                ref: i,
                __k: null,
                __: null,
                __b: 0,
                __e: null,
                __d: null,
                __c: null,
                constructor: void 0
            };
            return preact_module_n.vnode && preact_module_n.vnode(o),
            o
        }
        function p() {
            return {}
        }
        function y(n) {
            return n.children
        }
        function d(n, l) {
            this.props = n,
            this.context = l
        }
        function m(n, l) {
            if (null == l)
                return n.__ ? m(n.__, n.__.__k.indexOf(n) + 1) : null;
            for (var u; l < n.__k.length; l++)
                if (null != (u = n.__k[l]) && null != u.__e)
                    return u.__e;
            return "function" == typeof n.type ? m(n) : null
        }
        function w(n) {
            var l, u;
            if (null != (n = n.__) && null != n.__c) {
                for (n.__e = n.__c.base = null,
                l = 0; l < n.__k.length; l++)
                    if (null != (u = n.__k[l]) && null != u.__e) {
                        n.__e = n.__c.base = u.__e;
                        break
                    }
                return w(n)
            }
        }
        function g(l) {
            (!l.__d && (l.__d = !0) && 1 === preact_module_u.push(l) || i !== preact_module_n.debounceRendering) && ((i = preact_module_n.debounceRendering) || preact_module_t)(k)
        }
        function k() {
            var n, l, t, i, o, r, f;
            for (preact_module_u.sort(function(n, l) {
                return l.__v.__b - n.__v.__b
            }); n = preact_module_u.pop(); )
                n.__d && (t = void 0,
                i = void 0,
                r = (o = (l = n).__v).__e,
                (f = l.__P) && (t = [],
                i = T(f, o, s({}, o), l.__n, void 0 !== f.ownerSVGElement, null, t, null == r ? m(o) : r),
                $(t, o),
                i != r && w(o)))
        }
        function _(n, l, u, t, i, o, r, c, s) {
            var h, v, p, y, d, w, g, k = u && u.__k || preact_module_e, _ = k.length;
            if (c == f && (c = null != o ? o[0] : _ ? m(u, 0) : null),
            h = 0,
            l.__k = b(l.__k, function(u) {
                if (null != u) {
                    if (u.__ = l,
                    u.__b = l.__b + 1,
                    null === (p = k[h]) || p && u.key == p.key && u.type === p.type)
                        k[h] = void 0;
                    else
                        for (v = 0; v < _; v++) {
                            if ((p = k[v]) && u.key == p.key && u.type === p.type) {
                                k[v] = void 0;
                                break
                            }
                            p = null
                        }
                    if (y = T(n, u, p = p || f, t, i, o, r, c, s),
                    (v = u.ref) && p.ref != v && (g || (g = []),
                    p.ref && g.push(p.ref, null, u),
                    g.push(v, u.__c || y, u)),
                    null != y) {
                        if (null == w && (w = y),
                        null != u.__d)
                            y = u.__d,
                            u.__d = null;
                        else if (o == p || y != c || null == y.parentNode) {
                            n: if (null == c || c.parentNode !== n)
                                n.appendChild(y);
                            else {
                                for (d = c,
                                v = 0; (d = d.nextSibling) && v < _; v += 2)
                                    if (d == y)
                                        break n;
                                n.insertBefore(y, c)
                            }
                            "option" == l.type && (n.value = "")
                        }
                        c = y.nextSibling,
                        "function" == typeof l.type && (l.__d = y)
                    }
                }
                return h++,
                u
            }),
            l.__e = w,
            null != o && "function" != typeof l.type)
                for (h = o.length; h--; )
                    null != o[h] && a(o[h]);
            for (h = _; h--; )
                null != k[h] && A(k[h], k[h]);
            if (g)
                for (h = 0; h < g.length; h++)
                    z(g[h], g[++h], g[++h])
        }
        function b(n, l, u) {
            if (null == u && (u = []),
            null == n || "boolean" == typeof n)
                l && u.push(l(null));
            else if (Array.isArray(n))
                for (var t = 0; t < n.length; t++)
                    b(n[t], l, u);
            else
                u.push(l ? l("string" == typeof n || "number" == typeof n ? v(null, n, null, null) : null != n.__e || null != n.__c ? v(n.type, n.props, n.key, null) : n) : n);
            return u
        }
        function x(n, l, u, t, i) {
            var o;
            for (o in u)
                o in l || P(n, o, null, u[o], t);
            for (o in l)
                i && "function" != typeof l[o] || "value" === o || "checked" === o || u[o] === l[o] || P(n, o, l[o], u[o], t)
        }
        function C(n, l, u) {
            "-" === l[0] ? n.setProperty(l, u) : n[l] = "number" == typeof u && !1 === c.test(l) ? u + "px" : null == u ? "" : u
        }
        function P(n, l, u, t, i) {
            var o, r, f, e, c;
            if (i ? "className" === l && (l = "class") : "class" === l && (l = "className"),
            "key" === l || "children" === l)
                ;
            else if ("style" === l)
                if (o = n.style,
                "string" == typeof u)
                    o.cssText = u;
                else {
                    if ("string" == typeof t && (o.cssText = "",
                    t = null),
                    t)
                        for (r in t)
                            u && r in u || C(o, r, "");
                    if (u)
                        for (f in u)
                            t && u[f] === t[f] || C(o, f, u[f])
                }
            else
                "o" === l[0] && "n" === l[1] ? (e = l !== (l = l.replace(/Capture$/, "")),
                c = l.toLowerCase(),
                l = (c in n ? c : l).slice(2),
                u ? (t || n.addEventListener(l, N, e),
                (n.l || (n.l = {}))[l] = u) : n.removeEventListener(l, N, e)) : "list" !== l && "tagName" !== l && "form" !== l && "type" !== l && !i && l in n ? n[l] = null == u ? "" : u : "function" != typeof u && "dangerouslySetInnerHTML" !== l && (l !== (l = l.replace(/^xlink:?/, "")) ? null == u || !1 === u ? n.removeAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase()) : n.setAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase(), u) : null == u || !1 === u ? n.removeAttribute(l) : n.setAttribute(l, u))
        }
        function N(l) {
            this.l[l.type](preact_module_n.event ? preact_module_n.event(l) : l)
        }
        function T(l, u, t, i, o, r, f, e, c) {
            var a, h, v, p, m, w, g, k, x, C, P = u.type;
            if (void 0 !== u.constructor)
                return null;
            (a = preact_module_n.__b) && a(u);
            try {
                n: if ("function" == typeof P) {
                    if (k = u.props,
                    x = (a = P.contextType) && i[a.__c],
                    C = a ? x ? x.props.value : a.__ : i,
                    t.__c ? g = (h = u.__c = t.__c).__ = h.__E : ("prototype"in P && P.prototype.render ? u.__c = h = new P(k,C) : (u.__c = h = new d(k,C),
                    h.constructor = P,
                    h.render = D),
                    x && x.sub(h),
                    h.props = k,
                    h.state || (h.state = {}),
                    h.context = C,
                    h.__n = i,
                    v = h.__d = !0,
                    h.__h = []),
                    null == h.__s && (h.__s = h.state),
                    null != P.getDerivedStateFromProps && (h.__s == h.state && (h.__s = s({}, h.__s)),
                    s(h.__s, P.getDerivedStateFromProps(k, h.__s))),
                    p = h.props,
                    m = h.state,
                    v)
                        null == P.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(),
                        null != h.componentDidMount && h.__h.push(h.componentDidMount);
                    else {
                        if (null == P.getDerivedStateFromProps && k !== p && null != h.componentWillReceiveProps && h.componentWillReceiveProps(k, C),
                        !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(k, h.__s, C)) {
                            for (h.props = k,
                            h.state = h.__s,
                            h.__d = !1,
                            h.__v = u,
                            u.__e = t.__e,
                            u.__k = t.__k,
                            h.__h.length && f.push(h),
                            a = 0; a < u.__k.length; a++)
                                u.__k[a] && (u.__k[a].__ = u);
                            break n
                        }
                        null != h.componentWillUpdate && h.componentWillUpdate(k, h.__s, C),
                        null != h.componentDidUpdate && h.__h.push(function() {
                            h.componentDidUpdate(p, m, w)
                        })
                    }
                    h.context = C,
                    h.props = k,
                    h.state = h.__s,
                    (a = preact_module_n.__r) && a(u),
                    h.__d = !1,
                    h.__v = u,
                    h.__P = l,
                    a = h.render(h.props, h.state, h.context),
                    u.__k = b(null != a && a.type == y && null == a.key ? a.props.children : a),
                    null != h.getChildContext && (i = s(s({}, i), h.getChildContext())),
                    v || null == h.getSnapshotBeforeUpdate || (w = h.getSnapshotBeforeUpdate(p, m)),
                    _(l, u, t, i, o, r, f, e, c),
                    h.base = u.__e,
                    h.__h.length && f.push(h),
                    g && (h.__E = h.__ = null),
                    h.__e = null
                } else
                    u.__e = j(t.__e, u, t, i, o, r, f, c);
                (a = preact_module_n.diffed) && a(u)
            } catch (l) {
                preact_module_n.__e(l, u, t)
            }
            return u.__e
        }
        function $(l, u) {
            preact_module_n.__c && preact_module_n.__c(u, l),
            l.some(function(u) {
                try {
                    l = u.__h,
                    u.__h = [],
                    l.some(function(n) {
                        n.call(u)
                    })
                } catch (l) {
                    preact_module_n.__e(l, u.__v)
                }
            })
        }
        function j(n, l, u, t, i, o, r, c) {
            var s, a, h, v, p, y = u.props, d = l.props;
            if (i = "svg" === l.type || i,
            null == n && null != o)
                for (s = 0; s < o.length; s++)
                    if (null != (a = o[s]) && (null === l.type ? 3 === a.nodeType : a.localName === l.type)) {
                        n = a,
                        o[s] = null;
                        break
                    }
            if (null == n) {
                if (null === l.type)
                    return document.createTextNode(d);
                n = i ? document.createElementNS("http://www.w3.org/2000/svg", l.type) : document.createElement(l.type),
                o = null
            }
            if (null === l.type)
                null != o && (o[o.indexOf(n)] = null),
                y !== d && n.data != d && (n.data = d);
            else if (l !== u) {
                if (null != o && (o = preact_module_e.slice.call(n.childNodes)),
                h = (y = u.props || f).dangerouslySetInnerHTML,
                v = d.dangerouslySetInnerHTML,
                !c) {
                    if (y === f)
                        for (y = {},
                        p = 0; p < n.attributes.length; p++)
                            y[n.attributes[p].name] = n.attributes[p].value;
                    (v || h) && (v && h && v.__html == h.__html || (n.innerHTML = v && v.__html || ""))
                }
                x(n, d, y, i, c),
                l.__k = l.props.children,
                v || _(n, l, u, t, "foreignObject" !== l.type && i, o, r, f, c),
                c || ("value"in d && void 0 !== d.value && d.value !== n.value && (n.value = null == d.value ? "" : d.value),
                "checked"in d && void 0 !== d.checked && d.checked !== n.checked && (n.checked = d.checked))
            }
            return n
        }
        function z(l, u, t) {
            try {
                "function" == typeof l ? l(u) : l.current = u
            } catch (l) {
                preact_module_n.__e(l, t)
            }
        }
        function A(l, u, t) {
            var i, o, r;
            if (preact_module_n.unmount && preact_module_n.unmount(l),
            (i = l.ref) && (i.current && i.current !== l.__e || z(i, null, u)),
            t || "function" == typeof l.type || (t = null != (o = l.__e)),
            l.__e = l.__d = null,
            null != (i = l.__c)) {
                if (i.componentWillUnmount)
                    try {
                        i.componentWillUnmount()
                    } catch (l) {
                        preact_module_n.__e(l, u)
                    }
                i.base = i.__P = null
            }
            if (i = l.__k)
                for (r = 0; r < i.length; r++)
                    i[r] && A(i[r], u, t);
            null != o && a(o)
        }
        function D(n, l, u) {
            return this.constructor(n, u)
        }
        function E(l, u, t) {
            var i, r, c;
            preact_module_n.__ && preact_module_n.__(l, u),
            r = (i = t === preact_module_o) ? null : t && t.__k || u.__k,
            l = h(y, null, [l]),
            c = [],
            T(u, (i ? u : t || u).__k = l, r || f, f, void 0 !== u.ownerSVGElement, t && !i ? [t] : r ? null : preact_module_e.slice.call(u.childNodes), c, t || f, i),
            $(c, l)
        }
        function H(n, l) {
            E(n, l, preact_module_o)
        }
        function I(n, l) {
            return l = s(s({}, n.props), l),
            arguments.length > 2 && (l.children = preact_module_e.slice.call(arguments, 2)),
            v(n.type, l, l.key || n.key, l.ref || n.ref)
        }
        function L(n) {
            var l = {}
              , u = {
                __c: "__cC" + preact_module_r++,
                __: n,
                Consumer: function(n, l) {
                    return n.children(l)
                },
                Provider: function(n) {
                    var t, i = this;
                    return this.getChildContext || (t = [],
                    this.getChildContext = function() {
                        return l[u.__c] = i,
                        l
                    }
                    ,
                    this.shouldComponentUpdate = function(l) {
                        n.value !== l.value && t.some(function(n) {
                            n.context = l.value,
                            g(n)
                        })
                    }
                    ,
                    this.sub = function(n) {
                        t.push(n);
                        var l = n.componentWillUnmount;
                        n.componentWillUnmount = function() {
                            t.splice(t.indexOf(n), 1),
                            l && l.call(n)
                        }
                    }
                    ),
                    n.children
                }
            };
            return u.Consumer.contextType = u,
            u
        }
        preact_module_n = {
            __e: function(n, l) {
                for (var u, t; l = l.__; )
                    if ((u = l.__c) && !u.__)
                        try {
                            if (u.constructor && null != u.constructor.getDerivedStateFromError && (t = !0,
                            u.setState(u.constructor.getDerivedStateFromError(n))),
                            null != u.componentDidCatch && (t = !0,
                            u.componentDidCatch(n)),
                            t)
                                return g(u.__E = u)
                        } catch (l) {
                            n = l
                        }
                throw n
            }
        },
        l = function(n) {
            return null != n && void 0 === n.constructor
        }
        ,
        d.prototype.setState = function(n, l) {
            var u;
            u = this.__s !== this.state ? this.__s : this.__s = s({}, this.state),
            "function" == typeof n && (n = n(u, this.props)),
            n && s(u, n),
            null != n && this.__v && (this.__e = !1,
            l && this.__h.push(l),
            g(this))
        }
        ,
        d.prototype.forceUpdate = function(n) {
            this.__v && (this.__e = !0,
            n && this.__h.push(n),
            g(this))
        }
        ,
        d.prototype.render = y,
        preact_module_u = [],
        preact_module_t = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout,
        preact_module_o = f,
        preact_module_r = 0;
        //# sourceMappingURL=preact.module.js.map

        // CONCATENATED MODULE: ../node_modules/preact/hooks/dist/hooks.module.js
        var hooks_module_t, hooks_module_u, hooks_module_r, hooks_module_i = [], hooks_module_o = preact_module_n.__r, hooks_module_f = preact_module_n.diffed, hooks_module_c = preact_module_n.__c, hooks_module_e = preact_module_n.unmount;
        function hooks_module_a(t) {
            preact_module_n.__h && preact_module_n.__h(hooks_module_u);
            var r = hooks_module_u.__H || (hooks_module_u.__H = {
                t: [],
                u: []
            });
            return t >= r.t.length && r.t.push({}),
            r.t[t]
        }
        function hooks_module_v(n) {
            return hooks_module_m(hooks_module_E, n)
        }
        function hooks_module_m(n, r, i) {
            var o = hooks_module_a(hooks_module_t++);
            return o.__c || (o.__c = hooks_module_u,
            o.i = [i ? i(r) : hooks_module_E(void 0, r), function(t) {
                var u = n(o.i[0], t);
                o.i[0] !== u && (o.i[0] = u,
                o.__c.setState({}))
            }
            ]),
            o.i
        }
        function hooks_module_p(n, r) {
            var i = hooks_module_a(hooks_module_t++);
            hooks_module_x(i.o, r) && (i.i = n,
            i.o = r,
            hooks_module_u.__H.u.push(i))
        }
        function hooks_module_l(n, r) {
            var i = hooks_module_a(hooks_module_t++);
            hooks_module_x(i.o, r) && (i.i = n,
            i.o = r,
            hooks_module_u.__h.push(i))
        }
        function hooks_module_d(n) {
            return hooks_module_y(function() {
                return {
                    current: n
                }
            }, [])
        }
        function hooks_module_s(n, t, u) {
            hooks_module_l(function() {
                "function" == typeof n ? n(t()) : n && (n.current = t())
            }, null == u ? u : u.concat(n))
        }
        function hooks_module_y(n, u) {
            var r = hooks_module_a(hooks_module_t++);
            return hooks_module_x(r.o, u) ? (r.o = u,
            r.v = n,
            r.i = n()) : r.i
        }
        function hooks_module_T(n, t) {
            return hooks_module_y(function() {
                return n
            }, t)
        }
        function hooks_module_w(n) {
            var r = hooks_module_u.context[n.__c];
            if (!r)
                return n.__;
            var i = hooks_module_a(hooks_module_t++);
            return null == i.i && (i.i = !0,
            r.sub(hooks_module_u)),
            r.props.value
        }
        function hooks_module_A(t, u) {
            preact_module_n.useDebugValue && preact_module_n.useDebugValue(u ? u(t) : t)
        }
        function F(n) {
            var r = hooks_module_a(hooks_module_t++)
              , i = hooks_module_v();
            return r.i = n,
            hooks_module_u.componentDidCatch || (hooks_module_u.componentDidCatch = function(n) {
                r.i && r.i(n),
                i[1](n)
            }
            ),
            [i[0], function() {
                i[1](void 0)
            }
            ]
        }
        function hooks_module_() {
            hooks_module_i.some(function(n) {
                n.__P && (n.__H.u.forEach(hooks_module_g),
                n.__H.u.forEach(q),
                n.__H.u = [])
            }),
            hooks_module_i = []
        }
        function hooks_module_g(n) {
            n.m && n.m()
        }
        function q(n) {
            var t = n.i();
            "function" == typeof t && (n.m = t)
        }
        function hooks_module_x(n, t) {
            return !n || t.some(function(t, u) {
                return t !== n[u]
            })
        }
        function hooks_module_E(n, t) {
            return "function" == typeof t ? t(n) : t
        }
        preact_module_n.__r = function(n) {
            hooks_module_o && hooks_module_o(n),
            hooks_module_t = 0,
            (hooks_module_u = n.__c).__H && (hooks_module_u.__H.u.forEach(hooks_module_g),
            hooks_module_u.__H.u.forEach(q),
            hooks_module_u.__H.u = [])
        }
        ,
        preact_module_n.diffed = function(t) {
            hooks_module_f && hooks_module_f(t);
            var u = t.__c;
            if (u) {
                var o = u.__H;
                o && o.u.length && (1 !== hooks_module_i.push(u) && hooks_module_r === preact_module_n.requestAnimationFrame || ((hooks_module_r = preact_module_n.requestAnimationFrame) || function(n) {
                    var t, u = function() {
                        clearTimeout(r),
                        cancelAnimationFrame(t),
                        setTimeout(n)
                    }, r = setTimeout(u, 100);
                    "undefined" != typeof window && (t = requestAnimationFrame(u))
                }
                )(hooks_module_))
            }
        }
        ,
        preact_module_n.__c = function(n, t) {
            t.some(function(n) {
                n.__h.forEach(hooks_module_g),
                n.__h = n.__h.filter(function(n) {
                    return !n.i || q(n)
                })
            }),
            hooks_module_c && hooks_module_c(n, t)
        }
        ,
        preact_module_n.unmount = function(n) {
            hooks_module_e && hooks_module_e(n);
            var t = n.__c;
            if (t) {
                var u = t.__H;
                u && u.t.forEach(function(n) {
                    return n.m && n.m()
                })
            }
        }
        ;
        //# sourceMappingURL=hooks.module.js.map

        // CONCATENATED MODULE: ../node_modules/preact/compat/dist/compat.module.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "version", function() {
            return B;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "Children", function() {
            return compat_module_F;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "render", function() {
            return V;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "hydrate", function() {
            return Z;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "unmountComponentAtNode", function() {
            return Q;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "createPortal", function() {
            return W;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "createFactory", function() {
            return G;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "cloneElement", function() {
            return K;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "isValidElement", function() {
            return J;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "findDOMNode", function() {
            return X;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "PureComponent", function() {
            return compat_module_C;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "memo", function() {
            return compat_module_;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "forwardRef", function() {
            return S;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "unstable_batchedUpdates", function() {
            return Y;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "Suspense", function() {
            return M;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "SuspenseList", function() {
            return compat_module_j;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "lazy", function() {
            return O;
        });
        /* concated harmony reexport useState */
        __webpack_require__.d(__webpack_exports__, "useState", function() {
            return hooks_module_v;
        });
        /* concated harmony reexport useReducer */
        __webpack_require__.d(__webpack_exports__, "useReducer", function() {
            return hooks_module_m;
        });
        /* concated harmony reexport useEffect */
        __webpack_require__.d(__webpack_exports__, "useEffect", function() {
            return hooks_module_p;
        });
        /* concated harmony reexport useLayoutEffect */
        __webpack_require__.d(__webpack_exports__, "useLayoutEffect", function() {
            return hooks_module_l;
        });
        /* concated harmony reexport useRef */
        __webpack_require__.d(__webpack_exports__, "useRef", function() {
            return hooks_module_d;
        });
        /* concated harmony reexport useImperativeHandle */
        __webpack_require__.d(__webpack_exports__, "useImperativeHandle", function() {
            return hooks_module_s;
        });
        /* concated harmony reexport useMemo */
        __webpack_require__.d(__webpack_exports__, "useMemo", function() {
            return hooks_module_y;
        });
        /* concated harmony reexport useCallback */
        __webpack_require__.d(__webpack_exports__, "useCallback", function() {
            return hooks_module_T;
        });
        /* concated harmony reexport useContext */
        __webpack_require__.d(__webpack_exports__, "useContext", function() {
            return hooks_module_w;
        });
        /* concated harmony reexport useDebugValue */
        __webpack_require__.d(__webpack_exports__, "useDebugValue", function() {
            return hooks_module_A;
        });
        /* concated harmony reexport useErrorBoundary */
        __webpack_require__.d(__webpack_exports__, "useErrorBoundary", function() {
            return F;
        });
        /* concated harmony reexport createElement */
        __webpack_require__.d(__webpack_exports__, "createElement", function() {
            return h;
        });
        /* concated harmony reexport createContext */
        __webpack_require__.d(__webpack_exports__, "createContext", function() {
            return L;
        });
        /* concated harmony reexport createRef */
        __webpack_require__.d(__webpack_exports__, "createRef", function() {
            return p;
        });
        /* concated harmony reexport Fragment */
        __webpack_require__.d(__webpack_exports__, "Fragment", function() {
            return y;
        });
        /* concated harmony reexport Component */
        __webpack_require__.d(__webpack_exports__, "Component", function() {
            return d;
        });
        function compat_module_E(n, t) {
            for (var e in t)
                n[e] = t[e];
            return n
        }
        function compat_module_w(n, t) {
            for (var e in n)
                if ("__source" !== e && !(e in t))
                    return !0;
            for (var r in t)
                if ("__source" !== r && n[r] !== t[r])
                    return !0;
            return !1
        }
        var compat_module_C = function(n) {
            var t, e;
            function r(t) {
                var e;
                return (e = n.call(this, t) || this).isPureReactComponent = !0,
                e
            }
            return e = n,
            (t = r).prototype = Object.create(e.prototype),
            t.prototype.constructor = t,
            t.__proto__ = e,
            r.prototype.shouldComponentUpdate = function(n, t) {
                return compat_module_w(this.props, n) || compat_module_w(this.state, t)
            }
            ,
            r
        }(d);
        function compat_module_(n, t) {
            function e(n) {
                var e = this.props.ref
                  , r = e == n.ref;
                return !r && e && (e.call ? e(null) : e.current = null),
                t ? !t(this.props, n) || !r : compat_module_w(this.props, n)
            }
            function r(t) {
                return this.shouldComponentUpdate = e,
                h(n, compat_module_E({}, t))
            }
            return r.prototype.isReactComponent = !0,
            r.displayName = "Memo(" + (n.displayName || n.name) + ")",
            r.t = !0,
            r
        }
        var compat_module_A = preact_module_n.vnode;
        function S(n) {
            function t(t) {
                var e = compat_module_E({}, t);
                return delete e.ref,
                n(e, t.ref)
            }
            return t.prototype.isReactComponent = !0,
            t.t = !0,
            t.displayName = "ForwardRef(" + (n.displayName || n.name) + ")",
            t
        }
        preact_module_n.vnode = function(n) {
            n.type && n.type.t && n.ref && (n.props.ref = n.ref,
            n.ref = null),
            compat_module_A && compat_module_A(n)
        }
        ;
        var compat_module_k = function(n, t) {
            return n ? b(n).map(t) : null
        }
          , compat_module_F = {
            map: compat_module_k,
            forEach: compat_module_k,
            count: function(n) {
                return n ? b(n).length : 0
            },
            only: function(n) {
                if (1 !== (n = b(n)).length)
                    throw new Error("Children.only() expects only one child.");
                return n[0]
            },
            toArray: b
        }
          , compat_module_N = preact_module_n.__e;
        function R(n) {
            return n && ((n = compat_module_E({}, n)).__c = null,
            n.__k = n.__k && n.__k.map(R)),
            n
        }
        function M(n) {
            this.__u = 0,
            this.__b = null
        }
        function U(n) {
            var t = n.__.__c;
            return t && t.o && t.o(n)
        }
        function O(n) {
            var t, e, r;
            function o(o) {
                if (t || (t = n()).then(function(n) {
                    e = n.default || n
                }, function(n) {
                    r = n
                }),
                r)
                    throw r;
                if (!e)
                    throw t;
                return h(e, o)
            }
            return o.displayName = "Lazy",
            o.t = !0,
            o
        }
        function compat_module_j() {
            this.u = null,
            this.i = null
        }
        preact_module_n.__e = function(n, t, e) {
            if (n.then)
                for (var r, o = t; o = o.__; )
                    if ((r = o.__c) && r.l)
                        return r.l(n, t.__c);
            compat_module_N(n, t, e)
        }
        ,
        (M.prototype = new d).l = function(n, t) {
            var e = this
              , r = U(e.__v)
              , o = !1
              , u = function() {
                o || (o = !0,
                r ? r(i) : i())
            };
            t.__c = t.componentWillUnmount,
            t.componentWillUnmount = function() {
                u(),
                t.__c && t.__c()
            }
            ;
            var i = function() {
                --e.__u || (e.__v.__k[0] = e.state.o,
                e.setState({
                    o: e.__b = null
                }))
            };
            e.__u++ || e.setState({
                o: e.__b = e.__v.__k[0]
            }),
            n.then(u, u)
        }
        ,
        M.prototype.render = function(n, t) {
            return this.__b && (this.__v.__k[0] = R(this.__b),
            this.__b = null),
            [h(d, null, t.o ? null : n.children), t.o && n.fallback]
        }
        ;
        var compat_module_z = function(n, t, e) {
            if (++e[1] === e[0] && n.i.delete(t),
            n.props.revealOrder && ("t" !== n.props.revealOrder[0] || !n.i.size))
                for (e = n.u; e; ) {
                    for (; e.length > 3; )
                        e.pop()();
                    if (e[1] < e[0])
                        break;
                    n.u = e = e[2]
                }
        };
        (compat_module_j.prototype = new d).o = function(n) {
            var t = this
              , e = U(t.__v)
              , r = t.i.get(n);
            return r[0]++,
            function(o) {
                var u = function() {
                    t.props.revealOrder ? (r.push(o),
                    compat_module_z(t, n, r)) : o()
                };
                e ? e(u) : u()
            }
        }
        ,
        compat_module_j.prototype.render = function(n) {
            this.u = null,
            this.i = new Map;
            var t = b(n.children);
            n.revealOrder && "b" === n.revealOrder[0] && t.reverse();
            for (var e = t.length; e--; )
                this.i.set(t[e], this.u = [1, 0, this.u]);
            return n.children
        }
        ,
        compat_module_j.prototype.componentDidUpdate = compat_module_j.prototype.componentDidMount = function() {
            var n = this;
            n.i.forEach(function(t, e) {
                compat_module_z(n, e, t)
            })
        }
        ;
        var compat_module_L = function() {
            function n() {}
            var t = n.prototype;
            return t.getChildContext = function() {
                return this.props.context
            }
            ,
            t.render = function(n) {
                return n.children
            }
            ,
            n
        }();
        function compat_module_P(n) {
            var t = this
              , e = n.container
              , r = h(compat_module_L, {
                context: t.context
            }, n.vnode);
            return t.s && t.s !== e && (t.h.parentNode && t.s.removeChild(t.h),
            A(t.v),
            t.p = !1),
            n.vnode ? t.p ? (e.__k = t.__k,
            E(r, e),
            t.__k = e.__k) : (t.h = document.createTextNode(""),
            H("", e),
            e.appendChild(t.h),
            t.p = !0,
            t.s = e,
            E(r, e, t.h),
            t.__k = this.h.__k) : t.p && (t.h.parentNode && t.s.removeChild(t.h),
            A(t.v)),
            t.v = r,
            t.componentWillUnmount = function() {
                t.h.parentNode && t.s.removeChild(t.h),
                A(t.v)
            }
            ,
            null
        }
        function W(n, t) {
            return h(compat_module_P, {
                vnode: n,
                container: t
            })
        }
        var compat_module_D = /^(?:accent|alignment|arabic|baseline|cap|clip|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;
        d.prototype.isReactComponent = {};
        var compat_module_T = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
        function V(n, t, e) {
            if (null == t.__k)
                for (; t.firstChild; )
                    t.removeChild(t.firstChild);
            return Z(n, t, e)
        }
        function Z(n, t, e) {
            return E(n, t),
            "function" == typeof e && e(),
            n ? n.__c : null
        }
        var compat_module_H = preact_module_n.event;
        function compat_module_I(n, t) {
            n["UNSAFE_" + t] && !n[t] && Object.defineProperty(n, t, {
                configurable: !1,
                get: function() {
                    return this["UNSAFE_" + t]
                },
                set: function(n) {
                    this["UNSAFE_" + t] = n
                }
            })
        }
        preact_module_n.event = function(n) {
            return compat_module_H && (n = compat_module_H(n)),
            n.persist = function() {}
            ,
            n.nativeEvent = n
        }
        ;
        var compat_module_$ = {
            configurable: !0,
            get: function() {
                return this.class
            }
        }
          , compat_module_q = preact_module_n.vnode;
        preact_module_n.vnode = function(n) {
            n.$$typeof = compat_module_T;
            var t = n.type
              , e = n.props;
            if ("function" != typeof t) {
                var r, o, u;
                for (u in e.defaultValue && (e.value || 0 === e.value || (e.value = e.defaultValue),
                delete e.defaultValue),
                Array.isArray(e.value) && e.multiple && "select" === t && (b(e.children).forEach(function(n) {
                    -1 != e.value.indexOf(n.props.value) && (n.props.selected = !0)
                }),
                delete e.value),
                e)
                    if (r = compat_module_D.test(u))
                        break;
                if (r)
                    for (u in o = n.props = {},
                    e)
                        o[compat_module_D.test(u) ? u.replace(/([A-Z0-9])/, "-$1").toLowerCase() : u] = e[u]
            }
            (e.class || e.className) && (compat_module_$.enumerable = "className"in e,
            e.className && (e.class = e.className),
            Object.defineProperty(e, "className", compat_module_$)),
            function(t) {
                var e = n.type
                  , r = n.props;
                if (r && "string" == typeof e) {
                    var o = {};
                    for (var u in r)
                        /^on(Ani|Tra|Tou)/.test(u) && (r[u.toLowerCase()] = r[u],
                        delete r[u]),
                        o[u.toLowerCase()] = u;
                    if (o.ondoubleclick && (r.ondblclick = r[o.ondoubleclick],
                    delete r[o.ondoubleclick]),
                    o.onbeforeinput && (r.onbeforeinput = r[o.onbeforeinput],
                    delete r[o.onbeforeinput]),
                    o.onchange && ("textarea" === e || "input" === e.toLowerCase() && !/^fil|che|ra/i.test(r.type))) {
                        var i = o.oninput || "oninput";
                        r[i] || (r[i] = r[o.onchange],
                        delete r[o.onchange])
                    }
                }
            }(),
            "function" == typeof t && !t.m && t.prototype && (compat_module_I(t.prototype, "componentWillMount"),
            compat_module_I(t.prototype, "componentWillReceiveProps"),
            compat_module_I(t.prototype, "componentWillUpdate"),
            t.m = !0),
            compat_module_q && compat_module_q(n)
        }
        ;
        var B = "16.8.0";
        function G(n) {
            return h.bind(null, n)
        }
        function J(n) {
            return !!n && n.$$typeof === compat_module_T
        }
        function K(n) {
            return J(n) ? I.apply(null, arguments) : n
        }
        function Q(n) {
            return !!n.__k && (E(null, n),
            !0)
        }
        function X(n) {
            return n && (n.base || 1 === n.nodeType && n) || null
        }
        var Y = function(n, t) {
            return n(t)
        };
        /* harmony default export */
        var compat_module = __webpack_exports__["default"] = ({
            useState: hooks_module_v,
            useReducer: hooks_module_m,
            useEffect: hooks_module_p,
            useLayoutEffect: hooks_module_l,
            useRef: hooks_module_d,
            useImperativeHandle: hooks_module_s,
            useMemo: hooks_module_y,
            useCallback: hooks_module_T,
            useContext: hooks_module_w,
            useDebugValue: hooks_module_A,
            version: "16.8.0",
            Children: compat_module_F,
            render: V,
            hydrate: V,
            unmountComponentAtNode: Q,
            createPortal: W,
            createElement: h,
            createContext: L,
            createFactory: G,
            cloneElement: K,
            createRef: p,
            Fragment: y,
            isValidElement: J,
            findDOMNode: X,
            Component: d,
            PureComponent: compat_module_C,
            memo: compat_module_,
            forwardRef: S,
            unstable_batchedUpdates: Y,
            Suspense: M,
            SuspenseList: compat_module_j,
            lazy: O
        });
        //# sourceMappingURL=compat.module.js.map

        /***/
    }
    ), /* 1 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _extends;
        });
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            return _extends.apply(this, arguments);
        }

        /***/
    }
    ), /* 2 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        function toVal(mix) {
            var k, y, str = '';
            if (mix) {
                if (typeof mix === 'object') {
                    if (!!mix.push) {
                        for (k = 0; k < mix.length; k++) {
                            if (mix[k] && (y = toVal(mix[k]))) {
                                str && (str += ' ');
                                str += y;
                            }
                        }
                    } else {
                        for (k in mix) {
                            if (mix[k] && (y = toVal(k))) {
                                str && (str += ' ');
                                str += y;
                            }
                        }
                    }
                } else if (typeof mix !== 'boolean' && !mix.call) {
                    str && (str += ' ');
                    str += mix;
                }
            }
            return str;
        }

        /* harmony default export */
        __webpack_exports__["a"] = (function() {
            var i = 0, x, str = '';
            while (i < arguments.length) {
                if (x = toVal(arguments[i++])) {
                    str && (str += ' ');
                    str += x
                }
            }
            return str;
        }
        );

        /***/
    }
    ), /* 3 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _objectWithoutProperties;
        });
        /* harmony import */
        var _objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);

        function _objectWithoutProperties(source, excluded) {
            if (source == null)
                return {};
            var target = Object(_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(source, excluded);
            var key, i;

            if (Object.getOwnPropertySymbols) {
                var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

                for (i = 0; i < sourceSymbolKeys.length; i++) {
                    key = sourceSymbolKeys[i];
                    if (excluded.indexOf(key) >= 0)
                        continue;
                    if (!Object.prototype.propertyIsEnumerable.call(source, key))
                        continue;
                    target[key] = source[key];
                }
            }

            return target;
        }

        /***/
    }
    ), /* 4 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(97);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/
        __webpack_require__.n(hoist_non_react_statics_cjs);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js + 4 modules
        var makeStyles = __webpack_require__(764);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js
        var getThemeProps = __webpack_require__(776);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/useTheme.js
        var useTheme = __webpack_require__(753);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/withStyles/withStyles.js

        // Link a style sheet with a component.
        // It does not modify the component passed to it;
        // instead, it returns a new component, with a `classes` property.

        var withStyles_withStyles = function withStyles(stylesOrCreator) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            return function(Component) {
                var defaultTheme = options.defaultTheme
                  , _options$withTheme = options.withTheme
                  , withTheme = _options$withTheme === void 0 ? false : _options$withTheme
                  , name = options.name
                  , stylesOptions = Object(objectWithoutProperties["a"/* default */
                ])(options, ["defaultTheme", "withTheme", "name"]);

                if (false) {}

                var classNamePrefix = name;

                if (false) {
                    var displayName;
                }

                var useStyles = Object(makeStyles["a"/* default */
                ])(stylesOrCreator, Object(esm_extends["a"/* default */
                ])({
                    defaultTheme: defaultTheme,
                    Component: Component,
                    name: name || Component.displayName,
                    classNamePrefix: classNamePrefix
                }, stylesOptions));
                var WithStyles = compat_module["default"].forwardRef(function WithStyles(props, ref) {
                    var classesProp = props.classes
                      , innerRef = props.innerRef
                      , other = Object(objectWithoutProperties["a"/* default */
                    ])(props, ["classes", "innerRef"]);

                    var classes = useStyles(props);
                    var theme;
                    var more = other;

                    if (typeof name === 'string' || withTheme) {
                        // name and withTheme are invariant in the outer scope
                        // eslint-disable-next-line react-hooks/rules-of-hooks
                        theme = Object(useTheme["a"/* default */
                        ])() || defaultTheme;

                        if (name) {
                            more = Object(getThemeProps["a"/* default */
                            ])({
                                theme: theme,
                                name: name,
                                props: other
                            });
                        }
                        // Provide the theme to the wrapped component.
                        // So we don't have to use the `withTheme()` Higher-order Component.

                        if (withTheme && !more.theme) {
                            more.theme = theme;
                        }
                    }

                    return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
                    ])({
                        ref: innerRef || ref,
                        classes: classes
                    }, more));
                });
                false ? undefined : void 0;
                // The wrapper receives only user supplied props, which could be a subset of
                // the actual props Component might receive due to merging with defaultProps.
                // So copying it here would give us the same result in the wrapper as well.

                WithStyles.defaultProps = Component.defaultProps;

                if (false) {}

                hoist_non_react_statics_cjs_default()(WithStyles, Component);

                if (false) {}

                return WithStyles;
            }
            ;
        };

        /* harmony default export */
        var esm_withStyles_withStyles = (withStyles_withStyles);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/defaultTheme.js
        var styles_defaultTheme = __webpack_require__(63);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js

        function styles_withStyles_withStyles(stylesOrCreator, options) {
            return esm_withStyles_withStyles(stylesOrCreator, Object(esm_extends["a"/* default */
            ])({
                defaultTheme: styles_defaultTheme["a"/* default */
                ]
            }, options));
        }

        /* harmony default export */
        var styles_withStyles = __webpack_exports__["a"] = (styles_withStyles_withStyles);

        /***/
    }
    ), /* 5 */
    /***/
    (function(module, exports, __webpack_require__) {

        /**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        if (false) {
            var throwOnDirectAccess, ReactIs;
        } else {
            // By explicitly using `prop-types` you are opting into new production behavior.
            // http://fb.me/prop-types-in-prod
            module.exports = __webpack_require__(445)();
        }

        /***/
    }
    ), /* 6 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return apply;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return ALL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return logError;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return CALL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return wrapSagaDispatch;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return identity;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return FORK;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "h", function() {
            return GET_CONTEXT;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "i", function() {
            return buffers;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "j", function() {
            return detach;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "k", function() {
            return JOIN;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "l", function() {
            return take;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "m", function() {
            return fork;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "n", function() {
            return cancel;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "o", function() {
            return call;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "p", function() {
            return actionChannel;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "q", function() {
            return PUT;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "r", function() {
            return sliding;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "s", function() {
            return RACE;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "t", function() {
            return SELECT;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "u", function() {
            return TAKE;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "v", function() {
            return delay;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "w", function() {
            return race;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "x", function() {
            return effectTypes;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "y", function() {
            return takeMaybe;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "z", function() {
            return put;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "A", function() {
            return putResolve;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "B", function() {
            return all;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "C", function() {
            return CPS;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "D", function() {
            return cps;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "E", function() {
            return spawn;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "F", function() {
            return join;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "G", function() {
            return select;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "H", function() {
            return cancelled;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "I", function() {
            return flush;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "J", function() {
            return getContext;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "K", function() {
            return setContext;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "L", function() {
            return CANCEL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "M", function() {
            return check;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "N", function() {
            return ACTION_CHANNEL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "O", function() {
            return expanding;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "P", function() {
            return CANCELLED;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "Q", function() {
            return FLUSH;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "R", function() {
            return SET_CONTEXT;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "S", function() {
            return internalErr;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "T", function() {
            return getMetaInfo;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "U", function() {
            return kTrue;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "V", function() {
            return createAllStyleChildCallbacks;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "W", function() {
            return createEmptyArray;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "X", function() {
            return none;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "Y", function() {
            return once;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "Z", function() {
            return assignWithSymbols;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "ab", function() {
            return makeIterator;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "bb", function() {
            return remove;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "cb", function() {
            return shouldComplete;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "db", function() {
            return noop;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "eb", function() {
            return flatMap;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "fb", function() {
            return getLocation;
        });
        /* unused harmony export w */
        /* unused harmony export x */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "gb", function() {
            return shouldCancel;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "hb", function() {
            return shouldTerminate;
        });
        /* harmony import */
        var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(107);
        /* harmony import */
        var _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12);
        /* harmony import */
        var _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(167);

        var konst = function konst(v) {
            return function() {
                return v;
            }
            ;
        };
        var kTrue = /*#__PURE__*/
        konst(true);

        var noop = function noop() {};

        if (false) {}
        var identity = function identity(v) {
            return v;
        };
        var hasSymbol = typeof Symbol === 'function';
        var asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';
        function check(value, predicate, error) {
            if (!predicate(value)) {
                throw new Error(error);
            }
        }
        var assignWithSymbols = function assignWithSymbols(target, source) {
            Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(target, source);

            if (Object.getOwnPropertySymbols) {
                Object.getOwnPropertySymbols(source).forEach(function(s) {
                    target[s] = source[s];
                });
            }
        };
        var flatMap = function flatMap(mapper, arr) {
            var _ref;

            return (_ref = []).concat.apply(_ref, arr.map(mapper));
        };
        function remove(array, item) {
            var index = array.indexOf(item);

            if (index >= 0) {
                array.splice(index, 1);
            }
        }
        function once(fn) {
            var called = false;
            return function() {
                if (called) {
                    return;
                }

                called = true;
                fn();
            }
            ;
        }

        var kThrow = function kThrow(err) {
            throw err;
        };

        var kReturn = function kReturn(value) {
            return {
                value: value,
                done: true
            };
        };

        function makeIterator(next, thro, name) {
            if (thro === void 0) {
                thro = kThrow;
            }

            if (name === void 0) {
                name = 'iterator';
            }

            var iterator = {
                meta: {
                    name: name
                },
                next: next,
                throw: thro,
                return: kReturn,
                isSagaIterator: true
            };

            if (typeof Symbol !== 'undefined') {
                iterator[Symbol.iterator] = function() {
                    return iterator;
                }
                ;
            }

            return iterator;
        }
        function logError(error, _ref2) {
            var sagaStack = _ref2.sagaStack;

            /*eslint-disable no-console*/
            console.error(error);
            console.error(sagaStack);
        }
        var internalErr = function internalErr(err) {
            return new Error("\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\n  Error: " + err + "\n");
        };
        var createSetContextWarning = function createSetContextWarning(ctx, props) {
            return (ctx ? ctx + '.' : '') + "setContext(props): argument " + props + " is not a plain object";
        };
        var FROZEN_ACTION_ERROR = "You can't put (a.k.a. dispatch from saga) frozen actions.\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\nIf you are using redux and you care about this behaviour (frozen actions),\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\nExample implementation:\n\nconst freezeActions = store => next => action => next(Object.freeze(action))\n";
        // creates empty, but not-holey array

        var createEmptyArray = function createEmptyArray(n) {
            return Array.apply(null, new Array(n));
        };
        var wrapSagaDispatch = function wrapSagaDispatch(dispatch) {
            return function(action) {
                if (false) {}

                return dispatch(Object.defineProperty(action, _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */
                "f"], {
                    value: true
                }));
            }
            ;
        };
        var shouldTerminate = function shouldTerminate(res) {
            return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TERMINATE */
            "k"];
        };
        var shouldCancel = function shouldCancel(res) {
            return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK_CANCEL */
            "j"];
        };
        var shouldComplete = function shouldComplete(res) {
            return shouldTerminate(res) || shouldCancel(res);
        };
        function createAllStyleChildCallbacks(shape, parentCallback) {
            var keys = Object.keys(shape);
            var totalCount = keys.length;

            if (false) {}

            var completedCount = 0;
            var completed;
            var results = Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */
            "a"])(shape) ? createEmptyArray(totalCount) : {};
            var childCallbacks = {};

            function checkEnd() {
                if (completedCount === totalCount) {
                    completed = true;
                    parentCallback(results);
                }
            }

            keys.forEach(function(key) {
                var chCbAtKey = function chCbAtKey(res, isErr) {
                    if (completed) {
                        return;
                    }

                    if (isErr || shouldComplete(res)) {
                        parentCallback.cancel();
                        parentCallback(res, isErr);
                    } else {
                        results[key] = res;
                        completedCount++;
                        checkEnd();
                    }
                };

                chCbAtKey.cancel = noop;
                childCallbacks[key] = chCbAtKey;
            });

            parentCallback.cancel = function() {
                if (!completed) {
                    completed = true;
                    keys.forEach(function(key) {
                        return childCallbacks[key].cancel();
                    });
                }
            }
            ;

            return childCallbacks;
        }
        function getMetaInfo(fn) {
            return {
                name: fn.name || 'anonymous',
                location: getLocation(fn)
            };
        }
        function getLocation(instrumented) {
            return instrumented[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_LOCATION */
            "g"]];
        }

        var BUFFER_OVERFLOW = "Channel's Buffer overflow!";
        var ON_OVERFLOW_THROW = 1;
        var ON_OVERFLOW_DROP = 2;
        var ON_OVERFLOW_SLIDE = 3;
        var ON_OVERFLOW_EXPAND = 4;
        var zeroBuffer = {
            isEmpty: kTrue,
            put: noop,
            take: noop
        };

        function ringBuffer(limit, overflowAction) {
            if (limit === void 0) {
                limit = 10;
            }

            var arr = new Array(limit);
            var length = 0;
            var pushIndex = 0;
            var popIndex = 0;

            var push = function push(it) {
                arr[pushIndex] = it;
                pushIndex = (pushIndex + 1) % limit;
                length++;
            };

            var take = function take() {
                if (length != 0) {
                    var it = arr[popIndex];
                    arr[popIndex] = null;
                    length--;
                    popIndex = (popIndex + 1) % limit;
                    return it;
                }
            };

            var flush = function flush() {
                var items = [];

                while (length) {
                    items.push(take());
                }

                return items;
            };

            return {
                isEmpty: function isEmpty() {
                    return length == 0;
                },
                put: function put(it) {
                    if (length < limit) {
                        push(it);
                    } else {
                        var doubledLimit;

                        switch (overflowAction) {
                        case ON_OVERFLOW_THROW:
                            throw new Error(BUFFER_OVERFLOW);

                        case ON_OVERFLOW_SLIDE:
                            arr[pushIndex] = it;
                            pushIndex = (pushIndex + 1) % limit;
                            popIndex = pushIndex;
                            break;

                        case ON_OVERFLOW_EXPAND:
                            doubledLimit = 2 * limit;
                            arr = flush();
                            length = arr.length;
                            pushIndex = arr.length;
                            popIndex = 0;
                            arr.length = doubledLimit;
                            limit = doubledLimit;
                            push(it);
                            break;

                        default:
                            // DROP

                        }
                    }
                },
                take: take,
                flush: flush
            };
        }

        var none = function none() {
            return zeroBuffer;
        };
        var fixed = function fixed(limit) {
            return ringBuffer(limit, ON_OVERFLOW_THROW);
        };
        var dropping = function dropping(limit) {
            return ringBuffer(limit, ON_OVERFLOW_DROP);
        };
        var sliding = function sliding(limit) {
            return ringBuffer(limit, ON_OVERFLOW_SLIDE);
        };
        var expanding = function expanding(initialSize) {
            return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);
        };

        var buffers = /*#__PURE__*/
        Object.freeze({
            __proto__: null,
            none: none,
            fixed: fixed,
            dropping: dropping,
            sliding: sliding,
            expanding: expanding
        });

        var TAKE = 'TAKE';
        var PUT = 'PUT';
        var ALL = 'ALL';
        var RACE = 'RACE';
        var CALL = 'CALL';
        var CPS = 'CPS';
        var FORK = 'FORK';
        var JOIN = 'JOIN';
        var CANCEL = 'CANCEL';
        var SELECT = 'SELECT';
        var ACTION_CHANNEL = 'ACTION_CHANNEL';
        var CANCELLED = 'CANCELLED';
        var FLUSH = 'FLUSH';
        var GET_CONTEXT = 'GET_CONTEXT';
        var SET_CONTEXT = 'SET_CONTEXT';

        var effectTypes = /*#__PURE__*/
        Object.freeze({
            __proto__: null,
            TAKE: TAKE,
            PUT: PUT,
            ALL: ALL,
            RACE: RACE,
            CALL: CALL,
            CPS: CPS,
            FORK: FORK,
            JOIN: JOIN,
            CANCEL: CANCEL,
            SELECT: SELECT,
            ACTION_CHANNEL: ACTION_CHANNEL,
            CANCELLED: CANCELLED,
            FLUSH: FLUSH,
            GET_CONTEXT: GET_CONTEXT,
            SET_CONTEXT: SET_CONTEXT
        });

        var TEST_HINT = '\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';

        var makeEffect = function makeEffect(type, payload) {
            var _ref;

            return _ref = {},
            _ref[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */
            "c"]] = true,
            _ref.combinator = false,
            _ref.type = type,
            _ref.payload = payload,
            _ref;
        };

        var isForkEffect = function isForkEffect(eff) {
            return Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* effect */
            "c"])(eff) && eff.type === FORK;
        };

        var detach = function detach(eff) {
            if (false) {}

            return makeEffect(FORK, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])({}, eff.payload, {
                detached: true
            }));
        };
        function take(patternOrChannel, multicastPattern) {
            if (patternOrChannel === void 0) {
                patternOrChannel = '*';
            }

            if (false) {}

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */
            "i"])(patternOrChannel)) {
                return makeEffect(TAKE, {
                    pattern: patternOrChannel
                });
            }

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* multicast */
            "f"])(patternOrChannel) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */
            "g"])(multicastPattern) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */
            "i"])(multicastPattern)) {
                return makeEffect(TAKE, {
                    channel: patternOrChannel,
                    pattern: multicastPattern
                });
            }

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* channel */
            "b"])(patternOrChannel)) {
                return makeEffect(TAKE, {
                    channel: patternOrChannel
                });
            }

            if (false) {}
        }
        var takeMaybe = function takeMaybe() {
            var eff = take.apply(void 0, arguments);
            eff.payload.maybe = true;
            return eff;
        };
        function put(channel$1, action) {
            if (false) {}

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* undef */
            "n"])(action)) {
                action = channel$1;
                // `undefined` instead of `null` to make default parameter work

                channel$1 = undefined;
            }

            return makeEffect(PUT, {
                channel: channel$1,
                action: action
            });
        }
        var putResolve = function putResolve() {
            var eff = put.apply(void 0, arguments);
            eff.payload.resolve = true;
            return eff;
        };
        function all(effects) {
            var eff = makeEffect(ALL, effects);
            eff.combinator = true;
            return eff;
        }
        function race(effects) {
            var eff = makeEffect(RACE, effects);
            eff.combinator = true;
            return eff;
        }
        // this match getFnCallDescriptor logic

        var validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {
            check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */
            "g"], effectName + ": argument fn is undefined or null");

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
            "d"])(fnDescriptor)) {
                return;
            }

            var context = null;
            var fn;

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */
            "a"])(fnDescriptor)) {
                context = fnDescriptor[0];
                fn = fnDescriptor[1];
                check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */
                "g"], effectName + ": argument of type [context, fn] has undefined or null `fn`");
            } else if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* object */
            "h"])(fnDescriptor)) {
                context = fnDescriptor.context;
                fn = fnDescriptor.fn;
                check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */
                "g"], effectName + ": argument of type {context, fn} has undefined or null `fn`");
            } else {
                check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
                "d"], effectName + ": argument fn is not function");
                return;
            }

            if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */
            "k"])(fn)) {
                check(context[fn], _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
                "d"], effectName + ": context arguments has no such method - \"" + fn + "\"");
                return;
            }

            check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
            "d"], effectName + ": unpacked fn argument (from [context, fn] or {context, fn}) is not a function");
        };

        function getFnCallDescriptor(fnDescriptor, args) {
            var context = null;
            var fn;

            if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
            "d"])(fnDescriptor)) {
                fn = fnDescriptor;
            } else {
                if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */
                "a"])(fnDescriptor)) {
                    context = fnDescriptor[0];
                    fn = fnDescriptor[1];
                } else {
                    context = fnDescriptor.context;
                    fn = fnDescriptor.fn;
                }

                if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */
                "k"])(fn) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */
                "d"])(context[fn])) {
                    fn = context[fn];
                }
            }

            return {
                context: context,
                fn: fn,
                args: args
            };
        }

        var isNotDelayEffect = function isNotDelayEffect(fn) {
            return fn !== delay;
        };

        function call(fnDescriptor) {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            if (false) {
                var arg0;
            }

            return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));
        }
        function apply(context, fn, args) {
            if (args === void 0) {
                args = [];
            }

            var fnDescriptor = [context, fn];

            if (false) {}

            return makeEffect(CALL, getFnCallDescriptor([context, fn], args));
        }
        function cps(fnDescriptor) {
            if (false) {}

            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
            }

            return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));
        }
        function fork(fnDescriptor) {
            if (false) {}

            for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
                args[_key3 - 1] = arguments[_key3];
            }

            return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));
        }
        function spawn(fnDescriptor) {
            if (false) {}

            for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
                args[_key4 - 1] = arguments[_key4];
            }

            return detach(fork.apply(void 0, [fnDescriptor].concat(args)));
        }
        function join(taskOrTasks) {
            if (false) {}

            return makeEffect(JOIN, taskOrTasks);
        }
        function cancel(taskOrTasks) {
            if (taskOrTasks === void 0) {
                taskOrTasks = _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SELF_CANCELLATION */
                "h"];
            }

            if (false) {}

            return makeEffect(CANCEL, taskOrTasks);
        }
        function select(selector) {
            if (selector === void 0) {
                selector = identity;
            }

            for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
                args[_key5 - 1] = arguments[_key5];
            }

            if (false) {}

            return makeEffect(SELECT, {
                selector: selector,
                args: args
            });
        }
        /**
  channel(pattern, [buffer])    => creates a proxy channel for store actions
**/

        function actionChannel(pattern$1, buffer$1) {
            if (false) {}

            return makeEffect(ACTION_CHANNEL, {
                pattern: pattern$1,
                buffer: buffer$1
            });
        }
        function cancelled() {
            return makeEffect(CANCELLED, {});
        }
        function flush(channel$1) {
            if (false) {}

            return makeEffect(FLUSH, channel$1);
        }
        function getContext(prop) {
            if (false) {}

            return makeEffect(GET_CONTEXT, prop);
        }
        function setContext(props) {
            if (false) {}

            return makeEffect(SET_CONTEXT, props);
        }
        var delay = /*#__PURE__*/
        call.bind(null, _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__[/* default */
        "a"]);

        /***/
    }
    ), /* 7 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return capitalize;
        });
        // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
        //
        // A strict capitalization should uppercase the first letter of each word a the sentence.
        // We only handle the first word.
        function capitalize(string) {
            if (false) {}

            return string.charAt(0).toUpperCase() + string.slice(1);
        }

        /***/
    }
    ), /* 8 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "m", function() {
            return top;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return bottom;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "k", function() {
            return right;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return left;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return auto;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return basePlacements;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "l", function() {
            return start;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return end;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return clippingParents;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "o", function() {
            return viewport;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "i", function() {
            return popper;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "j", function() {
            return reference;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "n", function() {
            return variationPlacements;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "h", function() {
            return placements;
        });
        /* unused harmony export beforeRead */
        /* unused harmony export read */
        /* unused harmony export afterRead */
        /* unused harmony export beforeMain */
        /* unused harmony export main */
        /* unused harmony export afterMain */
        /* unused harmony export beforeWrite */
        /* unused harmony export write */
        /* unused harmony export afterWrite */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return modifierPhases;
        });
        var top = 'top';
        var bottom = 'bottom';
        var right = 'right';
        var left = 'left';
        var auto = 'auto';
        var basePlacements = [top, bottom, right, left];
        var start = 'start';
        var end = 'end';
        var clippingParents = 'clippingParents';
        var viewport = 'viewport';
        var popper = 'popper';
        var reference = 'reference';
        var variationPlacements = /*#__PURE__*/
        basePlacements.reduce(function(acc, placement) {
            return acc.concat([placement + "-" + start, placement + "-" + end]);
        }, []);
        var placements = /*#__PURE__*/
        [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
            return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
        }, []);
        // modifiers that need to read the DOM

        var beforeRead = 'beforeRead';
        var read = 'read';
        var afterRead = 'afterRead';
        // pure-logic modifiers

        var beforeMain = 'beforeMain';
        var main = 'main';
        var afterMain = 'afterMain';
        // modifier with the purpose to write to the DOM (or write into a framework state)

        var beforeWrite = 'beforeWrite';
        var write = 'write';
        var afterWrite = 'afterWrite';
        var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

        /***/
    }
    ), /* 9 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return hexToRgb;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "k", function() {
            return rgbToHex;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "h", function() {
            return hslToRgb;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return decomposeColor;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "j", function() {
            return recomposeColor;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return getContrastRatio;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return getLuminance;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return emphasize;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return fade;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return darken;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "i", function() {
            return lighten;
        });
        /* eslint-disable no-use-before-define */

        /**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
        function clamp(value) {
            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

            if (false) {}

            return Math.min(Math.max(min, value), max);
        }
        /**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */

        function hexToRgb(color) {
            color = color.substr(1);
            var re = new RegExp(".{1,".concat(color.length / 3, "}"),'g');
            var colors = color.match(re);

            if (colors && colors[0].length === 1) {
                colors = colors.map(function(n) {
                    return n + n;
                });
            }

            return colors ? "rgb(".concat(colors.map(function(n) {
                return parseInt(n, 16);
            }).join(', '), ")") : '';
        }

        function intToHex(int) {
            var hex = int.toString(16);
            return hex.length === 1 ? "0".concat(hex) : hex;
        }
        /**
 * Converts a color from CSS rgb format to CSS hex format.
 *
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */

        function rgbToHex(color) {
            // Idempotent
            if (color.indexOf('#') === 0) {
                return color;
            }

            var _decomposeColor = decomposeColor(color)
              , values = _decomposeColor.values;

            return "#".concat(values.map(function(n) {
                return intToHex(n);
            }).join(''));
        }
        /**
 * Converts a color from hsl format to rgb format.
 *
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

        function hslToRgb(color) {
            color = decomposeColor(color);
            var _color = color
              , values = _color.values;
            var h = values[0];
            var s = values[1] / 100;
            var l = values[2] / 100;
            var a = s * Math.min(l, 1 - l);

            var f = function f(n) {
                var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;
                return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
            };

            var type = 'rgb';
            var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];

            if (color.type === 'hsla') {
                type += 'a';
                rgb.push(values[3]);
            }

            return recomposeColor({
                type: type,
                values: rgb
            });
        }
        /**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */

        function decomposeColor(color) {
            // Idempotent
            if (color.type) {
                return color;
            }

            if (color.charAt(0) === '#') {
                return decomposeColor(hexToRgb(color));
            }

            var marker = color.indexOf('(');
            var type = color.substring(0, marker);

            if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
                throw new Error(["Material-UI: unsupported `".concat(color, "` color."), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
            }

            var values = color.substring(marker + 1, color.length - 1).split(',');
            values = values.map(function(value) {
                return parseFloat(value);
            });
            return {
                type: type,
                values: values
            };
        }
        /**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

        function recomposeColor(color) {
            var type = color.type;
            var values = color.values;

            if (type.indexOf('rgb') !== -1) {
                // Only convert the first 3 values to int (i.e. not alpha)
                values = values.map(function(n, i) {
                    return i < 3 ? parseInt(n, 10) : n;
                });
            } else if (type.indexOf('hsl') !== -1) {
                values[1] = "".concat(values[1], "%");
                values[2] = "".concat(values[2], "%");
            }

            return "".concat(type, "(").concat(values.join(', '), ")");
        }
        /**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

        function getContrastRatio(foreground, background) {
            var lumA = getLuminance(foreground);
            var lumB = getLuminance(background);
            return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
        }
        /**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

        function getLuminance(color) {
            color = decomposeColor(color);
            var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;
            rgb = rgb.map(function(val) {
                val /= 255;
                // normalized

                return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
            });
            // Truncate at 3 digits

            return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
        }
        /**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function emphasize(color) {
            var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
            return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
        }
        /**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function fade(color, value) {
            color = decomposeColor(color);
            value = clamp(value);

            if (color.type === 'rgb' || color.type === 'hsl') {
                color.type += 'a';
            }

            color.values[3] = value;
            return recomposeColor(color);
        }
        /**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function darken(color, coefficient) {
            color = decomposeColor(color);
            coefficient = clamp(coefficient);

            if (color.type.indexOf('hsl') !== -1) {
                color.values[2] *= 1 - coefficient;
            } else if (color.type.indexOf('rgb') !== -1) {
                for (var i = 0; i < 3; i += 1) {
                    color.values[i] *= 1 - coefficient;
                }
            }

            return recomposeColor(color);
        }
        /**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function lighten(color, coefficient) {
            color = decomposeColor(color);
            coefficient = clamp(coefficient);

            if (color.type.indexOf('hsl') !== -1) {
                color.values[2] += (100 - color.values[2]) * coefficient;
            } else if (color.type.indexOf('rgb') !== -1) {
                for (var i = 0; i < 3; i += 1) {
                    color.values[i] += (255 - color.values[i]) * coefficient;
                }
            }

            return recomposeColor(color);
        }

        /***/
    }
    ), /* 10 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _defineProperty;
        });
        function _defineProperty(obj, key, value) {
            if (key in obj) {
                Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
            } else {
                obj[key] = value;
            }

            return obj;
        }

        /***/
    }
    ), /* 11 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__extends", function() {
            return __extends;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__assign", function() {
            return __assign;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__rest", function() {
            return __rest;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__decorate", function() {
            return __decorate;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__param", function() {
            return __param;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__metadata", function() {
            return __metadata;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__awaiter", function() {
            return __awaiter;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__generator", function() {
            return __generator;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__exportStar", function() {
            return __exportStar;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__values", function() {
            return __values;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__read", function() {
            return __read;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__spread", function() {
            return __spread;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() {
            return __spreadArrays;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__await", function() {
            return __await;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() {
            return __asyncGenerator;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() {
            return __asyncDelegator;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__asyncValues", function() {
            return __asyncValues;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() {
            return __makeTemplateObject;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__importStar", function() {
            return __importStar;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__importDefault", function() {
            return __importDefault;
        });
        /*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
        /* global Reflect, Promise */

        var extendStatics = function(d, b) {
            extendStatics = Object.setPrototypeOf || ({
                __proto__: []
            }instanceof Array && function(d, b) {
                d.__proto__ = b;
            }
            ) || function(d, b) {
                for (var p in b)
                    if (b.hasOwnProperty(p))
                        d[p] = b[p];
            }
            ;
            return extendStatics(d, b);
        };

        function __extends(d, b) {
            extendStatics(d, b);
            function __() {
                this.constructor = d;
            }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype,
            new __());
        }

        var __assign = function() {
            __assign = Object.assign || function __assign(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                    s = arguments[i];
                    for (var p in s)
                        if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                }
                return t;
            }
            return __assign.apply(this, arguments);
        }

        function __rest(s, e) {
            var t = {};
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                    t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                        t[p[i]] = s[p[i]];
                }
            return t;
        }

        function __decorate(decorators, target, key, desc) {
            var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
            if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
                r = Reflect.decorate(decorators, target, key, desc);
            else
                for (var i = decorators.length - 1; i >= 0; i--)
                    if (d = decorators[i])
                        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r),
            r;
        }

        function __param(paramIndex, decorator) {
            return function(target, key) {
                decorator(target, key, paramIndex);
            }
        }

        function __metadata(metadataKey, metadataValue) {
            if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
                return Reflect.metadata(metadataKey, metadataValue);
        }

        function __awaiter(thisArg, _arguments, P, generator) {
            return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : new P(function(resolve) {
                        resolve(result.value);
                    }
                    ).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            }
            );
        }

        function __generator(thisArg, body) {
            var _ = {
                label: 0,
                sent: function() {
                    if (t[0] & 1)
                        throw t[1];
                    return t[1];
                },
                trys: [],
                ops: []
            }, f, y, t, g;
            return g = {
                next: verb(0),
                "throw": verb(1),
                "return": verb(2)
            },
            typeof Symbol === "function" && (g[Symbol.iterator] = function() {
                return this;
            }
            ),
            g;
            function verb(n) {
                return function(v) {
                    return step([n, v]);
                }
                ;
            }
            function step(op) {
                if (f)
                    throw new TypeError("Generator is already executing.");
                while (_)
                    try {
                        if (f = 1,
                        y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y),
                        0) : y.next) && !(t = t.call(y, op[1])).done)
                            return t;
                        if (y = 0,
                        t)
                            op = [op[0] & 2, t.value];
                        switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return {
                                value: op[1],
                                done: false
                            };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys,
                            t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                        }
                        op = body.call(thisArg, _);
                    } catch (e) {
                        op = [6, e];
                        y = 0;
                    } finally {
                        f = t = 0;
                    }
                if (op[0] & 5)
                    throw op[1];
                return {
                    value: op[0] ? op[1] : void 0,
                    done: true
                };
            }
        }

        function __exportStar(m, exports) {
            for (var p in m)
                if (!exports.hasOwnProperty(p))
                    exports[p] = m[p];
        }

        function __values(o) {
            var m = typeof Symbol === "function" && o[Symbol.iterator]
              , i = 0;
            if (m)
                return m.call(o);
            return {
                next: function() {
                    if (o && i >= o.length)
                        o = void 0;
                    return {
                        value: o && o[i++],
                        done: !o
                    };
                }
            };
        }

        function __read(o, n) {
            var m = typeof Symbol === "function" && o[Symbol.iterator];
            if (!m)
                return o;
            var i = m.call(o), r, ar = [], e;
            try {
                while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                    ar.push(r.value);
            } catch (error) {
                e = {
                    error: error
                };
            } finally {
                try {
                    if (r && !r.done && (m = i["return"]))
                        m.call(i);
                } finally {
                    if (e)
                        throw e.error;
                }
            }
            return ar;
        }

        function __spread() {
            for (var ar = [], i = 0; i < arguments.length; i++)
                ar = ar.concat(__read(arguments[i]));
            return ar;
        }

        function __spreadArrays() {
            for (var s = 0, i = 0, il = arguments.length; i < il; i++)
                s += arguments[i].length;
            for (var r = Array(s), k = 0, i = 0; i < il; i++)
                for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++,
                k++)
                    r[k] = a[j];
            return r;
        }
        ;
        function __await(v) {
            return this instanceof __await ? (this.v = v,
            this) : new __await(v);
        }

        function __asyncGenerator(thisArg, _arguments, generator) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var g = generator.apply(thisArg, _arguments || []), i, q = [];
            return i = {},
            verb("next"),
            verb("throw"),
            verb("return"),
            i[Symbol.asyncIterator] = function() {
                return this;
            }
            ,
            i;
            function verb(n) {
                if (g[n])
                    i[n] = function(v) {
                        return new Promise(function(a, b) {
                            q.push([n, v, a, b]) > 1 || resume(n, v);
                        }
                        );
                    }
                    ;
            }
            function resume(n, v) {
                try {
                    step(g[n](v));
                } catch (e) {
                    settle(q[0][3], e);
                }
            }
            function step(r) {
                r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
            }
            function fulfill(value) {
                resume("next", value);
            }
            function reject(value) {
                resume("throw", value);
            }
            function settle(f, v) {
                if (f(v),
                q.shift(),
                q.length)
                    resume(q[0][0], q[0][1]);
            }
        }

        function __asyncDelegator(o) {
            var i, p;
            return i = {},
            verb("next"),
            verb("throw", function(e) {
                throw e;
            }),
            verb("return"),
            i[Symbol.iterator] = function() {
                return this;
            }
            ,
            i;
            function verb(n, f) {
                i[n] = o[n] ? function(v) {
                    return (p = !p) ? {
                        value: __await(o[n](v)),
                        done: n === "return"
                    } : f ? f(v) : v;
                }
                : f;
            }
        }

        function __asyncValues(o) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var m = o[Symbol.asyncIterator], i;
            return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](),
            i = {},
            verb("next"),
            verb("throw"),
            verb("return"),
            i[Symbol.asyncIterator] = function() {
                return this;
            }
            ,
            i);
            function verb(n) {
                i[n] = o[n] && function(v) {
                    return new Promise(function(resolve, reject) {
                        v = o[n](v),
                        settle(resolve, reject, v.done, v.value);
                    }
                    );
                }
                ;
            }
            function settle(resolve, reject, d, v) {
                Promise.resolve(v).then(function(v) {
                    resolve({
                        value: v,
                        done: d
                    });
                }, reject);
            }
        }

        function __makeTemplateObject(cooked, raw) {
            if (Object.defineProperty) {
                Object.defineProperty(cooked, "raw", {
                    value: raw
                });
            } else {
                cooked.raw = raw;
            }
            return cooked;
        }
        ;
        function __importStar(mod) {
            if (mod && mod.__esModule)
                return mod;
            var result = {};
            if (mod != null)
                for (var k in mod)
                    if (Object.hasOwnProperty.call(mod, k))
                        result[k] = mod[k];
            result.default = mod;
            return result;
        }

        function __importDefault(mod) {
            return (mod && mod.__esModule) ? mod : {
                default: mod
            };
        }

        /***/
    }
    ), /* 12 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return array;
        });
        /* unused harmony export buffer */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return channel;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return effect;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return func;
        });
        /* unused harmony export iterable */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return iterator;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return multicast;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return notUndef;
        });
        /* unused harmony export number */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "h", function() {
            return object;
        });
        /* unused harmony export observable */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "i", function() {
            return pattern;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "j", function() {
            return promise;
        });
        /* unused harmony export sagaAction */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "k", function() {
            return string;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "l", function() {
            return stringableFunc;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "m", function() {
            return symbol;
        });
        /* unused harmony export task */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "n", function() {
            return undef;
        });
        /* harmony import */
        var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

        var undef = function undef(v) {
            return v === null || v === undefined;
        };
        var notUndef = function notUndef(v) {
            return v !== null && v !== undefined;
        };
        var func = function func(f) {
            return typeof f === 'function';
        };
        var number = function number(n) {
            return typeof n === 'number';
        };
        var string = function string(s) {
            return typeof s === 'string';
        };
        var array = Array.isArray;
        var object = function object(obj) {
            return obj && !array(obj) && typeof obj === 'object';
        };
        var promise = function promise(p) {
            return p && func(p.then);
        };
        var iterator = function iterator(it) {
            return it && func(it.next) && func(it.throw);
        };
        var iterable = function iterable(it) {
            return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);
        };
        var task = function task(t) {
            return t && t[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK */
            "i"]];
        };
        var sagaAction = function sagaAction(a) {
            return Boolean(a && a[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */
            "f"]]);
        };
        var observable = function observable(ob) {
            return ob && func(ob.subscribe);
        };
        var buffer = function buffer(buf) {
            return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);
        };
        var pattern = function pattern(pat) {
            return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));
        };
        var channel = function channel(ch) {
            return ch && func(ch.take) && func(ch.close);
        };
        var stringableFunc = function stringableFunc(f) {
            return func(f) && f.hasOwnProperty('toString');
        };
        var symbol = function symbol(sym) {
            return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;
        };
        var multicast = function multicast(ch) {
            return channel(ch) && ch[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* MULTICAST */
            "e"]];
        };
        var effect = function effect(eff) {
            return eff && eff[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */
            "c"]];
        };

        /***/
    }
    ), /* 13 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useForkRef;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var _setRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33);

        function useForkRef(refA, refB) {
            /**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior
   */
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useMemo(function() {
                if (refA == null && refB == null) {
                    return null;
                }

                return function(refValue) {
                    Object(_setRef__WEBPACK_IMPORTED_MODULE_1__[/* default */
                    "a"])(refA, refValue);
                    Object(_setRef__WEBPACK_IMPORTED_MODULE_1__[/* default */
                    "a"])(refB, refValue);
                }
                ;
            }, [refA, refB]);
        }

        /***/
    }
    ), /* 14 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/chainPropTypes.js
        function chainPropTypes(propType1, propType2) {
            if (true) {
                return function() {
                    return null;
                }
                ;
            }

            return function validate() {
                return propType1.apply(void 0, arguments) || propType2.apply(void 0, arguments);
            }
            ;
        }
        // EXTERNAL MODULE: ../node_modules/@material-ui/utils/esm/deepmerge.js
        var deepmerge = __webpack_require__(329);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);
        var prop_types_default = /*#__PURE__*/
        __webpack_require__.n(prop_types);

        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/elementAcceptingRef.js

        function isClassComponent(elementType) {
            // elementType.prototype?.isReactComponent
            var _elementType$prototyp = elementType.prototype
              , prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;
            return Boolean(prototype.isReactComponent);
        }

        function acceptingRef(props, propName, componentName, location, propFullName) {
            var element = props[propName];
            var safePropName = propFullName || propName;

            if (element == null) {
                return null;
            }

            var warningHint;
            var elementType = element.type;
            /**
   * Blacklisting instead of whitelisting
   *
   * Blacklisting will miss some components, such as React.Fragment. Those will at least
   * trigger a warning in React.
   * We can't whitelist because there is no safe way to detect React.forwardRef
   * or class components. "Safe" means there's no public API.
   *
   */

            if (typeof elementType === 'function' && !isClassComponent(elementType)) {
                warningHint = 'Did you accidentally use a plain function component for an element instead?';
            }

            if (warningHint !== undefined) {
                return new Error("Invalid ".concat(location, " `").concat(safePropName, "` supplied to `").concat(componentName, "`. ") + "Expected an element that can hold a ref. ".concat(warningHint, " ") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');
            }

            return null;
        }

        var elementAcceptingRef = chainPropTypes(prop_types_default.a.element, acceptingRef);
        elementAcceptingRef.isRequired = chainPropTypes(prop_types_default.a.element.isRequired, acceptingRef);
        /* harmony default export */
        var esm_elementAcceptingRef = (elementAcceptingRef);
        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/elementTypeAcceptingRef.js

        function elementTypeAcceptingRef_isClassComponent(elementType) {
            // elementType.prototype?.isReactComponent
            var _elementType$prototyp = elementType.prototype
              , prototype = _elementType$prototyp === void 0 ? {} : _elementType$prototyp;
            return Boolean(prototype.isReactComponent);
        }

        function elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var safePropName = propFullName || propName;

            if (propValue == null) {
                return null;
            }

            var warningHint;
            /**
   * Blacklisting instead of whitelisting
   *
   * Blacklisting will miss some components, such as React.Fragment. Those will at least
   * trigger a warning in React.
   * We can't whitelist because there is no safe way to detect React.forwardRef
   * or class components. "Safe" means there's no public API.
   *
   */

            if (typeof propValue === 'function' && !elementTypeAcceptingRef_isClassComponent(propValue)) {
                warningHint = 'Did you accidentally provide a plain function component instead?';
            }

            if (warningHint !== undefined) {
                return new Error("Invalid ".concat(location, " `").concat(safePropName, "` supplied to `").concat(componentName, "`. ") + "Expected an element type that can hold a ref. ".concat(warningHint, " ") + 'For more information see https://material-ui.com/r/caveat-with-refs-guide');
            }

            return null;
        }

        /* harmony default export */
        var esm_elementTypeAcceptingRef = (chainPropTypes(prop_types["elementType"], elementTypeAcceptingRef));
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
        var defineProperty = __webpack_require__(10);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/exactProp.js

        // This module is based on https://github.com/airbnb/prop-types-exact repository.
        // However, in order to reduce the number of dependencies and to remove some extra safe checks
        // the module was forked.
        // Only exported for test purposes.
        var specialProperty = "exact-prop: \u200B";
        function exactProp(propTypes) {
            if (true) {
                return propTypes;
            }

            return Object(esm_extends["a"/* default */
            ])({}, propTypes, Object(defineProperty["a"/* default */
            ])({}, specialProperty, function(props) {
                var unsupportedProps = Object.keys(props).filter(function(prop) {
                    return !propTypes.hasOwnProperty(prop);
                });

                if (unsupportedProps.length > 0) {
                    return new Error("The following props are not supported: ".concat(unsupportedProps.map(function(prop) {
                        return "`".concat(prop, "`");
                    }).join(', '), ". Please remove them."));
                }

                return null;
            }));
        }
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
        var esm_typeof = __webpack_require__(58);

        // EXTERNAL MODULE: ../node_modules/react-is/index.js
        var react_is = __webpack_require__(37);

        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/getDisplayName.js

        // Simplified polyfill for IE 11 support
        // https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3

        var fnNameMatchRegex = /^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s/]*)\s*/;
        function getFunctionName(fn) {
            var match = "".concat(fn).match(fnNameMatchRegex);
            var name = match && match[1];
            return name || '';
        }
        /**
 * @param {function} Component
 * @param {string} fallback
 * @returns {string | undefined}
 */

        function getFunctionComponentName(Component) {
            var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
            return Component.displayName || Component.name || getFunctionName(Component) || fallback;
        }

        function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = getFunctionComponentName(innerType);
            return outerType.displayName || (functionName !== '' ? "".concat(wrapperName, "(").concat(functionName, ")") : wrapperName);
        }
        /**
 * cherry-pick from
 * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js
 * originally forked from recompose/getDisplayName with added IE 11 support
 *
 * @param {React.ReactType} Component
 * @returns {string | undefined}
 */

        function getDisplayName(Component) {
            if (Component == null) {
                return undefined;
            }

            if (typeof Component === 'string') {
                return Component;
            }

            if (typeof Component === 'function') {
                return getFunctionComponentName(Component, 'Component');
            }

            if (Object(esm_typeof["a"/* default */
            ])(Component) === 'object') {
                switch (Component.$$typeof) {
                case react_is["ForwardRef"]:
                    return getWrappedName(Component, Component.render, 'ForwardRef');

                default:
                    return undefined;
                }
            }

            return undefined;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/ponyfillGlobal.js
        /* eslint-disable */
        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        /* harmony default export */
        var ponyfillGlobal = (typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')());
        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/refType.js

        var refType = prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.object]);
        /* harmony default export */
        var esm_refType = (refType);
        // CONCATENATED MODULE: ../node_modules/@material-ui/utils/esm/index.js
        /* concated harmony reexport chainPropTypes */
        __webpack_require__.d(__webpack_exports__, "chainPropTypes", function() {
            return chainPropTypes;
        });
        /* concated harmony reexport deepmerge */
        __webpack_require__.d(__webpack_exports__, "deepmerge", function() {
            return deepmerge["a"/* default */
            ];
        });
        /* concated harmony reexport elementAcceptingRef */
        __webpack_require__.d(__webpack_exports__, "elementAcceptingRef", function() {
            return esm_elementAcceptingRef;
        });
        /* concated harmony reexport elementTypeAcceptingRef */
        __webpack_require__.d(__webpack_exports__, "elementTypeAcceptingRef", function() {
            return esm_elementTypeAcceptingRef;
        });
        /* concated harmony reexport exactProp */
        __webpack_require__.d(__webpack_exports__, "exactProp", function() {
            return exactProp;
        });
        /* concated harmony reexport getDisplayName */
        __webpack_require__.d(__webpack_exports__, "getDisplayName", function() {
            return getDisplayName;
        });
        /* concated harmony reexport ponyfillGlobal */
        __webpack_require__.d(__webpack_exports__, "ponyfillGlobal", function() {
            return ponyfillGlobal;
        });
        /* concated harmony reexport refType */
        __webpack_require__.d(__webpack_exports__, "refType", function() {
            return esm_refType;
        });
        /** @license Material-UI v4.7.1
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        /***/
    }
    ), /* 15 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* eslint-disable node/no-deprecated-api */
        var buffer = __webpack_require__(25)
        var Buffer = buffer.Buffer

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
            for (var key in src) {
                dst[key] = src[key]
            }
        }
        if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
            module.exports = buffer
        } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.prototype = Object.create(Buffer.prototype)

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer)

        SafeBuffer.from = function(arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
                throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.alloc = function(size, fill, encoding) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
                if (typeof encoding === 'string') {
                    buf.fill(fill, encoding)
                } else {
                    buf.fill(fill)
                }
            } else {
                buf.fill(0)
            }
            return buf
        }

        SafeBuffer.allocUnsafe = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
        }

        SafeBuffer.allocUnsafeSlow = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
        }

        /***/
    }
    ), /* 16 */
    /***/
    (function(module, exports) {

        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor
                    ctor.prototype = Object.create(superCtor.prototype, {
                        constructor: {
                            value: ctor,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    })
                }
            }
            ;
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor
                    var TempCtor = function() {}
                    TempCtor.prototype = superCtor.prototype
                    ctor.prototype = new TempCtor()
                    ctor.prototype.constructor = ctor
                }
            }
        }

        /***/
    }
    ), /* 17 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useTheme;
        });
        /* harmony import */
        var _material_ui_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(753);
        /* harmony import */
        var _defaultTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63);

        function useTheme() {
            return Object(_material_ui_styles__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])() || _defaultTheme__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"];
        }

        /***/
    }
    ), /* 18 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return CANCEL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return CHANNEL_END_TYPE;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return IO;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return MATCH;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return MULTICAST;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return SAGA_ACTION;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return SAGA_LOCATION;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "h", function() {
            return SELF_CANCELLATION;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "i", function() {
            return TASK;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "j", function() {
            return TASK_CANCEL;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "k", function() {
            return TERMINATE;
        });
        var createSymbol = function createSymbol(name) {
            return "@@redux-saga/" + name;
        };

        var CANCEL = /*#__PURE__*/
        createSymbol('CANCEL_PROMISE');
        var CHANNEL_END_TYPE = /*#__PURE__*/
        createSymbol('CHANNEL_END');
        var IO = /*#__PURE__*/
        createSymbol('IO');
        var MATCH = /*#__PURE__*/
        createSymbol('MATCH');
        var MULTICAST = /*#__PURE__*/
        createSymbol('MULTICAST');
        var SAGA_ACTION = /*#__PURE__*/
        createSymbol('SAGA_ACTION');
        var SELF_CANCELLATION = /*#__PURE__*/
        createSymbol('SELF_CANCELLATION');
        var TASK = /*#__PURE__*/
        createSymbol('TASK');
        var TASK_CANCEL = /*#__PURE__*/
        createSymbol('TASK_CANCEL');
        var TERMINATE = /*#__PURE__*/
        createSymbol('TERMINATE');
        var SAGA_LOCATION = /*#__PURE__*/
        createSymbol('LOCATION');

        /***/
    }
    ), /* 19 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useEventCallback;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        var useEnhancedEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__["default"].useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__["default"].useEffect;
        /**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 *
 * @param {function} fn
 */

        function useEventCallback(fn) {
            var ref = react__WEBPACK_IMPORTED_MODULE_0__["default"].useRef(fn);
            useEnhancedEffect(function() {
                ref.current = fn;
            });
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useCallback(function() {
                return (0,
                ref.current).apply(void 0, arguments);
            }, []);
        }

        /***/
    }
    ), /* 20 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return createSvgIcon;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);
        /* harmony import */
        var _SvgIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(434);

        function createSvgIcon(path, displayName) {
            var Component = react__WEBPACK_IMPORTED_MODULE_1__["default"].memo(react__WEBPACK_IMPORTED_MODULE_1__["default"].forwardRef(function(props, ref) {
                return react__WEBPACK_IMPORTED_MODULE_1__["default"].createElement(_SvgIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */
                "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({}, props, {
                    ref: ref
                }), path);
            }));

            if (false) {}

            Component.muiName = _SvgIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */
            "a"].muiName;
            return Component;
        }

        /***/
    }
    ), /* 21 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
        function _arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }

                return arr2;
            }
        }
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArray.js
        var iterableToArray = __webpack_require__(173);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
        function _nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance");
        }
        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _toConsumableArray;
        });

        function _toConsumableArray(arr) {
            return _arrayWithoutHoles(arr) || Object(iterableToArray["a"/* default */
            ])(arr) || _nonIterableSpread();
        }

        /***/
    }
    ), /* 22 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return easing;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return duration;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);

        // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
        // to learn the context in which each easing should be used.
        var easing = {
            // This is the most common easing curve.
            easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
            // Objects enter the screen at full velocity from off-screen and
            // slowly decelerate to a resting point.
            easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
            // Objects leave the screen at full velocity. They do not decelerate when off-screen.
            easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
            // The sharp curve is used by objects that may return to the screen at any time.
            sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
        };
        // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
        // to learn when use what timing

        var duration = {
            shortest: 150,
            shorter: 200,
            short: 250,
            // most basic recommended timing
            standard: 300,
            // this is to be used in complex animations
            complex: 375,
            // recommended when something is entering screen
            enteringScreen: 225,
            // recommended when something is leaving screen
            leavingScreen: 195
        };

        function formatMs(milliseconds) {
            return "".concat(Math.round(milliseconds), "ms");
        }
        /**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */

        /* harmony default export */
        __webpack_exports__["a"] = ({
            easing: easing,
            duration: duration,
            create: function create() {
                var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                var _options$duration = options.duration
                  , durationOption = _options$duration === void 0 ? duration.standard : _options$duration
                  , _options$easing = options.easing
                  , easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing
                  , _options$delay = options.delay
                  , delay = _options$delay === void 0 ? 0 : _options$delay
                  , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])(options, ["duration", "easing", "delay"]);

                if (false) {
                    var isNumber, isString;
                }

                return (Array.isArray(props) ? props : [props]).map(function(animatedProp) {
                    return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
                }).join(',');
            },
            getAutoHeightDuration: function getAutoHeightDuration(height) {
                if (!height) {
                    return 0;
                }

                var constant = height / 36;
                // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

                return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
            }
        });

        /***/
    }
    ), /* 23 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return ownerDocument;
        });
        function ownerDocument(node) {
            return node && node.ownerDocument || document;
        }

        /***/
    }
    ), /* 24 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var Ids;

        (function(Ids) {
            Ids["BlackAndYellow"] = "black-and-yellow";
            Ids["DarkContrast"] = "dark-contrast";
            Ids["EmphasizeHover"] = "emphasize-hover";
            Ids["EmphasizeTitles"] = "emphasize-titles";
            Ids["FontSize"] = "font-size";
            Ids["Grayscale"] = "grayscale";
            Ids["HideImages"] = "hide-images";
            Ids["HighlightForms"] = "highlight-forms";
            Ids["HighlightLinks"] = "highlight-links";
            Ids["InvertColors"] = "invert-colors";
            Ids["KeyboardNavigation"] = "keyboard-navigation";
            Ids["LargeCursor"] = "large-cursor";
            Ids["LargeIcons"] = "large-icons";
            Ids["LetterSpacing"] = "text-spacing";
            Ids["LightContrast"] = "light-contrast";
            Ids["MuteAudio"] = "mute-audio";
            Ids["PageNavigation"] = "page-navigation";
            Ids["ReadableFonts"] = "readable-fonts";
            Ids["StopAnimations"] = "stop-animations";
            Ids["TextToSpeech"] = "text-to-speech";
            Ids["Tooltip"] = "tooltip";
            Ids["VirtualKeyboard"] = "virtual-keyboard";
        }
        )(Ids = exports.Ids || (exports.Ids = {}));

        /***/
    }
    ), /* 25 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global) {
            /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
            /* eslint-disable no-proto */

            var base64 = __webpack_require__(589)
            var ieee754 = __webpack_require__(590)
            var isArray = __webpack_require__(374)

            exports.Buffer = Buffer
            exports.SlowBuffer = SlowBuffer
            exports.INSPECT_MAX_BYTES = 50

            /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
            Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport()

            /*
 * Export kMaxLength after typed array support is determined.
 */
            exports.kMaxLength = kMaxLength()

            function typedArraySupport() {
                try {
                    var arr = new Uint8Array(1)
                    arr.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function() {
                            return 42
                        }
                    }
                    return arr.foo() === 42 && // typed array instances can be augmented
                    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
                    arr.subarray(1, 1).byteLength === 0
                    // ie10 has broken `subarray`
                } catch (e) {
                    return false
                }
            }

            function kMaxLength() {
                return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff
            }

            function createBuffer(that, length) {
                if (kMaxLength() < length) {
                    throw new RangeError('Invalid typed array length')
                }
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    // Return an augmented `Uint8Array` instance, for best performance
                    that = new Uint8Array(length)
                    that.__proto__ = Buffer.prototype
                } else {
                    // Fallback: Return an object instance of the Buffer class
                    if (that === null) {
                        that = new Buffer(length)
                    }
                    that.length = length
                }

                return that
            }

            /**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

            function Buffer(arg, encodingOrOffset, length) {
                if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
                    return new Buffer(arg,encodingOrOffset,length)
                }

                // Common case.
                if (typeof arg === 'number') {
                    if (typeof encodingOrOffset === 'string') {
                        throw new Error('If encoding is specified then the first argument must be a string')
                    }
                    return allocUnsafe(this, arg)
                }
                return from(this, arg, encodingOrOffset, length)
            }

            Buffer.poolSize = 8192
            // not used by this implementation

            // TODO: Legacy, not needed anymore. Remove in next major version.
            Buffer._augment = function(arr) {
                arr.__proto__ = Buffer.prototype
                return arr
            }

            function from(that, value, encodingOrOffset, length) {
                if (typeof value === 'number') {
                    throw new TypeError('"value" argument must not be a number')
                }

                if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
                    return fromArrayBuffer(that, value, encodingOrOffset, length)
                }

                if (typeof value === 'string') {
                    return fromString(that, value, encodingOrOffset)
                }

                return fromObject(that, value)
            }

            /**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
            Buffer.from = function(value, encodingOrOffset, length) {
                return from(null, value, encodingOrOffset, length)
            }

            if (Buffer.TYPED_ARRAY_SUPPORT) {
                Buffer.prototype.__proto__ = Uint8Array.prototype
                Buffer.__proto__ = Uint8Array
                if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
                    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
                    Object.defineProperty(Buffer, Symbol.species, {
                        value: null,
                        configurable: true
                    })
                }
            }

            function assertSize(size) {
                if (typeof size !== 'number') {
                    throw new TypeError('"size" argument must be a number')
                } else if (size < 0) {
                    throw new RangeError('"size" argument must not be negative')
                }
            }

            function alloc(that, size, fill, encoding) {
                assertSize(size)
                if (size <= 0) {
                    return createBuffer(that, size)
                }
                if (fill !== undefined) {
                    // Only pay attention to encoding if it's a string. This
                    // prevents accidentally sending in a number that would
                    // be interpretted as a start offset.
                    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill)
                }
                return createBuffer(that, size)
            }

            /**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
            Buffer.alloc = function(size, fill, encoding) {
                return alloc(null, size, fill, encoding)
            }

            function allocUnsafe(that, size) {
                assertSize(size)
                that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
                if (!Buffer.TYPED_ARRAY_SUPPORT) {
                    for (var i = 0; i < size; ++i) {
                        that[i] = 0
                    }
                }
                return that
            }

            /**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
            Buffer.allocUnsafe = function(size) {
                return allocUnsafe(null, size)
            }
            /**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
            Buffer.allocUnsafeSlow = function(size) {
                return allocUnsafe(null, size)
            }

            function fromString(that, string, encoding) {
                if (typeof encoding !== 'string' || encoding === '') {
                    encoding = 'utf8'
                }

                if (!Buffer.isEncoding(encoding)) {
                    throw new TypeError('"encoding" must be a valid string encoding')
                }

                var length = byteLength(string, encoding) | 0
                that = createBuffer(that, length)

                var actual = that.write(string, encoding)

                if (actual !== length) {
                    // Writing a hex string, for example, that contains invalid characters will
                    // cause everything after the first invalid character to be ignored. (e.g.
                    // 'abxxcd' will be treated as 'ab')
                    that = that.slice(0, actual)
                }

                return that
            }

            function fromArrayLike(that, array) {
                var length = array.length < 0 ? 0 : checked(array.length) | 0
                that = createBuffer(that, length)
                for (var i = 0; i < length; i += 1) {
                    that[i] = array[i] & 255
                }
                return that
            }

            function fromArrayBuffer(that, array, byteOffset, length) {
                array.byteLength
                // this throws if `array` is not a valid ArrayBuffer

                if (byteOffset < 0 || array.byteLength < byteOffset) {
                    throw new RangeError('\'offset\' is out of bounds')
                }

                if (array.byteLength < byteOffset + (length || 0)) {
                    throw new RangeError('\'length\' is out of bounds')
                }

                if (byteOffset === undefined && length === undefined) {
                    array = new Uint8Array(array)
                } else if (length === undefined) {
                    array = new Uint8Array(array,byteOffset)
                } else {
                    array = new Uint8Array(array,byteOffset,length)
                }

                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    // Return an augmented `Uint8Array` instance, for best performance
                    that = array
                    that.__proto__ = Buffer.prototype
                } else {
                    // Fallback: Return an object instance of the Buffer class
                    that = fromArrayLike(that, array)
                }
                return that
            }

            function fromObject(that, obj) {
                if (Buffer.isBuffer(obj)) {
                    var len = checked(obj.length) | 0
                    that = createBuffer(that, len)

                    if (that.length === 0) {
                        return that
                    }

                    obj.copy(that, 0, 0, len)
                    return that
                }

                if (obj) {
                    if ((typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer) || 'length'in obj) {
                        if (typeof obj.length !== 'number' || isnan(obj.length)) {
                            return createBuffer(that, 0)
                        }
                        return fromArrayLike(that, obj)
                    }

                    if (obj.type === 'Buffer' && isArray(obj.data)) {
                        return fromArrayLike(that, obj.data)
                    }
                }

                throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
            }

            function checked(length) {
                // Note: cannot use `length < kMaxLength()` here because that fails when
                // length is NaN (which is otherwise coerced to zero.)
                if (length >= kMaxLength()) {
                    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes')
                }
                return length | 0
            }

            function SlowBuffer(length) {
                if (+length != length) {
                    // eslint-disable-line eqeqeq
                    length = 0
                }
                return Buffer.alloc(+length)
            }

            Buffer.isBuffer = function isBuffer(b) {
                return !!(b != null && b._isBuffer)
            }

            Buffer.compare = function compare(a, b) {
                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                    throw new TypeError('Arguments must be Buffers')
                }

                if (a === b)
                    return 0

                var x = a.length
                var y = b.length

                for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                    if (a[i] !== b[i]) {
                        x = a[i]
                        y = b[i]
                        break
                    }
                }

                if (x < y)
                    return -1
                if (y < x)
                    return 1
                return 0
            }

            Buffer.isEncoding = function isEncoding(encoding) {
                switch (String(encoding).toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return true
                default:
                    return false
                }
            }

            Buffer.concat = function concat(list, length) {
                if (!isArray(list)) {
                    throw new TypeError('"list" argument must be an Array of Buffers')
                }

                if (list.length === 0) {
                    return Buffer.alloc(0)
                }

                var i
                if (length === undefined) {
                    length = 0
                    for (i = 0; i < list.length; ++i) {
                        length += list[i].length
                    }
                }

                var buffer = Buffer.allocUnsafe(length)
                var pos = 0
                for (i = 0; i < list.length; ++i) {
                    var buf = list[i]
                    if (!Buffer.isBuffer(buf)) {
                        throw new TypeError('"list" argument must be an Array of Buffers')
                    }
                    buf.copy(buffer, pos)
                    pos += buf.length
                }
                return buffer
            }

            function byteLength(string, encoding) {
                if (Buffer.isBuffer(string)) {
                    return string.length
                }
                if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
                    return string.byteLength
                }
                if (typeof string !== 'string') {
                    string = '' + string
                }

                var len = string.length
                if (len === 0)
                    return 0

                // Use a for loop to avoid recursion
                var loweredCase = false
                for (; ; ) {
                    switch (encoding) {
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                        return len
                    case 'utf8':
                    case 'utf-8':
                    case undefined:
                        return utf8ToBytes(string).length
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return len * 2
                    case 'hex':
                        return len >>> 1
                    case 'base64':
                        return base64ToBytes(string).length
                    default:
                        if (loweredCase)
                            return utf8ToBytes(string).length
                        // assume utf8
                        encoding = ('' + encoding).toLowerCase()
                        loweredCase = true
                    }
                }
            }
            Buffer.byteLength = byteLength

            function slowToString(encoding, start, end) {
                var loweredCase = false

                // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
                // property of a typed array.

                // This behaves neither like String nor Uint8Array in that we set start/end
                // to their upper/lower bounds if the value passed is out of range.
                // undefined is handled specially as per ECMA-262 6th Edition,
                // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
                if (start === undefined || start < 0) {
                    start = 0
                }
                // Return early if start > this.length. Done here to prevent potential uint32
                // coercion fail below.
                if (start > this.length) {
                    return ''
                }

                if (end === undefined || end > this.length) {
                    end = this.length
                }

                if (end <= 0) {
                    return ''
                }

                // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
                end >>>= 0
                start >>>= 0

                if (end <= start) {
                    return ''
                }

                if (!encoding)
                    encoding = 'utf8'

                while (true) {
                    switch (encoding) {
                    case 'hex':
                        return hexSlice(this, start, end)

                    case 'utf8':
                    case 'utf-8':
                        return utf8Slice(this, start, end)

                    case 'ascii':
                        return asciiSlice(this, start, end)

                    case 'latin1':
                    case 'binary':
                        return latin1Slice(this, start, end)

                    case 'base64':
                        return base64Slice(this, start, end)

                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return utf16leSlice(this, start, end)

                    default:
                        if (loweredCase)
                            throw new TypeError('Unknown encoding: ' + encoding)
                        encoding = (encoding + '').toLowerCase()
                        loweredCase = true
                    }
                }
            }

            // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
            // Buffer instances.
            Buffer.prototype._isBuffer = true

            function swap(b, n, m) {
                var i = b[n]
                b[n] = b[m]
                b[m] = i
            }

            Buffer.prototype.swap16 = function swap16() {
                var len = this.length
                if (len % 2 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 16-bits')
                }
                for (var i = 0; i < len; i += 2) {
                    swap(this, i, i + 1)
                }
                return this
            }

            Buffer.prototype.swap32 = function swap32() {
                var len = this.length
                if (len % 4 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 32-bits')
                }
                for (var i = 0; i < len; i += 4) {
                    swap(this, i, i + 3)
                    swap(this, i + 1, i + 2)
                }
                return this
            }

            Buffer.prototype.swap64 = function swap64() {
                var len = this.length
                if (len % 8 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 64-bits')
                }
                for (var i = 0; i < len; i += 8) {
                    swap(this, i, i + 7)
                    swap(this, i + 1, i + 6)
                    swap(this, i + 2, i + 5)
                    swap(this, i + 3, i + 4)
                }
                return this
            }

            Buffer.prototype.toString = function toString() {
                var length = this.length | 0
                if (length === 0)
                    return ''
                if (arguments.length === 0)
                    return utf8Slice(this, 0, length)
                return slowToString.apply(this, arguments)
            }

            Buffer.prototype.equals = function equals(b) {
                if (!Buffer.isBuffer(b))
                    throw new TypeError('Argument must be a Buffer')
                if (this === b)
                    return true
                return Buffer.compare(this, b) === 0
            }

            Buffer.prototype.inspect = function inspect() {
                var str = ''
                var max = exports.INSPECT_MAX_BYTES
                if (this.length > 0) {
                    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
                    if (this.length > max)
                        str += ' ... '
                }
                return '<Buffer ' + str + '>'
            }

            Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
                if (!Buffer.isBuffer(target)) {
                    throw new TypeError('Argument must be a Buffer')
                }

                if (start === undefined) {
                    start = 0
                }
                if (end === undefined) {
                    end = target ? target.length : 0
                }
                if (thisStart === undefined) {
                    thisStart = 0
                }
                if (thisEnd === undefined) {
                    thisEnd = this.length
                }

                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
                    throw new RangeError('out of range index')
                }

                if (thisStart >= thisEnd && start >= end) {
                    return 0
                }
                if (thisStart >= thisEnd) {
                    return -1
                }
                if (start >= end) {
                    return 1
                }

                start >>>= 0
                end >>>= 0
                thisStart >>>= 0
                thisEnd >>>= 0

                if (this === target)
                    return 0

                var x = thisEnd - thisStart
                var y = end - start
                var len = Math.min(x, y)

                var thisCopy = this.slice(thisStart, thisEnd)
                var targetCopy = target.slice(start, end)

                for (var i = 0; i < len; ++i) {
                    if (thisCopy[i] !== targetCopy[i]) {
                        x = thisCopy[i]
                        y = targetCopy[i]
                        break
                    }
                }

                if (x < y)
                    return -1
                if (y < x)
                    return 1
                return 0
            }

            // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
            // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
            //
            // Arguments:
            // - buffer - a Buffer to search
            // - val - a string, Buffer, or number
            // - byteOffset - an index into `buffer`; will be clamped to an int32
            // - encoding - an optional encoding, relevant is val is a string
            // - dir - true for indexOf, false for lastIndexOf
            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
                // Empty buffer means no match
                if (buffer.length === 0)
                    return -1

                // Normalize byteOffset
                if (typeof byteOffset === 'string') {
                    encoding = byteOffset
                    byteOffset = 0
                } else if (byteOffset > 0x7fffffff) {
                    byteOffset = 0x7fffffff
                } else if (byteOffset < -0x80000000) {
                    byteOffset = -0x80000000
                }
                byteOffset = +byteOffset
                // Coerce to Number.
                if (isNaN(byteOffset)) {
                    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
                    byteOffset = dir ? 0 : (buffer.length - 1)
                }

                // Normalize byteOffset: negative offsets start from the end of the buffer
                if (byteOffset < 0)
                    byteOffset = buffer.length + byteOffset
                if (byteOffset >= buffer.length) {
                    if (dir)
                        return -1
                    else
                        byteOffset = buffer.length - 1
                } else if (byteOffset < 0) {
                    if (dir)
                        byteOffset = 0
                    else
                        return -1
                }

                // Normalize val
                if (typeof val === 'string') {
                    val = Buffer.from(val, encoding)
                }

                // Finally, search either indexOf (if dir is true) or lastIndexOf
                if (Buffer.isBuffer(val)) {
                    // Special case: looking for empty string/buffer always fails
                    if (val.length === 0) {
                        return -1
                    }
                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
                } else if (typeof val === 'number') {
                    val = val & 0xFF
                    // Search for a byte value [0-255]
                    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
                        if (dir) {
                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
                        } else {
                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
                        }
                    }
                    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
                }

                throw new TypeError('val must be string, number or Buffer')
            }

            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
                var indexSize = 1
                var arrLength = arr.length
                var valLength = val.length

                if (encoding !== undefined) {
                    encoding = String(encoding).toLowerCase()
                    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
                        if (arr.length < 2 || val.length < 2) {
                            return -1
                        }
                        indexSize = 2
                        arrLength /= 2
                        valLength /= 2
                        byteOffset /= 2
                    }
                }

                function read(buf, i) {
                    if (indexSize === 1) {
                        return buf[i]
                    } else {
                        return buf.readUInt16BE(i * indexSize)
                    }
                }

                var i
                if (dir) {
                    var foundIndex = -1
                    for (i = byteOffset; i < arrLength; i++) {
                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                            if (foundIndex === -1)
                                foundIndex = i
                            if (i - foundIndex + 1 === valLength)
                                return foundIndex * indexSize
                        } else {
                            if (foundIndex !== -1)
                                i -= i - foundIndex
                            foundIndex = -1
                        }
                    }
                } else {
                    if (byteOffset + valLength > arrLength)
                        byteOffset = arrLength - valLength
                    for (i = byteOffset; i >= 0; i--) {
                        var found = true
                        for (var j = 0; j < valLength; j++) {
                            if (read(arr, i + j) !== read(val, j)) {
                                found = false
                                break
                            }
                        }
                        if (found)
                            return i
                    }
                }

                return -1
            }

            Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
                return this.indexOf(val, byteOffset, encoding) !== -1
            }

            Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
                return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
            }

            Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
                return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
            }

            function hexWrite(buf, string, offset, length) {
                offset = Number(offset) || 0
                var remaining = buf.length - offset
                if (!length) {
                    length = remaining
                } else {
                    length = Number(length)
                    if (length > remaining) {
                        length = remaining
                    }
                }

                // must be an even number of digits
                var strLen = string.length
                if (strLen % 2 !== 0)
                    throw new TypeError('Invalid hex string')

                if (length > strLen / 2) {
                    length = strLen / 2
                }
                for (var i = 0; i < length; ++i) {
                    var parsed = parseInt(string.substr(i * 2, 2), 16)
                    if (isNaN(parsed))
                        return i
                    buf[offset + i] = parsed
                }
                return i
            }

            function utf8Write(buf, string, offset, length) {
                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
            }

            function asciiWrite(buf, string, offset, length) {
                return blitBuffer(asciiToBytes(string), buf, offset, length)
            }

            function latin1Write(buf, string, offset, length) {
                return asciiWrite(buf, string, offset, length)
            }

            function base64Write(buf, string, offset, length) {
                return blitBuffer(base64ToBytes(string), buf, offset, length)
            }

            function ucs2Write(buf, string, offset, length) {
                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
            }

            Buffer.prototype.write = function write(string, offset, length, encoding) {
                // Buffer#write(string)
                if (offset === undefined) {
                    encoding = 'utf8'
                    length = this.length
                    offset = 0
                    // Buffer#write(string, encoding)
                } else if (length === undefined && typeof offset === 'string') {
                    encoding = offset
                    length = this.length
                    offset = 0
                    // Buffer#write(string, offset[, length][, encoding])
                } else if (isFinite(offset)) {
                    offset = offset | 0
                    if (isFinite(length)) {
                        length = length | 0
                        if (encoding === undefined)
                            encoding = 'utf8'
                    } else {
                        encoding = length
                        length = undefined
                    }
                    // legacy write(string, encoding, offset, length) - remove in v0.13
                } else {
                    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported')
                }

                var remaining = this.length - offset
                if (length === undefined || length > remaining)
                    length = remaining

                if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
                    throw new RangeError('Attempt to write outside buffer bounds')
                }

                if (!encoding)
                    encoding = 'utf8'

                var loweredCase = false
                for (; ; ) {
                    switch (encoding) {
                    case 'hex':
                        return hexWrite(this, string, offset, length)

                    case 'utf8':
                    case 'utf-8':
                        return utf8Write(this, string, offset, length)

                    case 'ascii':
                        return asciiWrite(this, string, offset, length)

                    case 'latin1':
                    case 'binary':
                        return latin1Write(this, string, offset, length)

                    case 'base64':
                        // Warning: maxLength not taken into account in base64Write
                        return base64Write(this, string, offset, length)

                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return ucs2Write(this, string, offset, length)

                    default:
                        if (loweredCase)
                            throw new TypeError('Unknown encoding: ' + encoding)
                        encoding = ('' + encoding).toLowerCase()
                        loweredCase = true
                    }
                }
            }

            Buffer.prototype.toJSON = function toJSON() {
                return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }

            function base64Slice(buf, start, end) {
                if (start === 0 && end === buf.length) {
                    return base64.fromByteArray(buf)
                } else {
                    return base64.fromByteArray(buf.slice(start, end))
                }
            }

            function utf8Slice(buf, start, end) {
                end = Math.min(buf.length, end)
                var res = []

                var i = start
                while (i < end) {
                    var firstByte = buf[i]
                    var codePoint = null
                    var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1

                    if (i + bytesPerSequence <= end) {
                        var secondByte, thirdByte, fourthByte, tempCodePoint

                        switch (bytesPerSequence) {
                        case 1:
                            if (firstByte < 0x80) {
                                codePoint = firstByte
                            }
                            break
                        case 2:
                            secondByte = buf[i + 1]
                            if ((secondByte & 0xC0) === 0x80) {
                                tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
                                if (tempCodePoint > 0x7F) {
                                    codePoint = tempCodePoint
                                }
                            }
                            break
                        case 3:
                            secondByte = buf[i + 1]
                            thirdByte = buf[i + 2]
                            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
                                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                                    codePoint = tempCodePoint
                                }
                            }
                            break
                        case 4:
                            secondByte = buf[i + 1]
                            thirdByte = buf[i + 2]
                            fourthByte = buf[i + 3]
                            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
                                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                                    codePoint = tempCodePoint
                                }
                            }
                        }
                    }

                    if (codePoint === null) {
                        // we did not generate a valid codePoint so insert a
                        // replacement char (U+FFFD) and advance only 1 byte
                        codePoint = 0xFFFD
                        bytesPerSequence = 1
                    } else if (codePoint > 0xFFFF) {
                        // encode to utf16 (surrogate pair dance)
                        codePoint -= 0x10000
                        res.push(codePoint >>> 10 & 0x3FF | 0xD800)
                        codePoint = 0xDC00 | codePoint & 0x3FF
                    }

                    res.push(codePoint)
                    i += bytesPerSequence
                }

                return decodeCodePointsArray(res)
            }

            // Based on http://stackoverflow.com/a/22747272/680742, the browser with
            // the lowest limit is Chrome, with 0x10000 args.
            // We go 1 magnitude less, for safety
            var MAX_ARGUMENTS_LENGTH = 0x1000

            function decodeCodePointsArray(codePoints) {
                var len = codePoints.length
                if (len <= MAX_ARGUMENTS_LENGTH) {
                    return String.fromCharCode.apply(String, codePoints)
                    // avoid extra slice()
                }

                // Decode in chunks to avoid "call stack size exceeded".
                var res = ''
                var i = 0
                while (i < len) {
                    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH))
                }
                return res
            }

            function asciiSlice(buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; ++i) {
                    ret += String.fromCharCode(buf[i] & 0x7F)
                }
                return ret
            }

            function latin1Slice(buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; ++i) {
                    ret += String.fromCharCode(buf[i])
                }
                return ret
            }

            function hexSlice(buf, start, end) {
                var len = buf.length

                if (!start || start < 0)
                    start = 0
                if (!end || end < 0 || end > len)
                    end = len

                var out = ''
                for (var i = start; i < end; ++i) {
                    out += toHex(buf[i])
                }
                return out
            }

            function utf16leSlice(buf, start, end) {
                var bytes = buf.slice(start, end)
                var res = ''
                for (var i = 0; i < bytes.length; i += 2) {
                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
                }
                return res
            }

            Buffer.prototype.slice = function slice(start, end) {
                var len = this.length
                start = ~~start
                end = end === undefined ? len : ~~end

                if (start < 0) {
                    start += len
                    if (start < 0)
                        start = 0
                } else if (start > len) {
                    start = len
                }

                if (end < 0) {
                    end += len
                    if (end < 0)
                        end = 0
                } else if (end > len) {
                    end = len
                }

                if (end < start)
                    end = start

                var newBuf
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    newBuf = this.subarray(start, end)
                    newBuf.__proto__ = Buffer.prototype
                } else {
                    var sliceLen = end - start
                    newBuf = new Buffer(sliceLen,undefined)
                    for (var i = 0; i < sliceLen; ++i) {
                        newBuf[i] = this[i + start]
                    }
                }

                return newBuf
            }

            /*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
            function checkOffset(offset, ext, length) {
                if ((offset % 1) !== 0 || offset < 0)
                    throw new RangeError('offset is not uint')
                if (offset + ext > length)
                    throw new RangeError('Trying to access beyond buffer length')
            }

            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert)
                    checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
                }

                return val
            }

            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) {
                    checkOffset(offset, byteLength, this.length)
                }

                var val = this[offset + --byteLength]
                var mul = 1
                while (byteLength > 0 && (mul *= 0x100)) {
                    val += this[offset + --byteLength] * mul
                }

                return val
            }

            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 1, this.length)
                return this[offset]
            }

            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 2, this.length)
                return this[offset] | (this[offset + 1] << 8)
            }

            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 2, this.length)
                return (this[offset] << 8) | this[offset + 1]
            }

            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)

                return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000)
            }

            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)

                return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])
            }

            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert)
                    checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
                }
                mul *= 0x80

                if (val >= mul)
                    val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert)
                    checkOffset(offset, byteLength, this.length)

                var i = byteLength
                var mul = 1
                var val = this[offset + --i]
                while (i > 0 && (mul *= 0x100)) {
                    val += this[offset + --i] * mul
                }
                mul *= 0x80

                if (val >= mul)
                    val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 1, this.length)
                if (!(this[offset] & 0x80))
                    return (this[offset])
                return ((0xff - this[offset] + 1) * -1)
            }

            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 2, this.length)
                var val = this[offset] | (this[offset + 1] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 2, this.length)
                var val = this[offset + 1] | (this[offset] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)

                return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24)
            }

            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)

                return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3])
            }

            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, true, 23, 4)
            }

            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, false, 23, 4)
            }

            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, true, 52, 8)
            }

            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
                if (!noAssert)
                    checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, false, 52, 8)
            }

            function checkInt(buf, value, offset, ext, max, min) {
                if (!Buffer.isBuffer(buf))
                    throw new TypeError('"buffer" argument must be a Buffer instance')
                if (value > max || value < min)
                    throw new RangeError('"value" argument is out of bounds')
                if (offset + ext > buf.length)
                    throw new RangeError('Index out of range')
            }

            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) {
                    var maxBytes = Math.pow(2, 8 * byteLength) - 1
                    checkInt(this, value, offset, byteLength, maxBytes, 0)
                }

                var mul = 1
                var i = 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) {
                    var maxBytes = Math.pow(2, 8 * byteLength) - 1
                    checkInt(this, value, offset, byteLength, maxBytes, 0)
                }

                var i = byteLength - 1
                var mul = 1
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 1, 0xff, 0)
                if (!Buffer.TYPED_ARRAY_SUPPORT)
                    value = Math.floor(value)
                this[offset] = (value & 0xff)
                return offset + 1
            }

            function objectWriteUInt16(buf, value, offset, littleEndian) {
                if (value < 0)
                    value = 0xffff + value + 1
                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
                    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>> (littleEndian ? i : 1 - i) * 8
                }
            }

            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 2, 0xffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                } else {
                    objectWriteUInt16(this, value, offset, true)
                }
                return offset + 2
            }

            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 2, 0xffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 8)
                    this[offset + 1] = (value & 0xff)
                } else {
                    objectWriteUInt16(this, value, offset, false)
                }
                return offset + 2
            }

            function objectWriteUInt32(buf, value, offset, littleEndian) {
                if (value < 0)
                    value = 0xffffffff + value + 1
                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
                    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
                }
            }

            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 4, 0xffffffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset + 3] = (value >>> 24)
                    this[offset + 2] = (value >>> 16)
                    this[offset + 1] = (value >>> 8)
                    this[offset] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, true)
                }
                return offset + 4
            }

            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 4, 0xffffffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 24)
                    this[offset + 1] = (value >>> 16)
                    this[offset + 2] = (value >>> 8)
                    this[offset + 3] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, false)
                }
                return offset + 4
            }

            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) {
                    var limit = Math.pow(2, 8 * byteLength - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
                }

                var i = 0
                var mul = 1
                var sub = 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                        sub = 1
                    }
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) {
                    var limit = Math.pow(2, 8 * byteLength - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
                }

                var i = byteLength - 1
                var mul = 1
                var sub = 0
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                        sub = 1
                    }
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 1, 0x7f, -0x80)
                if (!Buffer.TYPED_ARRAY_SUPPORT)
                    value = Math.floor(value)
                if (value < 0)
                    value = 0xff + value + 1
                this[offset] = (value & 0xff)
                return offset + 1
            }

            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                } else {
                    objectWriteUInt16(this, value, offset, true)
                }
                return offset + 2
            }

            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 8)
                    this[offset + 1] = (value & 0xff)
                } else {
                    objectWriteUInt16(this, value, offset, false)
                }
                return offset + 2
            }

            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                    this[offset + 2] = (value >>> 16)
                    this[offset + 3] = (value >>> 24)
                } else {
                    objectWriteUInt32(this, value, offset, true)
                }
                return offset + 4
            }

            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert)
                    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                if (value < 0)
                    value = 0xffffffff + value + 1
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 24)
                    this[offset + 1] = (value >>> 16)
                    this[offset + 2] = (value >>> 8)
                    this[offset + 3] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, false)
                }
                return offset + 4
            }

            function checkIEEE754(buf, value, offset, ext, max, min) {
                if (offset + ext > buf.length)
                    throw new RangeError('Index out of range')
                if (offset < 0)
                    throw new RangeError('Index out of range')
            }

            function writeFloat(buf, value, offset, littleEndian, noAssert) {
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
                }
                ieee754.write(buf, value, offset, littleEndian, 23, 4)
                return offset + 4
            }

            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
                return writeFloat(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
                return writeFloat(this, value, offset, false, noAssert)
            }

            function writeDouble(buf, value, offset, littleEndian, noAssert) {
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
                }
                ieee754.write(buf, value, offset, littleEndian, 52, 8)
                return offset + 8
            }

            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
                return writeDouble(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
                return writeDouble(this, value, offset, false, noAssert)
            }

            // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
            Buffer.prototype.copy = function copy(target, targetStart, start, end) {
                if (!start)
                    start = 0
                if (!end && end !== 0)
                    end = this.length
                if (targetStart >= target.length)
                    targetStart = target.length
                if (!targetStart)
                    targetStart = 0
                if (end > 0 && end < start)
                    end = start

                // Copy 0 bytes; we're done
                if (end === start)
                    return 0
                if (target.length === 0 || this.length === 0)
                    return 0

                // Fatal error conditions
                if (targetStart < 0) {
                    throw new RangeError('targetStart out of bounds')
                }
                if (start < 0 || start >= this.length)
                    throw new RangeError('sourceStart out of bounds')
                if (end < 0)
                    throw new RangeError('sourceEnd out of bounds')

                // Are we oob?
                if (end > this.length)
                    end = this.length
                if (target.length - targetStart < end - start) {
                    end = target.length - targetStart + start
                }

                var len = end - start
                var i

                if (this === target && start < targetStart && targetStart < end) {
                    // descending copy from end
                    for (i = len - 1; i >= 0; --i) {
                        target[i + targetStart] = this[i + start]
                    }
                } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
                    // ascending copy from start
                    for (i = 0; i < len; ++i) {
                        target[i + targetStart] = this[i + start]
                    }
                } else {
                    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart)
                }

                return len
            }

            // Usage:
            //    buffer.fill(number[, offset[, end]])
            //    buffer.fill(buffer[, offset[, end]])
            //    buffer.fill(string[, offset[, end]][, encoding])
            Buffer.prototype.fill = function fill(val, start, end, encoding) {
                // Handle string cases:
                if (typeof val === 'string') {
                    if (typeof start === 'string') {
                        encoding = start
                        start = 0
                        end = this.length
                    } else if (typeof end === 'string') {
                        encoding = end
                        end = this.length
                    }
                    if (val.length === 1) {
                        var code = val.charCodeAt(0)
                        if (code < 256) {
                            val = code
                        }
                    }
                    if (encoding !== undefined && typeof encoding !== 'string') {
                        throw new TypeError('encoding must be a string')
                    }
                    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                        throw new TypeError('Unknown encoding: ' + encoding)
                    }
                } else if (typeof val === 'number') {
                    val = val & 255
                }

                // Invalid ranges are not set to a default, so can range check early.
                if (start < 0 || this.length < start || this.length < end) {
                    throw new RangeError('Out of range index')
                }

                if (end <= start) {
                    return this
                }

                start = start >>> 0
                end = end === undefined ? this.length : end >>> 0

                if (!val)
                    val = 0

                var i
                if (typeof val === 'number') {
                    for (i = start; i < end; ++i) {
                        this[i] = val
                    }
                } else {
                    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val,encoding).toString())
                    var len = bytes.length
                    for (i = 0; i < end - start; ++i) {
                        this[i + start] = bytes[i % len]
                    }
                }

                return this
            }

            // HELPER FUNCTIONS
            // ================

            var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

            function base64clean(str) {
                // Node strips out invalid characters like \n and \t from the string, base64-js does not
                str = stringtrim(str).replace(INVALID_BASE64_RE, '')
                // Node converts strings with length < 2 to ''
                if (str.length < 2)
                    return ''
                // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
                while (str.length % 4 !== 0) {
                    str = str + '='
                }
                return str
            }

            function stringtrim(str) {
                if (str.trim)
                    return str.trim()
                return str.replace(/^\s+|\s+$/g, '')
            }

            function toHex(n) {
                if (n < 16)
                    return '0' + n.toString(16)
                return n.toString(16)
            }

            function utf8ToBytes(string, units) {
                units = units || Infinity
                var codePoint
                var length = string.length
                var leadSurrogate = null
                var bytes = []

                for (var i = 0; i < length; ++i) {
                    codePoint = string.charCodeAt(i)

                    // is surrogate component
                    if (codePoint > 0xD7FF && codePoint < 0xE000) {
                        // last char was a lead
                        if (!leadSurrogate) {
                            // no lead yet
                            if (codePoint > 0xDBFF) {
                                // unexpected trail
                                if ((units -= 3) > -1)
                                    bytes.push(0xEF, 0xBF, 0xBD)
                                continue
                            } else if (i + 1 === length) {
                                // unpaired lead
                                if ((units -= 3) > -1)
                                    bytes.push(0xEF, 0xBF, 0xBD)
                                continue
                            }

                            // valid lead
                            leadSurrogate = codePoint

                            continue
                        }

                        // 2 leads in a row
                        if (codePoint < 0xDC00) {
                            if ((units -= 3) > -1)
                                bytes.push(0xEF, 0xBF, 0xBD)
                            leadSurrogate = codePoint
                            continue
                        }

                        // valid surrogate pair
                        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
                    } else if (leadSurrogate) {
                        // valid bmp char, but last char was a lead
                        if ((units -= 3) > -1)
                            bytes.push(0xEF, 0xBF, 0xBD)
                    }

                    leadSurrogate = null

                    // encode utf8
                    if (codePoint < 0x80) {
                        if ((units -= 1) < 0)
                            break
                        bytes.push(codePoint)
                    } else if (codePoint < 0x800) {
                        if ((units -= 2) < 0)
                            break
                        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80)
                    } else if (codePoint < 0x10000) {
                        if ((units -= 3) < 0)
                            break
                        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80)
                    } else if (codePoint < 0x110000) {
                        if ((units -= 4) < 0)
                            break
                        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80)
                    } else {
                        throw new Error('Invalid code point')
                    }
                }

                return bytes
            }

            function asciiToBytes(str) {
                var byteArray = []
                for (var i = 0; i < str.length; ++i) {
                    // Node's code seems to be doing this and not & 0x7F..
                    byteArray.push(str.charCodeAt(i) & 0xFF)
                }
                return byteArray
            }

            function utf16leToBytes(str, units) {
                var c, hi, lo
                var byteArray = []
                for (var i = 0; i < str.length; ++i) {
                    if ((units -= 2) < 0)
                        break

                    c = str.charCodeAt(i)
                    hi = c >> 8
                    lo = c % 256
                    byteArray.push(lo)
                    byteArray.push(hi)
                }

                return byteArray
            }

            function base64ToBytes(str) {
                return base64.toByteArray(base64clean(str))
            }

            function blitBuffer(src, dst, offset, length) {
                for (var i = 0; i < length; ++i) {
                    if ((i + offset >= dst.length) || (i >= src.length))
                        break
                    dst[i + offset] = src[i]
                }
                return i
            }

            function isnan(val) {
                return val !== val
                // eslint-disable-line no-self-compare
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 26 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getWindow;
        });
        function getWindow(node) {
            if ({}.toString.call(node) !== '[object Window]') {
                var ownerDocument = node.ownerDocument;
                return ownerDocument ? ownerDocument.defaultView : window;
            }

            return node;
        }

        /***/
    }
    ), /* 27 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return isElement;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return isHTMLElement;
        });
        /* harmony import */
        var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);

        /*:: declare function isElement(node: mixed): boolean %checks(node instanceof
  Element); */

        function isElement(node) {
            var OwnElement = Object(_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(node).Element;
            return node instanceof OwnElement;
        }
        /*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
  HTMLElement); */

        function isHTMLElement(node) {
            var OwnElement = Object(_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(node).HTMLElement;
            return node instanceof OwnElement;
        }

        /***/
    }
    ), /* 28 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var PluginActionTypes;

        (function(PluginActionTypes) {
            PluginActionTypes["decrement"] = "decrement";
            PluginActionTypes["disable"] = "disable";
            PluginActionTypes["enable"] = "enable";
            PluginActionTypes["increment"] = "increment";
            PluginActionTypes["reset"] = "reset";
            PluginActionTypes["selectOption"] = "selectOption";
        }
        )(PluginActionTypes = exports.PluginActionTypes || (exports.PluginActionTypes = {}));

        /***/
    }
    ), /* 29 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return reflow;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getTransitionProps;
        });
        var reflow = function reflow(node) {
            return node.scrollTop;
        };
        function getTransitionProps(props, options) {
            var timeout = props.timeout
              , _props$style = props.style
              , style = _props$style === void 0 ? {} : _props$style;
            return {
                duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,
                delay: style.transitionDelay
            };
        }

        /***/
    }
    ), /* 30 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            (function(module, exports) {
                'use strict';

                // Utils
                function assert(val, msg) {
                    if (!val)
                        throw new Error(msg || 'Assertion failed');
                }

                // Could use `inherits` module, but don't want to move from single file
                // architecture yet.
                function inherits(ctor, superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function() {};
                    TempCtor.prototype = superCtor.prototype;
                    ctor.prototype = new TempCtor();
                    ctor.prototype.constructor = ctor;
                }

                // BN

                function BN(number, base, endian) {
                    if (BN.isBN(number)) {
                        return number;
                    }

                    this.negative = 0;
                    this.words = null;
                    this.length = 0;

                    // Reduction context
                    this.red = null;

                    if (number !== null) {
                        if (base === 'le' || base === 'be') {
                            endian = base;
                            base = 10;
                        }

                        this._init(number || 0, base || 10, endian || 'be');
                    }
                }
                if (typeof module === 'object') {
                    module.exports = BN;
                } else {
                    exports.BN = BN;
                }

                BN.BN = BN;
                BN.wordSize = 26;

                var Buffer;
                try {
                    Buffer = __webpack_require__(629).Buffer;
                } catch (e) {}

                BN.isBN = function isBN(num) {
                    if (num instanceof BN) {
                        return true;
                    }

                    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
                }
                ;

                BN.max = function max(left, right) {
                    if (left.cmp(right) > 0)
                        return left;
                    return right;
                }
                ;

                BN.min = function min(left, right) {
                    if (left.cmp(right) < 0)
                        return left;
                    return right;
                }
                ;

                BN.prototype._init = function init(number, base, endian) {
                    if (typeof number === 'number') {
                        return this._initNumber(number, base, endian);
                    }

                    if (typeof number === 'object') {
                        return this._initArray(number, base, endian);
                    }

                    if (base === 'hex') {
                        base = 16;
                    }
                    assert(base === (base | 0) && base >= 2 && base <= 36);

                    number = number.toString().replace(/\s+/g, '');
                    var start = 0;
                    if (number[0] === '-') {
                        start++;
                    }

                    if (base === 16) {
                        this._parseHex(number, start);
                    } else {
                        this._parseBase(number, base, start);
                    }

                    if (number[0] === '-') {
                        this.negative = 1;
                    }

                    this.strip();

                    if (endian !== 'le')
                        return;

                    this._initArray(this.toArray(), base, endian);
                }
                ;

                BN.prototype._initNumber = function _initNumber(number, base, endian) {
                    if (number < 0) {
                        this.negative = 1;
                        number = -number;
                    }
                    if (number < 0x4000000) {
                        this.words = [number & 0x3ffffff];
                        this.length = 1;
                    } else if (number < 0x10000000000000) {
                        this.words = [number & 0x3ffffff, (number / 0x4000000) & 0x3ffffff];
                        this.length = 2;
                    } else {
                        assert(number < 0x20000000000000);
                        // 2 ^ 53 (unsafe)
                        this.words = [number & 0x3ffffff, (number / 0x4000000) & 0x3ffffff, 1];
                        this.length = 3;
                    }

                    if (endian !== 'le')
                        return;

                    // Reverse the bytes
                    this._initArray(this.toArray(), base, endian);
                }
                ;

                BN.prototype._initArray = function _initArray(number, base, endian) {
                    // Perhaps a Uint8Array
                    assert(typeof number.length === 'number');
                    if (number.length <= 0) {
                        this.words = [0];
                        this.length = 1;
                        return this;
                    }

                    this.length = Math.ceil(number.length / 3);
                    this.words = new Array(this.length);
                    for (var i = 0; i < this.length; i++) {
                        this.words[i] = 0;
                    }

                    var j, w;
                    var off = 0;
                    if (endian === 'be') {
                        for (i = number.length - 1,
                        j = 0; i >= 0; i -= 3) {
                            w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                            this.words[j] |= (w << off) & 0x3ffffff;
                            this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                            off += 24;
                            if (off >= 26) {
                                off -= 26;
                                j++;
                            }
                        }
                    } else if (endian === 'le') {
                        for (i = 0,
                        j = 0; i < number.length; i += 3) {
                            w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                            this.words[j] |= (w << off) & 0x3ffffff;
                            this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                            off += 24;
                            if (off >= 26) {
                                off -= 26;
                                j++;
                            }
                        }
                    }
                    return this.strip();
                }
                ;

                function parseHex(str, start, end) {
                    var r = 0;
                    var len = Math.min(str.length, end);
                    for (var i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;

                        r <<= 4;

                        // 'a' - 'f'
                        if (c >= 49 && c <= 54) {
                            r |= c - 49 + 0xa;

                            // 'A' - 'F'
                        } else if (c >= 17 && c <= 22) {
                            r |= c - 17 + 0xa;

                            // '0' - '9'
                        } else {
                            r |= c & 0xf;
                        }
                    }
                    return r;
                }

                BN.prototype._parseHex = function _parseHex(number, start) {
                    // Create possibly bigger array to ensure that it fits the number
                    this.length = Math.ceil((number.length - start) / 6);
                    this.words = new Array(this.length);
                    for (var i = 0; i < this.length; i++) {
                        this.words[i] = 0;
                    }

                    var j, w;
                    // Scan 24-bit chunks and add them to the number
                    var off = 0;
                    for (i = number.length - 6,
                    j = 0; i >= start; i -= 6) {
                        w = parseHex(number, i, i + 6);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                        this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                        off += 24;
                        if (off >= 26) {
                            off -= 26;
                            j++;
                        }
                    }
                    if (i + 6 !== start) {
                        w = parseHex(number, start, i + 6);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                    }
                    this.strip();
                }
                ;

                function parseBase(str, start, end, mul) {
                    var r = 0;
                    var len = Math.min(str.length, end);
                    for (var i = start; i < len; i++) {
                        var c = str.charCodeAt(i) - 48;

                        r *= mul;

                        // 'a'
                        if (c >= 49) {
                            r += c - 49 + 0xa;

                            // 'A'
                        } else if (c >= 17) {
                            r += c - 17 + 0xa;

                            // '0' - '9'
                        } else {
                            r += c;
                        }
                    }
                    return r;
                }

                BN.prototype._parseBase = function _parseBase(number, base, start) {
                    // Initialize as zero
                    this.words = [0];
                    this.length = 1;

                    // Find length of limb in base
                    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
                        limbLen++;
                    }
                    limbLen--;
                    limbPow = (limbPow / base) | 0;

                    var total = number.length - start;
                    var mod = total % limbLen;
                    var end = Math.min(total, total - mod) + start;

                    var word = 0;
                    for (var i = start; i < end; i += limbLen) {
                        word = parseBase(number, i, i + limbLen, base);

                        this.imuln(limbPow);
                        if (this.words[0] + word < 0x4000000) {
                            this.words[0] += word;
                        } else {
                            this._iaddn(word);
                        }
                    }

                    if (mod !== 0) {
                        var pow = 1;
                        word = parseBase(number, i, number.length, base);

                        for (i = 0; i < mod; i++) {
                            pow *= base;
                        }

                        this.imuln(pow);
                        if (this.words[0] + word < 0x4000000) {
                            this.words[0] += word;
                        } else {
                            this._iaddn(word);
                        }
                    }
                }
                ;

                BN.prototype.copy = function copy(dest) {
                    dest.words = new Array(this.length);
                    for (var i = 0; i < this.length; i++) {
                        dest.words[i] = this.words[i];
                    }
                    dest.length = this.length;
                    dest.negative = this.negative;
                    dest.red = this.red;
                }
                ;

                BN.prototype.clone = function clone() {
                    var r = new BN(null);
                    this.copy(r);
                    return r;
                }
                ;

                BN.prototype._expand = function _expand(size) {
                    while (this.length < size) {
                        this.words[this.length++] = 0;
                    }
                    return this;
                }
                ;

                // Remove leading `0` from `this`
                BN.prototype.strip = function strip() {
                    while (this.length > 1 && this.words[this.length - 1] === 0) {
                        this.length--;
                    }
                    return this._normSign();
                }
                ;

                BN.prototype._normSign = function _normSign() {
                    // -0 = 0
                    if (this.length === 1 && this.words[0] === 0) {
                        this.negative = 0;
                    }
                    return this;
                }
                ;

                BN.prototype.inspect = function inspect() {
                    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
                }
                ;

                /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

                var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];

                var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];

                var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                BN.prototype.toString = function toString(base, padding) {
                    base = base || 10;
                    padding = padding | 0 || 1;

                    var out;
                    if (base === 16 || base === 'hex') {
                        out = '';
                        var off = 0;
                        var carry = 0;
                        for (var i = 0; i < this.length; i++) {
                            var w = this.words[i];
                            var word = (((w << off) | carry) & 0xffffff).toString(16);
                            carry = (w >>> (24 - off)) & 0xffffff;
                            if (carry !== 0 || i !== this.length - 1) {
                                out = zeros[6 - word.length] + word + out;
                            } else {
                                out = word + out;
                            }
                            off += 2;
                            if (off >= 26) {
                                off -= 26;
                                i--;
                            }
                        }
                        if (carry !== 0) {
                            out = carry.toString(16) + out;
                        }
                        while (out.length % padding !== 0) {
                            out = '0' + out;
                        }
                        if (this.negative !== 0) {
                            out = '-' + out;
                        }
                        return out;
                    }

                    if (base === (base | 0) && base >= 2 && base <= 36) {
                        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                        var groupSize = groupSizes[base];
                        // var groupBase = Math.pow(base, groupSize);
                        var groupBase = groupBases[base];
                        out = '';
                        var c = this.clone();
                        c.negative = 0;
                        while (!c.isZero()) {
                            var r = c.modn(groupBase).toString(base);
                            c = c.idivn(groupBase);

                            if (!c.isZero()) {
                                out = zeros[groupSize - r.length] + r + out;
                            } else {
                                out = r + out;
                            }
                        }
                        if (this.isZero()) {
                            out = '0' + out;
                        }
                        while (out.length % padding !== 0) {
                            out = '0' + out;
                        }
                        if (this.negative !== 0) {
                            out = '-' + out;
                        }
                        return out;
                    }

                    assert(false, 'Base should be between 2 and 36');
                }
                ;

                BN.prototype.toNumber = function toNumber() {
                    var ret = this.words[0];
                    if (this.length === 2) {
                        ret += this.words[1] * 0x4000000;
                    } else if (this.length === 3 && this.words[2] === 0x01) {
                        // NOTE: at this stage it is known that the top bit is set
                        ret += 0x10000000000000 + (this.words[1] * 0x4000000);
                    } else if (this.length > 2) {
                        assert(false, 'Number can only safely store up to 53 bits');
                    }
                    return (this.negative !== 0) ? -ret : ret;
                }
                ;

                BN.prototype.toJSON = function toJSON() {
                    return this.toString(16);
                }
                ;

                BN.prototype.toBuffer = function toBuffer(endian, length) {
                    assert(typeof Buffer !== 'undefined');
                    return this.toArrayLike(Buffer, endian, length);
                }
                ;

                BN.prototype.toArray = function toArray(endian, length) {
                    return this.toArrayLike(Array, endian, length);
                }
                ;

                BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
                    var byteLength = this.byteLength();
                    var reqLength = length || Math.max(1, byteLength);
                    assert(byteLength <= reqLength, 'byte array longer than desired length');
                    assert(reqLength > 0, 'Requested array length <= 0');

                    this.strip();
                    var littleEndian = endian === 'le';
                    var res = new ArrayType(reqLength);

                    var b, i;
                    var q = this.clone();
                    if (!littleEndian) {
                        // Assume big-endian
                        for (i = 0; i < reqLength - byteLength; i++) {
                            res[i] = 0;
                        }

                        for (i = 0; !q.isZero(); i++) {
                            b = q.andln(0xff);
                            q.iushrn(8);

                            res[reqLength - i - 1] = b;
                        }
                    } else {
                        for (i = 0; !q.isZero(); i++) {
                            b = q.andln(0xff);
                            q.iushrn(8);

                            res[i] = b;
                        }

                        for (; i < reqLength; i++) {
                            res[i] = 0;
                        }
                    }

                    return res;
                }
                ;

                if (Math.clz32) {
                    BN.prototype._countBits = function _countBits(w) {
                        return 32 - Math.clz32(w);
                    }
                    ;
                } else {
                    BN.prototype._countBits = function _countBits(w) {
                        var t = w;
                        var r = 0;
                        if (t >= 0x1000) {
                            r += 13;
                            t >>>= 13;
                        }
                        if (t >= 0x40) {
                            r += 7;
                            t >>>= 7;
                        }
                        if (t >= 0x8) {
                            r += 4;
                            t >>>= 4;
                        }
                        if (t >= 0x02) {
                            r += 2;
                            t >>>= 2;
                        }
                        return r + t;
                    }
                    ;
                }

                BN.prototype._zeroBits = function _zeroBits(w) {
                    // Short-cut
                    if (w === 0)
                        return 26;

                    var t = w;
                    var r = 0;
                    if ((t & 0x1fff) === 0) {
                        r += 13;
                        t >>>= 13;
                    }
                    if ((t & 0x7f) === 0) {
                        r += 7;
                        t >>>= 7;
                    }
                    if ((t & 0xf) === 0) {
                        r += 4;
                        t >>>= 4;
                    }
                    if ((t & 0x3) === 0) {
                        r += 2;
                        t >>>= 2;
                    }
                    if ((t & 0x1) === 0) {
                        r++;
                    }
                    return r;
                }
                ;

                // Return number of used bits in a BN
                BN.prototype.bitLength = function bitLength() {
                    var w = this.words[this.length - 1];
                    var hi = this._countBits(w);
                    return (this.length - 1) * 26 + hi;
                }
                ;

                function toBitArray(num) {
                    var w = new Array(num.bitLength());

                    for (var bit = 0; bit < w.length; bit++) {
                        var off = (bit / 26) | 0;
                        var wbit = bit % 26;

                        w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                    }

                    return w;
                }

                // Number of trailing zero bits
                BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero())
                        return 0;

                    var r = 0;
                    for (var i = 0; i < this.length; i++) {
                        var b = this._zeroBits(this.words[i]);
                        r += b;
                        if (b !== 26)
                            break;
                    }
                    return r;
                }
                ;

                BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8);
                }
                ;

                BN.prototype.toTwos = function toTwos(width) {
                    if (this.negative !== 0) {
                        return this.abs().inotn(width).iaddn(1);
                    }
                    return this.clone();
                }
                ;

                BN.prototype.fromTwos = function fromTwos(width) {
                    if (this.testn(width - 1)) {
                        return this.notn(width).iaddn(1).ineg();
                    }
                    return this.clone();
                }
                ;

                BN.prototype.isNeg = function isNeg() {
                    return this.negative !== 0;
                }
                ;

                // Return negative clone of `this`
                BN.prototype.neg = function neg() {
                    return this.clone().ineg();
                }
                ;

                BN.prototype.ineg = function ineg() {
                    if (!this.isZero()) {
                        this.negative ^= 1;
                    }

                    return this;
                }
                ;

                // Or `num` with `this` in-place
                BN.prototype.iuor = function iuor(num) {
                    while (this.length < num.length) {
                        this.words[this.length++] = 0;
                    }

                    for (var i = 0; i < num.length; i++) {
                        this.words[i] = this.words[i] | num.words[i];
                    }

                    return this.strip();
                }
                ;

                BN.prototype.ior = function ior(num) {
                    assert((this.negative | num.negative) === 0);
                    return this.iuor(num);
                }
                ;

                // Or `num` with `this`
                BN.prototype.or = function or(num) {
                    if (this.length > num.length)
                        return this.clone().ior(num);
                    return num.clone().ior(this);
                }
                ;

                BN.prototype.uor = function uor(num) {
                    if (this.length > num.length)
                        return this.clone().iuor(num);
                    return num.clone().iuor(this);
                }
                ;

                // And `num` with `this` in-place
                BN.prototype.iuand = function iuand(num) {
                    // b = min-length(num, this)
                    var b;
                    if (this.length > num.length) {
                        b = num;
                    } else {
                        b = this;
                    }

                    for (var i = 0; i < b.length; i++) {
                        this.words[i] = this.words[i] & num.words[i];
                    }

                    this.length = b.length;

                    return this.strip();
                }
                ;

                BN.prototype.iand = function iand(num) {
                    assert((this.negative | num.negative) === 0);
                    return this.iuand(num);
                }
                ;

                // And `num` with `this`
                BN.prototype.and = function and(num) {
                    if (this.length > num.length)
                        return this.clone().iand(num);
                    return num.clone().iand(this);
                }
                ;

                BN.prototype.uand = function uand(num) {
                    if (this.length > num.length)
                        return this.clone().iuand(num);
                    return num.clone().iuand(this);
                }
                ;

                // Xor `num` with `this` in-place
                BN.prototype.iuxor = function iuxor(num) {
                    // a.length > b.length
                    var a;
                    var b;
                    if (this.length > num.length) {
                        a = this;
                        b = num;
                    } else {
                        a = num;
                        b = this;
                    }

                    for (var i = 0; i < b.length; i++) {
                        this.words[i] = a.words[i] ^ b.words[i];
                    }

                    if (this !== a) {
                        for (; i < a.length; i++) {
                            this.words[i] = a.words[i];
                        }
                    }

                    this.length = a.length;

                    return this.strip();
                }
                ;

                BN.prototype.ixor = function ixor(num) {
                    assert((this.negative | num.negative) === 0);
                    return this.iuxor(num);
                }
                ;

                // Xor `num` with `this`
                BN.prototype.xor = function xor(num) {
                    if (this.length > num.length)
                        return this.clone().ixor(num);
                    return num.clone().ixor(this);
                }
                ;

                BN.prototype.uxor = function uxor(num) {
                    if (this.length > num.length)
                        return this.clone().iuxor(num);
                    return num.clone().iuxor(this);
                }
                ;

                // Not ``this`` with ``width`` bitwidth
                BN.prototype.inotn = function inotn(width) {
                    assert(typeof width === 'number' && width >= 0);

                    var bytesNeeded = Math.ceil(width / 26) | 0;
                    var bitsLeft = width % 26;

                    // Extend the buffer with leading zeroes
                    this._expand(bytesNeeded);

                    if (bitsLeft > 0) {
                        bytesNeeded--;
                    }

                    // Handle complete words
                    for (var i = 0; i < bytesNeeded; i++) {
                        this.words[i] = ~this.words[i] & 0x3ffffff;
                    }

                    // Handle the residue
                    if (bitsLeft > 0) {
                        this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
                    }

                    // And remove leading zeroes
                    return this.strip();
                }
                ;

                BN.prototype.notn = function notn(width) {
                    return this.clone().inotn(width);
                }
                ;

                // Set `bit` of `this`
                BN.prototype.setn = function setn(bit, val) {
                    assert(typeof bit === 'number' && bit >= 0);

                    var off = (bit / 26) | 0;
                    var wbit = bit % 26;

                    this._expand(off + 1);

                    if (val) {
                        this.words[off] = this.words[off] | (1 << wbit);
                    } else {
                        this.words[off] = this.words[off] & ~(1 << wbit);
                    }

                    return this.strip();
                }
                ;

                // Add `num` to `this` in-place
                BN.prototype.iadd = function iadd(num) {
                    var r;

                    // negative + positive
                    if (this.negative !== 0 && num.negative === 0) {
                        this.negative = 0;
                        r = this.isub(num);
                        this.negative ^= 1;
                        return this._normSign();

                        // positive + negative
                    } else if (this.negative === 0 && num.negative !== 0) {
                        num.negative = 0;
                        r = this.isub(num);
                        num.negative = 1;
                        return r._normSign();
                    }

                    // a.length > b.length
                    var a, b;
                    if (this.length > num.length) {
                        a = this;
                        b = num;
                    } else {
                        a = num;
                        b = this;
                    }

                    var carry = 0;
                    for (var i = 0; i < b.length; i++) {
                        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                        this.words[i] = r & 0x3ffffff;
                        carry = r >>> 26;
                    }
                    for (; carry !== 0 && i < a.length; i++) {
                        r = (a.words[i] | 0) + carry;
                        this.words[i] = r & 0x3ffffff;
                        carry = r >>> 26;
                    }

                    this.length = a.length;
                    if (carry !== 0) {
                        this.words[this.length] = carry;
                        this.length++;
                        // Copy the rest of the words
                    } else if (a !== this) {
                        for (; i < a.length; i++) {
                            this.words[i] = a.words[i];
                        }
                    }

                    return this;
                }
                ;

                // Add `num` to `this`
                BN.prototype.add = function add(num) {
                    var res;
                    if (num.negative !== 0 && this.negative === 0) {
                        num.negative = 0;
                        res = this.sub(num);
                        num.negative ^= 1;
                        return res;
                    } else if (num.negative === 0 && this.negative !== 0) {
                        this.negative = 0;
                        res = num.sub(this);
                        this.negative = 1;
                        return res;
                    }

                    if (this.length > num.length)
                        return this.clone().iadd(num);

                    return num.clone().iadd(this);
                }
                ;

                // Subtract `num` from `this` in-place
                BN.prototype.isub = function isub(num) {
                    // this - (-num) = this + num
                    if (num.negative !== 0) {
                        num.negative = 0;
                        var r = this.iadd(num);
                        num.negative = 1;
                        return r._normSign();

                        // -this - num = -(this + num)
                    } else if (this.negative !== 0) {
                        this.negative = 0;
                        this.iadd(num);
                        this.negative = 1;
                        return this._normSign();
                    }

                    // At this point both numbers are positive
                    var cmp = this.cmp(num);

                    // Optimization - zeroify
                    if (cmp === 0) {
                        this.negative = 0;
                        this.length = 1;
                        this.words[0] = 0;
                        return this;
                    }

                    // a > b
                    var a, b;
                    if (cmp > 0) {
                        a = this;
                        b = num;
                    } else {
                        a = num;
                        b = this;
                    }

                    var carry = 0;
                    for (var i = 0; i < b.length; i++) {
                        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                        carry = r >> 26;
                        this.words[i] = r & 0x3ffffff;
                    }
                    for (; carry !== 0 && i < a.length; i++) {
                        r = (a.words[i] | 0) + carry;
                        carry = r >> 26;
                        this.words[i] = r & 0x3ffffff;
                    }

                    // Copy rest of the words
                    if (carry === 0 && i < a.length && a !== this) {
                        for (; i < a.length; i++) {
                            this.words[i] = a.words[i];
                        }
                    }

                    this.length = Math.max(this.length, i);

                    if (a !== this) {
                        this.negative = 1;
                    }

                    return this.strip();
                }
                ;

                // Subtract `num` from `this`
                BN.prototype.sub = function sub(num) {
                    return this.clone().isub(num);
                }
                ;

                function smallMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    var len = (self.length + num.length) | 0;
                    out.length = len;
                    len = (len - 1) | 0;

                    // Peel one iteration (compiler can't do it, because of code complexity)
                    var a = self.words[0] | 0;
                    var b = num.words[0] | 0;
                    var r = a * b;

                    var lo = r & 0x3ffffff;
                    var carry = (r / 0x4000000) | 0;
                    out.words[0] = lo;

                    for (var k = 1; k < len; k++) {
                        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                        // note that ncarry could be >= 0x3ffffff
                        var ncarry = carry >>> 26;
                        var rword = carry & 0x3ffffff;
                        var maxJ = Math.min(k, num.length - 1);
                        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = (k - j) | 0;
                            a = self.words[i] | 0;
                            b = num.words[j] | 0;
                            r = a * b + rword;
                            ncarry += (r / 0x4000000) | 0;
                            rword = r & 0x3ffffff;
                        }
                        out.words[k] = rword | 0;
                        carry = ncarry | 0;
                    }
                    if (carry !== 0) {
                        out.words[k] = carry | 0;
                    } else {
                        out.length--;
                    }

                    return out.strip();
                }

                // TODO(indutny): it may be reasonable to omit it for users who don't need
                // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
                // multiplication (like elliptic secp256k1).
                var comb10MulTo = function comb10MulTo(self, num, out) {
                    var a = self.words;
                    var b = num.words;
                    var o = out.words;
                    var c = 0;
                    var lo;
                    var mid;
                    var hi;
                    var a0 = a[0] | 0;
                    var al0 = a0 & 0x1fff;
                    var ah0 = a0 >>> 13;
                    var a1 = a[1] | 0;
                    var al1 = a1 & 0x1fff;
                    var ah1 = a1 >>> 13;
                    var a2 = a[2] | 0;
                    var al2 = a2 & 0x1fff;
                    var ah2 = a2 >>> 13;
                    var a3 = a[3] | 0;
                    var al3 = a3 & 0x1fff;
                    var ah3 = a3 >>> 13;
                    var a4 = a[4] | 0;
                    var al4 = a4 & 0x1fff;
                    var ah4 = a4 >>> 13;
                    var a5 = a[5] | 0;
                    var al5 = a5 & 0x1fff;
                    var ah5 = a5 >>> 13;
                    var a6 = a[6] | 0;
                    var al6 = a6 & 0x1fff;
                    var ah6 = a6 >>> 13;
                    var a7 = a[7] | 0;
                    var al7 = a7 & 0x1fff;
                    var ah7 = a7 >>> 13;
                    var a8 = a[8] | 0;
                    var al8 = a8 & 0x1fff;
                    var ah8 = a8 >>> 13;
                    var a9 = a[9] | 0;
                    var al9 = a9 & 0x1fff;
                    var ah9 = a9 >>> 13;
                    var b0 = b[0] | 0;
                    var bl0 = b0 & 0x1fff;
                    var bh0 = b0 >>> 13;
                    var b1 = b[1] | 0;
                    var bl1 = b1 & 0x1fff;
                    var bh1 = b1 >>> 13;
                    var b2 = b[2] | 0;
                    var bl2 = b2 & 0x1fff;
                    var bh2 = b2 >>> 13;
                    var b3 = b[3] | 0;
                    var bl3 = b3 & 0x1fff;
                    var bh3 = b3 >>> 13;
                    var b4 = b[4] | 0;
                    var bl4 = b4 & 0x1fff;
                    var bh4 = b4 >>> 13;
                    var b5 = b[5] | 0;
                    var bl5 = b5 & 0x1fff;
                    var bh5 = b5 >>> 13;
                    var b6 = b[6] | 0;
                    var bl6 = b6 & 0x1fff;
                    var bh6 = b6 >>> 13;
                    var b7 = b[7] | 0;
                    var bl7 = b7 & 0x1fff;
                    var bh7 = b7 >>> 13;
                    var b8 = b[8] | 0;
                    var bl8 = b8 & 0x1fff;
                    var bh8 = b8 >>> 13;
                    var b9 = b[9] | 0;
                    var bl9 = b9 & 0x1fff;
                    var bh9 = b9 >>> 13;

                    out.negative = self.negative ^ num.negative;
                    out.length = 19;
                    /* k = 0 */
                    lo = Math.imul(al0, bl0);
                    mid = Math.imul(al0, bh0);
                    mid = (mid + Math.imul(ah0, bl0)) | 0;
                    hi = Math.imul(ah0, bh0);
                    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
                    w0 &= 0x3ffffff;
                    /* k = 1 */
                    lo = Math.imul(al1, bl0);
                    mid = Math.imul(al1, bh0);
                    mid = (mid + Math.imul(ah1, bl0)) | 0;
                    hi = Math.imul(ah1, bh0);
                    lo = (lo + Math.imul(al0, bl1)) | 0;
                    mid = (mid + Math.imul(al0, bh1)) | 0;
                    mid = (mid + Math.imul(ah0, bl1)) | 0;
                    hi = (hi + Math.imul(ah0, bh1)) | 0;
                    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
                    w1 &= 0x3ffffff;
                    /* k = 2 */
                    lo = Math.imul(al2, bl0);
                    mid = Math.imul(al2, bh0);
                    mid = (mid + Math.imul(ah2, bl0)) | 0;
                    hi = Math.imul(ah2, bh0);
                    lo = (lo + Math.imul(al1, bl1)) | 0;
                    mid = (mid + Math.imul(al1, bh1)) | 0;
                    mid = (mid + Math.imul(ah1, bl1)) | 0;
                    hi = (hi + Math.imul(ah1, bh1)) | 0;
                    lo = (lo + Math.imul(al0, bl2)) | 0;
                    mid = (mid + Math.imul(al0, bh2)) | 0;
                    mid = (mid + Math.imul(ah0, bl2)) | 0;
                    hi = (hi + Math.imul(ah0, bh2)) | 0;
                    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
                    w2 &= 0x3ffffff;
                    /* k = 3 */
                    lo = Math.imul(al3, bl0);
                    mid = Math.imul(al3, bh0);
                    mid = (mid + Math.imul(ah3, bl0)) | 0;
                    hi = Math.imul(ah3, bh0);
                    lo = (lo + Math.imul(al2, bl1)) | 0;
                    mid = (mid + Math.imul(al2, bh1)) | 0;
                    mid = (mid + Math.imul(ah2, bl1)) | 0;
                    hi = (hi + Math.imul(ah2, bh1)) | 0;
                    lo = (lo + Math.imul(al1, bl2)) | 0;
                    mid = (mid + Math.imul(al1, bh2)) | 0;
                    mid = (mid + Math.imul(ah1, bl2)) | 0;
                    hi = (hi + Math.imul(ah1, bh2)) | 0;
                    lo = (lo + Math.imul(al0, bl3)) | 0;
                    mid = (mid + Math.imul(al0, bh3)) | 0;
                    mid = (mid + Math.imul(ah0, bl3)) | 0;
                    hi = (hi + Math.imul(ah0, bh3)) | 0;
                    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
                    w3 &= 0x3ffffff;
                    /* k = 4 */
                    lo = Math.imul(al4, bl0);
                    mid = Math.imul(al4, bh0);
                    mid = (mid + Math.imul(ah4, bl0)) | 0;
                    hi = Math.imul(ah4, bh0);
                    lo = (lo + Math.imul(al3, bl1)) | 0;
                    mid = (mid + Math.imul(al3, bh1)) | 0;
                    mid = (mid + Math.imul(ah3, bl1)) | 0;
                    hi = (hi + Math.imul(ah3, bh1)) | 0;
                    lo = (lo + Math.imul(al2, bl2)) | 0;
                    mid = (mid + Math.imul(al2, bh2)) | 0;
                    mid = (mid + Math.imul(ah2, bl2)) | 0;
                    hi = (hi + Math.imul(ah2, bh2)) | 0;
                    lo = (lo + Math.imul(al1, bl3)) | 0;
                    mid = (mid + Math.imul(al1, bh3)) | 0;
                    mid = (mid + Math.imul(ah1, bl3)) | 0;
                    hi = (hi + Math.imul(ah1, bh3)) | 0;
                    lo = (lo + Math.imul(al0, bl4)) | 0;
                    mid = (mid + Math.imul(al0, bh4)) | 0;
                    mid = (mid + Math.imul(ah0, bl4)) | 0;
                    hi = (hi + Math.imul(ah0, bh4)) | 0;
                    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
                    w4 &= 0x3ffffff;
                    /* k = 5 */
                    lo = Math.imul(al5, bl0);
                    mid = Math.imul(al5, bh0);
                    mid = (mid + Math.imul(ah5, bl0)) | 0;
                    hi = Math.imul(ah5, bh0);
                    lo = (lo + Math.imul(al4, bl1)) | 0;
                    mid = (mid + Math.imul(al4, bh1)) | 0;
                    mid = (mid + Math.imul(ah4, bl1)) | 0;
                    hi = (hi + Math.imul(ah4, bh1)) | 0;
                    lo = (lo + Math.imul(al3, bl2)) | 0;
                    mid = (mid + Math.imul(al3, bh2)) | 0;
                    mid = (mid + Math.imul(ah3, bl2)) | 0;
                    hi = (hi + Math.imul(ah3, bh2)) | 0;
                    lo = (lo + Math.imul(al2, bl3)) | 0;
                    mid = (mid + Math.imul(al2, bh3)) | 0;
                    mid = (mid + Math.imul(ah2, bl3)) | 0;
                    hi = (hi + Math.imul(ah2, bh3)) | 0;
                    lo = (lo + Math.imul(al1, bl4)) | 0;
                    mid = (mid + Math.imul(al1, bh4)) | 0;
                    mid = (mid + Math.imul(ah1, bl4)) | 0;
                    hi = (hi + Math.imul(ah1, bh4)) | 0;
                    lo = (lo + Math.imul(al0, bl5)) | 0;
                    mid = (mid + Math.imul(al0, bh5)) | 0;
                    mid = (mid + Math.imul(ah0, bl5)) | 0;
                    hi = (hi + Math.imul(ah0, bh5)) | 0;
                    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
                    w5 &= 0x3ffffff;
                    /* k = 6 */
                    lo = Math.imul(al6, bl0);
                    mid = Math.imul(al6, bh0);
                    mid = (mid + Math.imul(ah6, bl0)) | 0;
                    hi = Math.imul(ah6, bh0);
                    lo = (lo + Math.imul(al5, bl1)) | 0;
                    mid = (mid + Math.imul(al5, bh1)) | 0;
                    mid = (mid + Math.imul(ah5, bl1)) | 0;
                    hi = (hi + Math.imul(ah5, bh1)) | 0;
                    lo = (lo + Math.imul(al4, bl2)) | 0;
                    mid = (mid + Math.imul(al4, bh2)) | 0;
                    mid = (mid + Math.imul(ah4, bl2)) | 0;
                    hi = (hi + Math.imul(ah4, bh2)) | 0;
                    lo = (lo + Math.imul(al3, bl3)) | 0;
                    mid = (mid + Math.imul(al3, bh3)) | 0;
                    mid = (mid + Math.imul(ah3, bl3)) | 0;
                    hi = (hi + Math.imul(ah3, bh3)) | 0;
                    lo = (lo + Math.imul(al2, bl4)) | 0;
                    mid = (mid + Math.imul(al2, bh4)) | 0;
                    mid = (mid + Math.imul(ah2, bl4)) | 0;
                    hi = (hi + Math.imul(ah2, bh4)) | 0;
                    lo = (lo + Math.imul(al1, bl5)) | 0;
                    mid = (mid + Math.imul(al1, bh5)) | 0;
                    mid = (mid + Math.imul(ah1, bl5)) | 0;
                    hi = (hi + Math.imul(ah1, bh5)) | 0;
                    lo = (lo + Math.imul(al0, bl6)) | 0;
                    mid = (mid + Math.imul(al0, bh6)) | 0;
                    mid = (mid + Math.imul(ah0, bl6)) | 0;
                    hi = (hi + Math.imul(ah0, bh6)) | 0;
                    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
                    w6 &= 0x3ffffff;
                    /* k = 7 */
                    lo = Math.imul(al7, bl0);
                    mid = Math.imul(al7, bh0);
                    mid = (mid + Math.imul(ah7, bl0)) | 0;
                    hi = Math.imul(ah7, bh0);
                    lo = (lo + Math.imul(al6, bl1)) | 0;
                    mid = (mid + Math.imul(al6, bh1)) | 0;
                    mid = (mid + Math.imul(ah6, bl1)) | 0;
                    hi = (hi + Math.imul(ah6, bh1)) | 0;
                    lo = (lo + Math.imul(al5, bl2)) | 0;
                    mid = (mid + Math.imul(al5, bh2)) | 0;
                    mid = (mid + Math.imul(ah5, bl2)) | 0;
                    hi = (hi + Math.imul(ah5, bh2)) | 0;
                    lo = (lo + Math.imul(al4, bl3)) | 0;
                    mid = (mid + Math.imul(al4, bh3)) | 0;
                    mid = (mid + Math.imul(ah4, bl3)) | 0;
                    hi = (hi + Math.imul(ah4, bh3)) | 0;
                    lo = (lo + Math.imul(al3, bl4)) | 0;
                    mid = (mid + Math.imul(al3, bh4)) | 0;
                    mid = (mid + Math.imul(ah3, bl4)) | 0;
                    hi = (hi + Math.imul(ah3, bh4)) | 0;
                    lo = (lo + Math.imul(al2, bl5)) | 0;
                    mid = (mid + Math.imul(al2, bh5)) | 0;
                    mid = (mid + Math.imul(ah2, bl5)) | 0;
                    hi = (hi + Math.imul(ah2, bh5)) | 0;
                    lo = (lo + Math.imul(al1, bl6)) | 0;
                    mid = (mid + Math.imul(al1, bh6)) | 0;
                    mid = (mid + Math.imul(ah1, bl6)) | 0;
                    hi = (hi + Math.imul(ah1, bh6)) | 0;
                    lo = (lo + Math.imul(al0, bl7)) | 0;
                    mid = (mid + Math.imul(al0, bh7)) | 0;
                    mid = (mid + Math.imul(ah0, bl7)) | 0;
                    hi = (hi + Math.imul(ah0, bh7)) | 0;
                    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
                    w7 &= 0x3ffffff;
                    /* k = 8 */
                    lo = Math.imul(al8, bl0);
                    mid = Math.imul(al8, bh0);
                    mid = (mid + Math.imul(ah8, bl0)) | 0;
                    hi = Math.imul(ah8, bh0);
                    lo = (lo + Math.imul(al7, bl1)) | 0;
                    mid = (mid + Math.imul(al7, bh1)) | 0;
                    mid = (mid + Math.imul(ah7, bl1)) | 0;
                    hi = (hi + Math.imul(ah7, bh1)) | 0;
                    lo = (lo + Math.imul(al6, bl2)) | 0;
                    mid = (mid + Math.imul(al6, bh2)) | 0;
                    mid = (mid + Math.imul(ah6, bl2)) | 0;
                    hi = (hi + Math.imul(ah6, bh2)) | 0;
                    lo = (lo + Math.imul(al5, bl3)) | 0;
                    mid = (mid + Math.imul(al5, bh3)) | 0;
                    mid = (mid + Math.imul(ah5, bl3)) | 0;
                    hi = (hi + Math.imul(ah5, bh3)) | 0;
                    lo = (lo + Math.imul(al4, bl4)) | 0;
                    mid = (mid + Math.imul(al4, bh4)) | 0;
                    mid = (mid + Math.imul(ah4, bl4)) | 0;
                    hi = (hi + Math.imul(ah4, bh4)) | 0;
                    lo = (lo + Math.imul(al3, bl5)) | 0;
                    mid = (mid + Math.imul(al3, bh5)) | 0;
                    mid = (mid + Math.imul(ah3, bl5)) | 0;
                    hi = (hi + Math.imul(ah3, bh5)) | 0;
                    lo = (lo + Math.imul(al2, bl6)) | 0;
                    mid = (mid + Math.imul(al2, bh6)) | 0;
                    mid = (mid + Math.imul(ah2, bl6)) | 0;
                    hi = (hi + Math.imul(ah2, bh6)) | 0;
                    lo = (lo + Math.imul(al1, bl7)) | 0;
                    mid = (mid + Math.imul(al1, bh7)) | 0;
                    mid = (mid + Math.imul(ah1, bl7)) | 0;
                    hi = (hi + Math.imul(ah1, bh7)) | 0;
                    lo = (lo + Math.imul(al0, bl8)) | 0;
                    mid = (mid + Math.imul(al0, bh8)) | 0;
                    mid = (mid + Math.imul(ah0, bl8)) | 0;
                    hi = (hi + Math.imul(ah0, bh8)) | 0;
                    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
                    w8 &= 0x3ffffff;
                    /* k = 9 */
                    lo = Math.imul(al9, bl0);
                    mid = Math.imul(al9, bh0);
                    mid = (mid + Math.imul(ah9, bl0)) | 0;
                    hi = Math.imul(ah9, bh0);
                    lo = (lo + Math.imul(al8, bl1)) | 0;
                    mid = (mid + Math.imul(al8, bh1)) | 0;
                    mid = (mid + Math.imul(ah8, bl1)) | 0;
                    hi = (hi + Math.imul(ah8, bh1)) | 0;
                    lo = (lo + Math.imul(al7, bl2)) | 0;
                    mid = (mid + Math.imul(al7, bh2)) | 0;
                    mid = (mid + Math.imul(ah7, bl2)) | 0;
                    hi = (hi + Math.imul(ah7, bh2)) | 0;
                    lo = (lo + Math.imul(al6, bl3)) | 0;
                    mid = (mid + Math.imul(al6, bh3)) | 0;
                    mid = (mid + Math.imul(ah6, bl3)) | 0;
                    hi = (hi + Math.imul(ah6, bh3)) | 0;
                    lo = (lo + Math.imul(al5, bl4)) | 0;
                    mid = (mid + Math.imul(al5, bh4)) | 0;
                    mid = (mid + Math.imul(ah5, bl4)) | 0;
                    hi = (hi + Math.imul(ah5, bh4)) | 0;
                    lo = (lo + Math.imul(al4, bl5)) | 0;
                    mid = (mid + Math.imul(al4, bh5)) | 0;
                    mid = (mid + Math.imul(ah4, bl5)) | 0;
                    hi = (hi + Math.imul(ah4, bh5)) | 0;
                    lo = (lo + Math.imul(al3, bl6)) | 0;
                    mid = (mid + Math.imul(al3, bh6)) | 0;
                    mid = (mid + Math.imul(ah3, bl6)) | 0;
                    hi = (hi + Math.imul(ah3, bh6)) | 0;
                    lo = (lo + Math.imul(al2, bl7)) | 0;
                    mid = (mid + Math.imul(al2, bh7)) | 0;
                    mid = (mid + Math.imul(ah2, bl7)) | 0;
                    hi = (hi + Math.imul(ah2, bh7)) | 0;
                    lo = (lo + Math.imul(al1, bl8)) | 0;
                    mid = (mid + Math.imul(al1, bh8)) | 0;
                    mid = (mid + Math.imul(ah1, bl8)) | 0;
                    hi = (hi + Math.imul(ah1, bh8)) | 0;
                    lo = (lo + Math.imul(al0, bl9)) | 0;
                    mid = (mid + Math.imul(al0, bh9)) | 0;
                    mid = (mid + Math.imul(ah0, bl9)) | 0;
                    hi = (hi + Math.imul(ah0, bh9)) | 0;
                    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
                    w9 &= 0x3ffffff;
                    /* k = 10 */
                    lo = Math.imul(al9, bl1);
                    mid = Math.imul(al9, bh1);
                    mid = (mid + Math.imul(ah9, bl1)) | 0;
                    hi = Math.imul(ah9, bh1);
                    lo = (lo + Math.imul(al8, bl2)) | 0;
                    mid = (mid + Math.imul(al8, bh2)) | 0;
                    mid = (mid + Math.imul(ah8, bl2)) | 0;
                    hi = (hi + Math.imul(ah8, bh2)) | 0;
                    lo = (lo + Math.imul(al7, bl3)) | 0;
                    mid = (mid + Math.imul(al7, bh3)) | 0;
                    mid = (mid + Math.imul(ah7, bl3)) | 0;
                    hi = (hi + Math.imul(ah7, bh3)) | 0;
                    lo = (lo + Math.imul(al6, bl4)) | 0;
                    mid = (mid + Math.imul(al6, bh4)) | 0;
                    mid = (mid + Math.imul(ah6, bl4)) | 0;
                    hi = (hi + Math.imul(ah6, bh4)) | 0;
                    lo = (lo + Math.imul(al5, bl5)) | 0;
                    mid = (mid + Math.imul(al5, bh5)) | 0;
                    mid = (mid + Math.imul(ah5, bl5)) | 0;
                    hi = (hi + Math.imul(ah5, bh5)) | 0;
                    lo = (lo + Math.imul(al4, bl6)) | 0;
                    mid = (mid + Math.imul(al4, bh6)) | 0;
                    mid = (mid + Math.imul(ah4, bl6)) | 0;
                    hi = (hi + Math.imul(ah4, bh6)) | 0;
                    lo = (lo + Math.imul(al3, bl7)) | 0;
                    mid = (mid + Math.imul(al3, bh7)) | 0;
                    mid = (mid + Math.imul(ah3, bl7)) | 0;
                    hi = (hi + Math.imul(ah3, bh7)) | 0;
                    lo = (lo + Math.imul(al2, bl8)) | 0;
                    mid = (mid + Math.imul(al2, bh8)) | 0;
                    mid = (mid + Math.imul(ah2, bl8)) | 0;
                    hi = (hi + Math.imul(ah2, bh8)) | 0;
                    lo = (lo + Math.imul(al1, bl9)) | 0;
                    mid = (mid + Math.imul(al1, bh9)) | 0;
                    mid = (mid + Math.imul(ah1, bl9)) | 0;
                    hi = (hi + Math.imul(ah1, bh9)) | 0;
                    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
                    w10 &= 0x3ffffff;
                    /* k = 11 */
                    lo = Math.imul(al9, bl2);
                    mid = Math.imul(al9, bh2);
                    mid = (mid + Math.imul(ah9, bl2)) | 0;
                    hi = Math.imul(ah9, bh2);
                    lo = (lo + Math.imul(al8, bl3)) | 0;
                    mid = (mid + Math.imul(al8, bh3)) | 0;
                    mid = (mid + Math.imul(ah8, bl3)) | 0;
                    hi = (hi + Math.imul(ah8, bh3)) | 0;
                    lo = (lo + Math.imul(al7, bl4)) | 0;
                    mid = (mid + Math.imul(al7, bh4)) | 0;
                    mid = (mid + Math.imul(ah7, bl4)) | 0;
                    hi = (hi + Math.imul(ah7, bh4)) | 0;
                    lo = (lo + Math.imul(al6, bl5)) | 0;
                    mid = (mid + Math.imul(al6, bh5)) | 0;
                    mid = (mid + Math.imul(ah6, bl5)) | 0;
                    hi = (hi + Math.imul(ah6, bh5)) | 0;
                    lo = (lo + Math.imul(al5, bl6)) | 0;
                    mid = (mid + Math.imul(al5, bh6)) | 0;
                    mid = (mid + Math.imul(ah5, bl6)) | 0;
                    hi = (hi + Math.imul(ah5, bh6)) | 0;
                    lo = (lo + Math.imul(al4, bl7)) | 0;
                    mid = (mid + Math.imul(al4, bh7)) | 0;
                    mid = (mid + Math.imul(ah4, bl7)) | 0;
                    hi = (hi + Math.imul(ah4, bh7)) | 0;
                    lo = (lo + Math.imul(al3, bl8)) | 0;
                    mid = (mid + Math.imul(al3, bh8)) | 0;
                    mid = (mid + Math.imul(ah3, bl8)) | 0;
                    hi = (hi + Math.imul(ah3, bh8)) | 0;
                    lo = (lo + Math.imul(al2, bl9)) | 0;
                    mid = (mid + Math.imul(al2, bh9)) | 0;
                    mid = (mid + Math.imul(ah2, bl9)) | 0;
                    hi = (hi + Math.imul(ah2, bh9)) | 0;
                    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
                    w11 &= 0x3ffffff;
                    /* k = 12 */
                    lo = Math.imul(al9, bl3);
                    mid = Math.imul(al9, bh3);
                    mid = (mid + Math.imul(ah9, bl3)) | 0;
                    hi = Math.imul(ah9, bh3);
                    lo = (lo + Math.imul(al8, bl4)) | 0;
                    mid = (mid + Math.imul(al8, bh4)) | 0;
                    mid = (mid + Math.imul(ah8, bl4)) | 0;
                    hi = (hi + Math.imul(ah8, bh4)) | 0;
                    lo = (lo + Math.imul(al7, bl5)) | 0;
                    mid = (mid + Math.imul(al7, bh5)) | 0;
                    mid = (mid + Math.imul(ah7, bl5)) | 0;
                    hi = (hi + Math.imul(ah7, bh5)) | 0;
                    lo = (lo + Math.imul(al6, bl6)) | 0;
                    mid = (mid + Math.imul(al6, bh6)) | 0;
                    mid = (mid + Math.imul(ah6, bl6)) | 0;
                    hi = (hi + Math.imul(ah6, bh6)) | 0;
                    lo = (lo + Math.imul(al5, bl7)) | 0;
                    mid = (mid + Math.imul(al5, bh7)) | 0;
                    mid = (mid + Math.imul(ah5, bl7)) | 0;
                    hi = (hi + Math.imul(ah5, bh7)) | 0;
                    lo = (lo + Math.imul(al4, bl8)) | 0;
                    mid = (mid + Math.imul(al4, bh8)) | 0;
                    mid = (mid + Math.imul(ah4, bl8)) | 0;
                    hi = (hi + Math.imul(ah4, bh8)) | 0;
                    lo = (lo + Math.imul(al3, bl9)) | 0;
                    mid = (mid + Math.imul(al3, bh9)) | 0;
                    mid = (mid + Math.imul(ah3, bl9)) | 0;
                    hi = (hi + Math.imul(ah3, bh9)) | 0;
                    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
                    w12 &= 0x3ffffff;
                    /* k = 13 */
                    lo = Math.imul(al9, bl4);
                    mid = Math.imul(al9, bh4);
                    mid = (mid + Math.imul(ah9, bl4)) | 0;
                    hi = Math.imul(ah9, bh4);
                    lo = (lo + Math.imul(al8, bl5)) | 0;
                    mid = (mid + Math.imul(al8, bh5)) | 0;
                    mid = (mid + Math.imul(ah8, bl5)) | 0;
                    hi = (hi + Math.imul(ah8, bh5)) | 0;
                    lo = (lo + Math.imul(al7, bl6)) | 0;
                    mid = (mid + Math.imul(al7, bh6)) | 0;
                    mid = (mid + Math.imul(ah7, bl6)) | 0;
                    hi = (hi + Math.imul(ah7, bh6)) | 0;
                    lo = (lo + Math.imul(al6, bl7)) | 0;
                    mid = (mid + Math.imul(al6, bh7)) | 0;
                    mid = (mid + Math.imul(ah6, bl7)) | 0;
                    hi = (hi + Math.imul(ah6, bh7)) | 0;
                    lo = (lo + Math.imul(al5, bl8)) | 0;
                    mid = (mid + Math.imul(al5, bh8)) | 0;
                    mid = (mid + Math.imul(ah5, bl8)) | 0;
                    hi = (hi + Math.imul(ah5, bh8)) | 0;
                    lo = (lo + Math.imul(al4, bl9)) | 0;
                    mid = (mid + Math.imul(al4, bh9)) | 0;
                    mid = (mid + Math.imul(ah4, bl9)) | 0;
                    hi = (hi + Math.imul(ah4, bh9)) | 0;
                    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
                    w13 &= 0x3ffffff;
                    /* k = 14 */
                    lo = Math.imul(al9, bl5);
                    mid = Math.imul(al9, bh5);
                    mid = (mid + Math.imul(ah9, bl5)) | 0;
                    hi = Math.imul(ah9, bh5);
                    lo = (lo + Math.imul(al8, bl6)) | 0;
                    mid = (mid + Math.imul(al8, bh6)) | 0;
                    mid = (mid + Math.imul(ah8, bl6)) | 0;
                    hi = (hi + Math.imul(ah8, bh6)) | 0;
                    lo = (lo + Math.imul(al7, bl7)) | 0;
                    mid = (mid + Math.imul(al7, bh7)) | 0;
                    mid = (mid + Math.imul(ah7, bl7)) | 0;
                    hi = (hi + Math.imul(ah7, bh7)) | 0;
                    lo = (lo + Math.imul(al6, bl8)) | 0;
                    mid = (mid + Math.imul(al6, bh8)) | 0;
                    mid = (mid + Math.imul(ah6, bl8)) | 0;
                    hi = (hi + Math.imul(ah6, bh8)) | 0;
                    lo = (lo + Math.imul(al5, bl9)) | 0;
                    mid = (mid + Math.imul(al5, bh9)) | 0;
                    mid = (mid + Math.imul(ah5, bl9)) | 0;
                    hi = (hi + Math.imul(ah5, bh9)) | 0;
                    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
                    w14 &= 0x3ffffff;
                    /* k = 15 */
                    lo = Math.imul(al9, bl6);
                    mid = Math.imul(al9, bh6);
                    mid = (mid + Math.imul(ah9, bl6)) | 0;
                    hi = Math.imul(ah9, bh6);
                    lo = (lo + Math.imul(al8, bl7)) | 0;
                    mid = (mid + Math.imul(al8, bh7)) | 0;
                    mid = (mid + Math.imul(ah8, bl7)) | 0;
                    hi = (hi + Math.imul(ah8, bh7)) | 0;
                    lo = (lo + Math.imul(al7, bl8)) | 0;
                    mid = (mid + Math.imul(al7, bh8)) | 0;
                    mid = (mid + Math.imul(ah7, bl8)) | 0;
                    hi = (hi + Math.imul(ah7, bh8)) | 0;
                    lo = (lo + Math.imul(al6, bl9)) | 0;
                    mid = (mid + Math.imul(al6, bh9)) | 0;
                    mid = (mid + Math.imul(ah6, bl9)) | 0;
                    hi = (hi + Math.imul(ah6, bh9)) | 0;
                    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
                    w15 &= 0x3ffffff;
                    /* k = 16 */
                    lo = Math.imul(al9, bl7);
                    mid = Math.imul(al9, bh7);
                    mid = (mid + Math.imul(ah9, bl7)) | 0;
                    hi = Math.imul(ah9, bh7);
                    lo = (lo + Math.imul(al8, bl8)) | 0;
                    mid = (mid + Math.imul(al8, bh8)) | 0;
                    mid = (mid + Math.imul(ah8, bl8)) | 0;
                    hi = (hi + Math.imul(ah8, bh8)) | 0;
                    lo = (lo + Math.imul(al7, bl9)) | 0;
                    mid = (mid + Math.imul(al7, bh9)) | 0;
                    mid = (mid + Math.imul(ah7, bl9)) | 0;
                    hi = (hi + Math.imul(ah7, bh9)) | 0;
                    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
                    w16 &= 0x3ffffff;
                    /* k = 17 */
                    lo = Math.imul(al9, bl8);
                    mid = Math.imul(al9, bh8);
                    mid = (mid + Math.imul(ah9, bl8)) | 0;
                    hi = Math.imul(ah9, bh8);
                    lo = (lo + Math.imul(al8, bl9)) | 0;
                    mid = (mid + Math.imul(al8, bh9)) | 0;
                    mid = (mid + Math.imul(ah8, bl9)) | 0;
                    hi = (hi + Math.imul(ah8, bh9)) | 0;
                    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
                    w17 &= 0x3ffffff;
                    /* k = 18 */
                    lo = Math.imul(al9, bl9);
                    mid = Math.imul(al9, bh9);
                    mid = (mid + Math.imul(ah9, bl9)) | 0;
                    hi = Math.imul(ah9, bh9);
                    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
                    w18 &= 0x3ffffff;
                    o[0] = w0;
                    o[1] = w1;
                    o[2] = w2;
                    o[3] = w3;
                    o[4] = w4;
                    o[5] = w5;
                    o[6] = w6;
                    o[7] = w7;
                    o[8] = w8;
                    o[9] = w9;
                    o[10] = w10;
                    o[11] = w11;
                    o[12] = w12;
                    o[13] = w13;
                    o[14] = w14;
                    o[15] = w15;
                    o[16] = w16;
                    o[17] = w17;
                    o[18] = w18;
                    if (c !== 0) {
                        o[19] = c;
                        out.length++;
                    }
                    return out;
                };

                // Polyfill comb
                if (!Math.imul) {
                    comb10MulTo = smallMulTo;
                }

                function bigMulTo(self, num, out) {
                    out.negative = num.negative ^ self.negative;
                    out.length = self.length + num.length;

                    var carry = 0;
                    var hncarry = 0;
                    for (var k = 0; k < out.length - 1; k++) {
                        // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                        // note that ncarry could be >= 0x3ffffff
                        var ncarry = hncarry;
                        hncarry = 0;
                        var rword = carry & 0x3ffffff;
                        var maxJ = Math.min(k, num.length - 1);
                        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                            var i = k - j;
                            var a = self.words[i] | 0;
                            var b = num.words[j] | 0;
                            var r = a * b;

                            var lo = r & 0x3ffffff;
                            ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                            lo = (lo + rword) | 0;
                            rword = lo & 0x3ffffff;
                            ncarry = (ncarry + (lo >>> 26)) | 0;

                            hncarry += ncarry >>> 26;
                            ncarry &= 0x3ffffff;
                        }
                        out.words[k] = rword;
                        carry = ncarry;
                        ncarry = hncarry;
                    }
                    if (carry !== 0) {
                        out.words[k] = carry;
                    } else {
                        out.length--;
                    }

                    return out.strip();
                }

                function jumboMulTo(self, num, out) {
                    var fftm = new FFTM();
                    return fftm.mulp(self, num, out);
                }

                BN.prototype.mulTo = function mulTo(num, out) {
                    var res;
                    var len = this.length + num.length;
                    if (this.length === 10 && num.length === 10) {
                        res = comb10MulTo(this, num, out);
                    } else if (len < 63) {
                        res = smallMulTo(this, num, out);
                    } else if (len < 1024) {
                        res = bigMulTo(this, num, out);
                    } else {
                        res = jumboMulTo(this, num, out);
                    }

                    return res;
                }
                ;

                // Cooley-Tukey algorithm for FFT
                // slightly revisited to rely on looping instead of recursion

                function FFTM(x, y) {
                    this.x = x;
                    this.y = y;
                }

                FFTM.prototype.makeRBT = function makeRBT(N) {
                    var t = new Array(N);
                    var l = BN.prototype._countBits(N) - 1;
                    for (var i = 0; i < N; i++) {
                        t[i] = this.revBin(i, l, N);
                    }

                    return t;
                }
                ;

                // Returns binary-reversed representation of `x`
                FFTM.prototype.revBin = function revBin(x, l, N) {
                    if (x === 0 || x === N - 1)
                        return x;

                    var rb = 0;
                    for (var i = 0; i < l; i++) {
                        rb |= (x & 1) << (l - i - 1);
                        x >>= 1;
                    }

                    return rb;
                }
                ;

                // Performs "tweedling" phase, therefore 'emulating'
                // behaviour of the recursive algorithm
                FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
                    for (var i = 0; i < N; i++) {
                        rtws[i] = rws[rbt[i]];
                        itws[i] = iws[rbt[i]];
                    }
                }
                ;

                FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
                    this.permute(rbt, rws, iws, rtws, itws, N);

                    for (var s = 1; s < N; s <<= 1) {
                        var l = s << 1;

                        var rtwdf = Math.cos(2 * Math.PI / l);
                        var itwdf = Math.sin(2 * Math.PI / l);

                        for (var p = 0; p < N; p += l) {
                            var rtwdf_ = rtwdf;
                            var itwdf_ = itwdf;

                            for (var j = 0; j < s; j++) {
                                var re = rtws[p + j];
                                var ie = itws[p + j];

                                var ro = rtws[p + j + s];
                                var io = itws[p + j + s];

                                var rx = rtwdf_ * ro - itwdf_ * io;

                                io = rtwdf_ * io + itwdf_ * ro;
                                ro = rx;

                                rtws[p + j] = re + ro;
                                itws[p + j] = ie + io;

                                rtws[p + j + s] = re - ro;
                                itws[p + j + s] = ie - io;

                                /* jshint maxdepth : false */
                                if (j !== l) {
                                    rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                                    itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                                    rtwdf_ = rx;
                                }
                            }
                        }
                    }
                }
                ;

                FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
                    var N = Math.max(m, n) | 1;
                    var odd = N & 1;
                    var i = 0;
                    for (N = N / 2 | 0; N; N = N >>> 1) {
                        i++;
                    }

                    return 1 << i + 1 + odd;
                }
                ;

                FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
                    if (N <= 1)
                        return;

                    for (var i = 0; i < N / 2; i++) {
                        var t = rws[i];

                        rws[i] = rws[N - i - 1];
                        rws[N - i - 1] = t;

                        t = iws[i];

                        iws[i] = -iws[N - i - 1];
                        iws[N - i - 1] = -t;
                    }
                }
                ;

                FFTM.prototype.normalize13b = function normalize13b(ws, N) {
                    var carry = 0;
                    for (var i = 0; i < N / 2; i++) {
                        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;

                        ws[i] = w & 0x3ffffff;

                        if (w < 0x4000000) {
                            carry = 0;
                        } else {
                            carry = w / 0x4000000 | 0;
                        }
                    }

                    return ws;
                }
                ;

                FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
                    var carry = 0;
                    for (var i = 0; i < len; i++) {
                        carry = carry + (ws[i] | 0);

                        rws[2 * i] = carry & 0x1fff;
                        carry = carry >>> 13;
                        rws[2 * i + 1] = carry & 0x1fff;
                        carry = carry >>> 13;
                    }

                    // Pad with zeroes
                    for (i = 2 * len; i < N; ++i) {
                        rws[i] = 0;
                    }

                    assert(carry === 0);
                    assert((carry & ~0x1fff) === 0);
                }
                ;

                FFTM.prototype.stub = function stub(N) {
                    var ph = new Array(N);
                    for (var i = 0; i < N; i++) {
                        ph[i] = 0;
                    }

                    return ph;
                }
                ;

                FFTM.prototype.mulp = function mulp(x, y, out) {
                    var N = 2 * this.guessLen13b(x.length, y.length);

                    var rbt = this.makeRBT(N);

                    var _ = this.stub(N);

                    var rws = new Array(N);
                    var rwst = new Array(N);
                    var iwst = new Array(N);

                    var nrws = new Array(N);
                    var nrwst = new Array(N);
                    var niwst = new Array(N);

                    var rmws = out.words;
                    rmws.length = N;

                    this.convert13b(x.words, x.length, rws, N);
                    this.convert13b(y.words, y.length, nrws, N);

                    this.transform(rws, _, rwst, iwst, N, rbt);
                    this.transform(nrws, _, nrwst, niwst, N, rbt);

                    for (var i = 0; i < N; i++) {
                        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                        rwst[i] = rx;
                    }

                    this.conjugate(rwst, iwst, N);
                    this.transform(rwst, iwst, rmws, _, N, rbt);
                    this.conjugate(rmws, _, N);
                    this.normalize13b(rmws, N);

                    out.negative = x.negative ^ y.negative;
                    out.length = x.length + y.length;
                    return out.strip();
                }
                ;

                // Multiply `this` by `num`
                BN.prototype.mul = function mul(num) {
                    var out = new BN(null);
                    out.words = new Array(this.length + num.length);
                    return this.mulTo(num, out);
                }
                ;

                // Multiply employing FFT
                BN.prototype.mulf = function mulf(num) {
                    var out = new BN(null);
                    out.words = new Array(this.length + num.length);
                    return jumboMulTo(this, num, out);
                }
                ;

                // In-place Multiplication
                BN.prototype.imul = function imul(num) {
                    return this.clone().mulTo(num, this);
                }
                ;

                BN.prototype.imuln = function imuln(num) {
                    assert(typeof num === 'number');
                    assert(num < 0x4000000);

                    // Carry
                    var carry = 0;
                    for (var i = 0; i < this.length; i++) {
                        var w = (this.words[i] | 0) * num;
                        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                        carry >>= 26;
                        carry += (w / 0x4000000) | 0;
                        // NOTE: lo is 27bit maximum
                        carry += lo >>> 26;
                        this.words[i] = lo & 0x3ffffff;
                    }

                    if (carry !== 0) {
                        this.words[i] = carry;
                        this.length++;
                    }

                    return this;
                }
                ;

                BN.prototype.muln = function muln(num) {
                    return this.clone().imuln(num);
                }
                ;

                // `this` * `this`
                BN.prototype.sqr = function sqr() {
                    return this.mul(this);
                }
                ;

                // `this` * `this` in-place
                BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone());
                }
                ;

                // Math.pow(`this`, `num`)
                BN.prototype.pow = function pow(num) {
                    var w = toBitArray(num);
                    if (w.length === 0)
                        return new BN(1);

                    // Skip leading zeroes
                    var res = this;
                    for (var i = 0; i < w.length; i++,
                    res = res.sqr()) {
                        if (w[i] !== 0)
                            break;
                    }

                    if (++i < w.length) {
                        for (var q = res.sqr(); i < w.length; i++,
                        q = q.sqr()) {
                            if (w[i] === 0)
                                continue;

                            res = res.mul(q);
                        }
                    }

                    return res;
                }
                ;

                // Shift-left in-place
                BN.prototype.iushln = function iushln(bits) {
                    assert(typeof bits === 'number' && bits >= 0);
                    var r = bits % 26;
                    var s = (bits - r) / 26;
                    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
                    var i;

                    if (r !== 0) {
                        var carry = 0;

                        for (i = 0; i < this.length; i++) {
                            var newCarry = this.words[i] & carryMask;
                            var c = ((this.words[i] | 0) - newCarry) << r;
                            this.words[i] = c | carry;
                            carry = newCarry >>> (26 - r);
                        }

                        if (carry) {
                            this.words[i] = carry;
                            this.length++;
                        }
                    }

                    if (s !== 0) {
                        for (i = this.length - 1; i >= 0; i--) {
                            this.words[i + s] = this.words[i];
                        }

                        for (i = 0; i < s; i++) {
                            this.words[i] = 0;
                        }

                        this.length += s;
                    }

                    return this.strip();
                }
                ;

                BN.prototype.ishln = function ishln(bits) {
                    // TODO(indutny): implement me
                    assert(this.negative === 0);
                    return this.iushln(bits);
                }
                ;

                // Shift-right in-place
                // NOTE: `hint` is a lowest bit before trailing zeroes
                // NOTE: if `extended` is present - it will be filled with destroyed bits
                BN.prototype.iushrn = function iushrn(bits, hint, extended) {
                    assert(typeof bits === 'number' && bits >= 0);
                    var h;
                    if (hint) {
                        h = (hint - (hint % 26)) / 26;
                    } else {
                        h = 0;
                    }

                    var r = bits % 26;
                    var s = Math.min((bits - r) / 26, this.length);
                    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                    var maskedWords = extended;

                    h -= s;
                    h = Math.max(0, h);

                    // Extended mode, copy masked part
                    if (maskedWords) {
                        for (var i = 0; i < s; i++) {
                            maskedWords.words[i] = this.words[i];
                        }
                        maskedWords.length = s;
                    }

                    if (s === 0) {// No-op, we should not move anything at all
                    } else if (this.length > s) {
                        this.length -= s;
                        for (i = 0; i < this.length; i++) {
                            this.words[i] = this.words[i + s];
                        }
                    } else {
                        this.words[0] = 0;
                        this.length = 1;
                    }

                    var carry = 0;
                    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
                        var word = this.words[i] | 0;
                        this.words[i] = (carry << (26 - r)) | (word >>> r);
                        carry = word & mask;
                    }

                    // Push carried bits as a mask
                    if (maskedWords && carry !== 0) {
                        maskedWords.words[maskedWords.length++] = carry;
                    }

                    if (this.length === 0) {
                        this.words[0] = 0;
                        this.length = 1;
                    }

                    return this.strip();
                }
                ;

                BN.prototype.ishrn = function ishrn(bits, hint, extended) {
                    // TODO(indutny): implement me
                    assert(this.negative === 0);
                    return this.iushrn(bits, hint, extended);
                }
                ;

                // Shift-left
                BN.prototype.shln = function shln(bits) {
                    return this.clone().ishln(bits);
                }
                ;

                BN.prototype.ushln = function ushln(bits) {
                    return this.clone().iushln(bits);
                }
                ;

                // Shift-right
                BN.prototype.shrn = function shrn(bits) {
                    return this.clone().ishrn(bits);
                }
                ;

                BN.prototype.ushrn = function ushrn(bits) {
                    return this.clone().iushrn(bits);
                }
                ;

                // Test if n bit is set
                BN.prototype.testn = function testn(bit) {
                    assert(typeof bit === 'number' && bit >= 0);
                    var r = bit % 26;
                    var s = (bit - r) / 26;
                    var q = 1 << r;

                    // Fast case: bit is much higher than all existing words
                    if (this.length <= s)
                        return false;

                    // Check bit and return
                    var w = this.words[s];

                    return !!(w & q);
                }
                ;

                // Return only lowers bits of number (in-place)
                BN.prototype.imaskn = function imaskn(bits) {
                    assert(typeof bits === 'number' && bits >= 0);
                    var r = bits % 26;
                    var s = (bits - r) / 26;

                    assert(this.negative === 0, 'imaskn works only with positive numbers');

                    if (this.length <= s) {
                        return this;
                    }

                    if (r !== 0) {
                        s++;
                    }
                    this.length = Math.min(s, this.length);

                    if (r !== 0) {
                        var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                        this.words[this.length - 1] &= mask;
                    }

                    return this.strip();
                }
                ;

                // Return only lowers bits of number
                BN.prototype.maskn = function maskn(bits) {
                    return this.clone().imaskn(bits);
                }
                ;

                // Add plain number `num` to `this`
                BN.prototype.iaddn = function iaddn(num) {
                    assert(typeof num === 'number');
                    assert(num < 0x4000000);
                    if (num < 0)
                        return this.isubn(-num);

                    // Possible sign change
                    if (this.negative !== 0) {
                        if (this.length === 1 && (this.words[0] | 0) < num) {
                            this.words[0] = num - (this.words[0] | 0);
                            this.negative = 0;
                            return this;
                        }

                        this.negative = 0;
                        this.isubn(num);
                        this.negative = 1;
                        return this;
                    }

                    // Add without checks
                    return this._iaddn(num);
                }
                ;

                BN.prototype._iaddn = function _iaddn(num) {
                    this.words[0] += num;

                    // Carry
                    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
                        this.words[i] -= 0x4000000;
                        if (i === this.length - 1) {
                            this.words[i + 1] = 1;
                        } else {
                            this.words[i + 1]++;
                        }
                    }
                    this.length = Math.max(this.length, i + 1);

                    return this;
                }
                ;

                // Subtract plain number `num` from `this`
                BN.prototype.isubn = function isubn(num) {
                    assert(typeof num === 'number');
                    assert(num < 0x4000000);
                    if (num < 0)
                        return this.iaddn(-num);

                    if (this.negative !== 0) {
                        this.negative = 0;
                        this.iaddn(num);
                        this.negative = 1;
                        return this;
                    }

                    this.words[0] -= num;

                    if (this.length === 1 && this.words[0] < 0) {
                        this.words[0] = -this.words[0];
                        this.negative = 1;
                    } else {
                        // Carry
                        for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                            this.words[i] += 0x4000000;
                            this.words[i + 1] -= 1;
                        }
                    }

                    return this.strip();
                }
                ;

                BN.prototype.addn = function addn(num) {
                    return this.clone().iaddn(num);
                }
                ;

                BN.prototype.subn = function subn(num) {
                    return this.clone().isubn(num);
                }
                ;

                BN.prototype.iabs = function iabs() {
                    this.negative = 0;

                    return this;
                }
                ;

                BN.prototype.abs = function abs() {
                    return this.clone().iabs();
                }
                ;

                BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
                    var len = num.length + shift;
                    var i;

                    this._expand(len);

                    var w;
                    var carry = 0;
                    for (i = 0; i < num.length; i++) {
                        w = (this.words[i + shift] | 0) + carry;
                        var right = (num.words[i] | 0) * mul;
                        w -= right & 0x3ffffff;
                        carry = (w >> 26) - ((right / 0x4000000) | 0);
                        this.words[i + shift] = w & 0x3ffffff;
                    }
                    for (; i < this.length - shift; i++) {
                        w = (this.words[i + shift] | 0) + carry;
                        carry = w >> 26;
                        this.words[i + shift] = w & 0x3ffffff;
                    }

                    if (carry === 0)
                        return this.strip();

                    // Subtraction overflow
                    assert(carry === -1);
                    carry = 0;
                    for (i = 0; i < this.length; i++) {
                        w = -(this.words[i] | 0) + carry;
                        carry = w >> 26;
                        this.words[i] = w & 0x3ffffff;
                    }
                    this.negative = 1;

                    return this.strip();
                }
                ;

                BN.prototype._wordDiv = function _wordDiv(num, mode) {
                    var shift = this.length - num.length;

                    var a = this.clone();
                    var b = num;

                    // Normalize
                    var bhi = b.words[b.length - 1] | 0;
                    var bhiBits = this._countBits(bhi);
                    shift = 26 - bhiBits;
                    if (shift !== 0) {
                        b = b.ushln(shift);
                        a.iushln(shift);
                        bhi = b.words[b.length - 1] | 0;
                    }

                    // Initialize quotient
                    var m = a.length - b.length;
                    var q;

                    if (mode !== 'mod') {
                        q = new BN(null);
                        q.length = m + 1;
                        q.words = new Array(q.length);
                        for (var i = 0; i < q.length; i++) {
                            q.words[i] = 0;
                        }
                    }

                    var diff = a.clone()._ishlnsubmul(b, 1, m);
                    if (diff.negative === 0) {
                        a = diff;
                        if (q) {
                            q.words[m] = 1;
                        }
                    }

                    for (var j = m - 1; j >= 0; j--) {
                        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);

                        // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                        // (0x7ffffff)
                        qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                        a._ishlnsubmul(b, qj, j);
                        while (a.negative !== 0) {
                            qj--;
                            a.negative = 0;
                            a._ishlnsubmul(b, 1, j);
                            if (!a.isZero()) {
                                a.negative ^= 1;
                            }
                        }
                        if (q) {
                            q.words[j] = qj;
                        }
                    }
                    if (q) {
                        q.strip();
                    }
                    a.strip();

                    // Denormalize
                    if (mode !== 'div' && shift !== 0) {
                        a.iushrn(shift);
                    }

                    return {
                        div: q || null,
                        mod: a
                    };
                }
                ;

                // NOTE: 1) `mode` can be set to `mod` to request mod only,
                //       to `div` to request div only, or be absent to
                //       request both div & mod
                //       2) `positive` is true if unsigned mod is requested
                BN.prototype.divmod = function divmod(num, mode, positive) {
                    assert(!num.isZero());

                    if (this.isZero()) {
                        return {
                            div: new BN(0),
                            mod: new BN(0)
                        };
                    }

                    var div, mod, res;
                    if (this.negative !== 0 && num.negative === 0) {
                        res = this.neg().divmod(num, mode);

                        if (mode !== 'mod') {
                            div = res.div.neg();
                        }

                        if (mode !== 'div') {
                            mod = res.mod.neg();
                            if (positive && mod.negative !== 0) {
                                mod.iadd(num);
                            }
                        }

                        return {
                            div: div,
                            mod: mod
                        };
                    }

                    if (this.negative === 0 && num.negative !== 0) {
                        res = this.divmod(num.neg(), mode);

                        if (mode !== 'mod') {
                            div = res.div.neg();
                        }

                        return {
                            div: div,
                            mod: res.mod
                        };
                    }

                    if ((this.negative & num.negative) !== 0) {
                        res = this.neg().divmod(num.neg(), mode);

                        if (mode !== 'div') {
                            mod = res.mod.neg();
                            if (positive && mod.negative !== 0) {
                                mod.isub(num);
                            }
                        }

                        return {
                            div: res.div,
                            mod: mod
                        };
                    }

                    // Both numbers are positive at this point

                    // Strip both numbers to approximate shift value
                    if (num.length > this.length || this.cmp(num) < 0) {
                        return {
                            div: new BN(0),
                            mod: this
                        };
                    }

                    // Very short reduction
                    if (num.length === 1) {
                        if (mode === 'div') {
                            return {
                                div: this.divn(num.words[0]),
                                mod: null
                            };
                        }

                        if (mode === 'mod') {
                            return {
                                div: null,
                                mod: new BN(this.modn(num.words[0]))
                            };
                        }

                        return {
                            div: this.divn(num.words[0]),
                            mod: new BN(this.modn(num.words[0]))
                        };
                    }

                    return this._wordDiv(num, mode);
                }
                ;

                // Find `this` / `num`
                BN.prototype.div = function div(num) {
                    return this.divmod(num, 'div', false).div;
                }
                ;

                // Find `this` % `num`
                BN.prototype.mod = function mod(num) {
                    return this.divmod(num, 'mod', false).mod;
                }
                ;

                BN.prototype.umod = function umod(num) {
                    return this.divmod(num, 'mod', true).mod;
                }
                ;

                // Find Round(`this` / `num`)
                BN.prototype.divRound = function divRound(num) {
                    var dm = this.divmod(num);

                    // Fast case - exact division
                    if (dm.mod.isZero())
                        return dm.div;

                    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

                    var half = num.ushrn(1);
                    var r2 = num.andln(1);
                    var cmp = mod.cmp(half);

                    // Round down
                    if (cmp < 0 || r2 === 1 && cmp === 0)
                        return dm.div;

                    // Round up
                    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
                }
                ;

                BN.prototype.modn = function modn(num) {
                    assert(num <= 0x3ffffff);
                    var p = (1 << 26) % num;

                    var acc = 0;
                    for (var i = this.length - 1; i >= 0; i--) {
                        acc = (p * acc + (this.words[i] | 0)) % num;
                    }

                    return acc;
                }
                ;

                // In-place division by number
                BN.prototype.idivn = function idivn(num) {
                    assert(num <= 0x3ffffff);

                    var carry = 0;
                    for (var i = this.length - 1; i >= 0; i--) {
                        var w = (this.words[i] | 0) + carry * 0x4000000;
                        this.words[i] = (w / num) | 0;
                        carry = w % num;
                    }

                    return this.strip();
                }
                ;

                BN.prototype.divn = function divn(num) {
                    return this.clone().idivn(num);
                }
                ;

                BN.prototype.egcd = function egcd(p) {
                    assert(p.negative === 0);
                    assert(!p.isZero());

                    var x = this;
                    var y = p.clone();

                    if (x.negative !== 0) {
                        x = x.umod(p);
                    } else {
                        x = x.clone();
                    }

                    // A * x + B * y = x
                    var A = new BN(1);
                    var B = new BN(0);

                    // C * x + D * y = y
                    var C = new BN(0);
                    var D = new BN(1);

                    var g = 0;

                    while (x.isEven() && y.isEven()) {
                        x.iushrn(1);
                        y.iushrn(1);
                        ++g;
                    }

                    var yp = y.clone();
                    var xp = x.clone();

                    while (!x.isZero()) {
                        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i,
                        im <<= 1)
                            ;
                        if (i > 0) {
                            x.iushrn(i);
                            while (i-- > 0) {
                                if (A.isOdd() || B.isOdd()) {
                                    A.iadd(yp);
                                    B.isub(xp);
                                }

                                A.iushrn(1);
                                B.iushrn(1);
                            }
                        }

                        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j,
                        jm <<= 1)
                            ;
                        if (j > 0) {
                            y.iushrn(j);
                            while (j-- > 0) {
                                if (C.isOdd() || D.isOdd()) {
                                    C.iadd(yp);
                                    D.isub(xp);
                                }

                                C.iushrn(1);
                                D.iushrn(1);
                            }
                        }

                        if (x.cmp(y) >= 0) {
                            x.isub(y);
                            A.isub(C);
                            B.isub(D);
                        } else {
                            y.isub(x);
                            C.isub(A);
                            D.isub(B);
                        }
                    }

                    return {
                        a: C,
                        b: D,
                        gcd: y.iushln(g)
                    };
                }
                ;

                // This is reduced incarnation of the binary EEA
                // above, designated to invert members of the
                // _prime_ fields F(p) at a maximal speed
                BN.prototype._invmp = function _invmp(p) {
                    assert(p.negative === 0);
                    assert(!p.isZero());

                    var a = this;
                    var b = p.clone();

                    if (a.negative !== 0) {
                        a = a.umod(p);
                    } else {
                        a = a.clone();
                    }

                    var x1 = new BN(1);
                    var x2 = new BN(0);

                    var delta = b.clone();

                    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i,
                        im <<= 1)
                            ;
                        if (i > 0) {
                            a.iushrn(i);
                            while (i-- > 0) {
                                if (x1.isOdd()) {
                                    x1.iadd(delta);
                                }

                                x1.iushrn(1);
                            }
                        }

                        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j,
                        jm <<= 1)
                            ;
                        if (j > 0) {
                            b.iushrn(j);
                            while (j-- > 0) {
                                if (x2.isOdd()) {
                                    x2.iadd(delta);
                                }

                                x2.iushrn(1);
                            }
                        }

                        if (a.cmp(b) >= 0) {
                            a.isub(b);
                            x1.isub(x2);
                        } else {
                            b.isub(a);
                            x2.isub(x1);
                        }
                    }

                    var res;
                    if (a.cmpn(1) === 0) {
                        res = x1;
                    } else {
                        res = x2;
                    }

                    if (res.cmpn(0) < 0) {
                        res.iadd(p);
                    }

                    return res;
                }
                ;

                BN.prototype.gcd = function gcd(num) {
                    if (this.isZero())
                        return num.abs();
                    if (num.isZero())
                        return this.abs();

                    var a = this.clone();
                    var b = num.clone();
                    a.negative = 0;
                    b.negative = 0;

                    // Remove common factor of two
                    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                        a.iushrn(1);
                        b.iushrn(1);
                    }

                    do {
                        while (a.isEven()) {
                            a.iushrn(1);
                        }
                        while (b.isEven()) {
                            b.iushrn(1);
                        }

                        var r = a.cmp(b);
                        if (r < 0) {
                            // Swap `a` and `b` to make `a` always bigger than `b`
                            var t = a;
                            a = b;
                            b = t;
                        } else if (r === 0 || b.cmpn(1) === 0) {
                            break;
                        }

                        a.isub(b);
                    } while (true);
                    return b.iushln(shift);
                }
                ;

                // Invert number in the field F(num)
                BN.prototype.invm = function invm(num) {
                    return this.egcd(num).a.umod(num);
                }
                ;

                BN.prototype.isEven = function isEven() {
                    return (this.words[0] & 1) === 0;
                }
                ;

                BN.prototype.isOdd = function isOdd() {
                    return (this.words[0] & 1) === 1;
                }
                ;

                // And first word and num
                BN.prototype.andln = function andln(num) {
                    return this.words[0] & num;
                }
                ;

                // Increment at the bit position in-line
                BN.prototype.bincn = function bincn(bit) {
                    assert(typeof bit === 'number');
                    var r = bit % 26;
                    var s = (bit - r) / 26;
                    var q = 1 << r;

                    // Fast case: bit is much higher than all existing words
                    if (this.length <= s) {
                        this._expand(s + 1);
                        this.words[s] |= q;
                        return this;
                    }

                    // Add bit and propagate, if needed
                    var carry = q;
                    for (var i = s; carry !== 0 && i < this.length; i++) {
                        var w = this.words[i] | 0;
                        w += carry;
                        carry = w >>> 26;
                        w &= 0x3ffffff;
                        this.words[i] = w;
                    }
                    if (carry !== 0) {
                        this.words[i] = carry;
                        this.length++;
                    }
                    return this;
                }
                ;

                BN.prototype.isZero = function isZero() {
                    return this.length === 1 && this.words[0] === 0;
                }
                ;

                BN.prototype.cmpn = function cmpn(num) {
                    var negative = num < 0;

                    if (this.negative !== 0 && !negative)
                        return -1;
                    if (this.negative === 0 && negative)
                        return 1;

                    this.strip();

                    var res;
                    if (this.length > 1) {
                        res = 1;
                    } else {
                        if (negative) {
                            num = -num;
                        }

                        assert(num <= 0x3ffffff, 'Number is too big');

                        var w = this.words[0] | 0;
                        res = w === num ? 0 : w < num ? -1 : 1;
                    }
                    if (this.negative !== 0)
                        return -res | 0;
                    return res;
                }
                ;

                // Compare two numbers and return:
                // 1 - if `this` > `num`
                // 0 - if `this` == `num`
                // -1 - if `this` < `num`
                BN.prototype.cmp = function cmp(num) {
                    if (this.negative !== 0 && num.negative === 0)
                        return -1;
                    if (this.negative === 0 && num.negative !== 0)
                        return 1;

                    var res = this.ucmp(num);
                    if (this.negative !== 0)
                        return -res | 0;
                    return res;
                }
                ;

                // Unsigned comparison
                BN.prototype.ucmp = function ucmp(num) {
                    // At this point both numbers have the same sign
                    if (this.length > num.length)
                        return 1;
                    if (this.length < num.length)
                        return -1;

                    var res = 0;
                    for (var i = this.length - 1; i >= 0; i--) {
                        var a = this.words[i] | 0;
                        var b = num.words[i] | 0;

                        if (a === b)
                            continue;
                        if (a < b) {
                            res = -1;
                        } else if (a > b) {
                            res = 1;
                        }
                        break;
                    }
                    return res;
                }
                ;

                BN.prototype.gtn = function gtn(num) {
                    return this.cmpn(num) === 1;
                }
                ;

                BN.prototype.gt = function gt(num) {
                    return this.cmp(num) === 1;
                }
                ;

                BN.prototype.gten = function gten(num) {
                    return this.cmpn(num) >= 0;
                }
                ;

                BN.prototype.gte = function gte(num) {
                    return this.cmp(num) >= 0;
                }
                ;

                BN.prototype.ltn = function ltn(num) {
                    return this.cmpn(num) === -1;
                }
                ;

                BN.prototype.lt = function lt(num) {
                    return this.cmp(num) === -1;
                }
                ;

                BN.prototype.lten = function lten(num) {
                    return this.cmpn(num) <= 0;
                }
                ;

                BN.prototype.lte = function lte(num) {
                    return this.cmp(num) <= 0;
                }
                ;

                BN.prototype.eqn = function eqn(num) {
                    return this.cmpn(num) === 0;
                }
                ;

                BN.prototype.eq = function eq(num) {
                    return this.cmp(num) === 0;
                }
                ;

                //
                // A reduce context, could be using montgomery or something better, depending
                // on the `m` itself.
                //
                BN.red = function red(num) {
                    return new Red(num);
                }
                ;

                BN.prototype.toRed = function toRed(ctx) {
                    assert(!this.red, 'Already a number in reduction context');
                    assert(this.negative === 0, 'red works only with positives');
                    return ctx.convertTo(this)._forceRed(ctx);
                }
                ;

                BN.prototype.fromRed = function fromRed() {
                    assert(this.red, 'fromRed works only with numbers in reduction context');
                    return this.red.convertFrom(this);
                }
                ;

                BN.prototype._forceRed = function _forceRed(ctx) {
                    this.red = ctx;
                    return this;
                }
                ;

                BN.prototype.forceRed = function forceRed(ctx) {
                    assert(!this.red, 'Already a number in reduction context');
                    return this._forceRed(ctx);
                }
                ;

                BN.prototype.redAdd = function redAdd(num) {
                    assert(this.red, 'redAdd works only with red numbers');
                    return this.red.add(this, num);
                }
                ;

                BN.prototype.redIAdd = function redIAdd(num) {
                    assert(this.red, 'redIAdd works only with red numbers');
                    return this.red.iadd(this, num);
                }
                ;

                BN.prototype.redSub = function redSub(num) {
                    assert(this.red, 'redSub works only with red numbers');
                    return this.red.sub(this, num);
                }
                ;

                BN.prototype.redISub = function redISub(num) {
                    assert(this.red, 'redISub works only with red numbers');
                    return this.red.isub(this, num);
                }
                ;

                BN.prototype.redShl = function redShl(num) {
                    assert(this.red, 'redShl works only with red numbers');
                    return this.red.shl(this, num);
                }
                ;

                BN.prototype.redMul = function redMul(num) {
                    assert(this.red, 'redMul works only with red numbers');
                    this.red._verify2(this, num);
                    return this.red.mul(this, num);
                }
                ;

                BN.prototype.redIMul = function redIMul(num) {
                    assert(this.red, 'redMul works only with red numbers');
                    this.red._verify2(this, num);
                    return this.red.imul(this, num);
                }
                ;

                BN.prototype.redSqr = function redSqr() {
                    assert(this.red, 'redSqr works only with red numbers');
                    this.red._verify1(this);
                    return this.red.sqr(this);
                }
                ;

                BN.prototype.redISqr = function redISqr() {
                    assert(this.red, 'redISqr works only with red numbers');
                    this.red._verify1(this);
                    return this.red.isqr(this);
                }
                ;

                // Square root over p
                BN.prototype.redSqrt = function redSqrt() {
                    assert(this.red, 'redSqrt works only with red numbers');
                    this.red._verify1(this);
                    return this.red.sqrt(this);
                }
                ;

                BN.prototype.redInvm = function redInvm() {
                    assert(this.red, 'redInvm works only with red numbers');
                    this.red._verify1(this);
                    return this.red.invm(this);
                }
                ;

                // Return negative clone of `this` % `red modulo`
                BN.prototype.redNeg = function redNeg() {
                    assert(this.red, 'redNeg works only with red numbers');
                    this.red._verify1(this);
                    return this.red.neg(this);
                }
                ;

                BN.prototype.redPow = function redPow(num) {
                    assert(this.red && !num.red, 'redPow(normalNum)');
                    this.red._verify1(this);
                    return this.red.pow(this, num);
                }
                ;

                // Prime numbers with efficient reduction
                var primes = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                // Pseudo-Mersenne prime
                function MPrime(name, p) {
                    // P = 2 ^ N - K
                    this.name = name;
                    this.p = new BN(p,16);
                    this.n = this.p.bitLength();
                    this.k = new BN(1).iushln(this.n).isub(this.p);

                    this.tmp = this._tmp();
                }

                MPrime.prototype._tmp = function _tmp() {
                    var tmp = new BN(null);
                    tmp.words = new Array(Math.ceil(this.n / 13));
                    return tmp;
                }
                ;

                MPrime.prototype.ireduce = function ireduce(num) {
                    // Assumes that `num` is less than `P^2`
                    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
                    var r = num;
                    var rlen;

                    do {
                        this.split(r, this.tmp);
                        r = this.imulK(r);
                        r = r.iadd(this.tmp);
                        rlen = r.bitLength();
                    } while (rlen > this.n);
                    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                    if (cmp === 0) {
                        r.words[0] = 0;
                        r.length = 1;
                    } else if (cmp > 0) {
                        r.isub(this.p);
                    } else {
                        r.strip();
                    }

                    return r;
                }
                ;

                MPrime.prototype.split = function split(input, out) {
                    input.iushrn(this.n, 0, out);
                }
                ;

                MPrime.prototype.imulK = function imulK(num) {
                    return num.imul(this.k);
                }
                ;

                function K256() {
                    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
                }
                inherits(K256, MPrime);

                K256.prototype.split = function split(input, output) {
                    // 256 = 9 * 26 + 22
                    var mask = 0x3fffff;

                    var outLen = Math.min(input.length, 9);
                    for (var i = 0; i < outLen; i++) {
                        output.words[i] = input.words[i];
                    }
                    output.length = outLen;

                    if (input.length <= 9) {
                        input.words[0] = 0;
                        input.length = 1;
                        return;
                    }

                    // Shift by 9 limbs
                    var prev = input.words[9];
                    output.words[output.length++] = prev & mask;

                    for (i = 10; i < input.length; i++) {
                        var next = input.words[i] | 0;
                        input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                        prev = next;
                    }
                    prev >>>= 22;
                    input.words[i - 10] = prev;
                    if (prev === 0 && input.length > 10) {
                        input.length -= 10;
                    } else {
                        input.length -= 9;
                    }
                }
                ;

                K256.prototype.imulK = function imulK(num) {
                    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
                    num.words[num.length] = 0;
                    num.words[num.length + 1] = 0;
                    num.length += 2;

                    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
                    var lo = 0;
                    for (var i = 0; i < num.length; i++) {
                        var w = num.words[i] | 0;
                        lo += w * 0x3d1;
                        num.words[i] = lo & 0x3ffffff;
                        lo = w * 0x40 + ((lo / 0x4000000) | 0);
                    }

                    // Fast length reduction
                    if (num.words[num.length - 1] === 0) {
                        num.length--;
                        if (num.words[num.length - 1] === 0) {
                            num.length--;
                        }
                    }
                    return num;
                }
                ;

                function P224() {
                    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
                }
                inherits(P224, MPrime);

                function P192() {
                    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
                }
                inherits(P192, MPrime);

                function P25519() {
                    // 2 ^ 255 - 19
                    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
                }
                inherits(P25519, MPrime);

                P25519.prototype.imulK = function imulK(num) {
                    // K = 0x13
                    var carry = 0;
                    for (var i = 0; i < num.length; i++) {
                        var hi = (num.words[i] | 0) * 0x13 + carry;
                        var lo = hi & 0x3ffffff;
                        hi >>>= 26;

                        num.words[i] = lo;
                        carry = hi;
                    }
                    if (carry !== 0) {
                        num.words[num.length++] = carry;
                    }
                    return num;
                }
                ;

                // Exported mostly for testing purposes, use plain name instead
                BN._prime = function prime(name) {
                    // Cached version of prime
                    if (primes[name])
                        return primes[name];

                    var prime;
                    if (name === 'k256') {
                        prime = new K256();
                    } else if (name === 'p224') {
                        prime = new P224();
                    } else if (name === 'p192') {
                        prime = new P192();
                    } else if (name === 'p25519') {
                        prime = new P25519();
                    } else {
                        throw new Error('Unknown prime ' + name);
                    }
                    primes[name] = prime;

                    return prime;
                }
                ;

                //
                // Base reduction engine
                //
                function Red(m) {
                    if (typeof m === 'string') {
                        var prime = BN._prime(m);
                        this.m = prime.p;
                        this.prime = prime;
                    } else {
                        assert(m.gtn(1), 'modulus must be greater than 1');
                        this.m = m;
                        this.prime = null;
                    }
                }

                Red.prototype._verify1 = function _verify1(a) {
                    assert(a.negative === 0, 'red works only with positives');
                    assert(a.red, 'red works only with red numbers');
                }
                ;

                Red.prototype._verify2 = function _verify2(a, b) {
                    assert((a.negative | b.negative) === 0, 'red works only with positives');
                    assert(a.red && a.red === b.red, 'red works only with red numbers');
                }
                ;

                Red.prototype.imod = function imod(a) {
                    if (this.prime)
                        return this.prime.ireduce(a)._forceRed(this);
                    return a.umod(this.m)._forceRed(this);
                }
                ;

                Red.prototype.neg = function neg(a) {
                    if (a.isZero()) {
                        return a.clone();
                    }

                    return this.m.sub(a)._forceRed(this);
                }
                ;

                Red.prototype.add = function add(a, b) {
                    this._verify2(a, b);

                    var res = a.add(b);
                    if (res.cmp(this.m) >= 0) {
                        res.isub(this.m);
                    }
                    return res._forceRed(this);
                }
                ;

                Red.prototype.iadd = function iadd(a, b) {
                    this._verify2(a, b);

                    var res = a.iadd(b);
                    if (res.cmp(this.m) >= 0) {
                        res.isub(this.m);
                    }
                    return res;
                }
                ;

                Red.prototype.sub = function sub(a, b) {
                    this._verify2(a, b);

                    var res = a.sub(b);
                    if (res.cmpn(0) < 0) {
                        res.iadd(this.m);
                    }
                    return res._forceRed(this);
                }
                ;

                Red.prototype.isub = function isub(a, b) {
                    this._verify2(a, b);

                    var res = a.isub(b);
                    if (res.cmpn(0) < 0) {
                        res.iadd(this.m);
                    }
                    return res;
                }
                ;

                Red.prototype.shl = function shl(a, num) {
                    this._verify1(a);
                    return this.imod(a.ushln(num));
                }
                ;

                Red.prototype.imul = function imul(a, b) {
                    this._verify2(a, b);
                    return this.imod(a.imul(b));
                }
                ;

                Red.prototype.mul = function mul(a, b) {
                    this._verify2(a, b);
                    return this.imod(a.mul(b));
                }
                ;

                Red.prototype.isqr = function isqr(a) {
                    return this.imul(a, a.clone());
                }
                ;

                Red.prototype.sqr = function sqr(a) {
                    return this.mul(a, a);
                }
                ;

                Red.prototype.sqrt = function sqrt(a) {
                    if (a.isZero())
                        return a.clone();

                    var mod3 = this.m.andln(3);
                    assert(mod3 % 2 === 1);

                    // Fast case
                    if (mod3 === 3) {
                        var pow = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(a, pow);
                    }

                    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
                    //
                    // Find Q and S, that Q * 2 ^ S = (P - 1)
                    var q = this.m.subn(1);
                    var s = 0;
                    while (!q.isZero() && q.andln(1) === 0) {
                        s++;
                        q.iushrn(1);
                    }
                    assert(!q.isZero());

                    var one = new BN(1).toRed(this);
                    var nOne = one.redNeg();

                    // Find quadratic non-residue
                    // NOTE: Max is such because of generalized Riemann hypothesis.
                    var lpow = this.m.subn(1).iushrn(1);
                    var z = this.m.bitLength();
                    z = new BN(2 * z * z).toRed(this);

                    while (this.pow(z, lpow).cmp(nOne) !== 0) {
                        z.redIAdd(nOne);
                    }

                    var c = this.pow(z, q);
                    var r = this.pow(a, q.addn(1).iushrn(1));
                    var t = this.pow(a, q);
                    var m = s;
                    while (t.cmp(one) !== 0) {
                        var tmp = t;
                        for (var i = 0; tmp.cmp(one) !== 0; i++) {
                            tmp = tmp.redSqr();
                        }
                        assert(i < m);
                        var b = this.pow(c, new BN(1).iushln(m - i - 1));

                        r = r.redMul(b);
                        c = b.redSqr();
                        t = t.redMul(c);
                        m = i;
                    }

                    return r;
                }
                ;

                Red.prototype.invm = function invm(a) {
                    var inv = a._invmp(this.m);
                    if (inv.negative !== 0) {
                        inv.negative = 0;
                        return this.imod(inv).redNeg();
                    } else {
                        return this.imod(inv);
                    }
                }
                ;

                Red.prototype.pow = function pow(a, num) {
                    if (num.isZero())
                        return new BN(1).toRed(this);
                    if (num.cmpn(1) === 0)
                        return a.clone();

                    var windowSize = 4;
                    var wnd = new Array(1 << windowSize);
                    wnd[0] = new BN(1).toRed(this);
                    wnd[1] = a;
                    for (var i = 2; i < wnd.length; i++) {
                        wnd[i] = this.mul(wnd[i - 1], a);
                    }

                    var res = wnd[0];
                    var current = 0;
                    var currentLen = 0;
                    var start = num.bitLength() % 26;
                    if (start === 0) {
                        start = 26;
                    }

                    for (i = num.length - 1; i >= 0; i--) {
                        var word = num.words[i];
                        for (var j = start - 1; j >= 0; j--) {
                            var bit = (word >> j) & 1;
                            if (res !== wnd[0]) {
                                res = this.sqr(res);
                            }

                            if (bit === 0 && current === 0) {
                                currentLen = 0;
                                continue;
                            }

                            current <<= 1;
                            current |= bit;
                            currentLen++;
                            if (currentLen !== windowSize && (i !== 0 || j !== 0))
                                continue;

                            res = this.mul(res, wnd[current]);
                            currentLen = 0;
                            current = 0;
                        }
                        start = 26;
                    }

                    return res;
                }
                ;

                Red.prototype.convertTo = function convertTo(num) {
                    var r = num.umod(this.m);

                    return r === num ? r.clone() : r;
                }
                ;

                Red.prototype.convertFrom = function convertFrom(num) {
                    var res = num.clone();
                    res.red = null;
                    return res;
                }
                ;

                //
                // Montgomery method engine
                //

                BN.mont = function mont(num) {
                    return new Mont(num);
                }
                ;

                function Mont(m) {
                    Red.call(this, m);

                    this.shift = this.m.bitLength();
                    if (this.shift % 26 !== 0) {
                        this.shift += 26 - (this.shift % 26);
                    }

                    this.r = new BN(1).iushln(this.shift);
                    this.r2 = this.imod(this.r.sqr());
                    this.rinv = this.r._invmp(this.m);

                    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
                    this.minv = this.minv.umod(this.r);
                    this.minv = this.r.sub(this.minv);
                }
                inherits(Mont, Red);

                Mont.prototype.convertTo = function convertTo(num) {
                    return this.imod(num.ushln(this.shift));
                }
                ;

                Mont.prototype.convertFrom = function convertFrom(num) {
                    var r = this.imod(num.mul(this.rinv));
                    r.red = null;
                    return r;
                }
                ;

                Mont.prototype.imul = function imul(a, b) {
                    if (a.isZero() || b.isZero()) {
                        a.words[0] = 0;
                        a.length = 1;
                        return a;
                    }

                    var t = a.imul(b);
                    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                    var u = t.isub(c).iushrn(this.shift);
                    var res = u;

                    if (u.cmp(this.m) >= 0) {
                        res = u.isub(this.m);
                    } else if (u.cmpn(0) < 0) {
                        res = u.iadd(this.m);
                    }

                    return res._forceRed(this);
                }
                ;

                Mont.prototype.mul = function mul(a, b) {
                    if (a.isZero() || b.isZero())
                        return new BN(0)._forceRed(this);

                    var t = a.mul(b);
                    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                    var u = t.isub(c).iushrn(this.shift);
                    var res = u;
                    if (u.cmp(this.m) >= 0) {
                        res = u.isub(this.m);
                    } else if (u.cmpn(0) < 0) {
                        res = u.iadd(this.m);
                    }

                    return res._forceRed(this);
                }
                ;

                Mont.prototype.invm = function invm(a) {
                    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
                    var res = this.imod(a._invmp(this.m).mul(this.r2));
                    return res._forceRed(this);
                }
                ;
            }
            )(false || module, this);

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(119)(module)))

        /***/
    }
    ), /* 31 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var isOldIE = function isOldIE() {
            var memo;
            return function memorize() {
                if (typeof memo === 'undefined') {
                    // Test for IE <= 9 as proposed by Browserhacks
                    // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
                    // Tests for existence of standard globals is to allow style-loader
                    // to operate correctly into non-standard environments
                    // @see https://github.com/webpack-contrib/style-loader/issues/177
                    memo = Boolean(window && document && document.all && !window.atob);
                }

                return memo;
            }
            ;
        }();

        var getTarget = function getTarget() {
            var memo = {};
            return function memorize(target) {
                if (typeof memo[target] === 'undefined') {
                    var styleTarget = document.querySelector(target);
                    // Special case to return head of iframe instead of iframe itself

                    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
                        try {
                            // This will throw an exception if access to iframe is blocked
                            // due to cross-origin restrictions
                            styleTarget = styleTarget.contentDocument.head;
                        } catch (e) {
                            // istanbul ignore next
                            styleTarget = null;
                        }
                    }

                    memo[target] = styleTarget;
                }

                return memo[target];
            }
            ;
        }();

        var stylesInDom = {};

        function modulesToDom(moduleId, list, options) {
            for (var i = 0; i < list.length; i++) {
                var part = {
                    css: list[i][1],
                    media: list[i][2],
                    sourceMap: list[i][3]
                };

                if (stylesInDom[moduleId][i]) {
                    stylesInDom[moduleId][i](part);
                } else {
                    stylesInDom[moduleId].push(addStyle(part, options));
                }
            }
        }

        function insertStyleElement(options) {
            var style = document.createElement('style');
            var attributes = options.attributes || {};

            if (typeof attributes.nonce === 'undefined') {
                var nonce = true ? __webpack_require__.nc : undefined;

                if (nonce) {
                    attributes.nonce = nonce;
                }
            }

            Object.keys(attributes).forEach(function(key) {
                style.setAttribute(key, attributes[key]);
            });

            if (typeof options.insert === 'function') {
                options.insert(style);
            } else {
                var target = getTarget(options.insert || 'head');

                if (!target) {
                    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                }

                target.appendChild(style);
            }

            return style;
        }

        function removeStyleElement(style) {
            // istanbul ignore if
            if (style.parentNode === null) {
                return false;
            }

            style.parentNode.removeChild(style);
        }
        /* istanbul ignore next  */

        var replaceText = function replaceText() {
            var textStore = [];
            return function replace(index, replacement) {
                textStore[index] = replacement;
                return textStore.filter(Boolean).join('\n');
            }
            ;
        }();

        function applyToSingletonTag(style, index, remove, obj) {
            var css = remove ? '' : obj.css;
            // For old IE

            /* istanbul ignore if  */

            if (style.styleSheet) {
                style.styleSheet.cssText = replaceText(index, css);
            } else {
                var cssNode = document.createTextNode(css);
                var childNodes = style.childNodes;

                if (childNodes[index]) {
                    style.removeChild(childNodes[index]);
                }

                if (childNodes.length) {
                    style.insertBefore(cssNode, childNodes[index]);
                } else {
                    style.appendChild(cssNode);
                }
            }
        }

        function applyToTag(style, options, obj) {
            var css = obj.css;
            var media = obj.media;
            var sourceMap = obj.sourceMap;

            if (media) {
                style.setAttribute('media', media);
            } else {
                style.removeAttribute('media');
            }

            if (sourceMap && btoa) {
                css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
            }
            // For old IE

            /* istanbul ignore if  */

            if (style.styleSheet) {
                style.styleSheet.cssText = css;
            } else {
                while (style.firstChild) {
                    style.removeChild(style.firstChild);
                }

                style.appendChild(document.createTextNode(css));
            }
        }

        var singleton = null;
        var singletonCounter = 0;

        function addStyle(obj, options) {
            var style;
            var update;
            var remove;

            if (options.singleton) {
                var styleIndex = singletonCounter++;
                style = singleton || (singleton = insertStyleElement(options));
                update = applyToSingletonTag.bind(null, style, styleIndex, false);
                remove = applyToSingletonTag.bind(null, style, styleIndex, true);
            } else {
                style = insertStyleElement(options);
                update = applyToTag.bind(null, style, options);

                remove = function remove() {
                    removeStyleElement(style);
                }
                ;
            }

            update(obj);
            return function updateStyle(newObj) {
                if (newObj) {
                    if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
                        return;
                    }

                    update(obj = newObj);
                } else {
                    remove();
                }
            }
            ;
        }

        module.exports = function(moduleId, list, options) {
            options = options || {};
            // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
            // tags it will allow on a page

            if (!options.singleton && typeof options.singleton !== 'boolean') {
                options.singleton = isOldIE();
            }

            moduleId = options.base ? moduleId + options.base : moduleId;
            list = list || [];

            if (!stylesInDom[moduleId]) {
                stylesInDom[moduleId] = [];
            }

            modulesToDom(moduleId, list, options);
            return function update(newList) {
                newList = newList || [];

                if (Object.prototype.toString.call(newList) !== '[object Array]') {
                    return;
                }

                if (!stylesInDom[moduleId]) {
                    stylesInDom[moduleId] = [];
                }

                modulesToDom(moduleId, newList, options);

                for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {
                    stylesInDom[moduleId][j]();
                }

                stylesInDom[moduleId].length = newList.length;

                if (stylesInDom[moduleId].length === 0) {
                    delete stylesInDom[moduleId];
                }
            }
            ;
        }
        ;

        /***/
    }
    ), /* 32 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
        // css base code, injected by the css-loader
        // eslint-disable-next-line func-names
        module.exports = function(useSourceMap) {
            var list = [];
            // return the list of modules as css string

            list.toString = function toString() {
                return this.map(function(item) {
                    var content = cssWithMappingToString(item, useSourceMap);

                    if (item[2]) {
                        return "@media ".concat(item[2], " {").concat(content, "}");
                    }

                    return content;
                }).join('');
            }
            ;
            // import a list of modules into the list
            // eslint-disable-next-line func-names

            list.i = function(modules, mediaQuery, dedupe) {
                if (typeof modules === 'string') {
                    // eslint-disable-next-line no-param-reassign
                    modules = [[null, modules, '']];
                }

                var alreadyImportedModules = {};

                if (dedupe) {
                    for (var i = 0; i < this.length; i++) {
                        // eslint-disable-next-line prefer-destructuring
                        var id = this[i][0];

                        if (id != null) {
                            alreadyImportedModules[id] = true;
                        }
                    }
                }

                for (var _i = 0; _i < modules.length; _i++) {
                    var item = [].concat(modules[_i]);

                    if (dedupe && alreadyImportedModules[item[0]]) {
                        // eslint-disable-next-line no-continue
                        continue;
                    }

                    if (mediaQuery) {
                        if (!item[2]) {
                            item[2] = mediaQuery;
                        } else {
                            item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
                        }
                    }

                    list.push(item);
                }
            }
            ;

            return list;
        }
        ;

        function cssWithMappingToString(item, useSourceMap) {
            var content = item[1] || '';
            // eslint-disable-next-line prefer-destructuring

            var cssMapping = item[3];

            if (!cssMapping) {
                return content;
            }

            if (useSourceMap && typeof btoa === 'function') {
                var sourceMapping = toComment(cssMapping);
                var sourceURLs = cssMapping.sources.map(function(source) {
                    return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
                });
                return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
            }

            return [content].join('\n');
        }
        // Adapted from convert-source-map (MIT)

        function toComment(sourceMap) {
            // eslint-disable-next-line no-undef
            var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
            var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
            return "/*# ".concat(data, " */");
        }

        /***/
    }
    ), /* 33 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return setRef;
        });
        // TODO: Make it private only in v5
        function setRef(ref, value) {
            if (typeof ref === 'function') {
                ref(value);
            } else if (ref) {
                ref.current = value;
            }
        }

        /***/
    }
    ), /* 34 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getBasePlacement;
        });

        function getBasePlacement(placement) {
            return placement.split('-')[0];
        }

        /***/
    }
    ), /* 35 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/is-in-browser/dist/module.js
        var dist_module = __webpack_require__(82);

        // EXTERNAL MODULE: ../node_modules/tiny-warning/dist/tiny-warning.esm.js
        var tiny_warning_esm = __webpack_require__(171);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
        var createClass = __webpack_require__(65);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
        function _inheritsLoose(subClass, superClass) {
            subClass.prototype = Object.create(superClass.prototype);
            subClass.prototype.constructor = subClass;
            subClass.__proto__ = superClass;
        }
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
        var assertThisInitialized = __webpack_require__(129);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        var objectWithoutPropertiesLoose = __webpack_require__(170);

        // CONCATENATED MODULE: ../node_modules/jss/dist/jss.esm.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "f", function() {
            return hasCSSTOMSupport;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "c", function() {
            return create;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "e", function() {
            return getDynamicStyles;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "g", function() {
            return toCssValue;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "d", function() {
            return createRule;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return jss_esm_SheetsRegistry;
        });
        /* unused harmony export SheetsManager */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return jss_esm_RuleList;
        });
        /* unused harmony export sheets */
        /* unused harmony export createGenerateId */

        var plainObjectConstrurctor = {}.constructor;
        function cloneStyle(style) {
            if (style == null || typeof style !== 'object')
                return style;
            if (Array.isArray(style))
                return style.map(cloneStyle);
            if (style.constructor !== plainObjectConstrurctor)
                return style;
            var newStyle = {};

            for (var name in style) {
                newStyle[name] = cloneStyle(style[name]);
            }

            return newStyle;
        }

        /**
 * Create a rule instance.
 */

        function createRule(name, decl, options) {
            if (name === void 0) {
                name = 'unnamed';
            }

            var jss = options.jss;
            var declCopy = cloneStyle(decl);
            var rule = jss.plugins.onCreateRule(name, declCopy, options);
            if (rule)
                return rule;
            // It is an at-rule and it has no instance.

            if (name[0] === '@') {
                false ? undefined : void 0;
            }

            return null;
        }

        var join = function join(value, by) {
            var result = '';

            for (var i = 0; i < value.length; i++) {
                // Remove !important from the value, it will be readded later.
                if (value[i] === '!important')
                    break;
                if (result)
                    result += by;
                result += value[i];
            }

            return result;
        };
        /**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */

        function toCssValue(value, ignoreImportant) {
            if (ignoreImportant === void 0) {
                ignoreImportant = false;
            }

            if (!Array.isArray(value))
                return value;
            var cssValue = '';
            // Support space separated values via `[['5px', '10px']]`.

            if (Array.isArray(value[0])) {
                for (var i = 0; i < value.length; i++) {
                    if (value[i] === '!important')
                        break;
                    if (cssValue)
                        cssValue += ', ';
                    cssValue += join(value[i], ' ');
                }
            } else
                cssValue = join(value, ', ');
            // Add !important, because it was ignored.

            if (!ignoreImportant && value[value.length - 1] === '!important') {
                cssValue += ' !important';
            }

            return cssValue;
        }

        /**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */
        function indentStr(str, indent) {
            var result = '';

            for (var index = 0; index < indent; index++) {
                result += '  ';
            }

            return result + str;
        }
        /**
 * Converts a Rule to CSS string.
 */

        function toCss(selector, style, options) {
            if (options === void 0) {
                options = {};
            }

            var result = '';
            if (!style)
                return result;
            var _options = options
              , _options$indent = _options.indent
              , indent = _options$indent === void 0 ? 0 : _options$indent;
            var fallbacks = style.fallbacks;
            if (selector)
                indent++;
            // Apply fallbacks first.

            if (fallbacks) {
                // Array syntax {fallbacks: [{prop: value}]}
                if (Array.isArray(fallbacks)) {
                    for (var index = 0; index < fallbacks.length; index++) {
                        var fallback = fallbacks[index];

                        for (var prop in fallback) {
                            var value = fallback[prop];

                            if (value != null) {
                                if (result)
                                    result += '\n';
                                result += "" + indentStr(prop + ": " + toCssValue(value) + ";", indent);
                            }
                        }
                    }
                } else {
                    // Object syntax {fallbacks: {prop: value}}
                    for (var _prop in fallbacks) {
                        var _value = fallbacks[_prop];

                        if (_value != null) {
                            if (result)
                                result += '\n';
                            result += "" + indentStr(_prop + ": " + toCssValue(_value) + ";", indent);
                        }
                    }
                }
            }

            for (var _prop2 in style) {
                var _value2 = style[_prop2];

                if (_value2 != null && _prop2 !== 'fallbacks') {
                    if (result)
                        result += '\n';
                    result += "" + indentStr(_prop2 + ": " + toCssValue(_value2) + ";", indent);
                }
            }
            // Allow empty style in this case, because properties will be added dynamically.

            if (!result && !options.allowEmpty)
                return result;
            // When rule is being stringified before selector was defined.

            if (!selector)
                return result;
            indent--;
            if (result)
                result = "\n" + result + "\n";
            return indentStr(selector + " {" + result, indent) + indentStr('}', indent);
        }

        var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
        var nativeEscape = typeof CSS !== 'undefined' && CSS.escape;
        var jss_esm_escape = (function(str) {
            return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\$1');
        }
        );

        var BaseStyleRule = /*#__PURE__*/
        function() {
            function BaseStyleRule(key, style, options) {
                this.type = 'style';
                this.key = void 0;
                this.isProcessed = false;
                this.style = void 0;
                this.renderer = void 0;
                this.renderable = void 0;
                this.options = void 0;
                var sheet = options.sheet
                  , Renderer = options.Renderer;
                this.key = key;
                this.options = options;
                this.style = style;
                if (sheet)
                    this.renderer = sheet.renderer;
                else if (Renderer)
                    this.renderer = new Renderer();
            }
            /**
   * Get or set a style property.
   */

            var _proto = BaseStyleRule.prototype;

            _proto.prop = function prop(name, value, options) {
                // It's a getter.
                if (value === undefined)
                    return this.style[name];
                // Don't do anything if the value has not changed.

                var force = options ? options.force : false;
                if (!force && this.style[name] === value)
                    return this;
                var newValue = value;

                if (!options || options.process !== false) {
                    newValue = this.options.jss.plugins.onChangeValue(value, name, this);
                }

                var isEmpty = newValue == null || newValue === false;
                var isDefined = name in this.style;
                // Value is empty and wasn't defined before.

                if (isEmpty && !isDefined && !force)
                    return this;
                // We are going to remove this value.

                var remove = isEmpty && isDefined;
                if (remove)
                    delete this.style[name];
                else
                    this.style[name] = newValue;
                // Renderable is defined if StyleSheet option `link` is true.

                if (this.renderable && this.renderer) {
                    if (remove)
                        this.renderer.removeProperty(this.renderable, name);
                    else
                        this.renderer.setProperty(this.renderable, name, newValue);
                    return this;
                }

                var sheet = this.options.sheet;

                if (sheet && sheet.attached) {
                    false ? undefined : void 0;
                }

                return this;
            }
            ;

            return BaseStyleRule;
        }();
        var jss_esm_StyleRule = /*#__PURE__*/
        function(_BaseStyleRule) {
            _inheritsLoose(StyleRule, _BaseStyleRule);

            function StyleRule(key, style, options) {
                var _this;

                _this = _BaseStyleRule.call(this, key, style, options) || this;
                _this.selectorText = void 0;
                _this.id = void 0;
                _this.renderable = void 0;
                var selector = options.selector
                  , scoped = options.scoped
                  , sheet = options.sheet
                  , generateId = options.generateId;

                if (selector) {
                    _this.selectorText = selector;
                } else if (scoped !== false) {
                    _this.id = generateId(Object(assertThisInitialized["a"/* default */
                    ])(Object(assertThisInitialized["a"/* default */
                    ])(_this)), sheet);
                    _this.selectorText = "." + jss_esm_escape(_this.id);
                }

                return _this;
            }
            /**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */

            var _proto2 = StyleRule.prototype;

            /**
   * Apply rule to an element inline.
   */
            _proto2.applyTo = function applyTo(renderable) {
                var renderer = this.renderer;

                if (renderer) {
                    var json = this.toJSON();

                    for (var prop in json) {
                        renderer.setProperty(renderable, prop, json[prop]);
                    }
                }

                return this;
            }
            /**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */
            ;

            _proto2.toJSON = function toJSON() {
                var json = {};

                for (var prop in this.style) {
                    var value = this.style[prop];
                    if (typeof value !== 'object')
                        json[prop] = value;
                    else if (Array.isArray(value))
                        json[prop] = toCssValue(value);
                }

                return json;
            }
            /**
   * Generates a CSS string.
   */
            ;

            _proto2.toString = function toString(options) {
                var sheet = this.options.sheet;
                var link = sheet ? sheet.options.link : false;
                var opts = link ? Object(esm_extends["a"/* default */
                ])({}, options, {
                    allowEmpty: true
                }) : options;
                return toCss(this.selectorText, this.style, opts);
            }
            ;

            Object(createClass["a"/* default */
            ])(StyleRule, [{
                key: "selector",
                set: function set(selector) {
                    if (selector === this.selectorText)
                        return;
                    this.selectorText = selector;
                    var renderer = this.renderer
                      , renderable = this.renderable;
                    if (!renderable || !renderer)
                        return;
                    var hasChanged = renderer.setSelector(renderable, selector);
                    // If selector setter is not implemented, rerender the rule.

                    if (!hasChanged) {
                        renderer.replaceRule(renderable, this);
                    }
                }/**
     * Get selector string.
     */
                ,
                get: function get() {
                    return this.selectorText;
                }
            }]);

            return StyleRule;
        }(BaseStyleRule);
        var pluginStyleRule = {
            onCreateRule: function onCreateRule(name, style, options) {
                if (name[0] === '@' || options.parent && options.parent.type === 'keyframes') {
                    return null;
                }

                return new jss_esm_StyleRule(name,style,options);
            }
        };

        var defaultToStringOptions = {
            indent: 1,
            children: true
        };
        var atRegExp = /@([\w-]+)/;
        /**
 * Conditional rule for @media, @supports
 */

        var jss_esm_ConditionalRule = /*#__PURE__*/
        function() {
            function ConditionalRule(key, styles, options) {
                this.type = 'conditional';
                this.at = void 0;
                this.key = void 0;
                this.query = void 0;
                this.rules = void 0;
                this.options = void 0;
                this.isProcessed = false;
                this.renderable = void 0;
                this.key = key;
                // Key might contain a unique suffix in case the `name` passed by user was duplicate.

                this.query = options.name;
                var atMatch = key.match(atRegExp);
                this.at = atMatch ? atMatch[1] : 'unknown';
                this.options = options;
                this.rules = new jss_esm_RuleList(Object(esm_extends["a"/* default */
                ])({}, options, {
                    parent: this
                }));

                for (var name in styles) {
                    this.rules.add(name, styles[name]);
                }

                this.rules.process();
            }
            /**
   * Get a rule.
   */

            var _proto = ConditionalRule.prototype;

            _proto.getRule = function getRule(name) {
                return this.rules.get(name);
            }
            /**
   * Get index of a rule.
   */
            ;

            _proto.indexOf = function indexOf(rule) {
                return this.rules.indexOf(rule);
            }
            /**
   * Create and register rule, run plugins.
   */
            ;

            _proto.addRule = function addRule(name, style, options) {
                var rule = this.rules.add(name, style, options);
                if (!rule)
                    return null;
                this.options.jss.plugins.onProcessRule(rule);
                return rule;
            }
            /**
   * Generates a CSS string.
   */
            ;

            _proto.toString = function toString(options) {
                if (options === void 0) {
                    options = defaultToStringOptions;
                }

                if (options.indent == null)
                    options.indent = defaultToStringOptions.indent;
                if (options.children == null)
                    options.children = defaultToStringOptions.children;

                if (options.children === false) {
                    return this.query + " {}";
                }

                var children = this.rules.toString(options);
                return children ? this.query + " {\n" + children + "\n}" : '';
            }
            ;

            return ConditionalRule;
        }();
        var keyRegExp = /@media|@supports\s+/;
        var pluginConditionalRule = {
            onCreateRule: function onCreateRule(key, styles, options) {
                return keyRegExp.test(key) ? new jss_esm_ConditionalRule(key,styles,options) : null;
            }
        };

        var defaultToStringOptions$1 = {
            indent: 1,
            children: true
        };
        var nameRegExp = /@keyframes\s+([\w-]+)/;
        /**
 * Rule for @keyframes
 */

        var jss_esm_KeyframesRule = /*#__PURE__*/
        function() {
            function KeyframesRule(key, frames, options) {
                this.type = 'keyframes';
                this.at = '@keyframes';
                this.key = void 0;
                this.name = void 0;
                this.id = void 0;
                this.rules = void 0;
                this.options = void 0;
                this.isProcessed = false;
                this.renderable = void 0;
                var nameMatch = key.match(nameRegExp);

                if (nameMatch && nameMatch[1]) {
                    this.name = nameMatch[1];
                } else {
                    this.name = 'noname';
                    false ? undefined : void 0;
                }

                this.key = this.type + "-" + this.name;
                this.options = options;
                var scoped = options.scoped
                  , sheet = options.sheet
                  , generateId = options.generateId;
                this.id = scoped === false ? this.name : jss_esm_escape(generateId(this, sheet));
                this.rules = new jss_esm_RuleList(Object(esm_extends["a"/* default */
                ])({}, options, {
                    parent: this
                }));

                for (var name in frames) {
                    this.rules.add(name, frames[name], Object(esm_extends["a"/* default */
                    ])({}, options, {
                        parent: this
                    }));
                }

                this.rules.process();
            }
            /**
   * Generates a CSS string.
   */

            var _proto = KeyframesRule.prototype;

            _proto.toString = function toString(options) {
                if (options === void 0) {
                    options = defaultToStringOptions$1;
                }

                if (options.indent == null)
                    options.indent = defaultToStringOptions$1.indent;
                if (options.children == null)
                    options.children = defaultToStringOptions$1.children;

                if (options.children === false) {
                    return this.at + " " + this.id + " {}";
                }

                var children = this.rules.toString(options);
                if (children)
                    children = "\n" + children + "\n";
                return this.at + " " + this.id + " {" + children + "}";
            }
            ;

            return KeyframesRule;
        }();
        var keyRegExp$1 = /@keyframes\s+/;
        var refRegExp = /\$([\w-]+)/g;

        var findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {
            if (typeof val === 'string') {
                return val.replace(refRegExp, function(match, name) {
                    if (name in keyframes) {
                        return keyframes[name];
                    }

                    false ? undefined : void 0;
                    return match;
                });
            }

            return val;
        };
        /**
 * Replace the reference for a animation name.
 */

        var replaceRef = function replaceRef(style, prop, keyframes) {
            var value = style[prop];
            var refKeyframe = findReferencedKeyframe(value, keyframes);

            if (refKeyframe !== value) {
                style[prop] = refKeyframe;
            }
        };

        var jss_esm_plugin = {
            onCreateRule: function onCreateRule(key, frames, options) {
                return typeof key === 'string' && keyRegExp$1.test(key) ? new jss_esm_KeyframesRule(key,frames,options) : null;
            },
            // Animation name ref replacer.
            onProcessStyle: function onProcessStyle(style, rule, sheet) {
                if (rule.type !== 'style' || !sheet)
                    return style;
                if ('animation-name'in style)
                    replaceRef(style, 'animation-name', sheet.keyframes);
                if ('animation'in style)
                    replaceRef(style, 'animation', sheet.keyframes);
                return style;
            },
            onChangeValue: function onChangeValue(val, prop, rule) {
                var sheet = rule.options.sheet;

                if (!sheet) {
                    return val;
                }

                switch (prop) {
                case 'animation':
                    return findReferencedKeyframe(val, sheet.keyframes);

                case 'animation-name':
                    return findReferencedKeyframe(val, sheet.keyframes);

                default:
                    return val;
                }
            }
        };

        var jss_esm_KeyframeRule = /*#__PURE__*/
        function(_BaseStyleRule) {
            _inheritsLoose(KeyframeRule, _BaseStyleRule);

            function KeyframeRule() {
                var _this;

                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                _this = _BaseStyleRule.call.apply(_BaseStyleRule, [this].concat(args)) || this;
                _this.renderable = void 0;
                return _this;
            }

            var _proto = KeyframeRule.prototype;

            /**
   * Generates a CSS string.
   */
            _proto.toString = function toString(options) {
                var sheet = this.options.sheet;
                var link = sheet ? sheet.options.link : false;
                var opts = link ? Object(esm_extends["a"/* default */
                ])({}, options, {
                    allowEmpty: true
                }) : options;
                return toCss(this.key, this.style, opts);
            }
            ;

            return KeyframeRule;
        }(BaseStyleRule);
        var pluginKeyframeRule = {
            onCreateRule: function onCreateRule(key, style, options) {
                if (options.parent && options.parent.type === 'keyframes') {
                    return new jss_esm_KeyframeRule(key,style,options);
                }

                return null;
            }
        };

        var FontFaceRule = /*#__PURE__*/
        function() {
            function FontFaceRule(key, style, options) {
                this.type = 'font-face';
                this.at = '@font-face';
                this.key = void 0;
                this.style = void 0;
                this.options = void 0;
                this.isProcessed = false;
                this.renderable = void 0;
                this.key = key;
                this.style = style;
                this.options = options;
            }
            /**
   * Generates a CSS string.
   */

            var _proto = FontFaceRule.prototype;

            _proto.toString = function toString(options) {
                if (Array.isArray(this.style)) {
                    var str = '';

                    for (var index = 0; index < this.style.length; index++) {
                        str += toCss(this.key, this.style[index]);
                        if (this.style[index + 1])
                            str += '\n';
                    }

                    return str;
                }

                return toCss(this.key, this.style, options);
            }
            ;

            return FontFaceRule;
        }();
        var pluginFontFaceRule = {
            onCreateRule: function onCreateRule(key, style, options) {
                return key === '@font-face' ? new FontFaceRule(key,style,options) : null;
            }
        };

        var ViewportRule = /*#__PURE__*/
        function() {
            function ViewportRule(key, style, options) {
                this.type = 'viewport';
                this.at = '@viewport';
                this.key = void 0;
                this.style = void 0;
                this.options = void 0;
                this.isProcessed = false;
                this.renderable = void 0;
                this.key = key;
                this.style = style;
                this.options = options;
            }
            /**
   * Generates a CSS string.
   */

            var _proto = ViewportRule.prototype;

            _proto.toString = function toString(options) {
                return toCss(this.key, this.style, options);
            }
            ;

            return ViewportRule;
        }();
        var pluginViewportRule = {
            onCreateRule: function onCreateRule(key, style, options) {
                return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key,style,options) : null;
            }
        };

        var SimpleRule = /*#__PURE__*/
        function() {
            function SimpleRule(key, value, options) {
                this.type = 'simple';
                this.key = void 0;
                this.value = void 0;
                this.options = void 0;
                this.isProcessed = false;
                this.renderable = void 0;
                this.key = key;
                this.value = value;
                this.options = options;
            }
            /**
   * Generates a CSS string.
   */
            // eslint-disable-next-line no-unused-vars

            var _proto = SimpleRule.prototype;

            _proto.toString = function toString(options) {
                if (Array.isArray(this.value)) {
                    var str = '';

                    for (var index = 0; index < this.value.length; index++) {
                        str += this.key + " " + this.value[index] + ";";
                        if (this.value[index + 1])
                            str += '\n';
                    }

                    return str;
                }

                return this.key + " " + this.value + ";";
            }
            ;

            return SimpleRule;
        }();
        var keysMap = {
            '@charset': true,
            '@import': true,
            '@namespace': true
        };
        var pluginSimpleRule = {
            onCreateRule: function onCreateRule(key, value, options) {
                return key in keysMap ? new SimpleRule(key,value,options) : null;
            }
        };

        var plugins = [pluginStyleRule, pluginConditionalRule, jss_esm_plugin, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];

        var defaultUpdateOptions = {
            process: true
        };
        var forceUpdateOptions = {
            force: true,
            process: true /**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

        };

        var jss_esm_RuleList = /*#__PURE__*/
        function() {
            // Rules registry for access by .get() method.
            // It contains the same rule registered by name and by selector.
            // Original styles object.
            // Used to ensure correct rules order.
            function RuleList(options) {
                this.map = {};
                this.raw = {};
                this.index = [];
                this.counter = 0;
                this.options = void 0;
                this.classes = void 0;
                this.keyframes = void 0;
                this.options = options;
                this.classes = options.classes;
                this.keyframes = options.keyframes;
            }
            /**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */

            var _proto = RuleList.prototype;

            _proto.add = function add(name, decl, ruleOptions) {
                var _this$options = this.options
                  , parent = _this$options.parent
                  , sheet = _this$options.sheet
                  , jss = _this$options.jss
                  , Renderer = _this$options.Renderer
                  , generateId = _this$options.generateId
                  , scoped = _this$options.scoped;

                var options = Object(esm_extends["a"/* default */
                ])({
                    classes: this.classes,
                    parent: parent,
                    sheet: sheet,
                    jss: jss,
                    Renderer: Renderer,
                    generateId: generateId,
                    scoped: scoped,
                    name: name
                }, ruleOptions);
                // When user uses .createStyleSheet(), duplicate names are not possible, but
                // `sheet.addRule()` opens the door for any duplicate rule name. When this happens
                // we need to make the key unique within this RuleList instance scope.

                var key = name;

                if (name in this.raw) {
                    key = name + "-d" + this.counter++;
                }
                // We need to save the original decl before creating the rule
                // because cache plugin needs to use it as a key to return a cached rule.

                this.raw[key] = decl;

                if (key in this.classes) {
                    // E.g. rules inside of @media container
                    options.selector = "." + jss_esm_escape(this.classes[key]);
                }

                var rule = createRule(key, decl, options);
                if (!rule)
                    return null;
                this.register(rule);
                var index = options.index === undefined ? this.index.length : options.index;
                this.index.splice(index, 0, rule);
                return rule;
            }
            /**
   * Get a rule.
   */
            ;

            _proto.get = function get(name) {
                return this.map[name];
            }
            /**
   * Delete a rule.
   */
            ;

            _proto.remove = function remove(rule) {
                this.unregister(rule);
                delete this.raw[rule.key];
                this.index.splice(this.index.indexOf(rule), 1);
            }
            /**
   * Get index of a rule.
   */
            ;

            _proto.indexOf = function indexOf(rule) {
                return this.index.indexOf(rule);
            }
            /**
   * Run `onProcessRule()` plugins on every rule.
   */
            ;

            _proto.process = function process() {
                var plugins$$1 = this.options.jss.plugins;
                // We need to clone array because if we modify the index somewhere else during a loop
                // we end up with very hard-to-track-down side effects.

                this.index.slice(0).forEach(plugins$$1.onProcessRule, plugins$$1);
            }
            /**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */
            ;

            _proto.register = function register(rule) {
                this.map[rule.key] = rule;

                if (rule instanceof jss_esm_StyleRule) {
                    this.map[rule.selector] = rule;
                    if (rule.id)
                        this.classes[rule.key] = rule.id;
                } else if (rule instanceof jss_esm_KeyframesRule && this.keyframes) {
                    this.keyframes[rule.name] = rule.id;
                }
            }
            /**
   * Unregister a rule.
   */
            ;

            _proto.unregister = function unregister(rule) {
                delete this.map[rule.key];

                if (rule instanceof jss_esm_StyleRule) {
                    delete this.map[rule.selector];
                    delete this.classes[rule.key];
                } else if (rule instanceof jss_esm_KeyframesRule) {
                    delete this.keyframes[rule.name];
                }
            }
            /**
   * Update the function values with a new data.
   */
            ;

            _proto.update = function update() {
                var name;
                var data;
                var options;

                if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {
                    name = arguments.length <= 0 ? undefined : arguments[0];
                    // $FlowFixMe

                    data = arguments.length <= 1 ? undefined : arguments[1];
                    // $FlowFixMe

                    options = arguments.length <= 2 ? undefined : arguments[2];
                } else {
                    data = arguments.length <= 0 ? undefined : arguments[0];
                    // $FlowFixMe

                    options = arguments.length <= 1 ? undefined : arguments[1];
                    name = null;
                }

                if (name) {
                    this.updateOne(this.map[name], data, options);
                } else {
                    for (var index = 0; index < this.index.length; index++) {
                        this.updateOne(this.index[index], data, options);
                    }
                }
            }
            /**
   * Execute plugins, update rule props.
   */
            ;

            _proto.updateOne = function updateOne(rule, data, options) {
                if (options === void 0) {
                    options = defaultUpdateOptions;
                }

                var _this$options2 = this.options
                  , plugins$$1 = _this$options2.jss.plugins
                  , sheet = _this$options2.sheet;
                // It is a rules container like for e.g. ConditionalRule.

                if (rule.rules instanceof RuleList) {
                    rule.rules.update(data, options);
                    return;
                }

                var styleRule = rule;
                var style = styleRule.style;
                plugins$$1.onUpdate(data, rule, sheet, options);
                // We rely on a new `style` ref in case it was mutated during onUpdate hook.

                if (options.process && style && style !== styleRule.style) {
                    // We need to run the plugins in case new `style` relies on syntax plugins.
                    plugins$$1.onProcessStyle(styleRule.style, styleRule, sheet);
                    // Update and add props.

                    for (var prop in styleRule.style) {
                        var nextValue = styleRule.style[prop];
                        var prevValue = style[prop];
                        // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
                        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

                        if (nextValue !== prevValue) {
                            styleRule.prop(prop, nextValue, forceUpdateOptions);
                        }
                    }
                    // Remove props.

                    for (var _prop in style) {
                        var _nextValue = styleRule.style[_prop];
                        var _prevValue = style[_prop];
                        // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
                        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

                        if (_nextValue == null && _nextValue !== _prevValue) {
                            styleRule.prop(_prop, null, forceUpdateOptions);
                        }
                    }
                }
            }
            /**
   * Convert rules to a CSS string.
   */
            ;

            _proto.toString = function toString(options) {
                var str = '';
                var sheet = this.options.sheet;
                var link = sheet ? sheet.options.link : false;

                for (var index = 0; index < this.index.length; index++) {
                    var rule = this.index[index];
                    var css = rule.toString(options);
                    // No need to render an empty rule.

                    if (!css && !link)
                        continue;
                    if (str)
                        str += '\n';
                    str += css;
                }

                return str;
            }
            ;

            return RuleList;
        }();

        var jss_esm_StyleSheet = /*#__PURE__*/
        function() {
            function StyleSheet(styles, options) {
                this.options = void 0;
                this.deployed = void 0;
                this.attached = void 0;
                this.rules = void 0;
                this.renderer = void 0;
                this.classes = void 0;
                this.keyframes = void 0;
                this.queue = void 0;
                this.attached = false;
                this.deployed = false;
                this.classes = {};
                this.keyframes = {};
                this.options = Object(esm_extends["a"/* default */
                ])({}, options, {
                    sheet: this,
                    parent: this,
                    classes: this.classes,
                    keyframes: this.keyframes
                });

                if (options.Renderer) {
                    this.renderer = new options.Renderer(this);
                }

                this.rules = new jss_esm_RuleList(this.options);

                for (var name in styles) {
                    this.rules.add(name, styles[name]);
                }

                this.rules.process();
            }
            /**
   * Attach renderable to the render tree.
   */

            var _proto = StyleSheet.prototype;

            _proto.attach = function attach() {
                if (this.attached)
                    return this;
                if (this.renderer)
                    this.renderer.attach();
                this.attached = true;
                // Order is important, because we can't use insertRule API if style element is not attached.

                if (!this.deployed)
                    this.deploy();
                return this;
            }
            /**
   * Remove renderable from render tree.
   */
            ;

            _proto.detach = function detach() {
                if (!this.attached)
                    return this;
                if (this.renderer)
                    this.renderer.detach();
                this.attached = false;
                return this;
            }
            /**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */
            ;

            _proto.addRule = function addRule(name, decl, options) {
                var queue = this.queue;
                // Plugins can create rules.
                // In order to preserve the right order, we need to queue all `.addRule` calls,
                // which happen after the first `rules.add()` call.

                if (this.attached && !queue)
                    this.queue = [];
                var rule = this.rules.add(name, decl, options);
                if (!rule)
                    return null;
                this.options.jss.plugins.onProcessRule(rule);

                if (this.attached) {
                    if (!this.deployed)
                        return rule;
                    // Don't insert rule directly if there is no stringified version yet.
                    // It will be inserted all together when .attach is called.

                    if (queue)
                        queue.push(rule);
                    else {
                        this.insertRule(rule);

                        if (this.queue) {
                            this.queue.forEach(this.insertRule, this);
                            this.queue = undefined;
                        }
                    }
                    return rule;
                }
                // We can't add rules to a detached style node.
                // We will redeploy the sheet once user will attach it.

                this.deployed = false;
                return rule;
            }
            /**
   * Insert rule into the StyleSheet
   */
            ;

            _proto.insertRule = function insertRule(rule) {
                if (this.renderer) {
                    this.renderer.insertRule(rule);
                }
            }
            /**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */
            ;

            _proto.addRules = function addRules(styles, options) {
                var added = [];

                for (var name in styles) {
                    var rule = this.addRule(name, styles[name], options);
                    if (rule)
                        added.push(rule);
                }

                return added;
            }
            /**
   * Get a rule by name.
   */
            ;

            _proto.getRule = function getRule(name) {
                return this.rules.get(name);
            }
            /**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */
            ;

            _proto.deleteRule = function deleteRule(name) {
                var rule = typeof name === 'object' ? name : this.rules.get(name);
                if (!rule)
                    return false;
                this.rules.remove(rule);

                if (this.attached && rule.renderable && this.renderer) {
                    return this.renderer.deleteRule(rule.renderable);
                }

                return true;
            }
            /**
   * Get index of a rule.
   */
            ;

            _proto.indexOf = function indexOf(rule) {
                return this.rules.indexOf(rule);
            }
            /**
   * Deploy pure CSS string to a renderable.
   */
            ;

            _proto.deploy = function deploy() {
                if (this.renderer)
                    this.renderer.deploy();
                this.deployed = true;
                return this;
            }
            /**
   * Update the function values with a new data.
   */
            ;

            _proto.update = function update() {
                var _this$rules;

                (_this$rules = this.rules).update.apply(_this$rules, arguments);

                return this;
            }
            /**
   * Updates a single rule.
   */
            ;

            _proto.updateOne = function updateOne(rule, data, options) {
                this.rules.updateOne(rule, data, options);
                return this;
            }
            /**
   * Convert rules to a CSS string.
   */
            ;

            _proto.toString = function toString(options) {
                return this.rules.toString(options);
            }
            ;

            return StyleSheet;
        }();

        var PluginsRegistry = /*#__PURE__*/
        function() {
            function PluginsRegistry() {
                this.plugins = {
                    internal: [],
                    external: []
                };
                this.registry = void 0;
            }

            var _proto = PluginsRegistry.prototype;

            /**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */
            _proto.onCreateRule = function onCreateRule(name, decl, options) {
                for (var i = 0; i < this.registry.onCreateRule.length; i++) {
                    var rule = this.registry.onCreateRule[i](name, decl, options);
                    if (rule)
                        return rule;
                }

                return null;
            }
            /**
   * Call `onProcessRule` hooks.
   */
            ;

            _proto.onProcessRule = function onProcessRule(rule) {
                if (rule.isProcessed)
                    return;
                var sheet = rule.options.sheet;

                for (var i = 0; i < this.registry.onProcessRule.length; i++) {
                    this.registry.onProcessRule[i](rule, sheet);
                }

                if (rule.style)
                    this.onProcessStyle(rule.style, rule, sheet);
                rule.isProcessed = true;
            }
            /**
   * Call `onProcessStyle` hooks.
   */
            ;

            _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {
                for (var i = 0; i < this.registry.onProcessStyle.length; i++) {
                    // $FlowFixMe
                    rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);
                }
            }
            /**
   * Call `onProcessSheet` hooks.
   */
            ;

            _proto.onProcessSheet = function onProcessSheet(sheet) {
                for (var i = 0; i < this.registry.onProcessSheet.length; i++) {
                    this.registry.onProcessSheet[i](sheet);
                }
            }
            /**
   * Call `onUpdate` hooks.
   */
            ;

            _proto.onUpdate = function onUpdate(data, rule, sheet, options) {
                for (var i = 0; i < this.registry.onUpdate.length; i++) {
                    this.registry.onUpdate[i](data, rule, sheet, options);
                }
            }
            /**
   * Call `onChangeValue` hooks.
   */
            ;

            _proto.onChangeValue = function onChangeValue(value, prop, rule) {
                var processedValue = value;

                for (var i = 0; i < this.registry.onChangeValue.length; i++) {
                    processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);
                }

                return processedValue;
            }
            /**
   * Register a plugin.
   */
            ;

            _proto.use = function use(newPlugin, options) {
                if (options === void 0) {
                    options = {
                        queue: 'external'
                    };
                }

                var plugins = this.plugins[options.queue];
                // Avoids applying same plugin twice, at least based on ref.

                if (plugins.indexOf(newPlugin) !== -1) {
                    return;
                }

                plugins.push(newPlugin);
                this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function(registry, plugin) {
                    for (var name in plugin) {
                        if (name in registry) {
                            registry[name].push(plugin[name]);
                        } else {
                            false ? undefined : void 0;
                        }
                    }

                    return registry;
                }, {
                    onCreateRule: [],
                    onProcessRule: [],
                    onProcessStyle: [],
                    onProcessSheet: [],
                    onChangeValue: [],
                    onUpdate: []
                });
            }
            ;

            return PluginsRegistry;
        }();

        /**
 * Sheets registry to access them all at one place.
 */
        var jss_esm_SheetsRegistry = /*#__PURE__*/
        function() {
            function SheetsRegistry() {
                this.registry = [];
            }

            var _proto = SheetsRegistry.prototype;

            /**
   * Register a Style Sheet.
   */
            _proto.add = function add(sheet) {
                var registry = this.registry;
                var index = sheet.options.index;
                if (registry.indexOf(sheet) !== -1)
                    return;

                if (registry.length === 0 || index >= this.index) {
                    registry.push(sheet);
                    return;
                }
                // Find a position.

                for (var i = 0; i < registry.length; i++) {
                    if (registry[i].options.index > index) {
                        registry.splice(i, 0, sheet);
                        return;
                    }
                }
            }
            /**
   * Reset the registry.
   */
            ;

            _proto.reset = function reset() {
                this.registry = [];
            }
            /**
   * Remove a Style Sheet.
   */
            ;

            _proto.remove = function remove(sheet) {
                var index = this.registry.indexOf(sheet);
                this.registry.splice(index, 1);
            }
            /**
   * Convert all attached sheets to a CSS string.
   */
            ;

            _proto.toString = function toString(_temp) {
                var _ref = _temp === void 0 ? {} : _temp
                  , attached = _ref.attached
                  , options = Object(objectWithoutPropertiesLoose["a"/* default */
                ])(_ref, ["attached"]);

                var css = '';

                for (var i = 0; i < this.registry.length; i++) {
                    var sheet = this.registry[i];

                    if (attached != null && sheet.attached !== attached) {
                        continue;
                    }

                    if (css)
                        css += '\n';
                    css += sheet.toString(options);
                }

                return css;
            }
            ;

            Object(createClass["a"/* default */
            ])(SheetsRegistry, [{
                key: "index",

                /**
     * Current highest index number.
     */
                get: function get() {
                    return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
                }
            }]);

            return SheetsRegistry;
        }();

        /**
 * This is a global sheets registry. Only DomRenderer will add sheets to it.
 * On the server one should use an own SheetsRegistry instance and add the
 * sheets to it, because you need to make sure to create a new registry for
 * each request in order to not leak sheets across requests.
 */

        var sheets = new jss_esm_SheetsRegistry();

        /* eslint-disable */
        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var globalThis = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();

        var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
        if (globalThis[ns] == null)
            globalThis[ns] = 0;
        // Bundle may contain multiple JSS versions at the same time. In order to identify
        // the current version with just one short number and use it for classes generation
        // we use a counter. Also it is more accurate, because user can manually reevaluate
        // the module.

        var moduleId = globalThis[ns]++;

        var maxRules = 1e10;

        /**
 * Returns a function which generates unique class names based on counters.
 * When new generator function is created, rule counter is reseted.
 * We need to reset the rule counter for SSR for each request.
 */
        var createGenerateId = function createGenerateId(options) {
            if (options === void 0) {
                options = {};
            }

            var ruleCounter = 0;
            return function(rule, sheet) {
                ruleCounter += 1;

                if (ruleCounter > maxRules) {
                    false ? undefined : void 0;
                }

                var jssId = '';
                var prefix = '';

                if (sheet) {
                    if (sheet.options.classNamePrefix) {
                        prefix = sheet.options.classNamePrefix;
                    }

                    if (sheet.options.jss.id != null) {
                        jssId = String(sheet.options.jss.id);
                    }
                }

                if (options.minify) {
                    // Using "c" because a number can't be the first char in a class name.
                    return "" + (prefix || 'c') + moduleId + jssId + ruleCounter;
                }

                return prefix + rule.key + "-" + moduleId + (jssId ? "-" + jssId : '') + "-" + ruleCounter;
            }
            ;
        };

        /**
 * Cache the value from the first time a function is called.
 */
        var memoize = function memoize(fn) {
            var value;
            return function() {
                if (!value)
                    value = fn();
                return value;
            }
            ;
        };
        /**
 * Get a style property value.
 */

        function getPropertyValue(cssRule, prop) {
            try {
                // Support CSSTOM.
                if (cssRule.attributeStyleMap) {
                    return cssRule.attributeStyleMap.get(prop);
                }

                return cssRule.style.getPropertyValue(prop);
            } catch (err) {
                // IE may throw if property is unknown.
                return '';
            }
        }
        /**
 * Set a style property.
 */

        function setProperty(cssRule, prop, value) {
            try {
                var cssValue = value;

                if (Array.isArray(value)) {
                    cssValue = toCssValue(value, true);

                    if (value[value.length - 1] === '!important') {
                        cssRule.style.setProperty(prop, cssValue, 'important');
                        return true;
                    }
                }
                // Support CSSTOM.

                if (cssRule.attributeStyleMap) {
                    cssRule.attributeStyleMap.set(prop, cssValue);
                } else {
                    cssRule.style.setProperty(prop, cssValue);
                }
            } catch (err) {
                // IE may throw if property is unknown.
                return false;
            }

            return true;
        }
        /**
 * Remove a style property.
 */

        function removeProperty(cssRule, prop) {
            try {
                // Support CSSTOM.
                if (cssRule.attributeStyleMap) {
                    cssRule.attributeStyleMap.delete(prop);
                } else {
                    cssRule.style.removeProperty(prop);
                }
            } catch (err) {
                false ? undefined : void 0;
            }
        }
        /**
 * Set the selector.
 */

        function setSelector(cssRule, selectorText) {
            cssRule.selectorText = selectorText;
            // Return false if setter was not successful.
            // Currently works in chrome only.

            return cssRule.selectorText === selectorText;
        }
        /**
 * Gets the `head` element upon the first call and caches it.
 * We assume it can't be null.
 */

        var getHead = memoize(function() {
            return document.querySelector('head');
        });
        /**
 * Find attached sheet with an index higher than the passed one.
 */

        function findHigherSheet(registry, options) {
            for (var i = 0; i < registry.length; i++) {
                var sheet = registry[i];

                if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
                    return sheet;
                }
            }

            return null;
        }
        /**
 * Find attached sheet with the highest index.
 */

        function findHighestSheet(registry, options) {
            for (var i = registry.length - 1; i >= 0; i--) {
                var sheet = registry[i];

                if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
                    return sheet;
                }
            }

            return null;
        }
        /**
 * Find a comment with "jss" inside.
 */

        function findCommentNode(text) {
            var head = getHead();

            for (var i = 0; i < head.childNodes.length; i++) {
                var node = head.childNodes[i];

                if (node.nodeType === 8 && node.nodeValue.trim() === text) {
                    return node;
                }
            }

            return null;
        }

        /**
 * Find a node before which we can insert the sheet.
 */
        function findPrevNode(options) {
            var registry = sheets.registry;

            if (registry.length > 0) {
                // Try to insert before the next higher sheet.
                var sheet = findHigherSheet(registry, options);

                if (sheet && sheet.renderer) {
                    return {
                        parent: sheet.renderer.element.parentNode,
                        node: sheet.renderer.element
                    };
                }
                // Otherwise insert after the last attached.

                sheet = findHighestSheet(registry, options);

                if (sheet && sheet.renderer) {
                    return {
                        parent: sheet.renderer.element.parentNode,
                        node: sheet.renderer.element.nextSibling
                    };
                }
            }
            // Try to find a comment placeholder if registry is empty.

            var insertionPoint = options.insertionPoint;

            if (insertionPoint && typeof insertionPoint === 'string') {
                var comment = findCommentNode(insertionPoint);

                if (comment) {
                    return {
                        parent: comment.parentNode,
                        node: comment.nextSibling
                    };
                }
                // If user specifies an insertion point and it can't be found in the document -
                // bad specificity issues may appear.

                false ? undefined : void 0;
            }

            return false;
        }
        /**
 * Insert style element into the DOM.
 */

        function insertStyle(style, options) {
            var insertionPoint = options.insertionPoint;
            var nextNode = findPrevNode(options);

            if (nextNode !== false && nextNode.parent) {
                nextNode.parent.insertBefore(style, nextNode.node);
                return;
            }
            // Works with iframes and any node types.

            if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
                // https://stackoverflow.com/questions/41328728/force-casting-in-flow
                var insertionPointElement = insertionPoint;
                var parentNode = insertionPointElement.parentNode;
                if (parentNode)
                    parentNode.insertBefore(style, insertionPointElement.nextSibling);
                else
                    false ? undefined : void 0;
                return;
            }

            getHead().appendChild(style);
        }
        /**
 * Read jss nonce setting from the page if the user has set it.
 */

        var getNonce = memoize(function() {
            var node = document.querySelector('meta[property="csp-nonce"]');
            return node ? node.getAttribute('content') : null;
        });

        var _insertRule = function insertRule(container, rule, index) {
            var maxIndex = container.cssRules.length;
            // In case previous insertion fails, passed index might be wrong

            if (index === undefined || index > maxIndex) {
                // eslint-disable-next-line no-param-reassign
                index = maxIndex;
            }

            try {
                if ('insertRule'in container) {
                    var c = container;
                    c.insertRule(rule, index);
                }// Keyframes rule.
                else if ('appendRule'in container) {
                    var _c = container;

                    _c.appendRule(rule);
                }
            } catch (err) {
                false ? undefined : void 0;
                return false;
            }

            return container.cssRules[index];
        };

        var createStyle = function createStyle() {
            var el = document.createElement('style');
            // Without it, IE will have a broken source order specificity if we
            // insert rules after we insert the style tag.
            // It seems to kick-off the source order specificity algorithm.

            el.textContent = '\n';
            return el;
        };

        var DomRenderer = /*#__PURE__*/
        function() {
            // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696
            function DomRenderer(sheet) {
                this.getPropertyValue = getPropertyValue;
                this.setProperty = setProperty;
                this.removeProperty = removeProperty;
                this.setSelector = setSelector;
                this.element = void 0;
                this.sheet = void 0;
                this.hasInsertedRules = false;
                // There is no sheet when the renderer is used from a standalone StyleRule.
                if (sheet)
                    sheets.add(sheet);
                this.sheet = sheet;

                var _ref = this.sheet ? this.sheet.options : {}
                  , media = _ref.media
                  , meta = _ref.meta
                  , element = _ref.element;

                this.element = element || createStyle();
                this.element.setAttribute('data-jss', '');
                if (media)
                    this.element.setAttribute('media', media);
                if (meta)
                    this.element.setAttribute('data-meta', meta);
                var nonce = getNonce();
                if (nonce)
                    this.element.setAttribute('nonce', nonce);
            }
            /**
   * Insert style element into render tree.
   */

            var _proto = DomRenderer.prototype;

            _proto.attach = function attach() {
                // In the case the element node is external and it is already in the DOM.
                if (this.element.parentNode || !this.sheet)
                    return;
                insertStyle(this.element, this.sheet.options);
                // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
                // most browsers create a new CSSStyleSheet, except of all IEs.

                var deployed = Boolean(this.sheet && this.sheet.deployed);

                if (this.hasInsertedRules && deployed) {
                    this.hasInsertedRules = false;
                    this.deploy();
                }
            }
            /**
   * Remove style element from render tree.
   */
            ;

            _proto.detach = function detach() {
                var parentNode = this.element.parentNode;
                if (parentNode)
                    parentNode.removeChild(this.element);
            }
            /**
   * Inject CSS string into element.
   */
            ;

            _proto.deploy = function deploy() {
                var sheet = this.sheet;
                if (!sheet)
                    return;

                if (sheet.options.link) {
                    this.insertRules(sheet.rules);
                    return;
                }

                this.element.textContent = "\n" + sheet.toString() + "\n";
            }
            /**
   * Insert RuleList into an element.
   */
            ;

            _proto.insertRules = function insertRules(rules, nativeParent) {
                for (var i = 0; i < rules.index.length; i++) {
                    this.insertRule(rules.index[i], i, nativeParent);
                }
            }
            /**
   * Insert a rule into element.
   */
            ;

            _proto.insertRule = function insertRule(rule, index, nativeParent) {
                if (nativeParent === void 0) {
                    nativeParent = this.element.sheet;
                }

                if (rule.rules) {
                    var parent = rule;
                    var latestNativeParent = nativeParent;

                    if (rule.type === 'conditional' || rule.type === 'keyframes') {
                        // We need to render the container without children first.
                        latestNativeParent = _insertRule(nativeParent, parent.toString({
                            children: false
                        }), index);

                        if (latestNativeParent === false) {
                            return false;
                        }
                    }

                    this.insertRules(parent.rules, latestNativeParent);
                    return latestNativeParent;
                }
                // IE keeps the CSSStyleSheet after style node has been reattached,
                // so we need to check if the `renderable` reference the right style sheet and not
                // rerender those rules.

                if (rule.renderable && rule.renderable.parentStyleSheet === this.element.sheet) {
                    return rule.renderable;
                }

                var ruleStr = rule.toString();
                if (!ruleStr)
                    return false;

                var nativeRule = _insertRule(nativeParent, ruleStr, index);

                if (nativeRule === false) {
                    return false;
                }

                this.hasInsertedRules = true;
                rule.renderable = nativeRule;
                return nativeRule;
            }
            /**
   * Delete a rule.
   */
            ;

            _proto.deleteRule = function deleteRule(cssRule) {
                var sheet = this.element.sheet;
                var index = this.indexOf(cssRule);
                if (index === -1)
                    return false;
                sheet.deleteRule(index);
                return true;
            }
            /**
   * Get index of a CSS Rule.
   */
            ;

            _proto.indexOf = function indexOf(cssRule) {
                var cssRules = this.element.sheet.cssRules;

                for (var index = 0; index < cssRules.length; index++) {
                    if (cssRule === cssRules[index])
                        return index;
                }

                return -1;
            }
            /**
   * Generate a new CSS rule and replace the existing one.
   *
   * Only used for some old browsers because they can't set a selector.
   */
            ;

            _proto.replaceRule = function replaceRule(cssRule, rule) {
                var index = this.indexOf(cssRule);
                if (index === -1)
                    return false;
                this.element.sheet.deleteRule(index);
                return this.insertRule(rule, index);
            }
            /**
   * Get all rules elements.
   */
            ;

            _proto.getRules = function getRules() {
                return this.element.sheet.cssRules;
            }
            ;

            return DomRenderer;
        }();

        var instanceCounter = 0;

        var jss_esm_Jss = /*#__PURE__*/
        function() {
            function Jss(options) {
                this.id = instanceCounter++;
                this.version = "10.0.4";
                this.plugins = new PluginsRegistry();
                this.options = {
                    id: {
                        minify: false
                    },
                    createGenerateId: createGenerateId,
                    Renderer: dist_module["a"/* default */
                    ] ? DomRenderer : null,
                    plugins: []
                };
                this.generateId = createGenerateId({
                    minify: false
                });

                for (var i = 0; i < plugins.length; i++) {
                    this.plugins.use(plugins[i], {
                        queue: 'internal'
                    });
                }

                this.setup(options);
            }
            /**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */

            var _proto = Jss.prototype;

            _proto.setup = function setup(options) {
                if (options === void 0) {
                    options = {};
                }

                if (options.createGenerateId) {
                    this.options.createGenerateId = options.createGenerateId;
                }

                if (options.id) {
                    this.options.id = Object(esm_extends["a"/* default */
                    ])({}, this.options.id, options.id);
                }

                if (options.createGenerateId || options.id) {
                    this.generateId = this.options.createGenerateId(this.options.id);
                }

                if (options.insertionPoint != null)
                    this.options.insertionPoint = options.insertionPoint;

                if ('Renderer'in options) {
                    this.options.Renderer = options.Renderer;
                }
                // eslint-disable-next-line prefer-spread

                if (options.plugins)
                    this.use.apply(this, options.plugins);
                return this;
            }
            /**
   * Create a Style Sheet.
   */
            ;

            _proto.createStyleSheet = function createStyleSheet(styles, options) {
                if (options === void 0) {
                    options = {};
                }

                var _options = options
                  , index = _options.index;

                if (typeof index !== 'number') {
                    index = sheets.index === 0 ? 0 : sheets.index + 1;
                }

                var sheet = new jss_esm_StyleSheet(styles,Object(esm_extends["a"/* default */
                ])({}, options, {
                    jss: this,
                    generateId: options.generateId || this.generateId,
                    insertionPoint: this.options.insertionPoint,
                    Renderer: this.options.Renderer,
                    index: index
                }));
                this.plugins.onProcessSheet(sheet);
                return sheet;
            }
            /**
   * Detach the Style Sheet and remove it from the registry.
   */
            ;

            _proto.removeStyleSheet = function removeStyleSheet(sheet) {
                sheet.detach();
                sheets.remove(sheet);
                return this;
            }
            /**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */
            ;

            _proto.createRule = function createRule$$1(name, style, options) {
                if (style === void 0) {
                    style = {};
                }

                if (options === void 0) {
                    options = {};
                }

                // Enable rule without name for inline styles.
                if (typeof name === 'object') {
                    return this.createRule(undefined, name, style);
                }

                var ruleOptions = Object(esm_extends["a"/* default */
                ])({}, options, {
                    name: name,
                    jss: this,
                    Renderer: this.options.Renderer
                });

                if (!ruleOptions.generateId)
                    ruleOptions.generateId = this.generateId;
                if (!ruleOptions.classes)
                    ruleOptions.classes = {};
                if (!ruleOptions.keyframes)
                    ruleOptions.keyframes = {};

                var rule = createRule(name, style, ruleOptions);

                if (rule)
                    this.plugins.onProcessRule(rule);
                return rule;
            }
            /**
   * Register plugin. Passed function will be invoked with a rule instance.
   */
            ;

            _proto.use = function use() {
                var _this = this;

                for (var _len = arguments.length, plugins$$1 = new Array(_len), _key = 0; _key < _len; _key++) {
                    plugins$$1[_key] = arguments[_key];
                }

                plugins$$1.forEach(function(plugin) {
                    _this.plugins.use(plugin);
                });
                return this;
            }
            ;

            return Jss;
        }();

        /**
 * Extracts a styles object with only props that contain function values.
 */
        function getDynamicStyles(styles) {
            var to = null;

            for (var key in styles) {
                var value = styles[key];
                var type = typeof value;

                if (type === 'function') {
                    if (!to)
                        to = {};
                    to[key] = value;
                } else if (type === 'object' && value !== null && !Array.isArray(value)) {
                    var extracted = getDynamicStyles(value);

                    if (extracted) {
                        if (!to)
                            to = {};
                        to[key] = extracted;
                    }
                }
            }

            return to;
        }

        /**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */
        var jss_esm_SheetsManager = /*#__PURE__*/
        function() {
            function SheetsManager() {
                this.length = 0;
                this.sheets = new WeakMap();
            }

            var _proto = SheetsManager.prototype;

            _proto.get = function get(key) {
                var entry = this.sheets.get(key);
                return entry && entry.sheet;
            }
            ;

            _proto.add = function add(key, sheet) {
                if (this.sheets.has(key))
                    return;
                this.length++;
                this.sheets.set(key, {
                    sheet: sheet,
                    refs: 0
                });
            }
            ;

            _proto.manage = function manage(key) {
                var entry = this.sheets.get(key);

                if (entry) {
                    if (entry.refs === 0) {
                        entry.sheet.attach();
                    }

                    entry.refs++;
                    return entry.sheet;
                }

                Object(tiny_warning_esm["a"/* default */
                ])(false, "[JSS] SheetsManager: can't find sheet to manage");
                return undefined;
            }
            ;

            _proto.unmanage = function unmanage(key) {
                var entry = this.sheets.get(key);

                if (entry) {
                    if (entry.refs > 0) {
                        entry.refs--;
                        if (entry.refs === 0)
                            entry.sheet.detach();
                    }
                } else {
                    Object(tiny_warning_esm["a"/* default */
                    ])(false, "SheetsManager: can't find sheet to unmanage");
                }
            }
            ;

            Object(createClass["a"/* default */
            ])(SheetsManager, [{
                key: "size",
                get: function get() {
                    return this.length;
                }
            }]);

            return SheetsManager;
        }();

        /**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */

        /**
 * Export a constant indicating if this browser has CSSTOM support.
 * https://developers.google.com/web/updates/2018/03/cssom
 */
        var hasCSSTOMSupport = typeof CSS !== 'undefined' && CSS && 'number'in CSS;
        /**
 * Creates a new instance of Jss.
 */

        var create = function create(options) {
            return new jss_esm_Jss(options);
        };
        /**
 * A global Jss instance.
 */

        var jss_esm_index = create();

        /* harmony default export */
        var jss_esm = (jss_esm_index);

        /***/
    }
    ), /* 36 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Typography__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(250);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Typography__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 37 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        if (true) {
            module.exports = __webpack_require__(447);
        } else {}

        /***/
    }
    ), /* 38 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getNodeName;
        });
        function getNodeName(element) {
            return element ? (element.nodeName || '').toLowerCase() : null;
        }

        /***/
    }
    ), /* 39 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useFormControl;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var _FormControlContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66);

        function useFormControl() {
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useContext(_FormControlContext__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"]);
        }

        /***/
    }
    ), /* 40 */
    , /* 41 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const cloneDeep_1 = tslib_1.__importDefault(__webpack_require__(355));
        /**
 * Some state selection helpers. Using helper like makes it easier to refactor
 * the the state structure when required. This selector helper can be used in
 * both the render prop connect and the Immer Reducer.
 */

        class Selectors {
            constructor(state) {
                this.state = state;
            }

            getIds() {
                return Object.values(this.state.plugins).map(plugin=>plugin.id);
            }

            getEnabledIds() {
                return Object.values(this.state.plugins).filter(plugin=>plugin.enabled).map(plugin=>plugin.id);
            }

            getEnabledKeys() {
                return Object.values(this.state.keyboard.pressedKeys).map((key,index)=>key[index].enabled);
            }

            getKey(key) {
                return this.state.keyboard.pressedKeys[key];
            }

            getFocusedNode() {
                return this.state.focusedNode;
            }

            getPlugin(id) {
                const plugin = this.state.plugins[this.state.plugins.findIndex(p=>p.id === id)];

                if (!plugin) {
                    throw new Error(`Plugin with id [${id}] does not exist.`);
                }

                return plugin;
            }

            getPluginOption(id) {
                const plugin = this.getPlugin(id);

                if (plugin && plugin.options) {
                    return plugin.options;
                }
            }

            getPluginScaling(id) {
                const plugin = this.getPlugin(id);

                if (plugin && plugin.scaling) {
                    return plugin.scaling;
                }
            }

            getPluginsLocalState() {
                return this.state.plugins.map(plugin=>{
                    const copy = cloneDeep_1.default(plugin);
                    delete copy.tasks;
                    return copy;
                }
                );
            }

            getActiveTextToSpeechVoice() {
                return this.state.services.googleCloud.textToSpeech.activeVoice;
            }

            getTextToSpeechAudioConfig() {
                return this.state.services.googleCloud.textToSpeech.audioConfig;
            }

            getTextToSpeechVoice(name) {
                const voice = this.state.services.googleCloud.textToSpeech.voices[this.state.services.googleCloud.textToSpeech.voices.findIndex(p=>p.name === name)];

                if (!voice) {
                    throw new Error(`Voice with name [${name}] does not exist.`);
                }

                return voice;
            }

            getTextToSpeechVoices() {
                return this.state.services.googleCloud.textToSpeech.voices;
            }

            isKeyboardEnabled() {
                return this.state.keyboard.enabled;
            }

            isKeyEnabled(key) {
                return this.state.keyboard.pressedKeys[key].enabled;
            }

        }

        exports.Selectors = Selectors;

        /***/
    }
    ), /* 42 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
        var arrayWithHoles = __webpack_require__(179);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
        function _iterableToArrayLimit(arr, i) {
            if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
                return;
            }

            var _arr = [];
            var _n = true;
            var _d = false;
            var _e = undefined;

            try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                    _arr.push(_s.value);

                    if (i && _arr.length === i)
                        break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally {
                try {
                    if (!_n && _i["return"] != null)
                        _i["return"]();
                } finally {
                    if (_d)
                        throw _e;
                }
            }

            return _arr;
        }
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
        var nonIterableRest = __webpack_require__(180);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _slicedToArray;
        });

        function _slicedToArray(arr, i) {
            return Object(arrayWithHoles["a"/* default */
            ])(arr) || _iterableToArrayLimit(arr, i) || Object(nonIterableRest["a"/* default */
            ])();
        }

        /***/
    }
    ), /* 43 */
    /***/
    (function(module, exports) {

        var g;

        // This works in non-strict mode
        g = (function() {
            return this;
        }
        )();

        try {
            // This works if eval is allowed (see CSP)
            g = g || new Function("return this")();
        } catch (e) {
            // This works if the window reference is available
            if (typeof window === "object")
                g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
    }
    ), /* 44 */
    /***/
    (function(module, exports) {

        // shim for using process in browser
        var process = module.exports = {};

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
        }
        (function() {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        }())
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }

        }
        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }

        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun,args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        }
        ;

        // v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function() {
            this.fun.apply(null, this.array);
        }
        ;
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = '';
        // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
            return []
        }

        process.binding = function(name) {
            throw new Error('process.binding is not supported');
        }
        ;

        process.cwd = function() {
            return '/'
        }
        ;
        process.chdir = function(dir) {
            throw new Error('process.chdir is not supported');
        }
        ;
        process.umask = function() {
            return 0;
        }
        ;

        /***/
    }
    ), /* 45 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const css_1 = tslib_1.__importDefault(__webpack_require__(87));

        const action_1 = __webpack_require__(48);
        /**
 * PluginAction that adds / removes CSS classes from Nodes.
 */

        class PluginActionClass extends action_1.PluginAction {
            constructor(params) {
                super(params);
                this.klass = [];

                if (params) {
                    if (params.klass) {
                        this.klass = params.klass;
                    }
                }

                this.initialize(this);
            }
            /**
   * Add classes to nodes
   */

            addClasses() {
                css_1.default.addClass({
                    node: this.nodeList,
                    name: this.klass
                });
            }
            /**
   * Remove classes from nodes
   */

            removeClasses() {
                css_1.default.removeClass({
                    node: this.nodeList,
                    name: this.klass
                });
            }

            enable() {
                this.addClasses();
            }

            disable() {
                this.removeClasses();
            }
            /**
   * Remove all applied classes, then reapply classes if enabled.
   */

            reset() {
                // Remove
                this.removeClasses();
                this.addClasses();
            }

        }

        exports.PluginActionClass = PluginActionClass;

        /***/
    }
    ), /* 46 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return debounce;
        });
        // Corresponds to 10 frames at 60 Hz.
        // A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
        function debounce(func) {
            var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;
            var timeout;

            function debounced() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                // eslint-disable-next-line consistent-this
                var that = this;

                var later = function later() {
                    func.apply(that, args);
                };

                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            }

            debounced.clear = function() {
                clearTimeout(timeout);
            }
            ;

            return debounced;
        }

        /***/
    }
    ), /* 47 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return createChainedFunction;
        });
        /**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @param {function} functions to chain
 * @returns {function|null}
 */
        function createChainedFunction() {
            for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
                funcs[_key] = arguments[_key];
            }

            return funcs.reduce(function(acc, func) {
                if (func == null) {
                    return acc;
                }

                if (false) {}

                return function chainedFunction() {
                    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                        args[_key2] = arguments[_key2];
                    }

                    acc.apply(this, args);
                    func.apply(this, args);
                }
                ;
            }, function() {});
        }

        /***/
    }
    ), /* 48 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        var ValueManipulationType;

        (function(ValueManipulationType) {
            ValueManipulationType[ValueManipulationType["PercentageScaling"] = 0] = "PercentageScaling";
            ValueManipulationType[ValueManipulationType["AbsoluteScaling"] = 1] = "AbsoluteScaling";
            ValueManipulationType[ValueManipulationType["Toggle"] = 2] = "Toggle";
            ValueManipulationType[ValueManipulationType["Direct"] = 3] = "Direct";
        }
        )(ValueManipulationType = exports.ValueManipulationType || (exports.ValueManipulationType = {}));

        var DOMValueType;

        (function(DOMValueType) {
            DOMValueType["Attribute"] = "attribute";
            DOMValueType["Style"] = "style";
            DOMValueType["Property"] = "property";
        }
        )(DOMValueType = exports.DOMValueType || (exports.DOMValueType = {}));
        /**
 * Executes actions issued from parent PluginElements.
 * PluginActions have no concept of state, so actions should be self-contained (functional).
 */

        class PluginAction {
            constructor(params) {
                this.cacheNodes = true;
                this.id = utility_1.default.generateGuid();
                this.name = '';
                this.query = 'body';

                this.initialize = ()=>undefined;

                if (params) {
                    if (params.id) {
                        this.id = params.id;
                    }

                    if (params.data) {
                        this.data = params.data;
                    }

                    if (params.name) {
                        this.name = params.name;
                    }

                    if (params.enable) {
                        this.enable = params.enable;
                    }

                    if (params.disable) {
                        this.disable = params.disable;
                    }

                    if (params.cacheNodes !== undefined) {
                        this.cacheNodes = params.cacheNodes;
                    }

                    if (params.query) {
                        this.query = params.query;
                    }

                    if (params.initialize) {
                        this.initialize = params.initialize;
                    }
                }
            }
            /**
   * Retrieves NodeList of Elements based on query selection.
   * If `cacheNodes` is `true` then save initial query result to private property.
   * @returns {NodeList}
   */

            get nodeList() {
                if (this.cacheNodes) {
                    if (!this._nodeList) {
                        this._nodeList = utility_1.default.getNodeListFromQuery(this.query);
                    }

                    return this._nodeList;
                }

                return utility_1.default.getNodeListFromQuery(this.query);
            }

        }

        exports.PluginAction = PluginAction;

        /***/
    }
    ), /* 49 */
    /***/
    (function(module, exports) {

        module.exports = assert;

        function assert(val, msg) {
            if (!val)
                throw new Error(msg || 'Assertion failed');
        }

        assert.equal = function assertEqual(l, r, msg) {
            if (l != r)
                throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
        }
        ;

        /***/
    }
    ), /* 50 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = exports;
        var BN = __webpack_require__(30);
        var minAssert = __webpack_require__(49);
        var minUtils = __webpack_require__(400);

        utils.assert = minAssert;
        utils.toArray = minUtils.toArray;
        utils.zero2 = minUtils.zero2;
        utils.toHex = minUtils.toHex;
        utils.encode = minUtils.encode;

        // Represent num in a w-NAF form
        function getNAF(num, w, bits) {
            var naf = new Array(Math.max(num.bitLength(), bits) + 1);
            naf.fill(0);

            var ws = 1 << (w + 1);
            var k = num.clone();

            for (var i = 0; i < naf.length; i++) {
                var z;
                var mod = k.andln(ws - 1);
                if (k.isOdd()) {
                    if (mod > (ws >> 1) - 1)
                        z = (ws >> 1) - mod;
                    else
                        z = mod;
                    k.isubn(z);
                } else {
                    z = 0;
                }

                naf[i] = z;
                k.iushrn(1);
            }

            return naf;
        }
        utils.getNAF = getNAF;

        // Represent k1, k2 in a Joint Sparse Form
        function getJSF(k1, k2) {
            var jsf = [[], []];

            k1 = k1.clone();
            k2 = k2.clone();
            var d1 = 0;
            var d2 = 0;
            while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

                // First phase
                var m14 = (k1.andln(3) + d1) & 3;
                var m24 = (k2.andln(3) + d2) & 3;
                if (m14 === 3)
                    m14 = -1;
                if (m24 === 3)
                    m24 = -1;
                var u1;
                if ((m14 & 1) === 0) {
                    u1 = 0;
                } else {
                    var m8 = (k1.andln(7) + d1) & 7;
                    if ((m8 === 3 || m8 === 5) && m24 === 2)
                        u1 = -m14;
                    else
                        u1 = m14;
                }
                jsf[0].push(u1);

                var u2;
                if ((m24 & 1) === 0) {
                    u2 = 0;
                } else {
                    var m8 = (k2.andln(7) + d2) & 7;
                    if ((m8 === 3 || m8 === 5) && m14 === 2)
                        u2 = -m24;
                    else
                        u2 = m24;
                }
                jsf[1].push(u2);

                // Second phase
                if (2 * d1 === u1 + 1)
                    d1 = 1 - d1;
                if (2 * d2 === u2 + 1)
                    d2 = 1 - d2;
                k1.iushrn(1);
                k2.iushrn(1);
            }

            return jsf;
        }
        utils.getJSF = getJSF;

        function cachedProperty(obj, name, computer) {
            var key = '_' + name;
            obj.prototype[name] = function cachedProperty() {
                return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
            }
            ;
        }
        utils.cachedProperty = cachedProperty;

        function parseBytes(bytes) {
            return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
        }
        utils.parseBytes = parseBytes;

        function intFromLE(bytes) {
            return new BN(bytes,'hex','le');
        }
        utils.intFromLE = intFromLE;

        /***/
    }
    ), /* 51 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return formControlState;
        });
        function formControlState(_ref) {
            var props = _ref.props
              , states = _ref.states
              , muiFormControl = _ref.muiFormControl;
            return states.reduce(function(acc, state) {
                acc[state] = props[state];

                if (muiFormControl) {
                    if (typeof props[state] === 'undefined') {
                        acc[state] = muiFormControl[state];
                    }
                }

                return acc;
            }, {});
        }

        /***/
    }
    ), /* 52 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useControlled;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

        function useControlled(_ref) {
            var controlled = _ref.controlled
              , defaultProp = _ref.default
              , name = _ref.name;

            var _React$useRef = react__WEBPACK_IMPORTED_MODULE_0__["default"].useRef(controlled !== undefined)
              , isControlled = _React$useRef.current;

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__["default"].useState(defaultProp)
              , valueState = _React$useState[0]
              , setValue = _React$useState[1];

            var value = isControlled ? controlled : valueState;

            if (false) {
                var _React$useRef2, defaultValue;
            }

            var setValueIfUncontrolled = react__WEBPACK_IMPORTED_MODULE_0__["default"].useCallback(function(newValue) {
                if (!isControlled) {
                    setValue(newValue);
                }
            }, []);
            return [value, setValueIfUncontrolled];
        }

        /***/
    }
    ), /* 53 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        /**
 * @ignore - internal component.
 */

        var ListContext = react__WEBPACK_IMPORTED_MODULE_0__["default"].createContext({});

        if (false) {}

        /* harmony default export */
        __webpack_exports__["a"] = (ListContext);

        /***/
    }
    ), /* 54 */
    , /* 55 */
    , /* 56 */
    /***/
    (function(module, exports) {

        /**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
        var isArray = Array.isArray;

        module.exports = isArray;

        /***/
    }
    ), /* 57 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const defaults_1 = __webpack_require__(354);

        var TextToSpeechEngine;

        (function(TextToSpeechEngine) {
            TextToSpeechEngine[TextToSpeechEngine["Browser"] = 0] = "Browser";
            TextToSpeechEngine[TextToSpeechEngine["GoogleCloud"] = 1] = "GoogleCloud";
        }
        )(TextToSpeechEngine = exports.TextToSpeechEngine || (exports.TextToSpeechEngine = {}));

        var CompressionType;

        (function(CompressionType) {
            CompressionType[CompressionType["LZString"] = 0] = "LZString";
            CompressionType[CompressionType["Base64"] = 1] = "Base64";
        }
        )(CompressionType || (CompressionType = {}));

        const config = {
            debug: true,
            // Used for many internal references and names.
            // Try to ensure this is likely to be a globally unique id.
            widgetId: `wcasg-ada-app`,
            useLocalStorageCompression: true,
            // Time (in ms) between poll updates tracking new focused nodes in DOM.
            focusPollFrequency: 250,
            // Minimum number of seconds to wait between localStorage saves.
            // Delays saving to local storage during rapid user-changes.
            localStorageDebounceDelay: 3,
            // TODO: Base64 compression currently bugged.
            localCompressionType: CompressionType.LZString,
            textToSpeechEngine: TextToSpeechEngine.GoogleCloud,
            services: {
                GoogleCloud: {
                    TextToSpeech: {
                        defaultAudioConfig: defaults_1.GOOGLE_CLOUD_DEFAULT_AUDIO_CONFIG,
                        defaultVoice: defaults_1.GOOGLE_CLOUD_DEFAULT_VOICE
                    }
                }
            },
            widgetTitle: 'WCASG ADA Widget'
        };
        exports.default = config;

        /***/
    }
    ), /* 58 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _typeof;
        });
        function _typeof(obj) {
            "@babel/helpers - typeof";

            if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                _typeof = function _typeof(obj) {
                    return typeof obj;
                }
                ;
            } else {
                _typeof = function _typeof(obj) {
                    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
                }
                ;
            }

            return _typeof(obj);
        }

        /***/
    }
    ), /* 59 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return keys;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return createBreakpoints;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);

        // Sorted ASC by size. That's important.
        // It can't be configured as it's used statically for propTypes.
        var keys = ['xs', 'sm', 'md', 'lg', 'xl'];
        // Keep in mind that @media is inclusive by the CSS specification.

        function createBreakpoints(breakpoints) {
            var _breakpoints$values = breakpoints.values
              , values = _breakpoints$values === void 0 ? {
                xs: 0,
                sm: 600,
                md: 960,
                lg: 1280,
                xl: 1920
            } : _breakpoints$values
              , _breakpoints$unit = breakpoints.unit
              , unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit
              , _breakpoints$step = breakpoints.step
              , step = _breakpoints$step === void 0 ? 5 : _breakpoints$step
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(breakpoints, ["values", "unit", "step"]);

            function up(key) {
                var value = typeof values[key] === 'number' ? values[key] : key;
                return "@media (min-width:".concat(value).concat(unit, ")");
            }

            function down(key) {
                var endIndex = keys.indexOf(key) + 1;
                var upperbound = values[keys[endIndex]];

                if (endIndex === keys.length) {
                    // xl down applies to all sizes
                    return up('xs');
                }

                var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;
                return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
            }

            function between(start, end) {
                var endIndex = keys.indexOf(end);

                if (endIndex === keys.length - 1) {
                    return up(start);
                }

                return "@media (min-width:".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values[keys[endIndex + 1]] === 'number' ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, ")");
            }

            function only(key) {
                return between(key, key);
            }

            function width(key) {
                return values[key];
            }

            return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                keys: keys,
                values: values,
                up: up,
                down: down,
                between: between,
                only: only,
                width: width
            }, other);
        }

        /***/
    }
    ), /* 60 */
    /***/
    (function(module, exports, __webpack_require__) {

        var freeGlobal = __webpack_require__(333);

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        module.exports = root;

        /***/
    }
    ), /* 61 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var assert = __webpack_require__(49);
        var inherits = __webpack_require__(16);

        exports.inherits = inherits;

        function isSurrogatePair(msg, i) {
            if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
                return false;
            }
            if (i < 0 || i + 1 >= msg.length) {
                return false;
            }
            return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
        }

        function toArray(msg, enc) {
            if (Array.isArray(msg))
                return msg.slice();
            if (!msg)
                return [];
            var res = [];
            if (typeof msg === 'string') {
                if (!enc) {
                    // Inspired by stringToUtf8ByteArray() in closure-library by Google
                    // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
                    // Apache License 2.0
                    // https://github.com/google/closure-library/blob/master/LICENSE
                    var p = 0;
                    for (var i = 0; i < msg.length; i++) {
                        var c = msg.charCodeAt(i);
                        if (c < 128) {
                            res[p++] = c;
                        } else if (c < 2048) {
                            res[p++] = (c >> 6) | 192;
                            res[p++] = (c & 63) | 128;
                        } else if (isSurrogatePair(msg, i)) {
                            c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
                            res[p++] = (c >> 18) | 240;
                            res[p++] = ((c >> 12) & 63) | 128;
                            res[p++] = ((c >> 6) & 63) | 128;
                            res[p++] = (c & 63) | 128;
                        } else {
                            res[p++] = (c >> 12) | 224;
                            res[p++] = ((c >> 6) & 63) | 128;
                            res[p++] = (c & 63) | 128;
                        }
                    }
                } else if (enc === 'hex') {
                    msg = msg.replace(/[^a-z0-9]+/ig, '');
                    if (msg.length % 2 !== 0)
                        msg = '0' + msg;
                    for (i = 0; i < msg.length; i += 2)
                        res.push(parseInt(msg[i] + msg[i + 1], 16));
                }
            } else {
                for (i = 0; i < msg.length; i++)
                    res[i] = msg[i] | 0;
            }
            return res;
        }
        exports.toArray = toArray;

        function toHex(msg) {
            var res = '';
            for (var i = 0; i < msg.length; i++)
                res += zero2(msg[i].toString(16));
            return res;
        }
        exports.toHex = toHex;

        function htonl(w) {
            var res = (w >>> 24) | ((w >>> 8) & 0xff00) | ((w << 8) & 0xff0000) | ((w & 0xff) << 24);
            return res >>> 0;
        }
        exports.htonl = htonl;

        function toHex32(msg, endian) {
            var res = '';
            for (var i = 0; i < msg.length; i++) {
                var w = msg[i];
                if (endian === 'little')
                    w = htonl(w);
                res += zero8(w.toString(16));
            }
            return res;
        }
        exports.toHex32 = toHex32;

        function zero2(word) {
            if (word.length === 1)
                return '0' + word;
            else
                return word;
        }
        exports.zero2 = zero2;

        function zero8(word) {
            if (word.length === 7)
                return '0' + word;
            else if (word.length === 6)
                return '00' + word;
            else if (word.length === 5)
                return '000' + word;
            else if (word.length === 4)
                return '0000' + word;
            else if (word.length === 3)
                return '00000' + word;
            else if (word.length === 2)
                return '000000' + word;
            else if (word.length === 1)
                return '0000000' + word;
            else
                return word;
        }
        exports.zero8 = zero8;

        function join32(msg, start, end, endian) {
            var len = end - start;
            assert(len % 4 === 0);
            var res = new Array(len / 4);
            for (var i = 0, k = start; i < res.length; i++,
            k += 4) {
                var w;
                if (endian === 'big')
                    w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
                else
                    w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
                res[i] = w >>> 0;
            }
            return res;
        }
        exports.join32 = join32;

        function split32(msg, endian) {
            var res = new Array(msg.length * 4);
            for (var i = 0, k = 0; i < msg.length; i++,
            k += 4) {
                var m = msg[i];
                if (endian === 'big') {
                    res[k] = m >>> 24;
                    res[k + 1] = (m >>> 16) & 0xff;
                    res[k + 2] = (m >>> 8) & 0xff;
                    res[k + 3] = m & 0xff;
                } else {
                    res[k + 3] = m >>> 24;
                    res[k + 2] = (m >>> 16) & 0xff;
                    res[k + 1] = (m >>> 8) & 0xff;
                    res[k] = m & 0xff;
                }
            }
            return res;
        }
        exports.split32 = split32;

        function rotr32(w, b) {
            return (w >>> b) | (w << (32 - b));
        }
        exports.rotr32 = rotr32;

        function rotl32(w, b) {
            return (w << b) | (w >>> (32 - b));
        }
        exports.rotl32 = rotl32;

        function sum32(a, b) {
            return (a + b) >>> 0;
        }
        exports.sum32 = sum32;

        function sum32_3(a, b, c) {
            return (a + b + c) >>> 0;
        }
        exports.sum32_3 = sum32_3;

        function sum32_4(a, b, c, d) {
            return (a + b + c + d) >>> 0;
        }
        exports.sum32_4 = sum32_4;

        function sum32_5(a, b, c, d, e) {
            return (a + b + c + d + e) >>> 0;
        }
        exports.sum32_5 = sum32_5;

        function sum64(buf, pos, ah, al) {
            var bh = buf[pos];
            var bl = buf[pos + 1];

            var lo = (al + bl) >>> 0;
            var hi = (lo < al ? 1 : 0) + ah + bh;
            buf[pos] = hi >>> 0;
            buf[pos + 1] = lo;
        }
        exports.sum64 = sum64;

        function sum64_hi(ah, al, bh, bl) {
            var lo = (al + bl) >>> 0;
            var hi = (lo < al ? 1 : 0) + ah + bh;
            return hi >>> 0;
        }
        exports.sum64_hi = sum64_hi;

        function sum64_lo(ah, al, bh, bl) {
            var lo = al + bl;
            return lo >>> 0;
        }
        exports.sum64_lo = sum64_lo;

        function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
            var carry = 0;
            var lo = al;
            lo = (lo + bl) >>> 0;
            carry += lo < al ? 1 : 0;
            lo = (lo + cl) >>> 0;
            carry += lo < cl ? 1 : 0;
            lo = (lo + dl) >>> 0;
            carry += lo < dl ? 1 : 0;

            var hi = ah + bh + ch + dh + carry;
            return hi >>> 0;
        }
        exports.sum64_4_hi = sum64_4_hi;

        function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
            var lo = al + bl + cl + dl;
            return lo >>> 0;
        }
        exports.sum64_4_lo = sum64_4_lo;

        function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
            var carry = 0;
            var lo = al;
            lo = (lo + bl) >>> 0;
            carry += lo < al ? 1 : 0;
            lo = (lo + cl) >>> 0;
            carry += lo < cl ? 1 : 0;
            lo = (lo + dl) >>> 0;
            carry += lo < dl ? 1 : 0;
            lo = (lo + el) >>> 0;
            carry += lo < el ? 1 : 0;

            var hi = ah + bh + ch + dh + eh + carry;
            return hi >>> 0;
        }
        exports.sum64_5_hi = sum64_5_hi;

        function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
            var lo = al + bl + cl + dl + el;

            return lo >>> 0;
        }
        exports.sum64_5_lo = sum64_5_lo;

        function rotr64_hi(ah, al, num) {
            var r = (al << (32 - num)) | (ah >>> num);
            return r >>> 0;
        }
        exports.rotr64_hi = rotr64_hi;

        function rotr64_lo(ah, al, num) {
            var r = (ah << (32 - num)) | (al >>> num);
            return r >>> 0;
        }
        exports.rotr64_lo = rotr64_lo;

        function shr64_hi(ah, al, num) {
            return ah >>> num;
        }
        exports.shr64_hi = shr64_hi;

        function shr64_lo(ah, al, num) {
            var r = (ah << (32 - num)) | (al >>> num);
            return r >>> 0;
        }
        exports.shr64_lo = shr64_lo;

        /***/
    }
    ), /* 62 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js
        var redux_saga_symbols_esm = __webpack_require__(18);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/core/node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(107);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/is/dist/redux-saga-is.esm.js
        var redux_saga_is_esm = __webpack_require__(12);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/core/dist/io-6de156f3.js
        var io_6de156f3 = __webpack_require__(6);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js
        var redux_saga_delay_p_esm = __webpack_require__(167);

        // CONCATENATED MODULE: ../node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js

        var done = function done(value) {
            return {
                done: true,
                value: value
            };
        };

        var qEnd = {};
        function safeName(patternOrChannel) {
            if (Object(redux_saga_is_esm["b"/* channel */
            ])(patternOrChannel)) {
                return 'channel';
            }

            if (Object(redux_saga_is_esm["l"/* stringableFunc */
            ])(patternOrChannel)) {
                return String(patternOrChannel);
            }

            if (Object(redux_saga_is_esm["d"/* func */
            ])(patternOrChannel)) {
                return patternOrChannel.name;
            }

            return String(patternOrChannel);
        }
        function fsmIterator(fsm, startState, name) {
            var stateUpdater, errorState, effect, nextState = startState;

            function next(arg, error) {
                if (nextState === qEnd) {
                    return done(arg);
                }

                if (error && !errorState) {
                    nextState = qEnd;
                    throw error;
                } else {
                    stateUpdater && stateUpdater(arg);
                    var currentState = error ? fsm[errorState](error) : fsm[nextState]();
                    nextState = currentState.nextState;
                    effect = currentState.effect;
                    stateUpdater = currentState.stateUpdater;
                    errorState = currentState.errorState;
                    return nextState === qEnd ? done(arg) : effect;
                }
            }

            return Object(io_6de156f3["ab"/* q */
            ])(next, function(error) {
                return next(null, error);
            }, name);
        }

        function takeEvery(patternOrChannel, worker) {
            for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            var yTake = {
                done: false,
                value: Object(io_6de156f3["l"/* K */
                ])(patternOrChannel)
            };

            var yFork = function yFork(ac) {
                return {
                    done: false,
                    value: io_6de156f3["m"/* L */
                    ].apply(void 0, [worker].concat(args, [ac]))
                };
            };

            var action, setAction = function setAction(ac) {
                return action = ac;
            };

            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yTake,
                        stateUpdater: setAction
                    };
                },
                q2: function q2() {
                    return {
                        nextState: 'q1',
                        effect: yFork(action)
                    };
                }
            }, 'q1', "takeEvery(" + safeName(patternOrChannel) + ", " + worker.name + ")");
        }

        function takeLatest(patternOrChannel, worker) {
            for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            var yTake = {
                done: false,
                value: Object(io_6de156f3["l"/* K */
                ])(patternOrChannel)
            };

            var yFork = function yFork(ac) {
                return {
                    done: false,
                    value: io_6de156f3["m"/* L */
                    ].apply(void 0, [worker].concat(args, [ac]))
                };
            };

            var yCancel = function yCancel(task) {
                return {
                    done: false,
                    value: Object(io_6de156f3["n"/* M */
                    ])(task)
                };
            };

            var task, action;

            var setTask = function setTask(t) {
                return task = t;
            };

            var setAction = function setAction(ac) {
                return action = ac;
            };

            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yTake,
                        stateUpdater: setAction
                    };
                },
                q2: function q2() {
                    return task ? {
                        nextState: 'q3',
                        effect: yCancel(task)
                    } : {
                        nextState: 'q1',
                        effect: yFork(action),
                        stateUpdater: setTask
                    };
                },
                q3: function q3() {
                    return {
                        nextState: 'q1',
                        effect: yFork(action),
                        stateUpdater: setTask
                    };
                }
            }, 'q1', "takeLatest(" + safeName(patternOrChannel) + ", " + worker.name + ")");
        }

        function takeLeading(patternOrChannel, worker) {
            for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            var yTake = {
                done: false,
                value: Object(io_6de156f3["l"/* K */
                ])(patternOrChannel)
            };

            var yCall = function yCall(ac) {
                return {
                    done: false,
                    value: io_6de156f3["o"/* N */
                    ].apply(void 0, [worker].concat(args, [ac]))
                };
            };

            var action;

            var setAction = function setAction(ac) {
                return action = ac;
            };

            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yTake,
                        stateUpdater: setAction
                    };
                },
                q2: function q2() {
                    return {
                        nextState: 'q1',
                        effect: yCall(action)
                    };
                }
            }, 'q1', "takeLeading(" + safeName(patternOrChannel) + ", " + worker.name + ")");
        }

        function throttle(delayLength, pattern, worker) {
            for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
                args[_key - 3] = arguments[_key];
            }

            var action, channel;
            var yActionChannel = {
                done: false,
                value: Object(io_6de156f3["p"/* O */
                ])(pattern, Object(io_6de156f3["r"/* Q */
                ])(1))
            };

            var yTake = function yTake() {
                return {
                    done: false,
                    value: Object(io_6de156f3["l"/* K */
                    ])(channel)
                };
            };

            var yFork = function yFork(ac) {
                return {
                    done: false,
                    value: io_6de156f3["m"/* L */
                    ].apply(void 0, [worker].concat(args, [ac]))
                };
            };

            var yDelay = {
                done: false,
                value: Object(io_6de156f3["v"/* U */
                ])(delayLength)
            };

            var setAction = function setAction(ac) {
                return action = ac;
            };

            var setChannel = function setChannel(ch) {
                return channel = ch;
            };

            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yActionChannel,
                        stateUpdater: setChannel
                    };
                },
                q2: function q2() {
                    return {
                        nextState: 'q3',
                        effect: yTake(),
                        stateUpdater: setAction
                    };
                },
                q3: function q3() {
                    return {
                        nextState: 'q4',
                        effect: yFork(action)
                    };
                },
                q4: function q4() {
                    return {
                        nextState: 'q2',
                        effect: yDelay
                    };
                }
            }, 'q1', "throttle(" + safeName(pattern) + ", " + worker.name + ")");
        }

        function retry(maxTries, delayLength, fn) {
            var counter = maxTries;

            for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
                args[_key - 3] = arguments[_key];
            }

            var yCall = {
                done: false,
                value: io_6de156f3["o"/* N */
                ].apply(void 0, [fn].concat(args))
            };
            var yDelay = {
                done: false,
                value: Object(io_6de156f3["v"/* U */
                ])(delayLength)
            };
            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yCall,
                        errorState: 'q10'
                    };
                },
                q2: function q2() {
                    return {
                        nextState: qEnd
                    };
                },
                q10: function q10(error) {
                    counter -= 1;

                    if (counter <= 0) {
                        throw error;
                    }

                    return {
                        nextState: 'q1',
                        effect: yDelay
                    };
                }
            }, 'q1', "retry(" + fn.name + ")");
        }

        function debounceHelper(delayLength, patternOrChannel, worker) {
            for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
                args[_key - 3] = arguments[_key];
            }

            var action, raceOutput;
            var yTake = {
                done: false,
                value: Object(io_6de156f3["l"/* K */
                ])(patternOrChannel)
            };
            var yRace = {
                done: false,
                value: Object(io_6de156f3["w"/* V */
                ])({
                    action: Object(io_6de156f3["l"/* K */
                    ])(patternOrChannel),
                    debounce: Object(io_6de156f3["v"/* U */
                    ])(delayLength)
                })
            };

            var yFork = function yFork(ac) {
                return {
                    done: false,
                    value: io_6de156f3["m"/* L */
                    ].apply(void 0, [worker].concat(args, [ac]))
                };
            };

            var yNoop = function yNoop(value) {
                return {
                    done: false,
                    value: value
                };
            };

            var setAction = function setAction(ac) {
                return action = ac;
            };

            var setRaceOutput = function setRaceOutput(ro) {
                return raceOutput = ro;
            };

            return fsmIterator({
                q1: function q1() {
                    return {
                        nextState: 'q2',
                        effect: yTake,
                        stateUpdater: setAction
                    };
                },
                q2: function q2() {
                    return {
                        nextState: 'q3',
                        effect: yRace,
                        stateUpdater: setRaceOutput
                    };
                },
                q3: function q3() {
                    return raceOutput.debounce ? {
                        nextState: 'q1',
                        effect: yFork(action)
                    } : {
                        nextState: 'q2',
                        effect: yNoop(raceOutput.action),
                        stateUpdater: setAction
                    };
                }
            }, 'q1', "debounce(" + safeName(patternOrChannel) + ", " + worker.name + ")");
        }

        var redux_saga_effects_esm_validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {
            Object(io_6de156f3["M"/* c */
            ])(patternOrChannel, redux_saga_is_esm["g"/* notUndef */
            ], fn.name + " requires a pattern or channel");
            Object(io_6de156f3["M"/* c */
            ])(worker, redux_saga_is_esm["g"/* notUndef */
            ], fn.name + " requires a saga parameter");
        };

        function takeEvery$1(patternOrChannel, worker) {
            if (false) {}

            for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            return io_6de156f3["m"/* L */
            ].apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));
        }
        function takeLatest$1(patternOrChannel, worker) {
            if (false) {}

            for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
            }

            return io_6de156f3["m"/* L */
            ].apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));
        }
        function takeLeading$1(patternOrChannel, worker) {
            if (false) {}

            for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
                args[_key3 - 2] = arguments[_key3];
            }

            return io_6de156f3["m"/* L */
            ].apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));
        }
        function throttle$1(ms, pattern, worker) {
            if (false) {}

            for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
                args[_key4 - 3] = arguments[_key4];
            }

            return io_6de156f3["m"/* L */
            ].apply(void 0, [throttle, ms, pattern, worker].concat(args));
        }
        function retry$1(maxTries, delayLength, worker) {
            for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {
                args[_key5 - 3] = arguments[_key5];
            }

            return io_6de156f3["o"/* N */
            ].apply(void 0, [retry, maxTries, delayLength, worker].concat(args));
        }
        function debounce(delayLength, pattern, worker) {
            for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {
                args[_key6 - 3] = arguments[_key6];
            }

            return io_6de156f3["m"/* L */
            ].apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));
        }

        // CONCATENATED MODULE: ../node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js
        /* concated harmony reexport actionChannel */
        __webpack_require__.d(__webpack_exports__, "actionChannel", function() {
            return io_6de156f3["p"/* O */
            ];
        });
        /* concated harmony reexport all */
        __webpack_require__.d(__webpack_exports__, "all", function() {
            return io_6de156f3["B"/* _ */
            ];
        });
        /* concated harmony reexport apply */
        __webpack_require__.d(__webpack_exports__, "apply", function() {
            return io_6de156f3["a"/* $ */
            ];
        });
        /* concated harmony reexport call */
        __webpack_require__.d(__webpack_exports__, "call", function() {
            return io_6de156f3["o"/* N */
            ];
        });
        /* concated harmony reexport cancel */
        __webpack_require__.d(__webpack_exports__, "cancel", function() {
            return io_6de156f3["n"/* M */
            ];
        });
        /* concated harmony reexport cancelled */
        __webpack_require__.d(__webpack_exports__, "cancelled", function() {
            return io_6de156f3["H"/* a4 */
            ];
        });
        /* concated harmony reexport cps */
        __webpack_require__.d(__webpack_exports__, "cps", function() {
            return io_6de156f3["D"/* a0 */
            ];
        });
        /* concated harmony reexport delay */
        __webpack_require__.d(__webpack_exports__, "delay", function() {
            return io_6de156f3["v"/* U */
            ];
        });
        /* concated harmony reexport effectTypes */
        __webpack_require__.d(__webpack_exports__, "effectTypes", function() {
            return io_6de156f3["x"/* W */
            ];
        });
        /* concated harmony reexport flush */
        __webpack_require__.d(__webpack_exports__, "flush", function() {
            return io_6de156f3["I"/* a5 */
            ];
        });
        /* concated harmony reexport fork */
        __webpack_require__.d(__webpack_exports__, "fork", function() {
            return io_6de156f3["m"/* L */
            ];
        });
        /* concated harmony reexport getContext */
        __webpack_require__.d(__webpack_exports__, "getContext", function() {
            return io_6de156f3["J"/* a6 */
            ];
        });
        /* concated harmony reexport join */
        __webpack_require__.d(__webpack_exports__, "join", function() {
            return io_6de156f3["F"/* a2 */
            ];
        });
        /* concated harmony reexport put */
        __webpack_require__.d(__webpack_exports__, "put", function() {
            return io_6de156f3["z"/* Y */
            ];
        });
        /* concated harmony reexport putResolve */
        __webpack_require__.d(__webpack_exports__, "putResolve", function() {
            return io_6de156f3["A"/* Z */
            ];
        });
        /* concated harmony reexport race */
        __webpack_require__.d(__webpack_exports__, "race", function() {
            return io_6de156f3["w"/* V */
            ];
        });
        /* concated harmony reexport select */
        __webpack_require__.d(__webpack_exports__, "select", function() {
            return io_6de156f3["G"/* a3 */
            ];
        });
        /* concated harmony reexport setContext */
        __webpack_require__.d(__webpack_exports__, "setContext", function() {
            return io_6de156f3["K"/* a7 */
            ];
        });
        /* concated harmony reexport spawn */
        __webpack_require__.d(__webpack_exports__, "spawn", function() {
            return io_6de156f3["E"/* a1 */
            ];
        });
        /* concated harmony reexport take */
        __webpack_require__.d(__webpack_exports__, "take", function() {
            return io_6de156f3["l"/* K */
            ];
        });
        /* concated harmony reexport takeMaybe */
        __webpack_require__.d(__webpack_exports__, "takeMaybe", function() {
            return io_6de156f3["y"/* X */
            ];
        });
        /* concated harmony reexport debounce */
        __webpack_require__.d(__webpack_exports__, "debounce", function() {
            return debounce;
        });
        /* concated harmony reexport retry */
        __webpack_require__.d(__webpack_exports__, "retry", function() {
            return retry$1;
        });
        /* concated harmony reexport takeEvery */
        __webpack_require__.d(__webpack_exports__, "takeEvery", function() {
            return takeEvery$1;
        });
        /* concated harmony reexport takeLatest */
        __webpack_require__.d(__webpack_exports__, "takeLatest", function() {
            return takeLatest$1;
        });
        /* concated harmony reexport takeLeading */
        __webpack_require__.d(__webpack_exports__, "takeLeading", function() {
            return takeLeading$1;
        });
        /* concated harmony reexport throttle */
        __webpack_require__.d(__webpack_exports__, "throttle", function() {
            return throttle$1;
        });

        /***/
    }
    ), /* 63 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _createMuiTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(168);

        var defaultTheme = Object(_createMuiTheme__WEBPACK_IMPORTED_MODULE_0__[/* default */
        "a"])();
        /* harmony default export */
        __webpack_exports__["a"] = (defaultTheme);

        /***/
    }
    ), /* 64 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getComputedStyle;
        });
        /* harmony import */
        var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);

        function getComputedStyle(element) {
            return Object(_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(element).getComputedStyle(element);
        }

        /***/
    }
    ), /* 65 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _createClass;
        });
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value"in descriptor)
                    descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
                _defineProperties(Constructor.prototype, protoProps);
            if (staticProps)
                _defineProperties(Constructor, staticProps);
            return Constructor;
        }

        /***/
    }
    ), /* 66 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return useFormControl;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        /**
 * @ignore - internal component.
 */

        var FormControlContext = react__WEBPACK_IMPORTED_MODULE_0__["default"].createContext();

        if (false) {}

        function useFormControl() {
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useContext(FormControlContext);
        }
        /* harmony default export */
        __webpack_exports__["a"] = (FormControlContext);

        /***/
    }
    ), /* 67 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return isMuiElement;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        function isMuiElement(element, muiNames) {
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
        }

        /***/
    }
    ), /* 68 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const isEqual_1 = tslib_1.__importDefault(__webpack_require__(468));

        const isObject_1 = tslib_1.__importDefault(__webpack_require__(69));

        const transform_1 = tslib_1.__importDefault(__webpack_require__(517));

        const times_1 = tslib_1.__importDefault(__webpack_require__(537));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        var DOMValueType;

        (function(DOMValueType) {
            DOMValueType["Attribute"] = "attribute";
            DOMValueType["Style"] = "style";
            DOMValueType["Property"] = "property";
        }
        )(DOMValueType || (DOMValueType = {}));

        const Utility = {
            /**
   * Converts bytes into larger readable format.
   *
   * @source https://gist.github.com/lanqy/5193417
   * @param {number} bytes
   * @returns {string}
   */
            bytesToSize: bytes=>{
                const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];

                if (bytes === 0) {
                    return 'n/a';
                }

                const i = Math.floor(Math.log(bytes) / Math.log(1024));

                if (i === 0) {
                    return `${bytes} ${sizes[i]}`;
                }

                return `${(bytes / 1024 ** i).toFixed(1)} ${sizes[i]}`;
            }
            ,

            /**
   * Deep diff between two object, using lodash
   *
   * @source https://gist.github.com/Yimiprod/7ee176597fef230d1451
   * @param  {Object} object Object compared
   * @param  {Object} base   Object to compare with
   * @return {Object}        Return a new object who represent the diff
   */
            difference: (object,base)=>{
                function changes(o, b) {
                    return transform_1.default(o, (result,value,key)=>{
                        if (!isEqual_1.default(value, b[key])) {
                            result[key] = isObject_1.default(value) && isObject_1.default(b[key]) ? changes(value, b[key]) : value;
                        }
                    }
                    );
                }

                return changes(object, base);
            }
            ,

            /**
   * Get value by name and ValueType of specified node.
   *
   * @param {NodeList | Element | any} node
   * @param {string} name
   * @param {DOMValueType} type
   * @returns {string | void}
   */
            getNodeValue: ({node, name, type})=>{
                if (type === DOMValueType.Attribute) {
                    return node.getAttribute(name);
                }

                if (type === DOMValueType.Property) {
                    return node[name];
                }

                if (type === DOMValueType.Style) {
                    const value = node.style.getPropertyValue(name);

                    if (value && value !== '') {
                        return value;
                    }

                    return window.getComputedStyle(node).getPropertyValue(name);
                }

                return '';
            }
            ,

            /**
   * Generates a psuedo-random guid.
   * @returns {string}
   */
            generateGuid: (length=8)=>{
                const iterations = Math.ceil(length / 11);
                const elements = times_1.default(iterations, ()=>Math.random().toString(36).substring(2, 15));
                return elements.join('').substring(0, length);
            }
            ,

            getNodeListFromQuery(query) {
                return document.querySelectorAll(query);
            },

            /**
   * Get value by name and ValueType of specified node.
   *
   * @param {NodeList | Element | any} node
   * @param {string} name
   * @param {DOMValueType} type
   * @returns {string | void}
   */
            removeNodeValue: ({node, name, type})=>{
                if (type === DOMValueType.Attribute) {
                    node.removeAttribute(name);
                }

                if (type === DOMValueType.Property) {
                    delete node[name];
                }

                if (type === DOMValueType.Style) {
                    node.style.removeProperty(name);
                }
            }
            ,

            /**
   * Set node value via name and ValueType.
   *
   * @param {NodeList | Element | any} node
   * @param {string} name
   * @param {DOMValueType} type
   * @param value
   * @param priority
   * @returns {string | void}
   */
            setNodeValue: ({node, name, type, value, priority})=>{
                if (type === DOMValueType.Attribute) {
                    node.setAttribute(name, value);
                }

                if (type === DOMValueType.Property) {
                    node[name] = value;
                }

                if (type === DOMValueType.Style) {
                    node.style.setProperty(name, value, priority);
                }
            }
            ,
            throwError: message=>{
                throw new Error(`[${config_1.default.widgetTitle}]: ${message}`);
            }
            ,

            round(value, precision=0) {
                const y = +value + (precision === undefined ? 0.5 : precision / 2);
                return y - y % (precision === undefined ? 1 : +precision);
            }

        };
        exports.default = Utility;

        /***/
    }
    ), /* 69 */
    /***/
    (function(module, exports) {

        /**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
        function isObject(value) {
            var type = typeof value;
            return value != null && (type == 'object' || type == 'function');
        }

        module.exports = isObject;

        /***/
    }
    ), /* 70 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        /**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

        var invariant = function(condition, format, a, b, c, d, e, f) {
            if (false) {}

            if (!condition) {
                var error;
                if (format === undefined) {
                    error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
                } else {
                    var args = [a, b, c, d, e, f];
                    var argIndex = 0;
                    error = new Error(format.replace(/%s/g, function() {
                        return args[argIndex++];
                    }));
                    error.name = 'Invariant Violation';
                }

                error.framesToPop = 1;
                // we don't care about invariant's own frame
                throw error;
            }
        };

        module.exports = invariant;

        /***/
    }
    ), /* 71 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer
        var Transform = __webpack_require__(93).Transform
        var StringDecoder = __webpack_require__(237).StringDecoder
        var inherits = __webpack_require__(16)

        function CipherBase(hashMode) {
            Transform.call(this)
            this.hashMode = typeof hashMode === 'string'
            if (this.hashMode) {
                this[hashMode] = this._finalOrDigest
            } else {
                this.final = this._finalOrDigest
            }
            if (this._final) {
                this.__final = this._final
                this._final = null
            }
            this._decoder = null
            this._encoding = null
        }
        inherits(CipherBase, Transform)

        CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
            if (typeof data === 'string') {
                data = Buffer.from(data, inputEnc)
            }

            var outData = this._update(data)
            if (this.hashMode)
                return this

            if (outputEnc) {
                outData = this._toString(outData, outputEnc)
            }

            return outData
        }

        CipherBase.prototype.setAutoPadding = function() {}
        CipherBase.prototype.getAuthTag = function() {
            throw new Error('trying to get auth tag in unsupported state')
        }

        CipherBase.prototype.setAuthTag = function() {
            throw new Error('trying to set auth tag in unsupported state')
        }

        CipherBase.prototype.setAAD = function() {
            throw new Error('trying to set aad in unsupported state')
        }

        CipherBase.prototype._transform = function(data, _, next) {
            var err
            try {
                if (this.hashMode) {
                    this._update(data)
                } else {
                    this.push(this._update(data))
                }
            } catch (e) {
                err = e
            } finally {
                next(err)
            }
        }
        CipherBase.prototype._flush = function(done) {
            var err
            try {
                this.push(this.__final())
            } catch (e) {
                err = e
            }

            done(err)
        }
        CipherBase.prototype._finalOrDigest = function(outputEnc) {
            var outData = this.__final() || Buffer.alloc(0)
            if (outputEnc) {
                outData = this._toString(outData, outputEnc, true)
            }
            return outData
        }

        CipherBase.prototype._toString = function(value, enc, fin) {
            if (!this._decoder) {
                this._decoder = new StringDecoder(enc)
                this._encoding = enc
            }

            if (this._encoding !== enc)
                throw new Error('can\'t switch encodings')

            var out = this._decoder.write(value)
            if (fin) {
                out += this._decoder.end()
            }

            return out
        }

        module.exports = CipherBase

        /***/
    }
    ), /* 72 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export teardown */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useIsFocusVisible;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        // based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

        var hadKeyboardEvent = true;
        var hadFocusVisibleRecently = false;
        var hadFocusVisibleRecentlyTimeout = null;
        var inputTypesWhitelist = {
            text: true,
            search: true,
            url: true,
            tel: true,
            email: true,
            password: true,
            number: true,
            date: true,
            month: true,
            week: true,
            time: true,
            datetime: true,
            'datetime-local': true
        };
        /**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @return {boolean}
 */

        function focusTriggersKeyboardModality(node) {
            var type = node.type
              , tagName = node.tagName;

            if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {
                return true;
            }

            if (tagName === 'TEXTAREA' && !node.readOnly) {
                return true;
            }

            if (node.isContentEditable) {
                return true;
            }

            return false;
        }
        /**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */

        function handleKeyDown(event) {
            if (event.metaKey || event.altKey || event.ctrlKey) {
                return;
            }

            hadKeyboardEvent = true;
        }
        /**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */

        function handlePointerDown() {
            hadKeyboardEvent = false;
        }

        function handleVisibilityChange() {
            if (this.visibilityState === 'hidden') {
                // If the tab becomes active again, the browser will handle calling focus
                // on the element (Safari actually calls it twice).
                // If this tab change caused a blur on an element with focus-visible,
                // re-apply the class when the user switches back to the tab.
                if (hadFocusVisibleRecently) {
                    hadKeyboardEvent = true;
                }
            }
        }

        function prepare(doc) {
            doc.addEventListener('keydown', handleKeyDown, true);
            doc.addEventListener('mousedown', handlePointerDown, true);
            doc.addEventListener('pointerdown', handlePointerDown, true);
            doc.addEventListener('touchstart', handlePointerDown, true);
            doc.addEventListener('visibilitychange', handleVisibilityChange, true);
        }

        function teardown(doc) {
            doc.removeEventListener('keydown', handleKeyDown, true);
            doc.removeEventListener('mousedown', handlePointerDown, true);
            doc.removeEventListener('pointerdown', handlePointerDown, true);
            doc.removeEventListener('touchstart', handlePointerDown, true);
            doc.removeEventListener('visibilitychange', handleVisibilityChange, true);
        }

        function isFocusVisible(event) {
            var target = event.target;

            try {
                return target.matches(':focus-visible');
            } catch (error) {}
            // browsers not implementing :focus-visible will throw a SyntaxError
            // we use our own heuristic for those browsers
            // rethrow might be better if it's not the expected error but do we really
            // want to crash if focus-visible malfunctioned?
            // no need for validFocusTarget check. the user does that by attaching it to
            // focusable events only

            return hadKeyboardEvent || focusTriggersKeyboardModality(target);
        }
        /**
 * Should be called if a blur event is fired on a focus-visible element
 */

        function handleBlurVisible() {
            // To detect a tab/window switch, we look for a blur event followed
            // rapidly by a visibility change.
            // If we don't see a visibility change within 100ms, it's probably a
            // regular focus change.
            hadFocusVisibleRecently = true;
            window.clearTimeout(hadFocusVisibleRecentlyTimeout);
            hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
                hadFocusVisibleRecently = false;
            }, 100);
        }

        function useIsFocusVisible() {
            var ref = react__WEBPACK_IMPORTED_MODULE_0__["default"].useCallback(function(instance) {
                var node = react__WEBPACK_IMPORTED_MODULE_0__["default"].findDOMNode(instance);

                if (node != null) {
                    prepare(node.ownerDocument);
                }
            }, []);
            return {
                isFocusVisible: isFocusVisible,
                onBlurVisible: handleBlurVisible,
                ref: ref
            };
        }

        /***/
    }
    ), /* 73 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return ownerWindow;
        });
        /* harmony import */
        var _ownerDocument__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(23);

        function ownerWindow(node) {
            var doc = Object(_ownerDocument__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(node);
            return doc.defaultView || window;
        }

        /***/
    }
    ), /* 74 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsNative = __webpack_require__(480)
          , getValue = __webpack_require__(485);

        /**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
        function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
        }

        module.exports = getNative;

        /***/
    }
    ), /* 75 */
    /***/
    (function(module, exports) {

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return value != null && typeof value == 'object';
        }

        module.exports = isObjectLike;

        /***/
    }
    ), /* 76 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(252);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Input__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 77 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(426);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Select__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 78 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a duplex stream is just a stream that is both readable and writable.
        // Since JS doesn't have multiple prototypal inheritance, this class
        // prototypally inherits from Readable, and then parasitically from
        // Writable.

        /*<replacement>*/

        var pna = __webpack_require__(158);
        /*</replacement>*/

        /*<replacement>*/
        var objectKeys = Object.keys || function(obj) {
            var keys = [];
            for (var key in obj) {
                keys.push(key);
            }
            return keys;
        }
        ;
        /*</replacement>*/

        module.exports = Duplex;

        /*<replacement>*/
        var util = Object.create(__webpack_require__(121));
        util.inherits = __webpack_require__(16);
        /*</replacement>*/

        var Readable = __webpack_require__(376);
        var Writable = __webpack_require__(236);

        util.inherits(Duplex, Readable);

        {
            // avoid scope creep, the keys array can then be collected
            var keys = objectKeys(Writable.prototype);
            for (var v = 0; v < keys.length; v++) {
                var method = keys[v];
                if (!Duplex.prototype[method])
                    Duplex.prototype[method] = Writable.prototype[method];
            }
        }

        function Duplex(options) {
            if (!(this instanceof Duplex))
                return new Duplex(options);

            Readable.call(this, options);
            Writable.call(this, options);

            if (options && options.readable === false)
                this.readable = false;

            if (options && options.writable === false)
                this.writable = false;

            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false)
                this.allowHalfOpen = false;

            this.once('end', onend);
        }

        Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
                return this._writableState.highWaterMark;
            }
        });

        // the no-half-open enforcer
        function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended)
                return;

            // no more data can be written.
            // But allow more writes to happen in this tick.
            pna.nextTick(onEndNT, this);
        }

        function onEndNT(self) {
            self.end();
        }

        Object.defineProperty(Duplex.prototype, 'destroyed', {
            get: function() {
                if (this._readableState === undefined || this._writableState === undefined) {
                    return false;
                }
                return this._readableState.destroyed && this._writableState.destroyed;
            },
            set: function(value) {
                // we ignore the value if the stream
                // has not been initialized yet
                if (this._readableState === undefined || this._writableState === undefined) {
                    return;
                }

                // backward compatibility, the user is explicitly
                // managing destroyed
                this._readableState.destroyed = value;
                this._writableState.destroyed = value;
            }
        });

        Duplex.prototype._destroy = function(err, cb) {
            this.push(null);
            this.end();

            pna.nextTick(cb, err);
        }
        ;

        /***/
    }
    ), /* 79 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var common = {
            black: '#000',
            white: '#fff'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (common);

        /***/
    }
    ), /* 80 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export hasValue */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return isFilled;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return isAdornedStart;
        });
        // Supports determination of isControlled().
        // Controlled input accepts its current value as a prop.
        //
        // @see https://facebook.github.io/react/docs/forms.html#controlled-components
        // @param value
        // @returns {boolean} true if string (including '') or number (including zero)
        function hasValue(value) {
            return value != null && !(Array.isArray(value) && value.length === 0);
        }
        // Determine if field is empty or filled.
        // Response determines if label is presented above field or as placeholder.
        //
        // @param obj
        // @param SSR
        // @returns {boolean} False when not present or empty string.
        //                    True when any number or string with length.

        function isFilled(obj) {
            var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');
        }
        // Determine if an Input is adorned on start.
        // It's corresponding to the left with LTR.
        //
        // @param obj
        // @returns {boolean} False when no adornments.
        //                    True when adorned at the start.

        function isAdornedStart(obj) {
            return obj.startAdornment;
        }

        /***/
    }
    ), /* 81 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getBoundingClientRect;
        });
        function getBoundingClientRect(element) {
            var rect = element.getBoundingClientRect();
            return {
                width: rect.width,
                height: rect.height,
                top: rect.top,
                right: rect.right,
                bottom: rect.bottom,
                left: rect.left,
                x: rect.left,
                y: rect.top
            };
        }

        /***/
    }
    ), /* 82 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export isBrowser */
        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
            return typeof obj;
        }
        : function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        }
        ;

        var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

        /* harmony default export */
        __webpack_exports__["a"] = (isBrowser);

        /***/
    }
    ), /* 83 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        /* harmony default export */
        __webpack_exports__["a"] = (react__WEBPACK_IMPORTED_MODULE_0__["default"].createContext(null));

        /***/
    }
    ), /* 84 */
    , /* 85 */
    /***/
    (function(module, exports) {

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                "default": obj
            };
        }

        module.exports = _interopRequireDefault;

        /***/
    }
    ), /* 86 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayLikeKeys = __webpack_require__(341)
          , baseKeys = __webpack_require__(511)
          , isArrayLike = __webpack_require__(148);

        /**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
        function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }

        module.exports = keys;

        /***/
    }
    ), /* 87 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const forEach_1 = tslib_1.__importDefault(__webpack_require__(360));

        const global_scss_1 = tslib_1.__importDefault(__webpack_require__(226));

        exports.CSS_UNIT_TYPE_REGEX = /(\d*\.?\d+)\s?(px|em|ex|%|in|cn|mm|pt|pc+)/;
        exports.Css = {
            /**
   * Adds class(es) to node(s).
   * IE compatible.
   *
   * @param node
   * @param name
   */
            addClass: ({node, name})=>{
                if (node instanceof NodeList) {
                    forEach_1.default(node, nodeValue=>exports.Css.addClass({
                        node: nodeValue,
                        name
                    }));
                    return;
                }

                if (Array.isArray(name)) {
                    forEach_1.default(name, nameValue=>exports.Css.addClass({
                        node,
                        name: nameValue
                    }));
                    return;
                }

                if (node.classList) {
                    node.classList.add(name);
                } else if (!exports.Css.hasClass({
                    node,
                    name
                })) {
                    node.className += ' ' + name;
                }
            }
            ,

            /**
   * Get all class-based-focus nodes.
   *
   * @returns {any}
   */
            clearAllFocused: ()=>{
                const focusedNodes = exports.Css.selectAllWithClass({
                    name: global_scss_1.default['wcasg-ada-app-focused']
                });

                if (focusedNodes && focusedNodes.length > 0) {
                    forEach_1.default(focusedNodes, node=>exports.Css.removeClass({
                        node,
                        name: global_scss_1.default['wcasg-ada-app-focused']
                    }));
                }
            }
            ,
            getUnitType: value=>{
                return value.match(exports.CSS_UNIT_TYPE_REGEX);
            }
            ,

            /**
   * Determines if node has class.
   * IE compatible.
   *
   * @param node
   * @param name
   * @returns {boolean}
   */
            hasClass: ({node, name})=>{
                if (node.classList) {
                    return node.classList.contains(name);
                } else {
                    return !!node.className.match(new RegExp('(\\s|^)' + name + '(\\s|$)'));
                }
            }
            ,

            /**
   * Removes class(es) from node(s).
   * IE compatible.
   *
   * @param node
   * @param name
   */
            removeClass: ({node, name})=>{
                if (node instanceof NodeList) {
                    forEach_1.default(node, nodeValue=>exports.Css.removeClass({
                        node: nodeValue,
                        name
                    }));
                    return;
                }

                if (Array.isArray(name)) {
                    forEach_1.default(name, nameValue=>{
                        exports.Css.removeClass({
                            node,
                            name: nameValue
                        });
                    }
                    );
                    return;
                }

                if (node.classList) {
                    node.classList.remove(name);
                } else if (exports.Css.hasClass({
                    node,
                    name
                })) {
                    const reg = new RegExp('(\\s|^)' + name + '(\\s|$)');
                    node.className = node.className.replace(reg, ' ');
                }
            }
            ,

            /**
   * Removes CSSStyleDeclaration style value.
   * @param {any} element
   * @param {string} property
   */
            removeStyle: ({element, name})=>{
                element.style.removeProperty(name);
            }
            ,

            /**
   * Get all nodes with matching class name.
   *
   * @param {string} name
   * @returns {any}
   */
            selectAllWithClass: ({name})=>{
                return document.getElementsByClassName(name);
            }
            ,

            /**
   * Sets CSSStyleDeclaration style value.
   * @param {any} element
   * @param {string} property
   * @param {any} value
   */
            setStyle: ({element, name, value})=>{
                element.style.setProperty(name, value);
            }
        };
        exports.default = exports.Css;

        /***/
    }
    ), /* 88 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _FormControl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(361);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _FormControl__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /* harmony import */
        var _useFormControl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "useFormControl", function() {
            return _useFormControl__WEBPACK_IMPORTED_MODULE_1__["a"];
        });

        /***/
    }
    ), /* 89 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _InputLabel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(362);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _InputLabel__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 90 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _MenuItem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(364);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _MenuItem__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 91 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _ModalManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(127);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _ModalManager__WEBPACK_IMPORTED_MODULE_0__["b"];
        });

        /***/
    }
    ), /* 92 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const immer_reducer_1 = __webpack_require__(157);

        const findIndex_1 = tslib_1.__importDefault(__webpack_require__(120));

        const reducers_1 = __webpack_require__(229);

        const getOptionIndexById = (plugin,id)=>{
            return findIndex_1.default(plugin.options, option=>option.id === id);
        }
        ;

        exports.ActionCreators = immer_reducer_1.createActionCreators(reducers_1.BaseReducer);

        /***/
    }
    ), /* 93 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        module.exports = Stream;

        var EE = __webpack_require__(233).EventEmitter;
        var inherits = __webpack_require__(16);

        inherits(Stream, EE);
        Stream.Readable = __webpack_require__(234);
        Stream.Writable = __webpack_require__(598);
        Stream.Duplex = __webpack_require__(599);
        Stream.Transform = __webpack_require__(600);
        Stream.PassThrough = __webpack_require__(601);

        // Backwards-compat with node 0.4.x
        Stream.Stream = Stream;

        // old-style streams.  Note that the pipe method (the only relevant
        // part of this class) is overridden in the Readable class.

        function Stream() {
            EE.call(this);
        }

        Stream.prototype.pipe = function(dest, options) {
            var source = this;

            function ondata(chunk) {
                if (dest.writable) {
                    if (false === dest.write(chunk) && source.pause) {
                        source.pause();
                    }
                }
            }

            source.on('data', ondata);

            function ondrain() {
                if (source.readable && source.resume) {
                    source.resume();
                }
            }

            dest.on('drain', ondrain);

            // If the 'end' option is not supplied, dest.end() will be called when
            // source gets the 'end' or 'close' events.  Only dest.end() once.
            if (!dest._isStdio && (!options || options.end !== false)) {
                source.on('end', onend);
                source.on('close', onclose);
            }

            var didOnEnd = false;
            function onend() {
                if (didOnEnd)
                    return;
                didOnEnd = true;

                dest.end();
            }

            function onclose() {
                if (didOnEnd)
                    return;
                didOnEnd = true;

                if (typeof dest.destroy === 'function')
                    dest.destroy();
            }

            // don't leave dangling pipes when there are errors.
            function onerror(er) {
                cleanup();
                if (EE.listenerCount(this, 'error') === 0) {
                    throw er;
                    // Unhandled stream error in pipe.
                }
            }

            source.on('error', onerror);
            dest.on('error', onerror);

            // remove all the event listeners that were added.
            function cleanup() {
                source.removeListener('data', ondata);
                dest.removeListener('drain', ondrain);

                source.removeListener('end', onend);
                source.removeListener('close', onclose);

                source.removeListener('error', onerror);
                dest.removeListener('error', onerror);

                source.removeListener('end', cleanup);
                source.removeListener('close', cleanup);

                dest.removeListener('close', cleanup);
            }

            source.on('end', cleanup);
            source.on('close', cleanup);

            dest.on('close', cleanup);

            dest.emit('pipe', source);

            // Allow for unix-like usage: A.pipe(B).pipe(C)
            return dest;
        }
        ;

        /***/
    }
    ), /* 94 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global, process) {

            // limit of Crypto.getRandomValues()
            // https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
            var MAX_BYTES = 65536

            // Node supports requesting up to this number of bytes
            // https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
            var MAX_UINT32 = 4294967295

            function oldBrowser() {
                throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
            }

            var Buffer = __webpack_require__(15).Buffer
            var crypto = global.crypto || global.msCrypto

            if (crypto && crypto.getRandomValues) {
                module.exports = randomBytes
            } else {
                module.exports = oldBrowser
            }

            function randomBytes(size, cb) {
                // phantomjs needs to throw
                if (size > MAX_UINT32)
                    throw new RangeError('requested too many random bytes')

                var bytes = Buffer.allocUnsafe(size)

                if (size > 0) {
                    // getRandomValues fails on IE if size == 0
                    if (size > MAX_BYTES) {
                        // this is the max bytes crypto.getRandomValues
                        // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
                        for (var generated = 0; generated < size; generated += MAX_BYTES) {
                            // buffer.slice automatically checks if the end is past the end of
                            // the buffer so we don't have to here
                            crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
                        }
                    } else {
                        crypto.getRandomValues(bytes)
                    }
                }

                if (typeof cb === 'function') {
                    return process.nextTick(function() {
                        cb(null, bytes)
                    })
                }

                return bytes
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(44)))

        /***/
    }
    ), /* 95 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer

        // prototype class for hash functions
        function Hash(blockSize, finalSize) {
            this._block = Buffer.alloc(blockSize)
            this._finalSize = finalSize
            this._blockSize = blockSize
            this._len = 0
        }

        Hash.prototype.update = function(data, enc) {
            if (typeof data === 'string') {
                enc = enc || 'utf8'
                data = Buffer.from(data, enc)
            }

            var block = this._block
            var blockSize = this._blockSize
            var length = data.length
            var accum = this._len

            for (var offset = 0; offset < length; ) {
                var assigned = accum % blockSize
                var remainder = Math.min(length - offset, blockSize - assigned)

                for (var i = 0; i < remainder; i++) {
                    block[assigned + i] = data[offset + i]
                }

                accum += remainder
                offset += remainder

                if ((accum % blockSize) === 0) {
                    this._update(block)
                }
            }

            this._len += length
            return this
        }

        Hash.prototype.digest = function(enc) {
            var rem = this._len % this._blockSize

            this._block[rem] = 0x80

            // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
            // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
            this._block.fill(0, rem + 1)

            if (rem >= this._finalSize) {
                this._update(this._block)
                this._block.fill(0)
            }

            var bits = this._len * 8

            // uint32
            if (bits <= 0xffffffff) {
                this._block.writeUInt32BE(bits, this._blockSize - 4)

                // uint64
            } else {
                var lowBits = (bits & 0xffffffff) >>> 0
                var highBits = (bits - lowBits) / 0x100000000

                this._block.writeUInt32BE(highBits, this._blockSize - 8)
                this._block.writeUInt32BE(lowBits, this._blockSize - 4)
            }

            this._update(this._block)
            var hash = this._hash()

            return enc ? hash.toString(enc) : hash
        }

        Hash.prototype._update = function() {
            throw new Error('_update must be implemented by subclass')
        }

        module.exports = Hash

        /***/
    }
    ), /* 96 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        const css_1 = tslib_1.__importDefault(__webpack_require__(87));

        const data_1 = tslib_1.__importDefault(__webpack_require__(420));

        const action_1 = __webpack_require__(48);
        /**
 * PluginAction that manipulates CSS styles on DOM nodes.
 */

        class PluginActionStyle extends action_1.PluginAction {
            constructor(params) {
                super(params);
                this.domValueType = action_1.DOMValueType.Style;
                this.style = params.style;
                // Initialize by generating original data attributes for property

                this.addDataAttributeForStyles();
            }

            enable(params) {
                this.nodeList.forEach(node=>{
                    // If absolute or scaling get calculated value
                    if ([action_1.ValueManipulationType.AbsoluteScaling, action_1.ValueManipulationType.PercentageScaling].includes(this.style.manipulationType)) {
                        const {factor} = params;
                        utility_1.default.setNodeValue({
                            node,
                            name: this.style.name,
                            type: this.domValueType,
                            value: this.getCalculatedStyleValue(factor, node)
                        });
                    } else if (this.style.manipulationType === action_1.ValueManipulationType.Toggle) {
                        // If toggle, set to enabledValue (or remove if enabledValue is null)
                        if (this.style.enabledValue !== undefined) {
                            utility_1.default.setNodeValue({
                                node,
                                name: this.style.name,
                                type: this.domValueType,
                                value: this.style.enabledValue
                            });
                        } else {
                            utility_1.default.removeNodeValue({
                                node,
                                name: this.style.name,
                                type: this.domValueType
                            });
                        }
                    } else if (this.style.manipulationType === action_1.ValueManipulationType.Direct) {
                        // If direct, set to enabledValue (or remove if enabledValue is null)
                        if (this.style.enabledValue !== undefined) {
                            utility_1.default.setNodeValue({
                                node,
                                name: this.style.name,
                                type: this.domValueType,
                                value: this.style.enabledValue
                            });
                        } else {
                            utility_1.default.removeNodeValue({
                                node,
                                name: this.style.name,
                                type: this.domValueType
                            });
                        }
                    }
                }
                );
            }
            /**
   * Reset all applied properties to original values from saved data attribute
   */

            disable() {
                this.nodeList.forEach(node=>{
                    let value = this.style.disabledValue;
                    // If absolute, scaling, or toggled reset to original value

                    if ([action_1.ValueManipulationType.AbsoluteScaling, action_1.ValueManipulationType.PercentageScaling, action_1.ValueManipulationType.Toggle].includes(this.style.manipulationType)) {
                        value = utility_1.default.getNodeValue({
                            node,
                            name: data_1.default.generateDataAttributeName({
                                name: this.style.name,
                                type: this.domValueType
                            }),
                            type: action_1.DOMValueType.Attribute
                        });
                    }
                    // Set prop to disableValue unless null, then remove property.

                    if (value !== undefined) {
                        utility_1.default.setNodeValue({
                            node,
                            name: this.style.name,
                            type: this.domValueType,
                            value
                        });
                    } else {
                        utility_1.default.removeNodeValue({
                            node,
                            name: this.style.name,
                            type: this.domValueType
                        });
                    }
                }
                );
            }

            addDataAttributeForStyles() {
                data_1.default.createOriginalDataAttribute({
                    node: this.nodeList,
                    name: this.style.name,
                    type: this.domValueType
                });
            }

            getCalculatedStyleValue(scalingFactor, element) {
                const styleName = this.style.name;
                const baseValue = this.style.baseValue || '0';
                // Get original data attribute value

                const originalValue = utility_1.default.getNodeValue({
                    node: element,
                    name: data_1.default.generateDataAttributeName({
                        name: styleName,
                        type: this.domValueType
                    }),
                    type: action_1.DOMValueType.Attribute
                });
                const parsedOriginalValue = parseFloat(originalValue);
                let numericValue = parsedOriginalValue;
                // If original value non-numeric, use base value

                if (isNaN(parsedOriginalValue)) {
                    numericValue = parseFloat(baseValue);
                }

                if (!this.style.unitType) {
                    const unitMatches = css_1.default.getUnitType(originalValue);

                    if (unitMatches) {
                        this.style.unitType = unitMatches[2];
                    }
                }
                // If percentage scaling and original and base value are zero, report

                if (this.style.manipulationType === action_1.ValueManipulationType.PercentageScaling && numericValue === 0 && parseFloat(baseValue) === 0) {
                    utility_1.default.throwError(`Cannot use 'DOMPropertyScalingType.Percentage' for style: ${this.style.name} which has an original and base value of zero.`);
                }
                // If percentage scaling and original and base value are zero, report

                if (this.style.unitType === undefined) {
                    utility_1.default.throwError(`Unable to detect valid unit type for original style value of '${this.style.name}.'  Please explicitly assign expected 'unitType' in configuration.`);
                }
                // Apply scaling

                if (this.style.manipulationType === action_1.ValueManipulationType.AbsoluteScaling) {
                    return `${numericValue + scalingFactor}${this.style.unitType}`;
                } else if (this.style.manipulationType === action_1.ValueManipulationType.PercentageScaling) {
                    // If value is zero scaling will fail, so use base value
                    return `${numericValue * (1 + scalingFactor)}${this.style.unitType}`;
                }
            }

        }

        exports.PluginActionStyle = PluginActionStyle;

        /***/
    }
    ), /* 97 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var reactIs = __webpack_require__(37);

        /**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
        var REACT_STATICS = {
            childContextTypes: true,
            contextType: true,
            contextTypes: true,
            defaultProps: true,
            displayName: true,
            getDefaultProps: true,
            getDerivedStateFromError: true,
            getDerivedStateFromProps: true,
            mixins: true,
            propTypes: true,
            type: true
        };
        var KNOWN_STATICS = {
            name: true,
            length: true,
            prototype: true,
            caller: true,
            callee: true,
            arguments: true,
            arity: true
        };
        var FORWARD_REF_STATICS = {
            '$$typeof': true,
            render: true,
            defaultProps: true,
            displayName: true,
            propTypes: true
        };
        var MEMO_STATICS = {
            '$$typeof': true,
            compare: true,
            defaultProps: true,
            displayName: true,
            propTypes: true,
            type: true
        };
        var TYPE_STATICS = {};
        TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
        TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

        function getStatics(component) {
            // React v16.11 and below
            if (reactIs.isMemo(component)) {
                return MEMO_STATICS;
            }
            // React v16.12 and above

            return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
        }

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = Object.prototype;
        function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
            if (typeof sourceComponent !== 'string') {
                // don't hoist over string (html) components
                if (objectPrototype) {
                    var inheritedComponent = getPrototypeOf(sourceComponent);

                    if (inheritedComponent && inheritedComponent !== objectPrototype) {
                        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                    }
                }

                var keys = getOwnPropertyNames(sourceComponent);

                if (getOwnPropertySymbols) {
                    keys = keys.concat(getOwnPropertySymbols(sourceComponent));
                }

                var targetStatics = getStatics(targetComponent);
                var sourceStatics = getStatics(sourceComponent);

                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];

                    if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                        try {
                            // Avoid failures from read-only properties
                            defineProperty(targetComponent, key, descriptor);
                        } catch (e) {}
                    }
                }
            }

            return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
    }
    ), /* 98 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var grey = {
            50: '#fafafa',
            100: '#f5f5f5',
            200: '#eeeeee',
            300: '#e0e0e0',
            400: '#bdbdbd',
            500: '#9e9e9e',
            600: '#757575',
            700: '#616161',
            800: '#424242',
            900: '#212121',
            A100: '#d5d5d5',
            A200: '#aaaaaa',
            A400: '#303030',
            A700: '#616161'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (grey);

        /***/
    }
    ), /* 99 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var indigo = {
            50: '#e8eaf6',
            100: '#c5cae9',
            200: '#9fa8da',
            300: '#7986cb',
            400: '#5c6bc0',
            500: '#3f51b5',
            600: '#3949ab',
            700: '#303f9f',
            800: '#283593',
            900: '#1a237e',
            A100: '#8c9eff',
            A200: '#536dfe',
            A400: '#3d5afe',
            A700: '#304ffe'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (indigo);

        /***/
    }
    ), /* 100 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var pink = {
            50: '#fce4ec',
            100: '#f8bbd0',
            200: '#f48fb1',
            300: '#f06292',
            400: '#ec407a',
            500: '#e91e63',
            600: '#d81b60',
            700: '#c2185b',
            800: '#ad1457',
            900: '#880e4f',
            A100: '#ff80ab',
            A200: '#ff4081',
            A400: '#f50057',
            A700: '#c51162'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (pink);

        /***/
    }
    ), /* 101 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var red = {
            50: '#ffebee',
            100: '#ffcdd2',
            200: '#ef9a9a',
            300: '#e57373',
            400: '#ef5350',
            500: '#f44336',
            600: '#e53935',
            700: '#d32f2f',
            800: '#c62828',
            900: '#b71c1c',
            A100: '#ff8a80',
            A200: '#ff5252',
            A400: '#ff1744',
            A700: '#d50000'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (red);

        /***/
    }
    ), /* 102 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var orange = {
            50: '#fff3e0',
            100: '#ffe0b2',
            200: '#ffcc80',
            300: '#ffb74d',
            400: '#ffa726',
            500: '#ff9800',
            600: '#fb8c00',
            700: '#f57c00',
            800: '#ef6c00',
            900: '#e65100',
            A100: '#ffd180',
            A200: '#ffab40',
            A400: '#ff9100',
            A700: '#ff6d00'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (orange);

        /***/
    }
    ), /* 103 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var blue = {
            50: '#e3f2fd',
            100: '#bbdefb',
            200: '#90caf9',
            300: '#64b5f6',
            400: '#42a5f5',
            500: '#2196f3',
            600: '#1e88e5',
            700: '#1976d2',
            800: '#1565c0',
            900: '#0d47a1',
            A100: '#82b1ff',
            A200: '#448aff',
            A400: '#2979ff',
            A700: '#2962ff'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (blue);

        /***/
    }
    ), /* 104 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var green = {
            50: '#e8f5e9',
            100: '#c8e6c9',
            200: '#a5d6a7',
            300: '#81c784',
            400: '#66bb6a',
            500: '#4caf50',
            600: '#43a047',
            700: '#388e3c',
            800: '#2e7d32',
            900: '#1b5e20',
            A100: '#b9f6ca',
            A200: '#69f0ae',
            A400: '#00e676',
            A700: '#00c853'
        };
        /* harmony default export */
        __webpack_exports__["a"] = (green);

        /***/
    }
    ), /* 105 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
        /* harmony import */
        var _utils_useControlled__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(52);
        /* harmony import */
        var _FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4);
        /* harmony import */
        var _IconButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(755);

        var styles = {
            root: {
                padding: 9
            },
            checked: {},
            disabled: {},
            input: {
                cursor: 'inherit',
                position: 'absolute',
                opacity: 0,
                width: '100%',
                height: '100%',
                top: 0,
                left: 0,
                margin: 0,
                padding: 0,
                zIndex: 1
            }
        };
        /**
 * @ignore - internal component.
 */

        var SwitchBase = react__WEBPACK_IMPORTED_MODULE_3__["default"].forwardRef(function SwitchBase(props, ref) {
            var autoFocus = props.autoFocus
              , checkedProp = props.checked
              , checkedIcon = props.checkedIcon
              , classes = props.classes
              , className = props.className
              , defaultChecked = props.defaultChecked
              , disabledProp = props.disabled
              , icon = props.icon
              , id = props.id
              , inputProps = props.inputProps
              , inputRef = props.inputRef
              , name = props.name
              , onBlur = props.onBlur
              , onChange = props.onChange
              , onFocus = props.onFocus
              , readOnly = props.readOnly
              , required = props.required
              , tabIndex = props.tabIndex
              , type = props.type
              , value = props.value
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__[/* default */
            "a"])(props, ["autoFocus", "checked", "checkedIcon", "classes", "className", "defaultChecked", "disabled", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"]);

            var _useControlled = Object(_utils_useControlled__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])({
                controlled: checkedProp,
                default: Boolean(defaultChecked),
                name: 'SwitchBase'
            })
              , _useControlled2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(_useControlled, 2)
              , checked = _useControlled2[0]
              , setCheckedState = _useControlled2[1];

            var muiFormControl = Object(_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"])();

            var handleFocus = function handleFocus(event) {
                if (onFocus) {
                    onFocus(event);
                }

                if (muiFormControl && muiFormControl.onFocus) {
                    muiFormControl.onFocus(event);
                }
            };

            var handleBlur = function handleBlur(event) {
                if (onBlur) {
                    onBlur(event);
                }

                if (muiFormControl && muiFormControl.onBlur) {
                    muiFormControl.onBlur(event);
                }
            };

            var handleInputChange = function handleInputChange(event) {
                var newChecked = event.target.checked;
                setCheckedState(newChecked);

                if (onChange) {
                    onChange(event, newChecked);
                }
            };

            var disabled = disabledProp;

            if (muiFormControl) {
                if (typeof disabled === 'undefined') {
                    disabled = muiFormControl.disabled;
                }
            }

            var hasLabelFor = type === 'checkbox' || type === 'radio';
            return react__WEBPACK_IMPORTED_MODULE_3__["default"].createElement(_IconButton__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                component: "span",
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(classes.root, className, checked && classes.checked, disabled && classes.disabled),
                disabled: disabled,
                tabIndex: null,
                role: undefined,
                onFocus: handleFocus,
                onBlur: handleBlur,
                ref: ref
            }, other), react__WEBPACK_IMPORTED_MODULE_3__["default"].createElement("input", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                autoFocus: autoFocus,
                checked: checkedProp,
                defaultChecked: defaultChecked,
                className: classes.input,
                disabled: disabled,
                id: hasLabelFor && id,
                name: name,
                onChange: handleInputChange,
                readOnly: readOnly,
                ref: inputRef,
                required: required,
                tabIndex: tabIndex,
                type: type,
                value: value
            }, inputProps)), checked ? checkedIcon : icon);
        });
        // NB: If changed, please update Checkbox, Switch and Radio
        // so that the API documentation is updated.

        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_8__[/* default */
        "a"])(styles, {
            name: 'PrivateSwitchBase'
        })(SwitchBase));

        /***/
    }
    ), /* 106 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _classCallCheck;
        });
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        /***/
    }
    ), /* 107 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _extends;
        });
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            return _extends.apply(this, arguments);
        }

        /***/
    }
    ), /* 108 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getLayoutRect;
        });
        // Returns the layout rect of an element relative to its offsetParent. Layout
        // means it doesn't take into account transforms.
        function getLayoutRect(element) {
            return {
                x: element.offsetLeft,
                y: element.offsetTop,
                width: element.offsetWidth,
                height: element.offsetHeight
            };
        }

        /***/
    }
    ), /* 109 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindow.js
        var getWindow = __webpack_require__(26);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
        var getNodeName = __webpack_require__(38);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
        var getComputedStyle = __webpack_require__(64);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
        var instanceOf = __webpack_require__(27);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

        function isTableElement(element) {
            return ['table', 'td', 'th'].includes(Object(getNodeName["a"/* default */
            ])(element));
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getOffsetParent;
        });

        // https://stackoverflow.com/a/9851769/2059996

        var isFirefox = function isFirefox() {
            return typeof window.InstallTrigger !== 'undefined';
        };

        function getTrueOffsetParent(element) {
            var offsetParent;

            if (!Object(instanceOf["b"/* isHTMLElement */
            ])(element) || !(offsetParent = element.offsetParent) || // https://github.com/popperjs/popper.js/issues/837
            isFirefox() && Object(getComputedStyle["a"/* default */
            ])(offsetParent).position === 'fixed') {
                return null;
            }

            return offsetParent;
        }

        function getOffsetParent(element) {
            var window = Object(getWindow["a"/* default */
            ])(element);
            var offsetParent = getTrueOffsetParent(element);
            // Find the nearest non-table offsetParent

            while (offsetParent && isTableElement(offsetParent)) {
                offsetParent = getTrueOffsetParent(offsetParent);
            }

            if (offsetParent && Object(getNodeName["a"/* default */
            ])(offsetParent) === 'body' && Object(getComputedStyle["a"/* default */
            ])(offsetParent).position === 'static') {
                return window;
            }

            return offsetParent || window;
        }

        /***/
    }
    ), /* 110 */
    , /* 111 */
    , /* 112 */
    , /* 113 */
    /***/
    (function(module, exports, __webpack_require__) {

        var objectWithoutPropertiesLoose = __webpack_require__(444);

        function _objectWithoutProperties(source, excluded) {
            if (source == null)
                return {};
            var target = objectWithoutPropertiesLoose(source, excluded);
            var key, i;

            if (Object.getOwnPropertySymbols) {
                var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

                for (i = 0; i < sourceSymbolKeys.length; i++) {
                    key = sourceSymbolKeys[i];
                    if (excluded.indexOf(key) >= 0)
                        continue;
                    if (!Object.prototype.propertyIsEnumerable.call(source, key))
                        continue;
                    target[key] = source[key];
                }
            }

            return target;
        }

        module.exports = _objectWithoutProperties;

        /***/
    }
    ), /* 114 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        /**
 * Singleton class that handles active Plugins across app.
 */

        class PluginManager {
            constructor() {
                // tslint:disable-next-line:variable-name
                this._plugins = [];
            }

            get initialState() {
                return this.plugins;
            }

            get pluginsCustomized() {
                return this.plugins.filter(plugin=>plugin.customComponent);
            }

            get pluginsAutoGenerated() {
                return this.plugins.filter(plugin=>!plugin.customComponent);
            }

            get plugins() {
                return this._plugins;
            }

            static getInstance() {
                if (!PluginManager.instance) {
                    PluginManager.instance = new PluginManager();
                }

                return PluginManager.instance;
            }

            add(plugin) {
                if (Array.isArray(plugin)) {
                    plugin.forEach(p=>this.add(p));
                } else {
                    if (this.exists(plugin.id)) {
                        throw new Error(`Cannot add Plugin with ID: ${plugin.id} - Matching ID already exists.`);
                    }

                    this.plugins.push(plugin);
                }
            }

            delete(plugin) {
                const index = this.findIndex(plugin);

                if (index === -1) {
                    return;
                }

                delete this.plugins[index];
            }

            exists(id) {
                return !!this.find(id);
            }

            find(id) {
                if (typeof id !== 'string') {
                    // Get underlying ID
                    id = id.id;
                }

                return this.plugins[this.plugins.findIndex(plugin=>plugin.id === id)];
            }

            findIndex(id) {
                if (typeof id !== 'string') {
                    id = id.id;
                }

                return this.plugins.findIndex(plugin=>plugin.id === id);
            }

            get(id) {
                return this.find(id);
            }

            setPluginInstanceState(plugin) {
                if (!plugin || !plugin.id) {
                    return;
                }

                const matchIndex = this.findIndex(plugin.id);

                if (matchIndex > -1) {
                    // Marge base with overrides
                    this.plugins[matchIndex] = {
                        ...this.plugins[matchIndex],
                        ...plugin
                    };
                }
            }

        }

        exports.default = PluginManager;

        /***/
    }
    ), /* 115 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(330);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Button__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 116 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _FormLabel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(251);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _FormLabel__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 117 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(118)
          , getRawTag = __webpack_require__(481)
          , objectToString = __webpack_require__(482);

        /** `Object#toString` result references. */
        var nullTag = '[object Null]'
          , undefinedTag = '[object Undefined]';

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
        function baseGetTag(value) {
            if (value == null) {
                return value === undefined ? undefinedTag : nullTag;
            }
            return (symToStringTag && symToStringTag in Object(value)) ? getRawTag(value) : objectToString(value);
        }

        module.exports = baseGetTag;

        /***/
    }
    ), /* 118 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(60);

        /** Built-in value references. */
        var Symbol = root.Symbol;

        module.exports = Symbol;

        /***/
    }
    ), /* 119 */
    /***/
    (function(module, exports) {

        module.exports = function(module) {
            if (!module.webpackPolyfill) {
                module.deprecate = function() {}
                ;
                module.paths = [];
                // module.parent = undefined by default
                if (!module.children)
                    module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                module.webpackPolyfill = 1;
            }
            return module;
        }
        ;

        /***/
    }
    ), /* 120 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseFindIndex = __webpack_require__(367)
          , baseIteratee = __webpack_require__(150)
          , toInteger = __webpack_require__(224);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max;

        /**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
        function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
                return -1;
            }
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) {
                index = nativeMax(length + index, 0);
            }
            return baseFindIndex(array, baseIteratee(predicate, 3), index);
        }

        module.exports = findIndex;

        /***/
    }
    ), /* 121 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // NOTE: These type checking functions intentionally don't use `instanceof`
            // because it is fragile and can be easily faked with `Object.create()`.

            function isArray(arg) {
                if (Array.isArray) {
                    return Array.isArray(arg);
                }
                return objectToString(arg) === '[object Array]';
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }
            exports.isObject = isObject;

            function isDate(d) {
                return objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
                return (objectToString(e) === '[object Error]' || e instanceof Error);
            }
            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
                typeof arg === 'undefined';
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = Buffer.isBuffer;

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 122 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var inherits = __webpack_require__(16)
        var MD5 = __webpack_require__(238)
        var RIPEMD160 = __webpack_require__(239)
        var sha = __webpack_require__(240)
        var Base = __webpack_require__(71)

        function Hash(hash) {
            Base.call(this, 'digest')

            this._hash = hash
        }

        inherits(Hash, Base)

        Hash.prototype._update = function(data) {
            this._hash.update(data)
        }

        Hash.prototype._final = function() {
            return this._hash.digest()
        }

        module.exports = function createHash(alg) {
            alg = alg.toLowerCase()
            if (alg === 'md5')
                return new MD5()
            if (alg === 'rmd160' || alg === 'ripemd160')
                return new RIPEMD160()

            return new Hash(sha(alg))
        }

        /***/
    }
    ), /* 123 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            module.exports = function xor(a, b) {
                var length = Math.min(a.length, b.length)
                var buffer = new Buffer(length)

                for (var i = 0; i < length; ++i) {
                    buffer[i] = a[i] ^ b[i]
                }

                return buffer
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 124 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var assert = __webpack_require__(49);

        function BlockHash() {
            this.pending = null;
            this.pendingTotal = 0;
            this.blockSize = this.constructor.blockSize;
            this.outSize = this.constructor.outSize;
            this.hmacStrength = this.constructor.hmacStrength;
            this.padLength = this.constructor.padLength / 8;
            this.endian = 'big';

            this._delta8 = this.blockSize / 8;
            this._delta32 = this.blockSize / 32;
        }
        exports.BlockHash = BlockHash;

        BlockHash.prototype.update = function update(msg, enc) {
            // Convert message to array, pad it, and join into 32bit blocks
            msg = utils.toArray(msg, enc);
            if (!this.pending)
                this.pending = msg;
            else
                this.pending = this.pending.concat(msg);
            this.pendingTotal += msg.length;

            // Enough data, try updating
            if (this.pending.length >= this._delta8) {
                msg = this.pending;

                // Process pending data in blocks
                var r = msg.length % this._delta8;
                this.pending = msg.slice(msg.length - r, msg.length);
                if (this.pending.length === 0)
                    this.pending = null;

                msg = utils.join32(msg, 0, msg.length - r, this.endian);
                for (var i = 0; i < msg.length; i += this._delta32)
                    this._update(msg, i, i + this._delta32);
            }

            return this;
        }
        ;

        BlockHash.prototype.digest = function digest(enc) {
            this.update(this._pad());
            assert(this.pending === null);

            return this._digest(enc);
        }
        ;

        BlockHash.prototype._pad = function pad() {
            var len = this.pendingTotal;
            var bytes = this._delta8;
            var k = bytes - ((len + this.padLength) % bytes);
            var res = new Array(k + this.padLength);
            res[0] = 0x80;
            for (var i = 1; i < k; i++)
                res[i] = 0;

            // Append length
            len <<= 3;
            if (this.endian === 'big') {
                for (var t = 8; t < this.padLength; t++)
                    res[i++] = 0;

                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = (len >>> 24) & 0xff;
                res[i++] = (len >>> 16) & 0xff;
                res[i++] = (len >>> 8) & 0xff;
                res[i++] = len & 0xff;
            } else {
                res[i++] = len & 0xff;
                res[i++] = (len >>> 8) & 0xff;
                res[i++] = (len >>> 16) & 0xff;
                res[i++] = (len >>> 24) & 0xff;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;

                for (t = 8; t < this.padLength; t++)
                    res[i++] = 0;
            }

            return res;
        }
        ;

        /***/
    }
    ), /* 125 */
    /***/
    (function(module, exports, __webpack_require__) {

        var asn1 = exports;

        asn1.bignum = __webpack_require__(30);

        asn1.define = __webpack_require__(654).define;
        asn1.base = __webpack_require__(126);
        asn1.constants = __webpack_require__(406);
        asn1.decoders = __webpack_require__(659);
        asn1.encoders = __webpack_require__(661);

        /***/
    }
    ), /* 126 */
    /***/
    (function(module, exports, __webpack_require__) {

        var base = exports;

        base.Reporter = __webpack_require__(656).Reporter;
        base.DecoderBuffer = __webpack_require__(405).DecoderBuffer;
        base.EncoderBuffer = __webpack_require__(405).EncoderBuffer;
        base.Node = __webpack_require__(657);

        /***/
    }
    ), /* 127 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return ariaHidden;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return ModalManager;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(106);
        /* harmony import */
        var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);
        /* harmony import */
        var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21);
        /* harmony import */
        var _utils_getScrollbarSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(183);
        /* harmony import */
        var _utils_ownerDocument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(23);
        /* harmony import */
        var _utils_ownerWindow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(73);

        // Is a vertical scrollbar displayed?

        function isOverflowing(container) {
            var doc = Object(_utils_ownerDocument__WEBPACK_IMPORTED_MODULE_4__[/* default */
            "a"])(container);

            if (doc.body === container) {
                return Object(_utils_ownerWindow__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(doc).innerWidth > doc.documentElement.clientWidth;
            }

            return container.scrollHeight > container.clientHeight;
        }

        function ariaHidden(node, show) {
            if (show) {
                node.setAttribute('aria-hidden', 'true');
            } else {
                node.removeAttribute('aria-hidden');
            }
        }

        function getPaddingRight(node) {
            return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;
        }

        function ariaHiddenSiblings(container, mountNode, currentNode) {
            var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
            var show = arguments.length > 4 ? arguments[4] : undefined;
            var blacklist = [mountNode, currentNode].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[/* default */
            "a"])(nodesToExclude));
            var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];
            [].forEach.call(container.children, function(node) {
                if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {
                    ariaHidden(node, show);
                }
            });
        }

        function findIndexOf(containerInfo, callback) {
            var idx = -1;
            containerInfo.some(function(item, index) {
                if (callback(item)) {
                    idx = index;
                    return true;
                }

                return false;
            });
            return idx;
        }

        function handleContainer(containerInfo, props) {
            var restoreStyle = [];
            var restorePaddings = [];
            var container = containerInfo.container;
            var fixedNodes;

            if (!props.disableScrollLock) {
                if (isOverflowing(container)) {
                    // Compute the size before applying overflow hidden to avoid any scroll jumps.
                    var scrollbarSize = Object(_utils_getScrollbarSize__WEBPACK_IMPORTED_MODULE_3__[/* default */
                    "a"])();
                    restoreStyle.push({
                        value: container.style.paddingRight,
                        key: 'padding-right',
                        el: container
                    });
                    // Use computed style, here to get the real padding to add our scrollbar width.

                    container.style['padding-right'] = "".concat(getPaddingRight(container) + scrollbarSize, "px");
                    // .mui-fixed is a global helper.

                    fixedNodes = Object(_utils_ownerDocument__WEBPACK_IMPORTED_MODULE_4__[/* default */
                    "a"])(container).querySelectorAll('.mui-fixed');
                    [].forEach.call(fixedNodes, function(node) {
                        restorePaddings.push(node.style.paddingRight);
                        node.style.paddingRight = "".concat(getPaddingRight(node) + scrollbarSize, "px");
                    });
                }
                // Improve Gatsby support
                // https://css-tricks.com/snippets/css/force-vertical-scrollbar/

                var parent = container.parentElement;
                var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container;
                // Block the scroll even if no scrollbar is visible to account for mobile keyboard
                // screensize shrink.

                restoreStyle.push({
                    value: scrollContainer.style.overflow,
                    key: 'overflow',
                    el: scrollContainer
                });
                scrollContainer.style.overflow = 'hidden';
            }

            var restore = function restore() {
                if (fixedNodes) {
                    [].forEach.call(fixedNodes, function(node, i) {
                        if (restorePaddings[i]) {
                            node.style.paddingRight = restorePaddings[i];
                        } else {
                            node.style.removeProperty('padding-right');
                        }
                    });
                }

                restoreStyle.forEach(function(_ref) {
                    var value = _ref.value
                      , el = _ref.el
                      , key = _ref.key;

                    if (value) {
                        el.style.setProperty(key, value);
                    } else {
                        el.style.removeProperty(key);
                    }
                });
            };

            return restore;
        }

        function getHiddenSiblings(container) {
            var hiddenSiblings = [];
            [].forEach.call(container.children, function(node) {
                if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {
                    hiddenSiblings.push(node);
                }
            });
            return hiddenSiblings;
        }
        /**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */

        var ModalManager = /*#__PURE__*/
        function() {
            function ModalManager() {
                Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])(this, ModalManager);

                // this.modals[modalIndex] = modal
                this.modals = [];
                // this.containers[containerIndex] = {
                //   modals: [],
                //   container,
                //   restore: null,
                // }

                this.containers = [];
            }

            Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(ModalManager, [{
                key: "add",
                value: function add(modal, container) {
                    var modalIndex = this.modals.indexOf(modal);

                    if (modalIndex !== -1) {
                        return modalIndex;
                    }

                    modalIndex = this.modals.length;
                    this.modals.push(modal);
                    // If the modal we are adding is already in the DOM.

                    if (modal.modalRef) {
                        ariaHidden(modal.modalRef, false);
                    }

                    var hiddenSiblingNodes = getHiddenSiblings(container);
                    ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);
                    var containerIndex = findIndexOf(this.containers, function(item) {
                        return item.container === container;
                    });

                    if (containerIndex !== -1) {
                        this.containers[containerIndex].modals.push(modal);
                        return modalIndex;
                    }

                    this.containers.push({
                        modals: [modal],
                        container: container,
                        restore: null,
                        hiddenSiblingNodes: hiddenSiblingNodes
                    });
                    return modalIndex;
                }
            }, {
                key: "mount",
                value: function mount(modal, props) {
                    var containerIndex = findIndexOf(this.containers, function(item) {
                        return item.modals.indexOf(modal) !== -1;
                    });
                    var containerInfo = this.containers[containerIndex];

                    if (!containerInfo.restore) {
                        containerInfo.restore = handleContainer(containerInfo, props);
                    }
                }
            }, {
                key: "remove",
                value: function remove(modal) {
                    var modalIndex = this.modals.indexOf(modal);

                    if (modalIndex === -1) {
                        return modalIndex;
                    }

                    var containerIndex = findIndexOf(this.containers, function(item) {
                        return item.modals.indexOf(modal) !== -1;
                    });
                    var containerInfo = this.containers[containerIndex];
                    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
                    this.modals.splice(modalIndex, 1);
                    // If that was the last modal in a container, clean up the container.

                    if (containerInfo.modals.length === 0) {
                        // The modal might be closed before it had the chance to be mounted in the DOM.
                        if (containerInfo.restore) {
                            containerInfo.restore();
                        }

                        if (modal.modalRef) {
                            // In case the modal wasn't in the DOM yet.
                            ariaHidden(modal.modalRef, true);
                        }

                        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);
                        this.containers.splice(containerIndex, 1);
                    } else {
                        // Otherwise make sure the next top modal is visible to a screen reader.
                        var nextTop = containerInfo.modals[containerInfo.modals.length - 1];
                        // as soon as a modal is adding its modalRef is undefined. it can't set
                        // aria-hidden because the dom element doesn't exist either
                        // when modal was unmounted before modalRef gets null

                        if (nextTop.modalRef) {
                            ariaHidden(nextTop.modalRef, false);
                        }
                    }

                    return modalIndex;
                }
            }, {
                key: "isTopModal",
                value: function isTopModal(modal) {
                    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
                }
            }]);

            return ModalManager;
        }();

        /***/
    }
    ), /* 128 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() {
            return ActionTypes;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() {
            return applyMiddleware;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() {
            return bindActionCreators;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "combineReducers", function() {
            return combineReducers;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "compose", function() {
            return compose;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "createStore", function() {
            return createStore;
        });
        /* harmony import */
        var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(257);

        /**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
        var randomString = function randomString() {
            return Math.random().toString(36).substring(7).split('').join('.');
        };

        var ActionTypes = {
            INIT: "@@redux/INIT" + randomString(),
            REPLACE: "@@redux/REPLACE" + randomString(),
            PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
                return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
            }
        };

        /**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
        function isPlainObject(obj) {
            if (typeof obj !== 'object' || obj === null)
                return false;
            var proto = obj;

            while (Object.getPrototypeOf(proto) !== null) {
                proto = Object.getPrototypeOf(proto);
            }

            return Object.getPrototypeOf(obj) === proto;
        }

        /**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

        function createStore(reducer, preloadedState, enhancer) {
            var _ref2;

            if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
                throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');
            }

            if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
                enhancer = preloadedState;
                preloadedState = undefined;
            }

            if (typeof enhancer !== 'undefined') {
                if (typeof enhancer !== 'function') {
                    throw new Error('Expected the enhancer to be a function.');
                }

                return enhancer(createStore)(reducer, preloadedState);
            }

            if (typeof reducer !== 'function') {
                throw new Error('Expected the reducer to be a function.');
            }

            var currentReducer = reducer;
            var currentState = preloadedState;
            var currentListeners = [];
            var nextListeners = currentListeners;
            var isDispatching = false;
            /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

            function ensureCanMutateNextListeners() {
                if (nextListeners === currentListeners) {
                    nextListeners = currentListeners.slice();
                }
            }
            /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */

            function getState() {
                if (isDispatching) {
                    throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
                }

                return currentState;
            }
            /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */

            function subscribe(listener) {
                if (typeof listener !== 'function') {
                    throw new Error('Expected the listener to be a function.');
                }

                if (isDispatching) {
                    throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
                }

                var isSubscribed = true;
                ensureCanMutateNextListeners();
                nextListeners.push(listener);
                return function unsubscribe() {
                    if (!isSubscribed) {
                        return;
                    }

                    if (isDispatching) {
                        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');
                    }

                    isSubscribed = false;
                    ensureCanMutateNextListeners();
                    var index = nextListeners.indexOf(listener);
                    nextListeners.splice(index, 1);
                    currentListeners = null;
                }
                ;
            }
            /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */

            function dispatch(action) {
                if (!isPlainObject(action)) {
                    throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
                }

                if (typeof action.type === 'undefined') {
                    throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
                }

                if (isDispatching) {
                    throw new Error('Reducers may not dispatch actions.');
                }

                try {
                    isDispatching = true;
                    currentState = currentReducer(currentState, action);
                } finally {
                    isDispatching = false;
                }

                var listeners = currentListeners = nextListeners;

                for (var i = 0; i < listeners.length; i++) {
                    var listener = listeners[i];
                    listener();
                }

                return action;
            }
            /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */

            function replaceReducer(nextReducer) {
                if (typeof nextReducer !== 'function') {
                    throw new Error('Expected the nextReducer to be a function.');
                }

                currentReducer = nextReducer;
                // This action has a similiar effect to ActionTypes.INIT.
                // Any reducers that existed in both the new and old rootReducer
                // will receive the previous state. This effectively populates
                // the new state tree with any relevant data from the old one.

                dispatch({
                    type: ActionTypes.REPLACE
                });
            }
            /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */

            function observable() {
                var _ref;

                var outerSubscribe = subscribe;
                return _ref = {
                    /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
                    subscribe: function subscribe(observer) {
                        if (typeof observer !== 'object' || observer === null) {
                            throw new TypeError('Expected the observer to be an object.');
                        }

                        function observeState() {
                            if (observer.next) {
                                observer.next(getState());
                            }
                        }

                        observeState();
                        var unsubscribe = outerSubscribe(observeState);
                        return {
                            unsubscribe: unsubscribe
                        };
                    }
                },
                _ref[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"]] = function() {
                    return this;
                }
                ,
                _ref;
            }
            // When a store is created, an "INIT" action is dispatched so that every
            // reducer returns their initial state. This effectively populates
            // the initial state tree.

            dispatch({
                type: ActionTypes.INIT
            });
            return _ref2 = {
                dispatch: dispatch,
                subscribe: subscribe,
                getState: getState,
                replaceReducer: replaceReducer
            },
            _ref2[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"]] = observable,
            _ref2;
        }

        /**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
        function warning(message) {
            /* eslint-disable no-console */
            if (typeof console !== 'undefined' && typeof console.error === 'function') {
                console.error(message);
            }
            /* eslint-enable no-console */

            try {
                // This error was thrown as a convenience so that if you enable
                // "break on all exceptions" in your console,
                // it would pause the execution at this line.
                throw new Error(message);
            } catch (e) {}
            // eslint-disable-line no-empty

        }

        function getUndefinedStateErrorMessage(key, action) {
            var actionType = action && action.type;
            var actionDescription = actionType && "action \"" + String(actionType) + "\"" || 'an action';
            return "Given " + actionDescription + ", reducer \"" + key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";
        }

        function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
            var reducerKeys = Object.keys(reducers);
            var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

            if (reducerKeys.length === 0) {
                return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
            }

            if (!isPlainObject(inputState)) {
                return "The " + argumentName + " has unexpected type of \"" + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
            }

            var unexpectedKeys = Object.keys(inputState).filter(function(key) {
                return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
            });
            unexpectedKeys.forEach(function(key) {
                unexpectedKeyCache[key] = true;
            });
            if (action && action.type === ActionTypes.REPLACE)
                return;

            if (unexpectedKeys.length > 0) {
                return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
            }
        }

        function assertReducerShape(reducers) {
            Object.keys(reducers).forEach(function(key) {
                var reducer = reducers[key];
                var initialState = reducer(undefined, {
                    type: ActionTypes.INIT
                });

                if (typeof initialState === 'undefined') {
                    throw new Error("Reducer \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
                }

                if (typeof reducer(undefined, {
                    type: ActionTypes.PROBE_UNKNOWN_ACTION()
                }) === 'undefined') {
                    throw new Error("Reducer \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle " + ActionTypes.INIT + " or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
                }
            });
        }
        /**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */

        function combineReducers(reducers) {
            var reducerKeys = Object.keys(reducers);
            var finalReducers = {};

            for (var i = 0; i < reducerKeys.length; i++) {
                var key = reducerKeys[i];

                if (false) {}

                if (typeof reducers[key] === 'function') {
                    finalReducers[key] = reducers[key];
                }
            }

            var finalReducerKeys = Object.keys(finalReducers);
            // This is used to make sure we don't warn about the same
            // keys multiple times.

            var unexpectedKeyCache;

            if (false) {}

            var shapeAssertionError;

            try {
                assertReducerShape(finalReducers);
            } catch (e) {
                shapeAssertionError = e;
            }

            return function combination(state, action) {
                if (state === void 0) {
                    state = {};
                }

                if (shapeAssertionError) {
                    throw shapeAssertionError;
                }

                if (false) {
                    var warningMessage;
                }

                var hasChanged = false;
                var nextState = {};

                for (var _i = 0; _i < finalReducerKeys.length; _i++) {
                    var _key = finalReducerKeys[_i];
                    var reducer = finalReducers[_key];
                    var previousStateForKey = state[_key];
                    var nextStateForKey = reducer(previousStateForKey, action);

                    if (typeof nextStateForKey === 'undefined') {
                        var errorMessage = getUndefinedStateErrorMessage(_key, action);
                        throw new Error(errorMessage);
                    }

                    nextState[_key] = nextStateForKey;
                    hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
                }

                hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
                return hasChanged ? nextState : state;
            }
            ;
        }

        function bindActionCreator(actionCreator, dispatch) {
            return function() {
                return dispatch(actionCreator.apply(this, arguments));
            }
            ;
        }
        /**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */

        function bindActionCreators(actionCreators, dispatch) {
            if (typeof actionCreators === 'function') {
                return bindActionCreator(actionCreators, dispatch);
            }

            if (typeof actionCreators !== 'object' || actionCreators === null) {
                throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? 'null' : typeof actionCreators) + ". " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
            }

            var boundActionCreators = {};

            for (var key in actionCreators) {
                var actionCreator = actionCreators[key];

                if (typeof actionCreator === 'function') {
                    boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
                }
            }

            return boundActionCreators;
        }

        function _defineProperty(obj, key, value) {
            if (key in obj) {
                Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
            } else {
                obj[key] = value;
            }

            return obj;
        }

        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);

            if (Object.getOwnPropertySymbols) {
                keys.push.apply(keys, Object.getOwnPropertySymbols(object));
            }

            if (enumerableOnly)
                keys = keys.filter(function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                });
            return keys;
        }

        function _objectSpread2(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i] != null ? arguments[i] : {};

                if (i % 2) {
                    ownKeys(source, true).forEach(function(key) {
                        _defineProperty(target, key, source[key]);
                    });
                } else if (Object.getOwnPropertyDescriptors) {
                    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
                } else {
                    ownKeys(source).forEach(function(key) {
                        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                    });
                }
            }

            return target;
        }

        /**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
        function compose() {
            for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
                funcs[_key] = arguments[_key];
            }

            if (funcs.length === 0) {
                return function(arg) {
                    return arg;
                }
                ;
            }

            if (funcs.length === 1) {
                return funcs[0];
            }

            return funcs.reduce(function(a, b) {
                return function() {
                    return a(b.apply(void 0, arguments));
                }
                ;
            });
        }

        /**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

        function applyMiddleware() {
            for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
                middlewares[_key] = arguments[_key];
            }

            return function(createStore) {
                return function() {
                    var store = createStore.apply(void 0, arguments);

                    var _dispatch = function dispatch() {
                        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
                    };

                    var middlewareAPI = {
                        getState: store.getState,
                        dispatch: function dispatch() {
                            return _dispatch.apply(void 0, arguments);
                        }
                    };
                    var chain = middlewares.map(function(middleware) {
                        return middleware(middlewareAPI);
                    });
                    _dispatch = compose.apply(void 0, chain)(store.dispatch);
                    return _objectSpread2({}, store, {
                        dispatch: _dispatch
                    });
                }
                ;
            }
            ;
        }

        /*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

        function isCrushed() {}

        if (false) {}

        /***/
    }
    ), /* 129 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _assertThisInitialized;
        });
        function _assertThisInitialized(self) {
            if (self === void 0) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return self;
        }

        /***/
    }
    ), /* 130 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
        var getNodeName = __webpack_require__(38);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js

        function getParentNode(element) {
            if (Object(getNodeName["a"/* default */
            ])(element) === 'html') {
                return element;
            }

            return element.parentNode || // DOM Element detected
            // $FlowFixMe: need a better way to handle this...
            element.host || // ShadowRoot detected
            document.ownerDocument || // Fallback to ownerDocument if available
            document.documentElement // Or to documentElement if everything else fails
            ;
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
        var getComputedStyle = __webpack_require__(64);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
        var instanceOf = __webpack_require__(27);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js

        function getScrollParent(node) {
            if (['html', 'body', '#document'].includes(Object(getNodeName["a"/* default */
            ])(node))) {
                // $FlowFixMe: assume body is always available
                return node.ownerDocument.body;
            }

            if (Object(instanceOf["b"/* isHTMLElement */
            ])(node)) {
                // Firefox wants us to check `-x` and `-y` variations as well
                var _getComputedStyle = Object(getComputedStyle["a"/* default */
                ])(node)
                  , overflow = _getComputedStyle.overflow
                  , overflowX = _getComputedStyle.overflowX
                  , overflowY = _getComputedStyle.overflowY;

                if (/auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX)) {
                    return node;
                }
            }

            return getScrollParent(getParentNode(node));
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindow.js
        var getWindow = __webpack_require__(26);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return listScrollParents;
        });

        function listScrollParents(element, list) {
            if (list === void 0) {
                list = [];
            }

            var scrollParent = getScrollParent(element);
            var isBody = Object(getNodeName["a"/* default */
            ])(scrollParent) === 'body';
            var target = isBody ? Object(getWindow["a"/* default */
            ])(scrollParent) : scrollParent;
            var updatedList = list.concat(target);
            return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
        }

        /***/
    }
    ), /* 131 */
    , /* 132 */
    , /* 133 */
    , /* 134 */
    , /* 135 */
    , /* 136 */
    , /* 137 */
    , /* 138 */
    , /* 139 */
    /***/
    (function(module, exports) {

        function _extends() {
            module.exports = _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            return _extends.apply(this, arguments);
        }

        module.exports = _extends;

        /***/
    }
    ), /* 140 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _FormControlLabel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(331);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _FormControlLabel__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 141 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Radio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(424);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Radio__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 142 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _RadioGroup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(332);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _RadioGroup__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /* harmony import */
        var _useRadioGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(165);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "useRadioGroup", function() {
            return _useRadioGroup__WEBPACK_IMPORTED_MODULE_1__["a"];
        });

        /***/
    }
    ), /* 143 */
    /***/
    (function(module, exports, __webpack_require__) {

        var listCacheClear = __webpack_require__(470)
          , listCacheDelete = __webpack_require__(471)
          , listCacheGet = __webpack_require__(472)
          , listCacheHas = __webpack_require__(473)
          , listCacheSet = __webpack_require__(474);

        /**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
        function ListCache(entries) {
            var index = -1
              , length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `ListCache`.
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype['delete'] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;

        module.exports = ListCache;

        /***/
    }
    ), /* 144 */
    /***/
    (function(module, exports, __webpack_require__) {

        var eq = __webpack_require__(211);

        /**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
        function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) {
                if (eq(array[length][0], key)) {
                    return length;
                }
            }
            return -1;
        }

        module.exports = assocIndexOf;

        /***/
    }
    ), /* 145 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74);

        /* Built-in method references that are verified to be native. */
        var nativeCreate = getNative(Object, 'create');

        module.exports = nativeCreate;

        /***/
    }
    ), /* 146 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isKeyable = __webpack_require__(494);

        /**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
        function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
        }

        module.exports = getMapData;

        /***/
    }
    ), /* 147 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var root = __webpack_require__(60)
              , stubFalse = __webpack_require__(509);

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined;

            /* Built-in method references for those with the same name as other `lodash` methods. */
            var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

            /**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
            var isBuffer = nativeIsBuffer || stubFalse;

            module.exports = isBuffer;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(119)(module)))

        /***/
    }
    ), /* 148 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isFunction = __webpack_require__(213)
          , isLength = __webpack_require__(217);

        /**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
        function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }

        module.exports = isArrayLike;

        /***/
    }
    ), /* 149 */
    /***/
    (function(module, exports, __webpack_require__) {

        var DataView = __webpack_require__(513)
          , Map = __webpack_require__(212)
          , Promise = __webpack_require__(514)
          , Set = __webpack_require__(515)
          , WeakMap = __webpack_require__(516)
          , baseGetTag = __webpack_require__(117)
          , toSource = __webpack_require__(334);

        /** `Object#toString` result references. */
        var mapTag = '[object Map]'
          , objectTag = '[object Object]'
          , promiseTag = '[object Promise]'
          , setTag = '[object Set]'
          , weakMapTag = '[object WeakMap]';

        var dataViewTag = '[object DataView]';

        /** Used to detect maps, sets, and weakmaps. */
        var dataViewCtorString = toSource(DataView)
          , mapCtorString = toSource(Map)
          , promiseCtorString = toSource(Promise)
          , setCtorString = toSource(Set)
          , weakMapCtorString = toSource(WeakMap);

        /**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
        var getTag = baseGetTag;

        // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
        if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) || (Map && getTag(new Map) != mapTag) || (Promise && getTag(Promise.resolve()) != promiseTag) || (Set && getTag(new Set) != setTag) || (WeakMap && getTag(new WeakMap) != weakMapTag)) {
            getTag = function(value) {
                var result = baseGetTag(value)
                  , Ctor = result == objectTag ? value.constructor : undefined
                  , ctorString = Ctor ? toSource(Ctor) : '';

                if (ctorString) {
                    switch (ctorString) {
                    case dataViewCtorString:
                        return dataViewTag;
                    case mapCtorString:
                        return mapTag;
                    case promiseCtorString:
                        return promiseTag;
                    case setCtorString:
                        return setTag;
                    case weakMapCtorString:
                        return weakMapTag;
                    }
                }
                return result;
            }
            ;
        }

        module.exports = getTag;

        /***/
    }
    ), /* 150 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseMatches = __webpack_require__(520)
          , baseMatchesProperty = __webpack_require__(523)
          , identity = __webpack_require__(352)
          , isArray = __webpack_require__(56)
          , property = __webpack_require__(534);

        /**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
        function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == 'function') {
                return value;
            }
            if (value == null) {
                return identity;
            }
            if (typeof value == 'object') {
                return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            }
            return property(value);
        }

        module.exports = baseIteratee;

        /***/
    }
    ), /* 151 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(117)
          , isObjectLike = __webpack_require__(75);

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
        function isSymbol(value) {
            return typeof value == 'symbol' || (isObjectLike(value) && baseGetTag(value) == symbolTag);
        }

        module.exports = isSymbol;

        /***/
    }
    ), /* 152 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isSymbol = __webpack_require__(151);

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0;

        /**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
        function toKey(value) {
            if (typeof value == 'string' || isSymbol(value)) {
                return value;
            }
            var result = (value + '');
            return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }

        module.exports = toKey;

        /***/
    }
    ), /* 153 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assignValue = __webpack_require__(356)
          , baseAssignValue = __webpack_require__(357);

        /**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
        function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});

            var index = -1
              , length = props.length;

            while (++index < length) {
                var key = props[index];

                var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

                if (newValue === undefined) {
                    newValue = source[key];
                }
                if (isNew) {
                    baseAssignValue(object, key, newValue);
                } else {
                    assignValue(object, key, newValue);
                }
            }
            return object;
        }

        module.exports = copyObject;

        /***/
    }
    ), /* 154 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        const css_1 = tslib_1.__importDefault(__webpack_require__(87));

        const global_scss_1 = tslib_1.__importDefault(__webpack_require__(226));

        var DOMValueType;

        (function(DOMValueType) {
            DOMValueType["Attribute"] = "attribute";
            DOMValueType["Style"] = "style";
            DOMValueType["Property"] = "property";
        }
        )(DOMValueType || (DOMValueType = {}));

        exports.Aria = {
            blurNode: ({node})=>{
                if (!node) {
                    return;
                }
                // Remove focused class.

                css_1.default.removeClass({
                    node,
                    name: global_scss_1.default['wcasg-ada-app-focused']
                });
                // Remove tabindex value.

                utility_1.default.removeNodeValue({
                    node,
                    type: DOMValueType.Attribute,
                    name: 'tabindex'
                });
                // Blur, if available

                if (node.blur && typeof node.blur === 'function') {
                    node.blur();
                }
            }
            ,
            clearAllFocusedNodes: ()=>{
                // Check if any focus exists.
                if (!document.hasFocus()) {
                    return;
                }
                // Check browser assignment

                if (!document.activeElement) {
                    return;
                }
                // Check by custom style

                const node = document.getElementsByClassName(global_scss_1.default['wcasg-ada-app-focused']);

                if (node && node.length > 0) {
                    return node[0];
                }
                // Check by tabindex

                const tabIndexed = document.querySelectorAll('*[tabindex]');

                if (tabIndexed && tabIndexed.length > 0) {
                    return tabIndexed[0];
                }
            }
            ,
            findFocusedNode: ()=>{
                // Check if any focus exists.
                if (!document.hasFocus()) {
                    return;
                }
                // Check browser assignment

                if (document.activeElement) {
                    return document.activeElement;
                }
                // Check by custom style

                const node = document.getElementsByClassName(global_scss_1.default['wcasg-ada-app-focused']);

                if (node && node.length > 0) {
                    return node[0];
                }
                // Check by tabindex

                const tabIndexed = document.querySelectorAll('*[tabindex]');

                if (tabIndexed && tabIndexed.length > 0) {
                    return tabIndexed[0];
                }
            }
            ,
            focusNode: ({node})=>{
                if (!node) {
                    return;
                }
                // Add focused class.

                css_1.default.addClass({
                    node,
                    name: global_scss_1.default['wcasg-ada-app-focused']
                });
                // Set -1 tabindex value.

                utility_1.default.setNodeValue({
                    node,
                    type: DOMValueType.Attribute,
                    name: 'tabindex',
                    value: -1
                });
                // Focus, if available

                if (node.focus && typeof node.focus === 'function') {
                    node.focus();
                }
            }
            ,

            /**
   * Get the preferred text value for a passed Element, searching in order of importance:
   * aria-label > aria-labelledby > aria-value-text > textContent > href
   *
   * @see https://www.w3.org/TR/wai-aria-1.2/#aria-label
   * @see https://www.w3.org/TR/wai-aria-1.2/#aria-labelledby
   * @see https://www.w3.org/TR/wai-aria-1.2/#aria-valuetext
   *
   * @param element - Element to parse.
   * @param {number} [maxLength] - Maximum text length to return.
   */
            getElementText: ({element, maxLength})=>{
                if (!element) {
                    return '';
                }

                const values = [];
                const label = utility_1.default.getNodeValue({
                    node: element,
                    name: 'aria-label',
                    type: DOMValueType.Attribute
                });

                if (label) {
                    values.push(label);
                }

                const labelledBy = utility_1.default.getNodeValue({
                    node: element,
                    name: 'aria-labelledby',
                    type: DOMValueType.Attribute
                });

                if (labelledBy) {
                    if (document.getElementById(labelledBy)) {
                        const labelOfLabelledBy = exports.Aria.getElementText({
                            element: document.getElementById(labelledBy),
                            maxLength
                        });

                        if (labelOfLabelledBy) {
                            values.push(labelOfLabelledBy);
                        }
                    }
                }

                const valueText = utility_1.default.getNodeValue({
                    node: element,
                    name: 'aria-valuetext',
                    type: DOMValueType.Attribute
                });

                if (valueText) {
                    values.push(valueText);
                }

                const altText = utility_1.default.getNodeValue({
                    node: element,
                    name: 'alt',
                    type: DOMValueType.Attribute
                });

                if (altText) {
                    values.push(altText);
                }

                const text = element.textContent;

                if (text) {
                    values.push(text);
                }

                const href = element.href;

                if (href) {
                    values.push(href);
                }
                // Return first element.

                return values.length > 0 ? String(values[0]).substring(0, maxLength) : '';
            }
        };
        exports.default = exports.Aria;

        /***/
    }
    ), /* 155 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _ListSubheader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(363);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _ListSubheader__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 156 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var _Slider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(425);
        /* harmony reexport (safe) */
        __webpack_require__.d(__webpack_exports__, "default", function() {
            return _Slider__WEBPACK_IMPORTED_MODULE_0__["a"];
        });

        /***/
    }
    ), /* 157 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var __importDefault = (this && this.__importDefault) || function(mod) {
            return (mod && mod.__esModule) ? mod : {
                "default": mod
            };
        }
        ;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var immer_1 = __importDefault(__webpack_require__(582));
        var actionTypePrefix = "IMMER_REDUCER";
        /**
 * Type guard for detecting actions created by immer reducer
 *
 * @param action any redux action
 * @param immerActionCreator method from a ImmerReducer class
 */
        function isAction(action, immerActionCreator) {
            return action.type === immerActionCreator.type;
        }
        exports.isAction = isAction;
        function isActionFromClass(action, immerReducerClass) {
            if (typeof action.type !== "string") {
                return false;
            }
            if (!action.type.startsWith(actionTypePrefix + ":")) {
                return false;
            }
            var _a = removePrefix(action.type).split("#")
              , className = _a[0]
              , methodName = _a[1];
            if (className !== getReducerName(immerReducerClass)) {
                return false;
            }
            if (typeof immerReducerClass.prototype[methodName] !== "function") {
                return false;
            }
            return true;
        }
        function isActionFrom(action, immerReducerClass) {
            return isActionFromClass(action, immerReducerClass);
        }
        exports.isActionFrom = isActionFrom;
        /**
 * Combine multiple reducers into a single one
 *
 * @param reducers two or more reducer
 */
        function composeReducers() {
            var reducers = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                reducers[_i] = arguments[_i];
            }
            return function(state, action) {
                return (reducers.reduce(function(state, subReducer) {
                    if (typeof subReducer === "function") {
                        return subReducer(state, action);
                    }
                    return state;
                }, state) || state);
            }
            ;
        }
        exports.composeReducers = composeReducers;
        /** The actual ImmerReducer class */
        var ImmerReducer = /** @class */
        (function() {
            function ImmerReducer(draftState, state) {
                this.state = state;
                this.draftState = draftState;
            }
            return ImmerReducer;
        }());
        exports.ImmerReducer = ImmerReducer;
        function removePrefix(actionType) {
            return actionType.split(":").slice(1).join(":");
        }
        var KNOWN_REDUCER_CLASSES = [];
        var DUPLICATE_INCREMENTS = {};
        /**
 * Set customName for classes automatically if there is multiple reducers
 * classes defined with the same name. This can occur accidentaly when using
 * name mangling with minifiers.
 *
 * @param immerReducerClass
 */
        function setCustomNameForDuplicates(immerReducerClass) {
            var hasSetCustomName = KNOWN_REDUCER_CLASSES.find(function(klass) {
                return Boolean(klass === immerReducerClass);
            });
            if (hasSetCustomName) {
                return;
            }
            var duplicateCustomName = immerReducerClass.customName && KNOWN_REDUCER_CLASSES.find(function(klass) {
                return Boolean(klass.customName && klass.customName === immerReducerClass.customName);
            });
            if (duplicateCustomName) {
                throw new Error("There is already customName " + immerReducerClass.customName + " defined for " + duplicateCustomName.name);
            }
            var duplicate = KNOWN_REDUCER_CLASSES.find(function(klass) {
                return klass.name === immerReducerClass.name;
            });
            if (duplicate && !duplicate.customName) {
                var number = DUPLICATE_INCREMENTS[immerReducerClass.name];
                if (number) {
                    number++;
                } else {
                    number = 1;
                }
                DUPLICATE_INCREMENTS[immerReducerClass.name] = number;
                immerReducerClass.customName = immerReducerClass.name + "_" + number;
            }
            KNOWN_REDUCER_CLASSES.push(immerReducerClass);
        }
        /**
 * Convert function arguments to ImmerAction object
 */
        function createImmerAction(type, args) {
            if (args.length === 1) {
                return {
                    type: type,
                    payload: args[0]
                };
            }
            return {
                type: type,
                payload: args,
                args: true,
            };
        }
        /**
 * Get function arguments from the ImmerAction object
 */
        function getArgsFromImmerAction(action) {
            if (action.args) {
                return action.payload;
            }
            return [action.payload];
        }
        function getAllPropertyNames(obj) {
            var proto = Object.getPrototypeOf(obj);
            var inherited = proto ? getAllPropertyNames(proto) : [];
            return Object.getOwnPropertyNames(obj).concat(inherited).filter(function(propertyName, index, uniqueList) {
                return uniqueList.indexOf(propertyName) === index;
            });
        }
        function createActionCreators(immerReducerClass) {
            setCustomNameForDuplicates(immerReducerClass);
            var actionCreators = {};
            var immerReducerProperties = getAllPropertyNames(ImmerReducer.prototype);
            getAllPropertyNames(immerReducerClass.prototype).forEach(function(key) {
                if (immerReducerProperties.includes(key)) {
                    return;
                }
                var method = immerReducerClass.prototype[key];
                if (typeof method !== "function") {
                    return;
                }
                var type = actionTypePrefix + ":" + getReducerName(immerReducerClass) + "#" + key;
                var actionCreator = function() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    // Make sure only the arguments are passed to the action object that
                    // are defined in the method
                    return createImmerAction(type, args.slice(0, method.length));
                };
                actionCreator.type = type;
                actionCreators[key] = actionCreator;
            });
            return actionCreators;
            // typed in the function signature
        }
        exports.createActionCreators = createActionCreators;
        function getReducerName(klass) {
            var name = klass.customName || klass.name;
            if (!name) {
                throw new Error("immer-reducer failed to get reducer name for a class. Try adding 'static customName = \"name\"'");
            }
            return name;
        }
        function createReducerFunction(immerReducerClass, initialState) {
            setCustomNameForDuplicates(immerReducerClass);
            return function immerReducerFunction(state, action) {
                if (state === undefined) {
                    state = initialState;
                }
                if (!isActionFromClass(action, immerReducerClass)) {
                    return state;
                }
                if (!state) {
                    throw new Error("ImmerReducer does not support undefined state. Pass initial state to createReducerFunction() or createStore()");
                }
                var _a = removePrefix(action.type).split("#")
                  , _ = _a[0]
                  , methodName = _a[1];
                return immer_1.default(state, function(draftState) {
                    var reducers = new immerReducerClass(draftState,state);
                    reducers[methodName].apply(reducers, getArgsFromImmerAction(action));
                    // The reducer replaced the instance with completely new state so
                    // make that to be the next state
                    if (reducers.draftState !== draftState) {
                        return reducers.draftState;
                    }
                    // Workaround typing changes in Immer 3.x. This does not actually
                    // affect the exposed types by immer-reducer itself.
                    // Also using immer internally with anys like this allow us to
                    // support multiple versions of immer from 1.4 to 3.x
                    return draftState;
                });
            }
            ;
        }
        exports.createReducerFunction = createReducerFunction;
        function setPrefix(prefix) {
            actionTypePrefix = prefix;
        }
        exports.setPrefix = setPrefix;
        /**
 * INTERNAL! This is only for tests!
 */
        function _clearKnownClasses() {
            KNOWN_REDUCER_CLASSES = [];
        }
        exports._clearKnownClasses = _clearKnownClasses;
        //# sourceMappingURL=immer-reducer.js.map

        /***/
    }
    ), /* 158 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(process) {

            if (typeof process === 'undefined' || !process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
                module.exports = {
                    nextTick: nextTick
                };
            } else {
                module.exports = process
            }

            function nextTick(fn, arg1, arg2, arg3) {
                if (typeof fn !== 'function') {
                    throw new TypeError('"callback" argument must be a function');
                }
                var len = arguments.length;
                var args, i;
                switch (len) {
                case 0:
                case 1:
                    return process.nextTick(fn);
                case 2:
                    return process.nextTick(function afterTickOne() {
                        fn.call(null, arg1);
                    });
                case 3:
                    return process.nextTick(function afterTickTwo() {
                        fn.call(null, arg1, arg2);
                    });
                case 4:
                    return process.nextTick(function afterTickThree() {
                        fn.call(null, arg1, arg2, arg3);
                    });
                default:
                    args = new Array(len - 1);
                    i = 0;
                    while (i < args.length) {
                        args[i++] = arguments[i];
                    }
                    return process.nextTick(function afterTick() {
                        fn.apply(null, args);
                    });
                }
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 159 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(process) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {
                var keys = Object.keys(obj);
                var descriptors = {};
                for (var i = 0; i < keys.length; i++) {
                    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
                }
                return descriptors;
            }
            ;

            var formatRegExp = /%[sdj%]/g;
            exports.format = function(f) {
                if (!isString(f)) {
                    var objects = [];
                    for (var i = 0; i < arguments.length; i++) {
                        objects.push(inspect(arguments[i]));
                    }
                    return objects.join(' ');
                }

                var i = 1;
                var args = arguments;
                var len = args.length;
                var str = String(f).replace(formatRegExp, function(x) {
                    if (x === '%%')
                        return '%';
                    if (i >= len)
                        return x;
                    switch (x) {
                    case '%s':
                        return String(args[i++]);
                    case '%d':
                        return Number(args[i++]);
                    case '%j':
                        try {
                            return JSON.stringify(args[i++]);
                        } catch (_) {
                            return '[Circular]';
                        }
                    default:
                        return x;
                    }
                });
                for (var x = args[i]; i < len; x = args[++i]) {
                    if (isNull(x) || !isObject(x)) {
                        str += ' ' + x;
                    } else {
                        str += ' ' + inspect(x);
                    }
                }
                return str;
            }
            ;

            // Mark that a method should not be used.
            // Returns a modified function which warns once by default.
            // If --no-deprecation is set, then it is a no-op.
            exports.deprecate = function(fn, msg) {
                if (typeof process !== 'undefined' && process.noDeprecation === true) {
                    return fn;
                }

                // Allow for deprecating things in the process of starting up.
                if (typeof process === 'undefined') {
                    return function() {
                        return exports.deprecate(fn, msg).apply(this, arguments);
                    }
                    ;
                }

                var warned = false;
                function deprecated() {
                    if (!warned) {
                        if (process.throwDeprecation) {
                            throw new Error(msg);
                        } else if (process.traceDeprecation) {
                            console.trace(msg);
                        } else {
                            console.error(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            }
            ;

            var debugs = {};
            var debugEnviron;
            exports.debuglog = function(set) {
                if (isUndefined(debugEnviron))
                    debugEnviron = process.env.NODE_DEBUG || '';
                set = set.toUpperCase();
                if (!debugs[set]) {
                    if (new RegExp('\\b' + set + '\\b','i').test(debugEnviron)) {
                        var pid = process.pid;
                        debugs[set] = function() {
                            var msg = exports.format.apply(exports, arguments);
                            console.error('%s %d: %s', set, pid, msg);
                        }
                        ;
                    } else {
                        debugs[set] = function() {}
                        ;
                    }
                }
                return debugs[set];
            }
            ;

            /**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
            /* legacy: obj, showHidden, depth, colors*/
            function inspect(obj, opts) {
                // default options
                var ctx = {
                    seen: [],
                    stylize: stylizeNoColor
                };
                // legacy...
                if (arguments.length >= 3)
                    ctx.depth = arguments[2];
                if (arguments.length >= 4)
                    ctx.colors = arguments[3];
                if (isBoolean(opts)) {
                    // legacy...
                    ctx.showHidden = opts;
                } else if (opts) {
                    // got an "options" object
                    exports._extend(ctx, opts);
                }
                // set default options
                if (isUndefined(ctx.showHidden))
                    ctx.showHidden = false;
                if (isUndefined(ctx.depth))
                    ctx.depth = 2;
                if (isUndefined(ctx.colors))
                    ctx.colors = false;
                if (isUndefined(ctx.customInspect))
                    ctx.customInspect = true;
                if (ctx.colors)
                    ctx.stylize = stylizeWithColor;
                return formatValue(ctx, obj, ctx.depth);
            }
            exports.inspect = inspect;

            // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
            inspect.colors = {
                'bold': [1, 22],
                'italic': [3, 23],
                'underline': [4, 24],
                'inverse': [7, 27],
                'white': [37, 39],
                'grey': [90, 39],
                'black': [30, 39],
                'blue': [34, 39],
                'cyan': [36, 39],
                'green': [32, 39],
                'magenta': [35, 39],
                'red': [31, 39],
                'yellow': [33, 39]
            };

            // Don't use 'blue' not visible on cmd.exe
            inspect.styles = {
                'special': 'cyan',
                'number': 'yellow',
                'boolean': 'yellow',
                'undefined': 'grey',
                'null': 'bold',
                'string': 'green',
                'date': 'magenta',
                // "name": intentionally not styling
                'regexp': 'red'
            };

            function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];

                if (style) {
                    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
                } else {
                    return str;
                }
            }

            function stylizeNoColor(str, styleType) {
                return str;
            }

            function arrayToHash(array) {
                var hash = {};

                array.forEach(function(val, idx) {
                    hash[val] = true;
                });

                return hash;
            }

            function formatValue(ctx, value, recurseTimes) {
                // Provide a hook for user-specified inspect functions.
                // Check that value is an object with an inspect function on it
                if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
                value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
                !(value.constructor && value.constructor.prototype === value)) {
                    var ret = value.inspect(recurseTimes, ctx);
                    if (!isString(ret)) {
                        ret = formatValue(ctx, ret, recurseTimes);
                    }
                    return ret;
                }

                // Primitive types cannot have properties
                var primitive = formatPrimitive(ctx, value);
                if (primitive) {
                    return primitive;
                }

                // Look up the keys of the object.
                var keys = Object.keys(value);
                var visibleKeys = arrayToHash(keys);

                if (ctx.showHidden) {
                    keys = Object.getOwnPropertyNames(value);
                }

                // IE doesn't make error fields non-enumerable
                // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
                if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
                    return formatError(value);
                }

                // Some type of object without properties can be shortcutted.
                if (keys.length === 0) {
                    if (isFunction(value)) {
                        var name = value.name ? ': ' + value.name : '';
                        return ctx.stylize('[Function' + name + ']', 'special');
                    }
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                    }
                    if (isDate(value)) {
                        return ctx.stylize(Date.prototype.toString.call(value), 'date');
                    }
                    if (isError(value)) {
                        return formatError(value);
                    }
                }

                var base = ''
                  , array = false
                  , braces = ['{', '}'];

                // Make Array say that they are Array
                if (isArray(value)) {
                    array = true;
                    braces = ['[', ']'];
                }

                // Make functions say that they are functions
                if (isFunction(value)) {
                    var n = value.name ? ': ' + value.name : '';
                    base = ' [Function' + n + ']';
                }

                // Make RegExps say that they are RegExps
                if (isRegExp(value)) {
                    base = ' ' + RegExp.prototype.toString.call(value);
                }

                // Make dates with properties first say the date
                if (isDate(value)) {
                    base = ' ' + Date.prototype.toUTCString.call(value);
                }

                // Make error with message first say the error
                if (isError(value)) {
                    base = ' ' + formatError(value);
                }

                if (keys.length === 0 && (!array || value.length == 0)) {
                    return braces[0] + base + braces[1];
                }

                if (recurseTimes < 0) {
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                    } else {
                        return ctx.stylize('[Object]', 'special');
                    }
                }

                ctx.seen.push(value);

                var output;
                if (array) {
                    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
                } else {
                    output = keys.map(function(key) {
                        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                    });
                }

                ctx.seen.pop();

                return reduceToSingleString(output, base, braces);
            }

            function formatPrimitive(ctx, value) {
                if (isUndefined(value))
                    return ctx.stylize('undefined', 'undefined');
                if (isString(value)) {
                    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
                    return ctx.stylize(simple, 'string');
                }
                if (isNumber(value))
                    return ctx.stylize('' + value, 'number');
                if (isBoolean(value))
                    return ctx.stylize('' + value, 'boolean');
                // For some reason typeof null is "object", so special case here.
                if (isNull(value))
                    return ctx.stylize('null', 'null');
            }

            function formatError(value) {
                return '[' + Error.prototype.toString.call(value) + ']';
            }

            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
                var output = [];
                for (var i = 0, l = value.length; i < l; ++i) {
                    if (hasOwnProperty(value, String(i))) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
                    } else {
                        output.push('');
                    }
                }
                keys.forEach(function(key) {
                    if (!key.match(/^\d+$/)) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
                    }
                });
                return output;
            }

            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
                var name, str, desc;
                desc = Object.getOwnPropertyDescriptor(value, key) || {
                    value: value[key]
                };
                if (desc.get) {
                    if (desc.set) {
                        str = ctx.stylize('[Getter/Setter]', 'special');
                    } else {
                        str = ctx.stylize('[Getter]', 'special');
                    }
                } else {
                    if (desc.set) {
                        str = ctx.stylize('[Setter]', 'special');
                    }
                }
                if (!hasOwnProperty(visibleKeys, key)) {
                    name = '[' + key + ']';
                }
                if (!str) {
                    if (ctx.seen.indexOf(desc.value) < 0) {
                        if (isNull(recurseTimes)) {
                            str = formatValue(ctx, desc.value, null);
                        } else {
                            str = formatValue(ctx, desc.value, recurseTimes - 1);
                        }
                        if (str.indexOf('\n') > -1) {
                            if (array) {
                                str = str.split('\n').map(function(line) {
                                    return '  ' + line;
                                }).join('\n').substr(2);
                            } else {
                                str = '\n' + str.split('\n').map(function(line) {
                                    return '   ' + line;
                                }).join('\n');
                            }
                        }
                    } else {
                        str = ctx.stylize('[Circular]', 'special');
                    }
                }
                if (isUndefined(name)) {
                    if (array && key.match(/^\d+$/)) {
                        return str;
                    }
                    name = JSON.stringify('' + key);
                    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                        name = name.substr(1, name.length - 2);
                        name = ctx.stylize(name, 'name');
                    } else {
                        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
                        name = ctx.stylize(name, 'string');
                    }
                }

                return name + ': ' + str;
            }

            function reduceToSingleString(output, base, braces) {
                var numLinesEst = 0;
                var length = output.reduce(function(prev, cur) {
                    numLinesEst++;
                    if (cur.indexOf('\n') >= 0)
                        numLinesEst++;
                    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
                }, 0);

                if (length > 60) {
                    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
                }

                return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
            }

            // NOTE: These type checking functions intentionally don't use `instanceof`
            // because it is fragile and can be easily faked with `Object.create()`.
            function isArray(ar) {
                return Array.isArray(ar);
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return isObject(re) && objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }
            exports.isObject = isObject;

            function isDate(d) {
                return isObject(d) && objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
                return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
            }
            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
                typeof arg === 'undefined';
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = __webpack_require__(602);

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }

            function pad(n) {
                return n < 10 ? '0' + n.toString(10) : n.toString(10);
            }

            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

            // 26 Feb 16:19:34
            function timestamp() {
                var d = new Date();
                var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
                return [d.getDate(), months[d.getMonth()], time].join(' ');
            }

            // log is just a thin wrapper to console.log that prepends a timestamp
            exports.log = function() {
                console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
            }
            ;

            /**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
            exports.inherits = __webpack_require__(603);

            exports._extend = function(origin, add) {
                // Don't do anything if add isn't an object
                if (!add || !isObject(add))
                    return origin;

                var keys = Object.keys(add);
                var i = keys.length;
                while (i--) {
                    origin[keys[i]] = add[keys[i]];
                }
                return origin;
            }
            ;

            function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
            }

            var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

            exports.promisify = function promisify(original) {
                if (typeof original !== 'function')
                    throw new TypeError('The "original" argument must be of type Function');

                if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
                    var fn = original[kCustomPromisifiedSymbol];
                    if (typeof fn !== 'function') {
                        throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                    }
                    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                        value: fn,
                        enumerable: false,
                        writable: false,
                        configurable: true
                    });
                    return fn;
                }

                function fn() {
                    var promiseResolve, promiseReject;
                    var promise = new Promise(function(resolve, reject) {
                        promiseResolve = resolve;
                        promiseReject = reject;
                    }
                    );

                    var args = [];
                    for (var i = 0; i < arguments.length; i++) {
                        args.push(arguments[i]);
                    }
                    args.push(function(err, value) {
                        if (err) {
                            promiseReject(err);
                        } else {
                            promiseResolve(value);
                        }
                    });

                    try {
                        original.apply(this, args);
                    } catch (err) {
                        promiseReject(err);
                    }

                    return promise;
                }

                Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

                if (kCustomPromisifiedSymbol)
                    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                        value: fn,
                        enumerable: false,
                        writable: false,
                        configurable: true
                    });
                return Object.defineProperties(fn, getOwnPropertyDescriptors(original));
            }

            exports.promisify.custom = kCustomPromisifiedSymbol

            function callbackifyOnRejected(reason, cb) {
                // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
                // Because `null` is a special error value in callbacks which means "no error
                // occurred", we error-wrap so the callback consumer can distinguish between
                // "the promise rejected with null" or "the promise fulfilled with undefined".
                if (!reason) {
                    var newReason = new Error('Promise was rejected with a falsy value');
                    newReason.reason = reason;
                    reason = newReason;
                }
                return cb(reason);
            }

            function callbackify(original) {
                if (typeof original !== 'function') {
                    throw new TypeError('The "original" argument must be of type Function');
                }

                // We DO NOT return the promise as it gives the user a false sense that
                // the promise is actually somehow related to the callback's execution
                // and that the callback throwing will reject the promise.
                function callbackified() {
                    var args = [];
                    for (var i = 0; i < arguments.length; i++) {
                        args.push(arguments[i]);
                    }

                    var maybeCb = args.pop();
                    if (typeof maybeCb !== 'function') {
                        throw new TypeError('The last argument must be of type Function');
                    }
                    var self = this;
                    var cb = function() {
                        return maybeCb.apply(self, arguments);
                    };
                    // In true node style we process the callback on `nextTick` with all the
                    // implications (stack, `uncaughtException`, `async_hooks`)
                    original.apply(this, args).then(function(ret) {
                        process.nextTick(cb, null, ret)
                    }, function(rej) {
                        process.nextTick(callbackifyOnRejected, rej, cb)
                    });
                }

                Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
                Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));
                return callbackified;
            }
            exports.callbackify = callbackify;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 160 */
    /***/
    (function(module, exports, __webpack_require__) {

        // based on the aes implimentation in triple sec
        // https://github.com/keybase/triplesec
        // which is in turn based on the one from crypto-js
        // https://code.google.com/p/crypto-js/

        var Buffer = __webpack_require__(15).Buffer

        function asUInt32Array(buf) {
            if (!Buffer.isBuffer(buf))
                buf = Buffer.from(buf)

            var len = (buf.length / 4) | 0
            var out = new Array(len)

            for (var i = 0; i < len; i++) {
                out[i] = buf.readUInt32BE(i * 4)
            }

            return out
        }

        function scrubVec(v) {
            for (var i = 0; i < v.length; v++) {
                v[i] = 0
            }
        }

        function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
            var SUB_MIX0 = SUB_MIX[0]
            var SUB_MIX1 = SUB_MIX[1]
            var SUB_MIX2 = SUB_MIX[2]
            var SUB_MIX3 = SUB_MIX[3]

            var s0 = M[0] ^ keySchedule[0]
            var s1 = M[1] ^ keySchedule[1]
            var s2 = M[2] ^ keySchedule[2]
            var s3 = M[3] ^ keySchedule[3]
            var t0, t1, t2, t3
            var ksRow = 4

            for (var round = 1; round < nRounds; round++) {
                t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
                t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
                t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
                t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
                s0 = t0
                s1 = t1
                s2 = t2
                s3 = t3
            }

            t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
            t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
            t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
            t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
            t0 = t0 >>> 0
            t1 = t1 >>> 0
            t2 = t2 >>> 0
            t3 = t3 >>> 0

            return [t0, t1, t2, t3]
        }

        // AES constants
        var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
        var G = (function() {
            // Compute double table
            var d = new Array(256)
            for (var j = 0; j < 256; j++) {
                if (j < 128) {
                    d[j] = j << 1
                } else {
                    d[j] = (j << 1) ^ 0x11b
                }
            }

            var SBOX = []
            var INV_SBOX = []
            var SUB_MIX = [[], [], [], []]
            var INV_SUB_MIX = [[], [], [], []]

            // Walk GF(2^8)
            var x = 0
            var xi = 0
            for (var i = 0; i < 256; ++i) {
                // Compute sbox
                var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
                sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
                SBOX[x] = sx
                INV_SBOX[sx] = x

                // Compute multiplication
                var x2 = d[x]
                var x4 = d[x2]
                var x8 = d[x4]

                // Compute sub bytes, mix columns tables
                var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
                SUB_MIX[0][x] = (t << 24) | (t >>> 8)
                SUB_MIX[1][x] = (t << 16) | (t >>> 16)
                SUB_MIX[2][x] = (t << 8) | (t >>> 24)
                SUB_MIX[3][x] = t

                // Compute inv sub bytes, inv mix columns tables
                t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
                INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
                INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
                INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
                INV_SUB_MIX[3][sx] = t

                if (x === 0) {
                    x = xi = 1
                } else {
                    x = x2 ^ d[d[d[x8 ^ x2]]]
                    xi ^= d[d[xi]]
                }
            }

            return {
                SBOX: SBOX,
                INV_SBOX: INV_SBOX,
                SUB_MIX: SUB_MIX,
                INV_SUB_MIX: INV_SUB_MIX
            }
        }
        )()

        function AES(key) {
            this._key = asUInt32Array(key)
            this._reset()
        }

        AES.blockSize = 4 * 4
        AES.keySize = 256 / 8
        AES.prototype.blockSize = AES.blockSize
        AES.prototype.keySize = AES.keySize
        AES.prototype._reset = function() {
            var keyWords = this._key
            var keySize = keyWords.length
            var nRounds = keySize + 6
            var ksRows = (nRounds + 1) * 4

            var keySchedule = []
            for (var k = 0; k < keySize; k++) {
                keySchedule[k] = keyWords[k]
            }

            for (k = keySize; k < ksRows; k++) {
                var t = keySchedule[k - 1]

                if (k % keySize === 0) {
                    t = (t << 8) | (t >>> 24)
                    t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | (G.SBOX[t & 0xff])

                    t ^= RCON[(k / keySize) | 0] << 24
                } else if (keySize > 6 && k % keySize === 4) {
                    t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | (G.SBOX[t & 0xff])
                }

                keySchedule[k] = keySchedule[k - keySize] ^ t
            }

            var invKeySchedule = []
            for (var ik = 0; ik < ksRows; ik++) {
                var ksR = ksRows - ik
                var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

                if (ik < 4 || ksR <= 4) {
                    invKeySchedule[ik] = tt
                } else {
                    invKeySchedule[ik] = G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
                }
            }

            this._nRounds = nRounds
            this._keySchedule = keySchedule
            this._invKeySchedule = invKeySchedule
        }

        AES.prototype.encryptBlockRaw = function(M) {
            M = asUInt32Array(M)
            return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
        }

        AES.prototype.encryptBlock = function(M) {
            var out = this.encryptBlockRaw(M)
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0], 0)
            buf.writeUInt32BE(out[1], 4)
            buf.writeUInt32BE(out[2], 8)
            buf.writeUInt32BE(out[3], 12)
            return buf
        }

        AES.prototype.decryptBlock = function(M) {
            M = asUInt32Array(M)

            // swap
            var m1 = M[1]
            M[1] = M[3]
            M[3] = m1

            var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0], 0)
            buf.writeUInt32BE(out[3], 4)
            buf.writeUInt32BE(out[2], 8)
            buf.writeUInt32BE(out[1], 12)
            return buf
        }

        AES.prototype.scrub = function() {
            scrubVec(this._keySchedule)
            scrubVec(this._invKeySchedule)
            scrubVec(this._key)
        }

        module.exports.AES = AES

        /***/
    }
    ), /* 161 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer
        var MD5 = __webpack_require__(238)

        /* eslint-disable camelcase */
        function EVP_BytesToKey(password, salt, keyBits, ivLen) {
            if (!Buffer.isBuffer(password))
                password = Buffer.from(password, 'binary')
            if (salt) {
                if (!Buffer.isBuffer(salt))
                    salt = Buffer.from(salt, 'binary')
                if (salt.length !== 8)
                    throw new RangeError('salt should be Buffer with 8 byte length')
            }

            var keyLen = keyBits / 8
            var key = Buffer.alloc(keyLen)
            var iv = Buffer.alloc(ivLen || 0)
            var tmp = Buffer.alloc(0)

            while (keyLen > 0 || ivLen > 0) {
                var hash = new MD5()
                hash.update(tmp)
                hash.update(password)
                if (salt)
                    hash.update(salt)
                tmp = hash.digest()

                var used = 0

                if (keyLen > 0) {
                    var keyStart = key.length - keyLen
                    used = Math.min(keyLen, tmp.length)
                    tmp.copy(key, keyStart, 0, used)
                    keyLen -= used
                }

                if (used < tmp.length && ivLen > 0) {
                    var ivStart = iv.length - ivLen
                    var length = Math.min(ivLen, tmp.length - used)
                    tmp.copy(iv, ivStart, used, used + length)
                    ivLen -= length
                }
            }

            tmp.fill(0)
            return {
                key: key,
                iv: iv
            }
        }

        module.exports = EVP_BytesToKey

        /***/
    }
    ), /* 162 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);
        var utils = __webpack_require__(50);
        var getNAF = utils.getNAF;
        var getJSF = utils.getJSF;
        var assert = utils.assert;

        function BaseCurve(type, conf) {
            this.type = type;
            this.p = new BN(conf.p,16);

            // Use Montgomery, when there is no fast reduction for the prime
            this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

            // Useful for many curves
            this.zero = new BN(0).toRed(this.red);
            this.one = new BN(1).toRed(this.red);
            this.two = new BN(2).toRed(this.red);

            // Curve configuration, optional
            this.n = conf.n && new BN(conf.n,16);
            this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

            // Temporary arrays
            this._wnafT1 = new Array(4);
            this._wnafT2 = new Array(4);
            this._wnafT3 = new Array(4);
            this._wnafT4 = new Array(4);

            this._bitLength = this.n ? this.n.bitLength() : 0;

            // Generalized Greg Maxwell's trick
            var adjustCount = this.n && this.p.div(this.n);
            if (!adjustCount || adjustCount.cmpn(100) > 0) {
                this.redN = null;
            } else {
                this._maxwellTrick = true;
                this.redN = this.n.toRed(this.red);
            }
        }
        module.exports = BaseCurve;

        BaseCurve.prototype.point = function point() {
            throw new Error('Not implemented');
        }
        ;

        BaseCurve.prototype.validate = function validate() {
            throw new Error('Not implemented');
        }
        ;

        BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
            assert(p.precomputed);
            var doubles = p._getDoubles();

            var naf = getNAF(k, 1, this._bitLength);
            var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
            I /= 3;

            // Translate into more windowed form
            var repr = [];
            for (var j = 0; j < naf.length; j += doubles.step) {
                var nafW = 0;
                for (var k = j + doubles.step - 1; k >= j; k--)
                    nafW = (nafW << 1) + naf[k];
                repr.push(nafW);
            }

            var a = this.jpoint(null, null, null);
            var b = this.jpoint(null, null, null);
            for (var i = I; i > 0; i--) {
                for (var j = 0; j < repr.length; j++) {
                    var nafW = repr[j];
                    if (nafW === i)
                        b = b.mixedAdd(doubles.points[j]);
                    else if (nafW === -i)
                        b = b.mixedAdd(doubles.points[j].neg());
                }
                a = a.add(b);
            }
            return a.toP();
        }
        ;

        BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
            var w = 4;

            // Precompute window
            var nafPoints = p._getNAFPoints(w);
            w = nafPoints.wnd;
            var wnd = nafPoints.points;

            // Get NAF form
            var naf = getNAF(k, w, this._bitLength);

            // Add `this`*(N+1) for every w-NAF index
            var acc = this.jpoint(null, null, null);
            for (var i = naf.length - 1; i >= 0; i--) {
                // Count zeroes
                for (var k = 0; i >= 0 && naf[i] === 0; i--)
                    k++;
                if (i >= 0)
                    k++;
                acc = acc.dblp(k);

                if (i < 0)
                    break;
                var z = naf[i];
                assert(z !== 0);
                if (p.type === 'affine') {
                    // J +- P
                    if (z > 0)
                        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
                    else
                        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
                } else {
                    // J +- J
                    if (z > 0)
                        acc = acc.add(wnd[(z - 1) >> 1]);
                    else
                        acc = acc.add(wnd[(-z - 1) >> 1].neg());
                }
            }
            return p.type === 'affine' ? acc.toP() : acc;
        }
        ;

        BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
            var wndWidth = this._wnafT1;
            var wnd = this._wnafT2;
            var naf = this._wnafT3;

            // Fill all arrays
            var max = 0;
            for (var i = 0; i < len; i++) {
                var p = points[i];
                var nafPoints = p._getNAFPoints(defW);
                wndWidth[i] = nafPoints.wnd;
                wnd[i] = nafPoints.points;
            }

            // Comb small window NAFs
            for (var i = len - 1; i >= 1; i -= 2) {
                var a = i - 1;
                var b = i;
                if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
                    naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
                    naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
                    max = Math.max(naf[a].length, max);
                    max = Math.max(naf[b].length, max);
                    continue;
                }

                var comb = [points[a], /* 1 */
                null, /* 3 */
                null, /* 5 */
                points[b]/* 7 */
                ];

                // Try to avoid Projective points, if possible
                if (points[a].y.cmp(points[b].y) === 0) {
                    comb[1] = points[a].add(points[b]);
                    comb[2] = points[a].toJ().mixedAdd(points[b].neg());
                } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
                    comb[1] = points[a].toJ().mixedAdd(points[b]);
                    comb[2] = points[a].add(points[b].neg());
                } else {
                    comb[1] = points[a].toJ().mixedAdd(points[b]);
                    comb[2] = points[a].toJ().mixedAdd(points[b].neg());
                }

                var index = [-3, /* -1 -1 */
                -1, /* -1 0 */
                -5, /* -1 1 */
                -7, /* 0 -1 */
                0, /* 0 0 */
                7, /* 0 1 */
                5, /* 1 -1 */
                1, /* 1 0 */
                3 /* 1 1 */
                ];

                var jsf = getJSF(coeffs[a], coeffs[b]);
                max = Math.max(jsf[0].length, max);
                naf[a] = new Array(max);
                naf[b] = new Array(max);
                for (var j = 0; j < max; j++) {
                    var ja = jsf[0][j] | 0;
                    var jb = jsf[1][j] | 0;

                    naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
                    naf[b][j] = 0;
                    wnd[a] = comb;
                }
            }

            var acc = this.jpoint(null, null, null);
            var tmp = this._wnafT4;
            for (var i = max; i >= 0; i--) {
                var k = 0;

                while (i >= 0) {
                    var zero = true;
                    for (var j = 0; j < len; j++) {
                        tmp[j] = naf[j][i] | 0;
                        if (tmp[j] !== 0)
                            zero = false;
                    }
                    if (!zero)
                        break;
                    k++;
                    i--;
                }
                if (i >= 0)
                    k++;
                acc = acc.dblp(k);
                if (i < 0)
                    break;

                for (var j = 0; j < len; j++) {
                    var z = tmp[j];
                    var p;
                    if (z === 0)
                        continue;
                    else if (z > 0)
                        p = wnd[j][(z - 1) >> 1];
                    else if (z < 0)
                        p = wnd[j][(-z - 1) >> 1].neg();

                    if (p.type === 'affine')
                        acc = acc.mixedAdd(p);
                    else
                        acc = acc.add(p);
                }
            }
            // Zeroify references
            for (var i = 0; i < len; i++)
                wnd[i] = null;

            if (jacobianResult)
                return acc;
            else
                return acc.toP();
        }
        ;

        function BasePoint(curve, type) {
            this.curve = curve;
            this.type = type;
            this.precomputed = null;
        }
        BaseCurve.BasePoint = BasePoint;

        BasePoint.prototype.eq = function eq(/*other*/
        ) {
            throw new Error('Not implemented');
        }
        ;

        BasePoint.prototype.validate = function validate() {
            return this.curve.validate(this);
        }
        ;

        BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
            bytes = utils.toArray(bytes, enc);

            var len = this.p.byteLength();

            // uncompressed, hybrid-odd, hybrid-even
            if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
                if (bytes[0] === 0x06)
                    assert(bytes[bytes.length - 1] % 2 === 0);
                else if (bytes[0] === 0x07)
                    assert(bytes[bytes.length - 1] % 2 === 1);

                var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));

                return res;
            } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
                return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
            }
            throw new Error('Unknown point format');
        }
        ;

        BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
            return this.encode(enc, true);
        }
        ;

        BasePoint.prototype._encode = function _encode(compact) {
            var len = this.curve.p.byteLength();
            var x = this.getX().toArray('be', len);

            if (compact)
                return [this.getY().isEven() ? 0x02 : 0x03].concat(x);

            return [0x04].concat(x, this.getY().toArray('be', len));
        }
        ;

        BasePoint.prototype.encode = function encode(enc, compact) {
            return utils.encode(this._encode(compact), enc);
        }
        ;

        BasePoint.prototype.precompute = function precompute(power) {
            if (this.precomputed)
                return this;

            var precomputed = {
                doubles: null,
                naf: null,
                beta: null
            };
            precomputed.naf = this._getNAFPoints(8);
            precomputed.doubles = this._getDoubles(4, power);
            precomputed.beta = this._getBeta();
            this.precomputed = precomputed;

            return this;
        }
        ;

        BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
            if (!this.precomputed)
                return false;

            var doubles = this.precomputed.doubles;
            if (!doubles)
                return false;

            return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
        }
        ;

        BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
            if (this.precomputed && this.precomputed.doubles)
                return this.precomputed.doubles;

            var doubles = [this];
            var acc = this;
            for (var i = 0; i < power; i += step) {
                for (var j = 0; j < step; j++)
                    acc = acc.dbl();
                doubles.push(acc);
            }
            return {
                step: step,
                points: doubles
            };
        }
        ;

        BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
            if (this.precomputed && this.precomputed.naf)
                return this.precomputed.naf;

            var res = [this];
            var max = (1 << wnd) - 1;
            var dbl = max === 1 ? null : this.dbl();
            for (var i = 1; i < max; i++)
                res[i] = res[i - 1].add(dbl);
            return {
                wnd: wnd,
                points: res
            };
        }
        ;

        BasePoint.prototype._getBeta = function _getBeta() {
            return null;
        }
        ;

        BasePoint.prototype.dblp = function dblp(k) {
            var r = this;
            for (var i = 0; i < k; i++)
                r = r.dbl();
            return r;
        }
        ;

        /***/
    }
    ), /* 163 */
    /***/
    (function(module, exports, __webpack_require__) {

        var asn1 = __webpack_require__(653)
        var aesid = __webpack_require__(664)
        var fixProc = __webpack_require__(665)
        var ciphers = __webpack_require__(242)
        var compat = __webpack_require__(387)
        var Buffer = __webpack_require__(15).Buffer
        module.exports = parseKeys

        function parseKeys(buffer) {
            var password
            if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
                password = buffer.passphrase
                buffer = buffer.key
            }
            if (typeof buffer === 'string') {
                buffer = Buffer.from(buffer)
            }

            var stripped = fixProc(buffer, password)

            var type = stripped.tag
            var data = stripped.data
            var subtype, ndata
            switch (type) {
            case 'CERTIFICATE':
                ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
                // falls through
            case 'PUBLIC KEY':
                if (!ndata) {
                    ndata = asn1.PublicKey.decode(data, 'der')
                }
                subtype = ndata.algorithm.algorithm.join('.')
                switch (subtype) {
                case '1.2.840.113549.1.1.1':
                    return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
                case '1.2.840.10045.2.1':
                    ndata.subjectPrivateKey = ndata.subjectPublicKey
                    return {
                        type: 'ec',
                        data: ndata
                    }
                case '1.2.840.10040.4.1':
                    ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
                    return {
                        type: 'dsa',
                        data: ndata.algorithm.params
                    }
                default:
                    throw new Error('unknown key id ' + subtype)
                }
                throw new Error('unknown key type ' + type)
            case 'ENCRYPTED PRIVATE KEY':
                data = asn1.EncryptedPrivateKey.decode(data, 'der')
                data = decrypt(data, password)
                // falls through
            case 'PRIVATE KEY':
                ndata = asn1.PrivateKey.decode(data, 'der')
                subtype = ndata.algorithm.algorithm.join('.')
                switch (subtype) {
                case '1.2.840.113549.1.1.1':
                    return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
                case '1.2.840.10045.2.1':
                    return {
                        curve: ndata.algorithm.curve,
                        privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
                    }
                case '1.2.840.10040.4.1':
                    ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
                    return {
                        type: 'dsa',
                        params: ndata.algorithm.params
                    }
                default:
                    throw new Error('unknown key id ' + subtype)
                }
                throw new Error('unknown key type ' + type)
            case 'RSA PUBLIC KEY':
                return asn1.RSAPublicKey.decode(data, 'der')
            case 'RSA PRIVATE KEY':
                return asn1.RSAPrivateKey.decode(data, 'der')
            case 'DSA PRIVATE KEY':
                return {
                    type: 'dsa',
                    params: asn1.DSAPrivateKey.decode(data, 'der')
                }
            case 'EC PRIVATE KEY':
                data = asn1.ECPrivateKey.decode(data, 'der')
                return {
                    curve: data.parameters.value,
                    privateKey: data.privateKey
                }
            default:
                throw new Error('unknown key type ' + type)
            }
        }
        parseKeys.signature = asn1.signature
        function decrypt(data, password) {
            var salt = data.algorithm.decrypt.kde.kdeparams.salt
            var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
            var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
            var iv = data.algorithm.decrypt.cipher.iv
            var cipherText = data.subjectPrivateKey
            var keylen = parseInt(algo.split('-')[1], 10) / 8
            var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
            var cipher = ciphers.createDecipheriv(algo, key, iv)
            var out = []
            out.push(cipher.update(cipherText))
            out.push(cipher.final())
            return Buffer.concat(out)
        }

        /***/
    }
    ), /* 164 */
    /***/
    (function(module, exports) {

        var JsonWebTokenError = function(message, error) {
            Error.call(this, message);
            if (Error.captureStackTrace) {
                Error.captureStackTrace(this, this.constructor);
            }
            this.name = 'JsonWebTokenError';
            this.message = message;
            if (error)
                this.inner = error;
        };

        JsonWebTokenError.prototype = Object.create(Error.prototype);
        JsonWebTokenError.prototype.constructor = JsonWebTokenError;

        module.exports = JsonWebTokenError;

        /***/
    }
    ), /* 165 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useRadioGroup;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var _RadioGroupContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);

        function useRadioGroup() {
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useContext(_RadioGroupContext__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"]);
        }

        /***/
    }
    ), /* 166 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _material_ui_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(764);
        /* harmony import */
        var _defaultTheme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(63);

        function makeStyles(stylesOrCreator) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            return Object(_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(stylesOrCreator, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                defaultTheme: _defaultTheme__WEBPACK_IMPORTED_MODULE_2__[/* default */
                "a"]
            }, options));
        }

        /* harmony default export */
        __webpack_exports__["a"] = (makeStyles);

        /***/
    }
    ), /* 167 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);

        function delayP(ms, val) {
            if (val === void 0) {
                val = true;
            }

            var timeoutId;
            var promise = new Promise(function(resolve) {
                timeoutId = setTimeout(resolve, ms, val);
            }
            );

            promise[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* CANCEL */
            "a"]] = function() {
                clearTimeout(timeoutId);
            }
            ;

            return promise;
        }

        /* harmony default export */
        __webpack_exports__["a"] = (delayP);

        /***/
    }
    ), /* 168 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
        var defineProperty = __webpack_require__(10);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/@material-ui/utils/esm/deepmerge.js
        var deepmerge = __webpack_require__(329);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/createBreakpoints.js
        var createBreakpoints = __webpack_require__(59);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createMixins.js

        function createMixins(breakpoints, spacing, mixins) {
            var _toolbar;

            return Object(esm_extends["a"/* default */
            ])({
                gutters: function gutters() {
                    var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    // To deprecate in v4.1
                    //       warning(
                    //         false,
                    //         [
                    //           'Material-UI: theme.mixins.gutters() is deprecated.',
                    //           'You can use the source of the mixin directly:',
                    //           `
                    // paddingLeft: theme.spacing(2),
                    // paddingRight: theme.spacing(2),
                    // [theme.breakpoints.up('sm')]: {
                    //   paddingLeft: theme.spacing(3),
                    //   paddingRight: theme.spacing(3),
                    // },
                    // `,
                    //         ].join('\n'),
                    //       );
                    return Object(esm_extends["a"/* default */
                    ])({
                        paddingLeft: spacing(2),
                        paddingRight: spacing(2)
                    }, styles, Object(defineProperty["a"/* default */
                    ])({}, breakpoints.up('sm'), Object(esm_extends["a"/* default */
                    ])({
                        paddingLeft: spacing(3),
                        paddingRight: spacing(3)
                    }, styles[breakpoints.up('sm')])));
                },
                toolbar: (_toolbar = {
                    minHeight: 56
                },
                Object(defineProperty["a"/* default */
                ])(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), {
                    minHeight: 48
                }),
                Object(defineProperty["a"/* default */
                ])(_toolbar, breakpoints.up('sm'), {
                    minHeight: 64
                }),
                _toolbar)
            }, mixins);
        }
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/common.js
        var common = __webpack_require__(79);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/grey.js
        var grey = __webpack_require__(98);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/indigo.js
        var indigo = __webpack_require__(99);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/pink.js
        var pink = __webpack_require__(100);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/red.js
        var red = __webpack_require__(101);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/orange.js
        var orange = __webpack_require__(102);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/blue.js
        var blue = __webpack_require__(103);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/green.js
        var green = __webpack_require__(104);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/colorManipulator.js
        var colorManipulator = __webpack_require__(9);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createPalette.js

        var light = {
            // The colors used to style the text.
            text: {
                // The most important text.
                primary: 'rgba(0, 0, 0, 0.87)',
                // Secondary text.
                secondary: 'rgba(0, 0, 0, 0.54)',
                // Disabled text have even lower visual prominence.
                disabled: 'rgba(0, 0, 0, 0.38)',
                // Text hints.
                hint: 'rgba(0, 0, 0, 0.38)'
            },
            // The color used to divide different elements.
            divider: 'rgba(0, 0, 0, 0.12)',
            // The background colors used to style the surfaces.
            // Consistency between these values is important.
            background: {
                paper: common["a"/* default */
                ].white,
                default: grey["a"/* default */
                ][50]
            },
            // The colors used to style the action elements.
            action: {
                // The color of an active action like an icon button.
                active: 'rgba(0, 0, 0, 0.54)',
                // The color of an hovered action.
                hover: 'rgba(0, 0, 0, 0.04)',
                hoverOpacity: 0.04,
                // The color of a selected action.
                selected: 'rgba(0, 0, 0, 0.08)',
                selectedOpacity: 0.08,
                // The color of a disabled action.
                disabled: 'rgba(0, 0, 0, 0.26)',
                // The background color of a disabled action.
                disabledBackground: 'rgba(0, 0, 0, 0.12)'
            }
        };
        var dark = {
            text: {
                primary: common["a"/* default */
                ].white,
                secondary: 'rgba(255, 255, 255, 0.7)',
                disabled: 'rgba(255, 255, 255, 0.5)',
                hint: 'rgba(255, 255, 255, 0.5)',
                icon: 'rgba(255, 255, 255, 0.5)'
            },
            divider: 'rgba(255, 255, 255, 0.12)',
            background: {
                paper: grey["a"/* default */
                ][800],
                default: '#303030'
            },
            action: {
                active: common["a"/* default */
                ].white,
                hover: 'rgba(255, 255, 255, 0.08)',
                hoverOpacity: 0.08,
                selected: 'rgba(255, 255, 255, 0.16)',
                selectedOpacity: 0.16,
                disabled: 'rgba(255, 255, 255, 0.3)',
                disabledBackground: 'rgba(255, 255, 255, 0.12)'
            }
        };

        function addLightOrDark(intent, direction, shade, tonalOffset) {
            if (!intent[direction]) {
                if (intent.hasOwnProperty(shade)) {
                    intent[direction] = intent[shade];
                } else if (direction === 'light') {
                    intent.light = Object(colorManipulator["i"/* lighten */
                    ])(intent.main, tonalOffset);
                } else if (direction === 'dark') {
                    intent.dark = Object(colorManipulator["a"/* darken */
                    ])(intent.main, tonalOffset * 1.5);
                }
            }
        }

        function createPalette(palette) {
            var _palette$primary = palette.primary
              , primary = _palette$primary === void 0 ? {
                light: indigo["a"/* default */
                ][300],
                main: indigo["a"/* default */
                ][500],
                dark: indigo["a"/* default */
                ][700]
            } : _palette$primary
              , _palette$secondary = palette.secondary
              , secondary = _palette$secondary === void 0 ? {
                light: pink["a"/* default */
                ].A200,
                main: pink["a"/* default */
                ].A400,
                dark: pink["a"/* default */
                ].A700
            } : _palette$secondary
              , _palette$error = palette.error
              , error = _palette$error === void 0 ? {
                light: red["a"/* default */
                ][300],
                main: red["a"/* default */
                ][500],
                dark: red["a"/* default */
                ][700]
            } : _palette$error
              , _palette$warning = palette.warning
              , warning = _palette$warning === void 0 ? {
                light: orange["a"/* default */
                ][300],
                main: orange["a"/* default */
                ][500],
                dark: orange["a"/* default */
                ][700]
            } : _palette$warning
              , _palette$info = palette.info
              , info = _palette$info === void 0 ? {
                light: blue["a"/* default */
                ][300],
                main: blue["a"/* default */
                ][500],
                dark: blue["a"/* default */
                ][700]
            } : _palette$info
              , _palette$success = palette.success
              , success = _palette$success === void 0 ? {
                light: green["a"/* default */
                ][300],
                main: green["a"/* default */
                ][500],
                dark: green["a"/* default */
                ][700]
            } : _palette$success
              , _palette$type = palette.type
              , type = _palette$type === void 0 ? 'light' : _palette$type
              , _palette$contrastThre = palette.contrastThreshold
              , contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre
              , _palette$tonalOffset = palette.tonalOffset
              , tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset
              , other = Object(objectWithoutProperties["a"/* default */
            ])(palette, ["primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset"]);
            // Use the same logic as
            // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
            // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

            function getContrastText(background) {
                if (!background) {
                    throw new TypeError("Material-UI: missing background argument in getContrastText(".concat(background, ")."));
                }

                var contrastText = Object(colorManipulator["e"/* getContrastRatio */
                ])(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;

                if (false) {
                    var contrast;
                }

                return contrastText;
            }

            function augmentColor(color) {
                var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
                var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
                var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;
                color = Object(esm_extends["a"/* default */
                ])({}, color);

                if (!color.main && color[mainShade]) {
                    color.main = color[mainShade];
                }

                if (false) {}

                addLightOrDark(color, 'light', lightShade, tonalOffset);
                addLightOrDark(color, 'dark', darkShade, tonalOffset);

                if (!color.contrastText) {
                    color.contrastText = getContrastText(color.main);
                }

                return color;
            }

            var types = {
                dark: dark,
                light: light
            };

            if (false) {}

            var paletteOutput = Object(deepmerge["a"/* default */
            ])(Object(esm_extends["a"/* default */
            ])({
                // A collection of common colors.
                common: common["a"/* default */
                ],
                // The palette type, can be light or dark.
                type: type,
                // The colors used to represent primary interface elements for a user.
                primary: augmentColor(primary),
                // The colors used to represent secondary interface elements for a user.
                secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),
                // The colors used to represent interface elements that the user should be made aware of.
                error: augmentColor(error),
                // The colors used to represent potentially dangerous actions or important messages.
                warning: augmentColor(warning),
                // The colors used to present information to the user that is neutral and not necessarily important.
                info: augmentColor(info),
                // The colors used to indicate the successful completion of an action that user triggered.
                success: augmentColor(success),
                // The grey colors.
                grey: grey["a"/* default */
                ],
                // Used by `getContrastText()` to maximize the contrast between
                // the background and the text.
                contrastThreshold: contrastThreshold,
                // Takes a background color and returns the text color that maximizes the contrast.
                getContrastText: getContrastText,
                // Generate a rich color object.
                augmentColor: augmentColor,
                // Used by the functions below to shift a color's luminance by approximately
                // two indexes within its tonal palette.
                // E.g., shift from Red 500 to Red 300 or Red 700.
                tonalOffset: tonalOffset
            }, types[type]), other);
            return paletteOutput;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createTypography.js

        function round(value) {
            return Math.round(value * 1e5) / 1e5;
        }

        var caseAllCaps = {
            textTransform: 'uppercase'
        };
        var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
        /**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

        function createTypography(palette, typography) {
            var _ref = typeof typography === 'function' ? typography(palette) : typography
              , _ref$fontFamily = _ref.fontFamily
              , fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily
              , _ref$fontSize = _ref.fontSize
              , fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize
              , _ref$fontWeightLight = _ref.fontWeightLight
              , fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight
              , _ref$fontWeightRegula = _ref.fontWeightRegular
              , fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula
              , _ref$fontWeightMedium = _ref.fontWeightMedium
              , fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium
              , _ref$fontWeightBold = _ref.fontWeightBold
              , fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold
              , _ref$htmlFontSize = _ref.htmlFontSize
              , htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize
              , allVariants = _ref.allVariants
              , pxToRem2 = _ref.pxToRem
              , other = Object(objectWithoutProperties["a"/* default */
            ])(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"]);

            if (false) {}

            var coef = fontSize / 14;

            var pxToRem = pxToRem2 || function(size) {
                return "".concat(size / htmlFontSize * coef, "rem");
            }
            ;

            var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {
                return Object(esm_extends["a"/* default */
                ])({
                    fontFamily: fontFamily,
                    fontWeight: fontWeight,
                    fontSize: pxToRem(size),
                    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
                    lineHeight: lineHeight
                }, fontFamily === defaultFontFamily ? {
                    letterSpacing: "".concat(round(letterSpacing / size), "em")
                } : {}, {}, casing, {}, allVariants);
            };

            var variants = {
                h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
                h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
                h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
                h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
                h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
                h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
                subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
                subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
                body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
                body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
                button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
                caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
                overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
            };
            return Object(deepmerge["a"/* default */
            ])(Object(esm_extends["a"/* default */
            ])({
                htmlFontSize: htmlFontSize,
                pxToRem: pxToRem,
                round: round,
                // TODO To remove in v5?
                fontFamily: fontFamily,
                fontSize: fontSize,
                fontWeightLight: fontWeightLight,
                fontWeightRegular: fontWeightRegular,
                fontWeightMedium: fontWeightMedium,
                fontWeightBold: fontWeightBold
            }, variants), other, {
                clone: false // No need to clone deep

            });
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/shadows.js
        var shadowKeyUmbraOpacity = 0.2;
        var shadowKeyPenumbraOpacity = 0.14;
        var shadowAmbientShadowOpacity = 0.12;

        function createShadow() {
            return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(',');
        }
        // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

        var shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
        /* harmony default export */
        var styles_shadows = (shadows);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/shape.js
        var shape = {
            borderRadius: 4
        };
        /* harmony default export */
        var styles_shape = (shape);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createSpacing.js
        var warnOnce;
        function createSpacing() {
            var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

            // Already transformed.
            if (spacingInput.mui) {
                return spacingInput;
            }
            // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
            // https://material.io/design/layout/understanding-layout.html#pixel-density

            var transform;

            if (typeof spacingInput === 'function') {
                transform = spacingInput;
            } else {
                if (false) {}

                transform = function transform(factor) {
                    if (false) {}

                    return spacingInput * factor;
                }
                ;
            }

            var spacing = function spacing() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                if (false) {}

                if (args.length === 0) {
                    return transform(1);
                }

                if (args.length === 1) {
                    return transform(args[0]);
                }

                return args.map(function(factor) {
                    var output = transform(factor);
                    return typeof output === 'number' ? "".concat(output, "px") : output;
                }).join(' ');
            };
            // Backward compatibility, to remove in v5.

            Object.defineProperty(spacing, 'unit', {
                get: function get() {
                    if (false) {}

                    return spacingInput;
                }
            });
            spacing.mui = true;
            return spacing;
        }
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/transitions.js
        var transitions = __webpack_require__(22);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/zIndex.js
        var zIndex = __webpack_require__(175);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createMuiTheme.js

        function createMuiTheme() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            var _options$breakpoints = options.breakpoints
              , breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints
              , _options$mixins = options.mixins
              , mixinsInput = _options$mixins === void 0 ? {} : _options$mixins
              , _options$palette = options.palette
              , paletteInput = _options$palette === void 0 ? {} : _options$palette
              , spacingInput = options.spacing
              , _options$typography = options.typography
              , typographyInput = _options$typography === void 0 ? {} : _options$typography
              , other = Object(objectWithoutProperties["a"/* default */
            ])(options, ["breakpoints", "mixins", "palette", "spacing", "typography"]);

            var palette = createPalette(paletteInput);
            var breakpoints = Object(createBreakpoints["a"/* default */
            ])(breakpointsInput);
            var spacing = createSpacing(spacingInput);
            var muiTheme = Object(deepmerge["a"/* default */
            ])({
                breakpoints: breakpoints,
                direction: 'ltr',
                mixins: createMixins(breakpoints, spacing, mixinsInput),
                overrides: {},
                // Inject custom styles
                palette: palette,
                props: {},
                // Provide default props
                shadows: styles_shadows,
                typography: createTypography(palette, typographyInput),
                spacing: spacing,
                shape: styles_shape,
                transitions: transitions["a"/* default */
                ],
                zIndex: zIndex["a"/* default */
                ]
            }, other);

            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            muiTheme = args.reduce(function(acc, argument) {
                return Object(deepmerge["a"/* default */
                ])(acc, argument);
            }, muiTheme);

            if (false) {
                var traverse, pseudoClasses;
            }

            return muiTheme;
        }

        /* harmony default export */
        var styles_createMuiTheme = __webpack_exports__["a"] = (createMuiTheme);

        /***/
    }
    ), /* 169 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(97);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/
        __webpack_require__.n(hoist_non_react_statics_cjs);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js + 4 modules
        var makeStyles = __webpack_require__(764);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/styled/styled.js

        function omit(input, fields) {
            var output = {};
            Object.keys(input).forEach(function(prop) {
                if (fields.indexOf(prop) === -1) {
                    output[prop] = input[prop];
                }
            });
            return output;
        }
        // styled-components's API removes the mapping between components and styles.
        // Using components as a low-level styling construct can be simpler.

        function styled_styled(Component) {
            var componentCreator = function componentCreator(style) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

                var name = options.name
                  , stylesOptions = Object(objectWithoutProperties["a"/* default */
                ])(options, ["name"]);

                if (false) {}

                var classNamePrefix = name;

                if (false) {
                    var displayName;
                }

                var stylesOrCreator = typeof style === 'function' ? function(theme) {
                    return {
                        root: function root(props) {
                            return style(Object(esm_extends["a"/* default */
                            ])({
                                theme: theme
                            }, props));
                        }
                    };
                }
                : {
                    root: style
                };
                var useStyles = Object(makeStyles["a"/* default */
                ])(stylesOrCreator, Object(esm_extends["a"/* default */
                ])({
                    Component: Component,
                    name: name || Component.displayName,
                    classNamePrefix: classNamePrefix
                }, stylesOptions));
                var filterProps;
                var propTypes = {};

                if (style.filterProps) {
                    filterProps = style.filterProps;
                    delete style.filterProps;
                }
                /* eslint-disable react/forbid-foreign-prop-types */

                if (style.propTypes) {
                    propTypes = style.propTypes;
                    delete style.propTypes;
                }
                /* eslint-enable react/forbid-foreign-prop-types */

                var StyledComponent = compat_module["default"].forwardRef(function StyledComponent(props, ref) {
                    var children = props.children
                      , classNameProp = props.className
                      , clone = props.clone
                      , ComponentProp = props.component
                      , other = Object(objectWithoutProperties["a"/* default */
                    ])(props, ["children", "className", "clone", "component"]);

                    var classes = useStyles(props);
                    var className = Object(clsx_m["a"/* default */
                    ])(classes.root, classNameProp);
                    var spread = other;

                    if (filterProps) {
                        spread = omit(spread, filterProps);
                    }

                    if (clone) {
                        return compat_module["default"].cloneElement(children, Object(esm_extends["a"/* default */
                        ])({
                            className: Object(clsx_m["a"/* default */
                            ])(children.props.className, className)
                        }, spread));
                    }

                    if (typeof children === 'function') {
                        return children(Object(esm_extends["a"/* default */
                        ])({
                            className: className
                        }, spread));
                    }

                    var FinalComponent = ComponentProp || Component;
                    return compat_module["default"].createElement(FinalComponent, Object(esm_extends["a"/* default */
                    ])({
                        ref: ref,
                        className: className
                    }, spread), children);
                });
                false ? undefined : void 0;

                if (false) {}

                hoist_non_react_statics_cjs_default()(StyledComponent, Component);
                return StyledComponent;
            };

            return componentCreator;
        }

        /* harmony default export */
        var esm_styled_styled = (styled_styled);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/defaultTheme.js
        var defaultTheme = __webpack_require__(63);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/styled.js

        var styles_styled_styled = function styled(Component) {
            var componentCreator = esm_styled_styled(Component);
            return function(style, options) {
                return componentCreator(style, Object(esm_extends["a"/* default */
                ])({
                    defaultTheme: defaultTheme["a"/* default */
                    ]
                }, options));
            }
            ;
        };

        /* harmony default export */
        var styles_styled = __webpack_exports__["a"] = (styles_styled_styled);

        /***/
    }
    ), /* 170 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _objectWithoutPropertiesLoose;
        });
        function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null)
                return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
                key = sourceKeys[i];
                if (excluded.indexOf(key) >= 0)
                    continue;
                target[key] = source[key];
            }

            return target;
        }

        /***/
    }
    ), /* 171 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var isProduction = "production" === 'production';
        function warning(condition, message) {
            if (!isProduction) {
                if (condition) {
                    return;
                }

                var text = "Warning: " + message;

                if (typeof console !== 'undefined') {
                    console.warn(text);
                }

                try {
                    throw Error(text);
                } catch (x) {}
            }
        }

        /* harmony default export */
        __webpack_exports__["a"] = (warning);

        /***/
    }
    ), /* 172 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        var ThemeContext = react__WEBPACK_IMPORTED_MODULE_0__["default"].createContext(null);

        if (false) {}

        /* harmony default export */
        __webpack_exports__["a"] = (ThemeContext);

        /***/
    }
    ), /* 173 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _iterableToArray;
        });
        function _iterableToArray(iter) {
            if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
                return Array.from(iter);
        }

        /***/
    }
    ), /* 174 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        /* harmony default export */
        __webpack_exports__["a"] = (hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__');

        /***/
    }
    ), /* 175 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        // We need to centralize the zIndex definitions as they work
        // like global values in the browser.
        var zIndex = {
            mobileStepper: 1000,
            speedDial: 1050,
            appBar: 1100,
            drawer: 1200,
            modal: 1300,
            snackbar: 1400,
            tooltip: 1500
        };
        /* harmony default export */
        __webpack_exports__["a"] = (zIndex);

        /***/
    }
    ), /* 176 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _objectWithoutPropertiesLoose;
        });
        function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null)
                return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
                key = sourceKeys[i];
                if (excluded.indexOf(key) >= 0)
                    continue;
                target[key] = source[key];
            }

            return target;
        }

        /***/
    }
    ), /* 177 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _inheritsLoose;
        });
        function _inheritsLoose(subClass, superClass) {
            subClass.prototype = Object.create(superClass.prototype);
            subClass.prototype.constructor = subClass;
            subClass.__proto__ = superClass;
        }

        /***/
    }
    ), /* 178 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);

        /**
 * @ignore - internal component.
 */

        var RadioGroupContext = react__WEBPACK_IMPORTED_MODULE_0__["default"].createContext();

        if (false) {}

        /* harmony default export */
        __webpack_exports__["a"] = (RadioGroupContext);

        /***/
    }
    ), /* 179 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _arrayWithHoles;
        });
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr))
                return arr;
        }

        /***/
    }
    ), /* 180 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return _nonIterableRest;
        });
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }

        /***/
    }
    ), /* 181 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var _createSvgIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20);

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        __webpack_exports__["a"] = (Object(_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__[/* default */
        "a"])(react__WEBPACK_IMPORTED_MODULE_0__["default"].createElement("path", {
            d: "M7 10l5 5 5-5z"
        }), 'ArrowDropDown'));

        /***/
    }
    ), /* 182 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7);

        /**
 * @ignore - internal component.
 */

        var NativeSelectInput = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function NativeSelectInput(props, ref) {
            var classes = props.classes
              , className = props.className
              , disabled = props.disabled
              , IconComponent = props.IconComponent
              , inputRef = props.inputRef
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["classes", "className", "disabled", "IconComponent", "inputRef", "variant"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(react__WEBPACK_IMPORTED_MODULE_2__["default"].Fragment, null, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("select", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, // TODO v5: merge root and select
                classes.select, classes[variant], className, disabled && classes.disabled),
                disabled: disabled,
                ref: inputRef || ref
            }, other)), props.multiple ? null : react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(IconComponent, {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.icon, classes["icon".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(variant))])
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (NativeSelectInput);

        /***/
    }
    ), /* 183 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getScrollbarSize;
        });
        // A change of the browser zoom change the scrollbar size.
        // Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519
        function getScrollbarSize() {
            var scrollDiv = document.createElement('div');
            scrollDiv.style.width = '99px';
            scrollDiv.style.height = '99px';
            scrollDiv.style.position = 'absolute';
            scrollDiv.style.top = '-9999px';
            scrollDiv.style.overflow = 'scroll';
            document.body.appendChild(scrollDiv);
            var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
            return scrollbarSize;
        }

        /***/
    }
    ), /* 184 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getWindowScroll;
        });
        /* harmony import */
        var _getWindow_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);

        function getWindowScroll(node) {
            var win = Object(_getWindow_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(node);
            var scrollLeft = win.pageXOffset;
            var scrollTop = win.pageYOffset;
            return {
                scrollLeft: scrollLeft,
                scrollTop: scrollTop
            };
        }

        /***/
    }
    ), /* 185 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getBorders;
        });
        /* harmony import */
        var _getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64);
        /* harmony import */
        var _instanceOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27);

        function toNumber(cssValue) {
            return parseFloat(cssValue) || 0;
        }

        function getBorders(element) {
            var computedStyle = Object(_instanceOf_js__WEBPACK_IMPORTED_MODULE_1__[/* isHTMLElement */
            "b"])(element) ? Object(_getComputedStyle_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(element) : {};
            return {
                top: toNumber(computedStyle.borderTopWidth),
                right: toNumber(computedStyle.borderRightWidth),
                bottom: toNumber(computedStyle.borderBottomWidth),
                left: toNumber(computedStyle.borderLeftWidth)
            };
        }

        /***/
    }
    ), /* 186 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
        var getBoundingClientRect = __webpack_require__(81);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
        var getWindowScroll = __webpack_require__(184);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindow.js
        var getWindow = __webpack_require__(26);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
        var instanceOf = __webpack_require__(27);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
        function getHTMLElementScroll(element) {
            return {
                scrollLeft: element.scrollLeft,
                scrollTop: element.scrollTop
            };
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js

        function getNodeScroll(node) {
            if (node === Object(getWindow["a"/* default */
            ])(node) || !Object(instanceOf["b"/* isHTMLElement */
            ])(node)) {
                return Object(getWindowScroll["a"/* default */
                ])(node);
            } else {
                return getHTMLElementScroll(node);
            }
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
        var getNodeName = __webpack_require__(38);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getBorders.js
        var getBorders = __webpack_require__(185);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return getCompositeRect;
        });

        // offsets without `border`

        function getInnerOffsets(offsetParent) {
            var rect = Object(getBoundingClientRect["a"/* default */
            ])(offsetParent);
            var borders = Object(getBorders["a"/* default */
            ])(offsetParent);
            return {
                x: rect.x + borders.left,
                y: rect.y + borders.top
            };
        }
        // Returns the composite rect of an element relative to its offsetParent.
        // Composite means it takes into account transforms as well as layout.

        function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
            if (isFixed === void 0) {
                isFixed = false;
            }

            var rect = Object(getBoundingClientRect["a"/* default */
            ])(elementOrVirtualElement);
            var scroll = {
                scrollLeft: 0,
                scrollTop: 0
            };
            var offsets = {
                x: 0,
                y: 0
            };

            if (!isFixed) {
                if (Object(getNodeName["a"/* default */
                ])(offsetParent) !== 'body') {
                    scroll = getNodeScroll(offsetParent);
                }

                if (Object(instanceOf["b"/* isHTMLElement */
                ])(offsetParent)) {
                    offsets = getInnerOffsets(offsetParent);
                }
            }

            return {
                x: rect.left + scroll.scrollLeft - offsets.x,
                y: rect.top + scroll.scrollTop - offsets.y,
                width: rect.width,
                height: rect.height
            };
        }

        /***/
    }
    ), /* 187 */
    , /* 188 */
    , /* 189 */
    , /* 190 */
    , /* 191 */
    , /* 192 */
    , /* 193 */
    , /* 194 */
    , /* 195 */
    , /* 196 */
    , /* 197 */
    , /* 198 */
    , /* 199 */
    , /* 200 */
    , /* 201 */
    , /* 202 */
    , /* 203 */
    , /* 204 */
    , /* 205 */
    , /* 206 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const Button_1 = tslib_1.__importDefault(__webpack_require__(115));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        exports.ToggleButton = ({data, actions, plugin, children})=>react_1.default.createElement(Button_1.default, {
            onClick: ()=>{
                if (plugin.enabled) {
                    actions.disable(plugin.id);
                } else {
                    actions.enable(plugin.id);
                }
            }
            ,
            "aria-label": `${plugin.enabled ? 'Disable' : 'Enable'} ${plugin.title}`,
            "aria-roledescription": 'button',
            role: 'button',
            variant: 'contained',
            color: plugin.enabled ? 'primary' : 'secondary'
        }, children ? children : plugin.enabled ? 'Disable' : 'Enable');

        exports.default = exports.ToggleButton;

        /***/
    }
    ), /* 207 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const FormControlLabel_1 = tslib_1.__importDefault(__webpack_require__(140));

        const FormLabel_1 = tslib_1.__importDefault(__webpack_require__(116));

        const Radio_1 = tslib_1.__importDefault(__webpack_require__(141));

        const RadioGroup_1 = tslib_1.__importDefault(__webpack_require__(142));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        exports.Component = ({data, actions, plugin})=>react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(FormLabel_1.default, {
            component: 'legend'
        }, plugin.title), react_1.default.createElement(RadioGroup_1.default, {
            role: 'radiogroup',
            "aria-label": `${plugin.title} Options`
        }, data.map(datum=>react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(FormControlLabel_1.default, {
            id: datum.id,
            control: react_1.default.createElement(Radio_1.default, null),
            checked: datum.selected,
            name: datum.name,
            label: datum.value,
            value: datum.value,
            "aria-checked": datum.selected ? 'true' : 'false',
            "aria-label": `${plugin.title} Option: ${datum.text}`,
            tabIndex: datum.selected ? 0 : -1,
            onChange: ()=>actions.selectOption(plugin.id, datum.id)
        })))));

        exports.default = exports.Component;

        /***/
    }
    ), /* 208 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const action_1 = __webpack_require__(48);

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        exports.Scalable = ({plugin, actions, scaling})=>{
            let displayFactor = scaling.factor.toFixed(2);

            if (scaling.type === action_1.ValueManipulationType.PercentageScaling) {
                displayFactor = `${Math.round(scaling.factor * 100)}%`;
            }

            return react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement("p", null, "Value: ", displayFactor), react_1.default.createElement("button", {
                onClick: ()=>actions.decrement(plugin.id),
                "aria-label": `Decrement ${plugin.title}`,
                "aria-roledescription": 'button',
                role: 'button'
            }, "-"), react_1.default.createElement("button", {
                onClick: ()=>actions.increment(plugin.id),
                "aria-label": `Increment ${plugin.title}`,
                "aria-roledescription": 'button',
                role: 'button'
            }, "+"));
        }
        ;

        exports.default = exports.Scalable;

        /***/
    }
    ), /* 209 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsEqualDeep = __webpack_require__(469)
          , isObjectLike = __webpack_require__(75);

        /**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
        function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
                return true;
            }
            if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
                return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }

        module.exports = baseIsEqual;

        /***/
    }
    ), /* 210 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(143)
          , stackClear = __webpack_require__(475)
          , stackDelete = __webpack_require__(476)
          , stackGet = __webpack_require__(477)
          , stackHas = __webpack_require__(478)
          , stackSet = __webpack_require__(479);

        /**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
        function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }

        // Add methods to `Stack`.
        Stack.prototype.clear = stackClear;
        Stack.prototype['delete'] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;

        module.exports = Stack;

        /***/
    }
    ), /* 211 */
    /***/
    (function(module, exports) {

        /**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
        function eq(value, other) {
            return value === other || (value !== value && other !== other);
        }

        module.exports = eq;

        /***/
    }
    ), /* 212 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74)
          , root = __webpack_require__(60);

        /* Built-in method references that are verified to be native. */
        var Map = getNative(root, 'Map');

        module.exports = Map;

        /***/
    }
    ), /* 213 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(117)
          , isObject = __webpack_require__(69);

        /** `Object#toString` result references. */
        var asyncTag = '[object AsyncFunction]'
          , funcTag = '[object Function]'
          , genTag = '[object GeneratorFunction]'
          , proxyTag = '[object Proxy]';

        /**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
        function isFunction(value) {
            if (!isObject(value)) {
                return false;
            }
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }

        module.exports = isFunction;

        /***/
    }
    ), /* 214 */
    /***/
    (function(module, exports, __webpack_require__) {

        var mapCacheClear = __webpack_require__(486)
          , mapCacheDelete = __webpack_require__(493)
          , mapCacheGet = __webpack_require__(495)
          , mapCacheHas = __webpack_require__(496)
          , mapCacheSet = __webpack_require__(497);

        /**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
        function MapCache(entries) {
            var index = -1
              , length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `MapCache`.
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype['delete'] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;

        module.exports = MapCache;

        /***/
    }
    ), /* 215 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayFilter = __webpack_require__(507)
          , stubArray = __webpack_require__(340);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Built-in value references. */
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols;

        /**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) {
                return [];
            }
            object = Object(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        }
        ;

        module.exports = getSymbols;

        /***/
    }
    ), /* 216 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsTypedArray = __webpack_require__(510)
          , baseUnary = __webpack_require__(218)
          , nodeUtil = __webpack_require__(219);

        /* Node.js helper references. */
        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

        /**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

        module.exports = isTypedArray;

        /***/
    }
    ), /* 217 */
    /***/
    (function(module, exports) {

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
        function isLength(value) {
            return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }

        module.exports = isLength;

        /***/
    }
    ), /* 218 */
    /***/
    (function(module, exports) {

        /**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
        function baseUnary(func) {
            return function(value) {
                return func(value);
            }
            ;
        }

        module.exports = baseUnary;

        /***/
    }
    ), /* 219 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var freeGlobal = __webpack_require__(333);

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Detect free variable `process` from Node.js. */
            var freeProcess = moduleExports && freeGlobal.process;

            /** Used to access faster Node.js helpers. */
            var nodeUtil = (function() {
                try {
                    // Use `util.types` for Node.js 10+.
                    var types = freeModule && freeModule.require && freeModule.require('util').types;

                    if (types) {
                        return types;
                    }

                    // Legacy `process.binding('util')` for Node.js < 10.
                    return freeProcess && freeProcess.binding && freeProcess.binding('util');
                } catch (e) {}
            }());

            module.exports = nodeUtil;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(119)(module)))

        /***/
    }
    ), /* 220 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
        function isPrototype(value) {
            var Ctor = value && value.constructor
              , proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

            return value === proto;
        }

        module.exports = isPrototype;

        /***/
    }
    ), /* 221 */
    /***/
    (function(module, exports) {

        /**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
        function arrayEach(array, iteratee) {
            var index = -1
              , length = array == null ? 0 : array.length;

            while (++index < length) {
                if (iteratee(array[index], index, array) === false) {
                    break;
                }
            }
            return array;
        }

        module.exports = arrayEach;

        /***/
    }
    ), /* 222 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArray = __webpack_require__(56)
          , isSymbol = __webpack_require__(151);

        /** Used to match property names within property paths. */
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/
          , reIsPlainProp = /^\w*$/;

        /**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
        function isKey(value, object) {
            if (isArray(value)) {
                return false;
            }
            var type = typeof value;
            if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
                return true;
            }
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || (object != null && value in Object(object));
        }

        module.exports = isKey;

        /***/
    }
    ), /* 223 */
    /***/
    (function(module, exports, __webpack_require__) {

        var overArg = __webpack_require__(345);

        /** Built-in value references. */
        var getPrototype = overArg(Object.getPrototypeOf, Object);

        module.exports = getPrototype;

        /***/
    }
    ), /* 224 */
    /***/
    (function(module, exports, __webpack_require__) {

        var toFinite = __webpack_require__(538);

        /**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
        function toInteger(value) {
            var result = toFinite(value)
              , remainder = result % 1;

            return result === result ? (remainder ? result - remainder : result) : 0;
        }

        module.exports = toInteger;

        /***/
    }
    ), /* 225 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Uint8Array = __webpack_require__(336);

        /**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
        function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
        }

        module.exports = cloneArrayBuffer;

        /***/
    }
    ), /* 226 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(566);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 227 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const textFieldTags = ['textarea', 'input'];
        exports.Dom = {
            getFocusedNode: ()=>document.activeElement,
            isFocusedNodeInputField: ()=>{
                const activeElement = document.activeElement;

                if (activeElement && textFieldTags.includes(activeElement.tagName.toLowerCase())) {
                    // @ts-ignore
                    return activeElement;
                }
            }
            ,

            /**
   * Constructs new element text value based on current value.
   * Inserts new value text into location of cursor, if applicable.
   * If element has active selection text, value inserted in place of selection.
   *
   * @param {HTMLTextAreaElement | HTMLInputElement} element
   * @param {string | undefined} value
   * @returns {string}
   */
            insertTextIntoInputElement: ({element, value})=>{
                if (!element || !value) {
                    return '';
                }

                const currentValue = element.value;
                const selectionStart = element.selectionStart;
                const selectionEnd = element.selectionEnd;
                const prefixChunk = currentValue.substring(0, selectionStart ? selectionStart : 0);
                const suffixChunk = currentValue.substring(selectionEnd ? selectionEnd : currentValue.length);
                const newValue = prefixChunk.concat(value ? value : '', suffixChunk);
                element.value = newValue;
                // Insert selection at end of inserted text;

                element.setSelectionRange(prefixChunk.length + value.length, prefixChunk.length + value.length);
                return newValue;
            }
            ,

            /**
   * Emulates 'Backspace' key press for passed input element.
   *
   * @param {HTMLTextAreaElement | HTMLInputElement} element
   * @returns {string}
   */
            simulateBackspaceInInputElement: element=>{
                if (!element) {
                    return '';
                }

                const currentValue = element.value;
                const selectionStart = element.selectionStart ? element.selectionStart : 0;
                const selectionEnd = element.selectionEnd ? element.selectionEnd : 0;
                // Concat prefix + suffix

                const prefixChunk = currentValue.substring(0, selectionStart);
                // Correct

                const suffixChunk = currentValue.substring(selectionEnd);
                // Correct

                let newValue = prefixChunk.concat(suffixChunk);
                // If start / end are same, remove first char of suffix

                if (selectionStart === selectionEnd) {
                    newValue = prefixChunk.slice(0, selectionStart - 1).concat(suffixChunk);
                }

                element.value = newValue;

                if (selectionStart === selectionEnd) {
                    element.setSelectionRange(selectionStart - 1, selectionStart - 1);
                } else {
                    element.setSelectionRange(selectionStart, selectionStart);
                }

                return newValue;
            }
            ,

            /**
   * Emulates 'Delete' key press for passed input element.
   *
   * @param {HTMLTextAreaElement | HTMLInputElement} element
   * @returns {string}
   */
            simulateDeleteInInputElement: element=>{
                if (!element) {
                    return '';
                }

                const currentValue = element.value;
                const selectionStart = element.selectionStart ? element.selectionStart : 0;
                const selectionEnd = element.selectionEnd ? element.selectionEnd : 0;
                // Concat prefix + suffix

                const prefixChunk = currentValue.substring(0, selectionStart);
                // Correct

                const suffixChunk = currentValue.substring(selectionEnd);
                // Correct

                let newValue = prefixChunk.concat(suffixChunk);
                // If start / end are same, remove first char of suffix

                if (selectionStart === selectionEnd) {
                    newValue = prefixChunk.concat(suffixChunk.slice(1));
                }

                element.value = newValue;
                // Insert selection at end of inserted text;

                element.setSelectionRange(selectionStart, selectionStart);
                return newValue;
            }
            ,
            simulateTabInInputElement: element=>{}
        };
        exports.default = exports.Dom;

        /***/
    }
    ), /* 228 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(574);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 229 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const immer_reducer_1 = __webpack_require__(157);

        const findIndex_1 = tslib_1.__importDefault(__webpack_require__(120));

        const state_1 = __webpack_require__(230);

        const getPluginIndexById = (plugins,id)=>{
            return findIndex_1.default(plugins, plugin=>plugin.id === id);
        }
        ;

        class BaseReducer extends immer_reducer_1.ImmerReducer {
            decrement({id}) {
                const i = getPluginIndexById(this.draftState.plugins, id);
                const scaling = this.draftState.plugins[i].scaling;

                if (scaling) {
                    scaling.factor = scaling.factor ? scaling.factor - scaling.increment : scaling.baseFactor - scaling.increment;
                }
            }

            disable({id}) {
                const i = getPluginIndexById(this.draftState.plugins, id);
                this.draftState.plugins[i].enabled = false;
            }

            disableKeyboard() {
                this.draftState.keyboard.enabled = false;
            }

            enable({id}) {
                const i = getPluginIndexById(this.draftState.plugins, id);
                this.draftState.plugins[i].enabled = true;
            }

            enableKeyboard() {
                this.draftState.keyboard.enabled = true;
            }

            focusNode(payload) {
                this.draftState.focusedNode = payload.node;
            }

            increment({id}) {
                const i = getPluginIndexById(this.draftState.plugins, id);
                const scaling = this.draftState.plugins[i].scaling;

                if (scaling) {
                    scaling.factor = scaling.factor ? scaling.factor + scaling.increment : scaling.baseFactor + scaling.increment;
                }
            }

            keyDown({key}) {
                this.draftState.keyboard.pressedKeys[key] = true;
            }

            keyUp({key}) {
                this.draftState.keyboard.pressedKeys[key] = false;
            }

            reset({newState}) {
                this.draftState = newState ? newState : state_1.defaultState;
            }

            selectOption({id, selectId}) {
                const i = getPluginIndexById(this.draftState.plugins, id);
                const plugin = this.draftState.plugins[i];

                if (plugin && plugin.options) {
                    // Reset all
                    for (const option of plugin.options) {
                        option.selected = false;
                    }

                    plugin.options[selectId].selected = true;
                }
            }

            setActiveTextToSpeechVoice({voice}) {
                // Convert between IGoogleCloudVoice and IGoogleCloudVoiceSelectionParams
                this.draftState.services.googleCloud.textToSpeech.activeVoice = {
                    languageCode: voice.languageCodes[0],
                    name: voice.name,
                    ssmlGender: voice.ssmlGender
                };
            }

            setTextToSpeechPitch({value}) {
                this.draftState.services.googleCloud.textToSpeech.audioConfig.pitch = value;
            }

            setTextToSpeechSpeakingRate({value}) {
                this.draftState.services.googleCloud.textToSpeech.audioConfig.speakingRate = value;
            }

            setTextToSpeechVolumeGainDb({value}) {
                this.draftState.services.googleCloud.textToSpeech.audioConfig.volumeGainDb = value;
            }

            setTextToSpeechVoices({voices}) {
                this.draftState.services.googleCloud.textToSpeech.voices = voices;
            }

        }

        exports.BaseReducer = BaseReducer;

        /***/
    }
    ), /* 230 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const manager_1 = tslib_1.__importDefault(__webpack_require__(114));

        const defaults_1 = __webpack_require__(354);

        exports.defaultState = {
            focusedNode: undefined,
            keyboard: {
                enabled: false,
                pressedKeys: {}
            },
            plugins: manager_1.default.getInstance().plugins,
            services: {
                googleCloud: {
                    textToSpeech: {
                        activeVoice: defaults_1.GOOGLE_CLOUD_DEFAULT_VOICE,
                        audioConfig: defaults_1.GOOGLE_CLOUD_DEFAULT_AUDIO_CONFIG,
                        voices: []
                    }
                }
            }
        };

        /***/
    }
    ), /* 231 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const aria_1 = tslib_1.__importDefault(__webpack_require__(154));

        const audio_1 = __webpack_require__(585);

        const manager_1 = tslib_1.__importDefault(__webpack_require__(114));

        const config_1 = tslib_1.__importStar(__webpack_require__(57));

        const immer_reducer_1 = __webpack_require__(157);

        const data_1 = __webpack_require__(24);

        const redux_saga_1 = __webpack_require__(423);

        const effects_1 = __webpack_require__(62);

        const actions_1 = __webpack_require__(92);

        const reducers_1 = __webpack_require__(229);

        const on_focus_1 = __webpack_require__(687);

        const on_key_down_1 = __webpack_require__(688);

        const state_1 = __webpack_require__(690);

        const selectors_1 = __webpack_require__(41);

        let speechToTextAudioElement;

        const getActionTypeFromImmer = action=>{
            if (action && action.type && action.type.toString().startsWith('IMMER')) {
                return action.type.toString().split('#')[1];
            }

            return '';
        }
        ;

        function *onPluginEnable(action) {
            if (!immer_reducer_1.isAction(action, actions_1.ActionCreators.enable)) {
                return;
            }
            // On keyboard nav enable

            if (action.payload.id === data_1.Ids.KeyboardNavigation || action.payload.id === data_1.Ids.VirtualKeyboard) {
                // Enable keyboard
                yield effects_1.put(actions_1.ActionCreators.enableKeyboard());
            }
        }

        exports.onPluginEnable = onPluginEnable;

        function *onPluginDisable(action) {
            if (!immer_reducer_1.isAction(action, actions_1.ActionCreators.disable)) {
                return;
            }
            // On keyboard plugin disable

            if (action.payload.id === data_1.Ids.KeyboardNavigation || action.payload.id === data_1.Ids.VirtualKeyboard) {
                // Disable keyboard
                yield effects_1.put(actions_1.ActionCreators.disableKeyboard());
            }
            // On text-to-speech, disable any active speaker

            if (action.payload.id === data_1.Ids.TextToSpeech) {
                const synth = window.speechSynthesis;

                if (synth) {
                    synth.cancel();
                }

                if (speechToTextAudioElement) {
                    speechToTextAudioElement.pause();
                }
            }
        }

        exports.onPluginDisable = onPluginDisable;

        function *synthesizeSpeech({text, engine=config_1.default.textToSpeechEngine}) {
            if (engine === config_1.TextToSpeechEngine.Browser) {
                const synth = window.speechSynthesis;
                synth.cancel();
                const utterance = new SpeechSynthesisUtterance(text);
                utterance.voice = window.speechSynthesis.getVoices()[0];
                utterance.rate = 1;
                utterance.pitch = 1;
                synth.speak(utterance);
            } else if (engine === config_1.TextToSpeechEngine.GoogleCloud) {
                try {
                    const state = yield effects_1.select();
                    const audioConfig = new selectors_1.Selectors(state).getTextToSpeechAudioConfig();
                    const voice = new selectors_1.Selectors(state).getActiveTextToSpeechVoice();
                    console.time('Google Cloud transaction time');
                    const response = yield audio_1.AudioUtilities.synthesizeSpeechFromText({
                        audioConfig,
                        text,
                        voice
                    });
                    console.timeEnd('Google Cloud transaction time');

                    if (response && response.audioContent) {
                        if (speechToTextAudioElement) {
                            speechToTextAudioElement.pause();
                        }

                        speechToTextAudioElement = audio_1.AudioUtilities.createHTMLAudioElement({
                            content: response.audioContent
                        });

                        if (speechToTextAudioElement) {
                            return speechToTextAudioElement.play();
                        }
                    } else {
                        console.log(`No valid response returned.`);
                    }
                } catch (error) {
                    console.error(error);
                    // Utility.throwError(error);
                }
            }
        }

        function *onFocusNode(action) {
            if (!immer_reducer_1.isAction(action, actions_1.ActionCreators.focusNode) || !action.payload.node) {
                return;
            }

            const state = yield effects_1.select();

            if (new selectors_1.Selectors(state).getPlugin(data_1.Ids.TextToSpeech).enabled) {
                const text = aria_1.default.getElementText({
                    element: action.payload.node
                });

                if (text) {
                    // Perform text-to-speech if enabled
                    yield synthesizeSpeech({
                        text
                    });
                }
            }
        }

        exports.onFocusNode = onFocusNode;
        /**
 * Executes plugin tasks on state change.
 * @param action
 * @returns {Generator<never, void, unknown>}
 */

        function *watchPluginTasks(action) {
            if (!action || !action.payload || !action.payload.id) {
                return;
            }

            const plugin = manager_1.default.getInstance().find(action.payload.id);

            if (plugin && plugin.tasks) {
                for (const task of plugin.tasks) {
                    if (task.on === getActionTypeFromImmer(action)) {
                        if (task.func) {
                            for (const func of task.func) {
                                yield func();
                            }
                        }
                    }
                }
            }
        }

        exports.watchPluginTasks = watchPluginTasks;
        /**
 * Converts stream into Redux-saga channel.
 *
 * @see https://redux-saga.js.org/docs/advanced/Channels.html
 * @param stream
 * @param {number} limit
 * @returns {any}
 */

        function toChannel(stream, limit=5) {
            let channelEmitter;
            const channel = redux_saga_1.eventChannel(emitter=>{
                channelEmitter = emitter;

                function onValue(value) {
                    return emitter(value);
                }

                const end = ()=>emitter(redux_saga_1.END);

                stream.onValue(onValue);
                stream.onError(end);
                stream.onEnd(end);
                return ()=>{
                    stream.offValue(onValue);
                }
                ;
                // new messages will be buffered up to limit
                // latest excess message is added to end of list
            }
            , redux_saga_1.buffers.sliding(limit));

            channel.end = ()=>channelEmitter(redux_saga_1.END);

            return channel;
        }

        exports.toChannel = toChannel;
        /**
 * Root saga collection.
 *
 * @see https://redux-saga.js.org/docs/api/
 * @returns {Generator<<"ALL", <"CALL", CallEffectDescriptor> | <"FORK", ForkEffectDescriptor>>, void, unknown>}
 */

        function *rootSagas() {
            yield effects_1.all([// Blocking call to load state from storage
            effects_1.call(state_1.loadStateFromLocalStorage), // Blocking call to populate speech to text voices
            effects_1.call(audio_1.AudioUtilities.getSpeechToTextVoices), effects_1.takeEvery(actions_1.ActionCreators.enable, onPluginEnable), effects_1.takeEvery(actions_1.ActionCreators.disable, onPluginDisable), effects_1.takeEvery(actions_1.ActionCreators.focusNode, onFocusNode), effects_1.takeEvery(// Pattern to track all actions from reducer
            action=>immer_reducer_1.isActionFrom(action, reducers_1.BaseReducer), watchPluginTasks), // Track all focus events
            effects_1.call(on_focus_1.watchFocus), // Track all keydown events
            effects_1.call(on_key_down_1.watchKeyDown), // Save on store update, after localStorageDebounceDelay seconds of non-interaction
            effects_1.debounce(config_1.default.localStorageDebounceDelay * 1000, [actions_1.ActionCreators.increment, actions_1.ActionCreators.disable, actions_1.ActionCreators.enable, actions_1.ActionCreators.decrement], state_1.saveStateToLocalStorage)]);
        }

        exports.rootSagas = rootSagas;

        /***/
    }
    ), /* 232 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*global exports*/
        var SignStream = __webpack_require__(588);
        var VerifyStream = __webpack_require__(674);

        var ALGORITHMS = ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'PS256', 'PS384', 'PS512', 'ES256', 'ES384', 'ES512'];

        exports.ALGORITHMS = ALGORITHMS;
        exports.sign = SignStream.sign;
        exports.verify = VerifyStream.verify;
        exports.decode = VerifyStream.decode;
        exports.isValid = VerifyStream.isValid;
        exports.createSign = function createSign(opts) {
            return new SignStream(opts);
        }
        ;
        exports.createVerify = function createVerify(opts) {
            return new VerifyStream(opts);
        }
        ;

        /***/
    }
    ), /* 233 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var R = typeof Reflect === 'object' ? Reflect : null
        var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
            return Function.prototype.apply.call(target, receiver, args);
        }

        var ReflectOwnKeys
        if (R && typeof R.ownKeys === 'function') {
            ReflectOwnKeys = R.ownKeys
        } else if (Object.getOwnPropertySymbols) {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
                return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
            }
            ;
        } else {
            ReflectOwnKeys = function ReflectOwnKeys(target) {
                return Object.getOwnPropertyNames(target);
            }
            ;
        }

        function ProcessEmitWarning(warning) {
            if (console && console.warn)
                console.warn(warning);
        }

        var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
            return value !== value;
        }

        function EventEmitter() {
            EventEmitter.init.call(this);
        }
        module.exports = EventEmitter;

        // Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._eventsCount = 0;
        EventEmitter.prototype._maxListeners = undefined;

        // By default EventEmitters will print a warning if more than 10 listeners are
        // added to it. This is a useful default which helps finding memory leaks.
        var defaultMaxListeners = 10;

        function checkListener(listener) {
            if (typeof listener !== 'function') {
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
            }
        }

        Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
            enumerable: true,
            get: function() {
                return defaultMaxListeners;
            },
            set: function(arg) {
                if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
                }
                defaultMaxListeners = arg;
            }
        });

        EventEmitter.init = function() {

            if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
                this._events = Object.create(null);
                this._eventsCount = 0;
            }

            this._maxListeners = this._maxListeners || undefined;
        }
        ;

        // Obviously not all Emitters should be limited to 10. This function allows
        // that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
            if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
                throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
            }
            this._maxListeners = n;
            return this;
        }
        ;

        function _getMaxListeners(that) {
            if (that._maxListeners === undefined)
                return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
        }

        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return _getMaxListeners(this);
        }
        ;

        EventEmitter.prototype.emit = function emit(type) {
            var args = [];
            for (var i = 1; i < arguments.length; i++)
                args.push(arguments[i]);
            var doError = (type === 'error');

            var events = this._events;
            if (events !== undefined)
                doError = (doError && events.error === undefined);
            else if (!doError)
                return false;

            // If there is no 'error' event listener then throw.
            if (doError) {
                var er;
                if (args.length > 0)
                    er = args[0];
                if (er instanceof Error) {
                    // Note: The comments on the `throw` lines are intentional, they show
                    // up in Node's output if this results in an unhandled exception.
                    throw er;
                    // Unhandled 'error' event
                }
                // At least give some kind of context to the user
                var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
                err.context = er;
                throw err;
                // Unhandled 'error' event
            }

            var handler = events[type];

            if (handler === undefined)
                return false;

            if (typeof handler === 'function') {
                ReflectApply(handler, this, args);
            } else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    ReflectApply(listeners[i], this, args);
            }

            return true;
        }
        ;

        function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;

            checkListener(listener);

            events = target._events;
            if (events === undefined) {
                events = target._events = Object.create(null);
                target._eventsCount = 0;
            } else {
                // To avoid recursion in the case that type === "newListener"! Before
                // adding it to the listeners, first emit "newListener".
                if (events.newListener !== undefined) {
                    target.emit('newListener', type, listener.listener ? listener.listener : listener);

                    // Re-assign `events` because a newListener handler could have caused the
                    // this._events to be assigned to a new object
                    events = target._events;
                }
                existing = events[type];
            }

            if (existing === undefined) {
                // Optimize the case of one listener. Don't need the extra array object.
                existing = events[type] = listener;
                ++target._eventsCount;
            } else {
                if (typeof existing === 'function') {
                    // Adding the second element, need to change to array.
                    existing = events[type] = prepend ? [listener, existing] : [existing, listener];
                    // If we've already got an array, just append.
                } else if (prepend) {
                    existing.unshift(listener);
                } else {
                    existing.push(listener);
                }

                // Check for listener leak
                m = _getMaxListeners(target);
                if (m > 0 && existing.length > m && !existing.warned) {
                    existing.warned = true;
                    // No error code for this since it is a Warning
                    // eslint-disable-next-line no-restricted-syntax
                    var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
                    w.name = 'MaxListenersExceededWarning';
                    w.emitter = target;
                    w.type = type;
                    w.count = existing.length;
                    ProcessEmitWarning(w);
                }
            }

            return target;
        }

        EventEmitter.prototype.addListener = function addListener(type, listener) {
            return _addListener(this, type, listener, false);
        }
        ;

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.prependListener = function prependListener(type, listener) {
            return _addListener(this, type, listener, true);
        }
        ;

        function onceWrapper() {
            if (!this.fired) {
                this.target.removeListener(this.type, this.wrapFn);
                this.fired = true;
                if (arguments.length === 0)
                    return this.listener.call(this.target);
                return this.listener.apply(this.target, arguments);
            }
        }

        function _onceWrap(target, type, listener) {
            var state = {
                fired: false,
                wrapFn: undefined,
                target: target,
                type: type,
                listener: listener
            };
            var wrapped = onceWrapper.bind(state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
        }

        EventEmitter.prototype.once = function once(type, listener) {
            checkListener(listener);
            this.on(type, _onceWrap(this, type, listener));
            return this;
        }
        ;

        EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
            checkListener(listener);
            this.prependListener(type, _onceWrap(this, type, listener));
            return this;
        }
        ;

        // Emits a 'removeListener' event if and only if the listener was removed.
        EventEmitter.prototype.removeListener = function removeListener(type, listener) {
            var list, events, position, i, originalListener;

            checkListener(listener);

            events = this._events;
            if (events === undefined)
                return this;

            list = events[type];
            if (list === undefined)
                return this;

            if (list === listener || list.listener === listener) {
                if (--this._eventsCount === 0)
                    this._events = Object.create(null);
                else {
                    delete events[type];
                    if (events.removeListener)
                        this.emit('removeListener', type, list.listener || listener);
                }
            } else if (typeof list !== 'function') {
                position = -1;

                for (i = list.length - 1; i >= 0; i--) {
                    if (list[i] === listener || list[i].listener === listener) {
                        originalListener = list[i].listener;
                        position = i;
                        break;
                    }
                }

                if (position < 0)
                    return this;

                if (position === 0)
                    list.shift();
                else {
                    spliceOne(list, position);
                }

                if (list.length === 1)
                    events[type] = list[0];

                if (events.removeListener !== undefined)
                    this.emit('removeListener', type, originalListener || listener);
            }

            return this;
        }
        ;

        EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

        EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
            var listeners, events, i;

            events = this._events;
            if (events === undefined)
                return this;

            // not listening for removeListener, no need to emit
            if (events.removeListener === undefined) {
                if (arguments.length === 0) {
                    this._events = Object.create(null);
                    this._eventsCount = 0;
                } else if (events[type] !== undefined) {
                    if (--this._eventsCount === 0)
                        this._events = Object.create(null);
                    else
                        delete events[type];
                }
                return this;
            }

            // emit removeListener for all listeners on all events
            if (arguments.length === 0) {
                var keys = Object.keys(events);
                var key;
                for (i = 0; i < keys.length; ++i) {
                    key = keys[i];
                    if (key === 'removeListener')
                        continue;
                    this.removeAllListeners(key);
                }
                this.removeAllListeners('removeListener');
                this._events = Object.create(null);
                this._eventsCount = 0;
                return this;
            }

            listeners = events[type];

            if (typeof listeners === 'function') {
                this.removeListener(type, listeners);
            } else if (listeners !== undefined) {
                // LIFO order
                for (i = listeners.length - 1; i >= 0; i--) {
                    this.removeListener(type, listeners[i]);
                }
            }

            return this;
        }
        ;

        function _listeners(target, type, unwrap) {
            var events = target._events;

            if (events === undefined)
                return [];

            var evlistener = events[type];
            if (evlistener === undefined)
                return [];

            if (typeof evlistener === 'function')
                return unwrap ? [evlistener.listener || evlistener] : [evlistener];

            return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
        }

        EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
        }
        ;

        EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
        }
        ;

        EventEmitter.listenerCount = function(emitter, type) {
            if (typeof emitter.listenerCount === 'function') {
                return emitter.listenerCount(type);
            } else {
                return listenerCount.call(emitter, type);
            }
        }
        ;

        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
            var events = this._events;

            if (events !== undefined) {
                var evlistener = events[type];

                if (typeof evlistener === 'function') {
                    return 1;
                } else if (evlistener !== undefined) {
                    return evlistener.length;
                }
            }

            return 0;
        }

        EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
        }
        ;

        function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i)
                copy[i] = arr[i];
            return copy;
        }

        function spliceOne(list, index) {
            for (; index + 1 < list.length; index++)
                list[index] = list[index + 1];
            list.pop();
        }

        function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) {
                ret[i] = arr[i].listener || arr[i];
            }
            return ret;
        }

        /***/
    }
    ), /* 234 */
    /***/
    (function(module, exports, __webpack_require__) {

        exports = module.exports = __webpack_require__(376);
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = __webpack_require__(236);
        exports.Duplex = __webpack_require__(78);
        exports.Transform = __webpack_require__(379);
        exports.PassThrough = __webpack_require__(597);

        /***/
    }
    ), /* 235 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* eslint-disable node/no-deprecated-api */
        var buffer = __webpack_require__(25)
        var Buffer = buffer.Buffer

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
            for (var key in src) {
                dst[key] = src[key]
            }
        }
        if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
            module.exports = buffer
        } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
        }

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer)

        SafeBuffer.from = function(arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
                throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.alloc = function(size, fill, encoding) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
                if (typeof encoding === 'string') {
                    buf.fill(fill, encoding)
                } else {
                    buf.fill(fill)
                }
            } else {
                buf.fill(0)
            }
            return buf
        }

        SafeBuffer.allocUnsafe = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
        }

        SafeBuffer.allocUnsafeSlow = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
        }

        /***/
    }
    ), /* 236 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(process, setImmediate, global) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // A bit simpler than readable streams.
            // Implement an async ._write(chunk, encoding, cb), and it'll handle all
            // the drain event emission and buffering.

            /*<replacement>*/

            var pna = __webpack_require__(158);
            /*</replacement>*/

            module.exports = Writable;

            /* <replacement> */
            function WriteReq(chunk, encoding, cb) {
                this.chunk = chunk;
                this.encoding = encoding;
                this.callback = cb;
                this.next = null;
            }

            // It seems a linked list but it is not
            // there will be only 2 of these for each stream
            function CorkedRequest(state) {
                var _this = this;

                this.next = null;
                this.entry = null;
                this.finish = function() {
                    onCorkedFinish(_this, state);
                }
                ;
            }
            /* </replacement> */

            /*<replacement>*/
            var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Writable.WritableState = WritableState;

            /*<replacement>*/
            var util = Object.create(__webpack_require__(121));
            util.inherits = __webpack_require__(16);
            /*</replacement>*/

            /*<replacement>*/
            var internalUtil = {
                deprecate: __webpack_require__(596)
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = __webpack_require__(377);
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = __webpack_require__(235).Buffer;
            var OurUint8Array = global.Uint8Array || function() {}
            ;
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            var destroyImpl = __webpack_require__(378);

            util.inherits(Writable, Stream);

            function nop() {}

            function WritableState(options, stream) {
                Duplex = Duplex || __webpack_require__(78);

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag to indicate whether or not this stream
                // contains buffers or objects.
                this.objectMode = !!options.objectMode;

                if (isDuplex)
                    this.objectMode = this.objectMode || !!options.writableObjectMode;

                // the point at which write() starts returning false
                // Note: 0 is a valid value, means that we always return false if
                // the entire buffer is not flushed immediately on write()
                var hwm = options.highWaterMark;
                var writableHwm = options.writableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0)
                    this.highWaterMark = hwm;
                else if (isDuplex && (writableHwm || writableHwm === 0))
                    this.highWaterMark = writableHwm;
                else
                    this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // if _final has been called
                this.finalCalled = false;

                // drain event flag.
                this.needDrain = false;
                // at the start of calling end()
                this.ending = false;
                // when end() has been called, and returned
                this.ended = false;
                // when 'finish' is emitted
                this.finished = false;

                // has it been destroyed
                this.destroyed = false;

                // should we decode strings into buffers before passing to _write?
                // this is here so that some node-core streams can optimize string
                // handling at a lower level.
                var noDecode = options.decodeStrings === false;
                this.decodeStrings = !noDecode;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // not an actual buffer we keep track of, but a measurement
                // of how much we're waiting to get pushed to some underlying
                // socket or file.
                this.length = 0;

                // a flag to see when we're in the middle of a write.
                this.writing = false;

                // when true all writes will be buffered until .uncork() call
                this.corked = 0;

                // a flag to be able to tell if the onwrite cb is called immediately,
                // or on a later tick.  We set this to true at first, because any
                // actions that shouldn't happen until "later" should generally also
                // not happen before the first write call.
                this.sync = true;

                // a flag to know if we're processing previously buffered items, which
                // may call the _write() callback in the same tick, so that we don't
                // end up in an overlapped onwrite situation.
                this.bufferProcessing = false;

                // the callback that's passed to _write(chunk,cb)
                this.onwrite = function(er) {
                    onwrite(stream, er);
                }
                ;

                // the callback that the user supplies to write(chunk,encoding,cb)
                this.writecb = null;

                // the amount that is being written when _write is called.
                this.writelen = 0;

                this.bufferedRequest = null;
                this.lastBufferedRequest = null;

                // number of pending user-supplied write callbacks
                // this must be 0 before 'finish' can be emitted
                this.pendingcb = 0;

                // emit prefinish if the only thing we're waiting for is _write cbs
                // This is relevant for synchronous Transform streams
                this.prefinished = false;

                // True if the error was already emitted and should not be thrown again
                this.errorEmitted = false;

                // count buffered requests
                this.bufferedRequestCount = 0;

                // allocate the first CorkedRequest, there is always
                // one allocated and free to use, and we maintain at most two
                this.corkedRequestsFree = new CorkedRequest(this);
            }

            WritableState.prototype.getBuffer = function getBuffer() {
                var current = this.bufferedRequest;
                var out = [];
                while (current) {
                    out.push(current);
                    current = current.next;
                }
                return out;
            }
            ;

            (function() {
                try {
                    Object.defineProperty(WritableState.prototype, 'buffer', {
                        get: internalUtil.deprecate(function() {
                            return this.getBuffer();
                        }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
                    });
                } catch (_) {}
            }
            )();

            // Test _writableState for inheritance to account for Duplex streams,
            // whose prototype chain only points to Readable.
            var realHasInstance;
            if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
                realHasInstance = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(Writable, Symbol.hasInstance, {
                    value: function(object) {
                        if (realHasInstance.call(this, object))
                            return true;
                        if (this !== Writable)
                            return false;

                        return object && object._writableState instanceof WritableState;
                    }
                });
            } else {
                realHasInstance = function(object) {
                    return object instanceof this;
                }
                ;
            }

            function Writable(options) {
                Duplex = Duplex || __webpack_require__(78);

                // Writable ctor is applied to Duplexes, too.
                // `realHasInstance` is necessary because using plain `instanceof`
                // would return false, as no `_writableState` property is attached.

                // Trying to use the custom `instanceof` for Writable here will also break the
                // Node.js LazyTransform implementation, which has a non-trivial getter for
                // `_writableState` that would lead to infinite recursion.
                if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
                    return new Writable(options);
                }

                this._writableState = new WritableState(options,this);

                // legacy.
                this.writable = true;

                if (options) {
                    if (typeof options.write === 'function')
                        this._write = options.write;

                    if (typeof options.writev === 'function')
                        this._writev = options.writev;

                    if (typeof options.destroy === 'function')
                        this._destroy = options.destroy;

                    if (typeof options.final === 'function')
                        this._final = options.final;
                }

                Stream.call(this);
            }

            // Otherwise people can pipe Writable streams, which is just wrong.
            Writable.prototype.pipe = function() {
                this.emit('error', new Error('Cannot pipe, not readable'));
            }
            ;

            function writeAfterEnd(stream, cb) {
                var er = new Error('write after end');
                // TODO: defer error events consistently everywhere, not just the cb
                stream.emit('error', er);
                pna.nextTick(cb, er);
            }

            // Checks that a user-supplied chunk is valid, especially for the particular
            // mode the stream is in. Currently this means that `null` is never accepted
            // and undefined/non-string values are only allowed in object mode.
            function validChunk(stream, state, chunk, cb) {
                var valid = true;
                var er = false;

                if (chunk === null) {
                    er = new TypeError('May not write null values to stream');
                } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                if (er) {
                    stream.emit('error', er);
                    pna.nextTick(cb, er);
                    valid = false;
                }
                return valid;
            }

            Writable.prototype.write = function(chunk, encoding, cb) {
                var state = this._writableState;
                var ret = false;
                var isBuf = !state.objectMode && _isUint8Array(chunk);

                if (isBuf && !Buffer.isBuffer(chunk)) {
                    chunk = _uint8ArrayToBuffer(chunk);
                }

                if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (isBuf)
                    encoding = 'buffer';
                else if (!encoding)
                    encoding = state.defaultEncoding;

                if (typeof cb !== 'function')
                    cb = nop;

                if (state.ended)
                    writeAfterEnd(this, cb);
                else if (isBuf || validChunk(this, state, chunk, cb)) {
                    state.pendingcb++;
                    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
                }

                return ret;
            }
            ;

            Writable.prototype.cork = function() {
                var state = this._writableState;

                state.corked++;
            }
            ;

            Writable.prototype.uncork = function() {
                var state = this._writableState;

                if (state.corked) {
                    state.corked--;

                    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest)
                        clearBuffer(this, state);
                }
            }
            ;

            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
                // node::ParseEncoding() requires lower case.
                if (typeof encoding === 'string')
                    encoding = encoding.toLowerCase();
                if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1))
                    throw new TypeError('Unknown encoding: ' + encoding);
                this._writableState.defaultEncoding = encoding;
                return this;
            }
            ;

            function decodeChunk(state, chunk, encoding) {
                if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
                    chunk = Buffer.from(chunk, encoding);
                }
                return chunk;
            }

            Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function() {
                    return this._writableState.highWaterMark;
                }
            });

            // if we're already writing something, then just put this
            // in the queue, and wait our turn.  Otherwise, call _write
            // If we return false, then we need a drain event, so set that flag.
            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
                if (!isBuf) {
                    var newChunk = decodeChunk(state, chunk, encoding);
                    if (chunk !== newChunk) {
                        isBuf = true;
                        encoding = 'buffer';
                        chunk = newChunk;
                    }
                }
                var len = state.objectMode ? 1 : chunk.length;

                state.length += len;

                var ret = state.length < state.highWaterMark;
                // we must ensure that previous needDrain will not be reset to false.
                if (!ret)
                    state.needDrain = true;

                if (state.writing || state.corked) {
                    var last = state.lastBufferedRequest;
                    state.lastBufferedRequest = {
                        chunk: chunk,
                        encoding: encoding,
                        isBuf: isBuf,
                        callback: cb,
                        next: null
                    };
                    if (last) {
                        last.next = state.lastBufferedRequest;
                    } else {
                        state.bufferedRequest = state.lastBufferedRequest;
                    }
                    state.bufferedRequestCount += 1;
                } else {
                    doWrite(stream, state, false, len, chunk, encoding, cb);
                }

                return ret;
            }

            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                state.writelen = len;
                state.writecb = cb;
                state.writing = true;
                state.sync = true;
                if (writev)
                    stream._writev(chunk, state.onwrite);
                else
                    stream._write(chunk, encoding, state.onwrite);
                state.sync = false;
            }

            function onwriteError(stream, state, sync, er, cb) {
                --state.pendingcb;

                if (sync) {
                    // defer the callback if we are being called synchronously
                    // to avoid piling up things on the stack
                    pna.nextTick(cb, er);
                    // this can emit finish, and it will always happen
                    // after error
                    pna.nextTick(finishMaybe, stream, state);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                } else {
                    // the caller expect this to happen before if
                    // it is async
                    cb(er);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                    // this can emit finish, but finish must
                    // always follow error
                    finishMaybe(stream, state);
                }
            }

            function onwriteStateUpdate(state) {
                state.writing = false;
                state.writecb = null;
                state.length -= state.writelen;
                state.writelen = 0;
            }

            function onwrite(stream, er) {
                var state = stream._writableState;
                var sync = state.sync;
                var cb = state.writecb;

                onwriteStateUpdate(state);

                if (er)
                    onwriteError(stream, state, sync, er, cb);
                else {
                    // Check if we're actually ready to finish, but don't emit yet
                    var finished = needFinish(state);

                    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
                        clearBuffer(stream, state);
                    }

                    if (sync) {
                        /*<replacement>*/
                        asyncWrite(afterWrite, stream, state, finished, cb);
                        /*</replacement>*/
                    } else {
                        afterWrite(stream, state, finished, cb);
                    }
                }
            }

            function afterWrite(stream, state, finished, cb) {
                if (!finished)
                    onwriteDrain(stream, state);
                state.pendingcb--;
                cb();
                finishMaybe(stream, state);
            }

            // Must force callback to be called on nextTick, so that we don't
            // emit 'drain' before the write() consumer gets the 'false' return
            // value, and has a chance to attach a 'drain' listener.
            function onwriteDrain(stream, state) {
                if (state.length === 0 && state.needDrain) {
                    state.needDrain = false;
                    stream.emit('drain');
                }
            }

            // if there's something in the buffer waiting, then process it
            function clearBuffer(stream, state) {
                state.bufferProcessing = true;
                var entry = state.bufferedRequest;

                if (stream._writev && entry && entry.next) {
                    // Fast case, write everything using _writev()
                    var l = state.bufferedRequestCount;
                    var buffer = new Array(l);
                    var holder = state.corkedRequestsFree;
                    holder.entry = entry;

                    var count = 0;
                    var allBuffers = true;
                    while (entry) {
                        buffer[count] = entry;
                        if (!entry.isBuf)
                            allBuffers = false;
                        entry = entry.next;
                        count += 1;
                    }
                    buffer.allBuffers = allBuffers;

                    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

                    // doWrite is almost always async, defer these to save a bit of time
                    // as the hot path ends with doWrite
                    state.pendingcb++;
                    state.lastBufferedRequest = null;
                    if (holder.next) {
                        state.corkedRequestsFree = holder.next;
                        holder.next = null;
                    } else {
                        state.corkedRequestsFree = new CorkedRequest(state);
                    }
                    state.bufferedRequestCount = 0;
                } else {
                    // Slow case, write chunks one-by-one
                    while (entry) {
                        var chunk = entry.chunk;
                        var encoding = entry.encoding;
                        var cb = entry.callback;
                        var len = state.objectMode ? 1 : chunk.length;

                        doWrite(stream, state, false, len, chunk, encoding, cb);
                        entry = entry.next;
                        state.bufferedRequestCount--;
                        // if we didn't call the onwrite immediately, then
                        // it means that we need to wait until it does.
                        // also, that means that the chunk and cb are currently
                        // being processed, so move the buffer counter past them.
                        if (state.writing) {
                            break;
                        }
                    }

                    if (entry === null)
                        state.lastBufferedRequest = null;
                }

                state.bufferedRequest = entry;
                state.bufferProcessing = false;
            }

            Writable.prototype._write = function(chunk, encoding, cb) {
                cb(new Error('_write() is not implemented'));
            }
            ;

            Writable.prototype._writev = null;

            Writable.prototype.end = function(chunk, encoding, cb) {
                var state = this._writableState;

                if (typeof chunk === 'function') {
                    cb = chunk;
                    chunk = null;
                    encoding = null;
                } else if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (chunk !== null && chunk !== undefined)
                    this.write(chunk, encoding);

                // .end() fully uncorks
                if (state.corked) {
                    state.corked = 1;
                    this.uncork();
                }

                // ignore unnecessary end() calls.
                if (!state.ending && !state.finished)
                    endWritable(this, state, cb);
            }
            ;

            function needFinish(state) {
                return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function(err) {
                    state.pendingcb--;
                    if (err) {
                        stream.emit('error', err);
                    }
                    state.prefinished = true;
                    stream.emit('prefinish');
                    finishMaybe(stream, state);
                });
            }
            function prefinish(stream, state) {
                if (!state.prefinished && !state.finalCalled) {
                    if (typeof stream._final === 'function') {
                        state.pendingcb++;
                        state.finalCalled = true;
                        pna.nextTick(callFinal, stream, state);
                    } else {
                        state.prefinished = true;
                        stream.emit('prefinish');
                    }
                }
            }

            function finishMaybe(stream, state) {
                var need = needFinish(state);
                if (need) {
                    prefinish(stream, state);
                    if (state.pendingcb === 0) {
                        state.finished = true;
                        stream.emit('finish');
                    }
                }
                return need;
            }

            function endWritable(stream, state, cb) {
                state.ending = true;
                finishMaybe(stream, state);
                if (cb) {
                    if (state.finished)
                        pna.nextTick(cb);
                    else
                        stream.once('finish', cb);
                }
                state.ended = true;
                stream.writable = false;
            }

            function onCorkedFinish(corkReq, state, err) {
                var entry = corkReq.entry;
                corkReq.entry = null;
                while (entry) {
                    var cb = entry.callback;
                    state.pendingcb--;
                    cb(err);
                    entry = entry.next;
                }
                if (state.corkedRequestsFree) {
                    state.corkedRequestsFree.next = corkReq;
                } else {
                    state.corkedRequestsFree = corkReq;
                }
            }

            Object.defineProperty(Writable.prototype, 'destroyed', {
                get: function() {
                    if (this._writableState === undefined) {
                        return false;
                    }
                    return this._writableState.destroyed;
                },
                set: function(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._writableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._writableState.destroyed = value;
                }
            });

            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;
            Writable.prototype._destroy = function(err, cb) {
                this.end();
                cb(err);
            }
            ;
            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44), __webpack_require__(594).setImmediate, __webpack_require__(43)))

        /***/
    }
    ), /* 237 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        /*<replacement>*/

        var Buffer = __webpack_require__(15).Buffer;
        /*</replacement>*/

        var isEncoding = Buffer.isEncoding || function(encoding) {
            encoding = '' + encoding;
            switch (encoding && encoding.toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
            case 'raw':
                return true;
            default:
                return false;
            }
        }
        ;

        function _normalizeEncoding(enc) {
            if (!enc)
                return 'utf8';
            var retried;
            while (true) {
                switch (enc) {
                case 'utf8':
                case 'utf-8':
                    return 'utf8';
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return 'utf16le';
                case 'latin1':
                case 'binary':
                    return 'latin1';
                case 'base64':
                case 'ascii':
                case 'hex':
                    return enc;
                default:
                    if (retried)
                        return;
                    // undefined
                    enc = ('' + enc).toLowerCase();
                    retried = true;
                }
            }
        }
        ;
        // Do not cache `Buffer.isEncoding` when checking encoding names as some
        // modules monkey-patch it to support additional encodings
        function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc);
            if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc)))
                throw new Error('Unknown encoding: ' + enc);
            return nenc || enc;
        }

        // StringDecoder provides an interface for efficiently splitting a series of
        // buffers into a series of JS strings without breaking apart multi-byte
        // characters.
        exports.StringDecoder = StringDecoder;
        function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding);
            var nb;
            switch (this.encoding) {
            case 'utf16le':
                this.text = utf16Text;
                this.end = utf16End;
                nb = 4;
                break;
            case 'utf8':
                this.fillLast = utf8FillLast;
                nb = 4;
                break;
            case 'base64':
                this.text = base64Text;
                this.end = base64End;
                nb = 3;
                break;
            default:
                this.write = simpleWrite;
                this.end = simpleEnd;
                return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer.allocUnsafe(nb);
        }

        StringDecoder.prototype.write = function(buf) {
            if (buf.length === 0)
                return '';
            var r;
            var i;
            if (this.lastNeed) {
                r = this.fillLast(buf);
                if (r === undefined)
                    return '';
                i = this.lastNeed;
                this.lastNeed = 0;
            } else {
                i = 0;
            }
            if (i < buf.length)
                return r ? r + this.text(buf, i) : this.text(buf, i);
            return r || '';
        }
        ;

        StringDecoder.prototype.end = utf8End;

        // Returns only complete characters in a Buffer
        StringDecoder.prototype.text = utf8Text;

        // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
        StringDecoder.prototype.fillLast = function(buf) {
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
            this.lastNeed -= buf.length;
        }
        ;

        // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
        // continuation byte. If an invalid byte is detected, -2 is returned.
        function utf8CheckByte(byte) {
            if (byte <= 0x7F)
                return 0;
            else if (byte >> 5 === 0x06)
                return 2;
            else if (byte >> 4 === 0x0E)
                return 3;
            else if (byte >> 3 === 0x1E)
                return 4;
            return byte >> 6 === 0x02 ? -1 : -2;
        }

        // Checks at most 3 bytes at the end of a Buffer in order to detect an
        // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
        // needed to complete the UTF-8 character (if applicable) are returned.
        function utf8CheckIncomplete(self, buf, i) {
            var j = buf.length - 1;
            if (j < i)
                return 0;
            var nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0)
                    self.lastNeed = nb - 1;
                return nb;
            }
            if (--j < i || nb === -2)
                return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0)
                    self.lastNeed = nb - 2;
                return nb;
            }
            if (--j < i || nb === -2)
                return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0) {
                    if (nb === 2)
                        nb = 0;
                    else
                        self.lastNeed = nb - 3;
                }
                return nb;
            }
            return 0;
        }

        // Validates as many continuation bytes for a multi-byte UTF-8 character as
        // needed or are available. If we see a non-continuation byte where we expect
        // one, we "replace" the validated continuation bytes we've seen so far with
        // a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
        // behavior. The continuation byte check is included three times in the case
        // where all of the continuation bytes for a character exist in the same buffer.
        // It is also done this way as a slight performance increase instead of using a
        // loop.
        function utf8CheckExtraBytes(self, buf, p) {
            if ((buf[0] & 0xC0) !== 0x80) {
                self.lastNeed = 0;
                return '\ufffd';
            }
            if (self.lastNeed > 1 && buf.length > 1) {
                if ((buf[1] & 0xC0) !== 0x80) {
                    self.lastNeed = 1;
                    return '\ufffd';
                }
                if (self.lastNeed > 2 && buf.length > 2) {
                    if ((buf[2] & 0xC0) !== 0x80) {
                        self.lastNeed = 2;
                        return '\ufffd';
                    }
                }
            }
        }

        // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
        function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed;
            var r = utf8CheckExtraBytes(this, buf, p);
            if (r !== undefined)
                return r;
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, p, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, p, 0, buf.length);
            this.lastNeed -= buf.length;
        }

        // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
        // partial character, the character's bytes are buffered until the required
        // number of bytes are available.
        function utf8Text(buf, i) {
            var total = utf8CheckIncomplete(this, buf, i);
            if (!this.lastNeed)
                return buf.toString('utf8', i);
            this.lastTotal = total;
            var end = buf.length - (total - this.lastNeed);
            buf.copy(this.lastChar, 0, end);
            return buf.toString('utf8', i, end);
        }

        // For UTF-8, a replacement character is added when ending on a partial
        // character.
        function utf8End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed)
                return r + '\ufffd';
            return r;
        }

        // UTF-16LE typically needs two bytes per character, but even if we have an even
        // number of bytes available, we need to check if we end on a leading/high
        // surrogate. In that case, we need to wait for the next two bytes in order to
        // decode the last character properly.
        function utf16Text(buf, i) {
            if ((buf.length - i) % 2 === 0) {
                var r = buf.toString('utf16le', i);
                if (r) {
                    var c = r.charCodeAt(r.length - 1);
                    if (c >= 0xD800 && c <= 0xDBFF) {
                        this.lastNeed = 2;
                        this.lastTotal = 4;
                        this.lastChar[0] = buf[buf.length - 2];
                        this.lastChar[1] = buf[buf.length - 1];
                        return r.slice(0, -1);
                    }
                }
                return r;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = buf[buf.length - 1];
            return buf.toString('utf16le', i, buf.length - 1);
        }

        // For UTF-16LE we do not explicitly append special replacement characters if we
        // end on a partial character, we simply let v8 handle that.
        function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) {
                var end = this.lastTotal - this.lastNeed;
                return r + this.lastChar.toString('utf16le', 0, end);
            }
            return r;
        }

        function base64Text(buf, i) {
            var n = (buf.length - i) % 3;
            if (n === 0)
                return buf.toString('base64', i);
            this.lastNeed = 3 - n;
            this.lastTotal = 3;
            if (n === 1) {
                this.lastChar[0] = buf[buf.length - 1];
            } else {
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
            }
            return buf.toString('base64', i, buf.length - n);
        }

        function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed)
                return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
            return r;
        }

        // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
        function simpleWrite(buf) {
            return buf.toString(this.encoding);
        }

        function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : '';
        }

        /***/
    }
    ), /* 238 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var inherits = __webpack_require__(16)
        var HashBase = __webpack_require__(381)
        var Buffer = __webpack_require__(15).Buffer

        var ARRAY16 = new Array(16)

        function MD5() {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
        }

        inherits(MD5, HashBase)

        MD5.prototype._update = function() {
            var M = ARRAY16
            for (var i = 0; i < 16; ++i)
                M[i] = this._block.readInt32LE(i * 4)

            var a = this._a
            var b = this._b
            var c = this._c
            var d = this._d

            a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
            d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
            c = fnF(c, d, a, b, M[2], 0x242070db, 17)
            b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
            a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
            d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
            c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
            b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
            a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
            d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
            c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
            b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
            a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
            d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
            c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
            b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

            a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
            d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
            c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
            b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
            a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
            d = fnG(d, a, b, c, M[10], 0x02441453, 9)
            c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
            b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
            a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
            d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
            c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
            b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
            a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
            d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
            c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
            b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

            a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
            d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
            c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
            b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
            a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
            d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
            c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
            b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
            a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
            d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
            c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
            b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
            a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
            d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
            c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
            b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

            a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
            d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
            c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
            b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
            a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
            d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
            c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
            b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
            a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
            d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
            c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
            b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
            a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
            d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
            c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
            b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

            this._a = (this._a + a) | 0
            this._b = (this._b + b) | 0
            this._c = (this._c + c) | 0
            this._d = (this._d + d) | 0
        }

        MD5.prototype._digest = function() {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.allocUnsafe(16)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            return buffer
        }

        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fnF(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
        }

        function fnG(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
        }

        function fnH(a, b, c, d, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
        }

        function fnI(a, b, c, d, m, k, s) {
            return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
        }

        module.exports = MD5

        /***/
    }
    ), /* 239 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var Buffer = __webpack_require__(25).Buffer
        var inherits = __webpack_require__(16)
        var HashBase = __webpack_require__(381)

        var ARRAY16 = new Array(16)

        var zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]

        var zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]

        var sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]

        var sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]

        var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
        var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

        function RIPEMD160() {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0
        }

        inherits(RIPEMD160, HashBase)

        RIPEMD160.prototype._update = function() {
            var words = ARRAY16
            for (var j = 0; j < 16; ++j)
                words[j] = this._block.readInt32LE(j * 4)

            var al = this._a | 0
            var bl = this._b | 0
            var cl = this._c | 0
            var dl = this._d | 0
            var el = this._e | 0

            var ar = this._a | 0
            var br = this._b | 0
            var cr = this._c | 0
            var dr = this._d | 0
            var er = this._e | 0

            // computation
            for (var i = 0; i < 80; i += 1) {
                var tl
                var tr
                if (i < 16) {
                    tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
                    tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
                } else if (i < 32) {
                    tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
                    tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
                } else if (i < 48) {
                    tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
                    tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
                } else if (i < 64) {
                    tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
                    tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
                } else {
                    // if (i<80) {
                    tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
                    tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
                }

                al = el
                el = dl
                dl = rotl(cl, 10)
                cl = bl
                bl = tl

                ar = er
                er = dr
                dr = rotl(cr, 10)
                cr = br
                br = tr
            }

            // update state
            var t = (this._b + cl + dr) | 0
            this._b = (this._c + dl + er) | 0
            this._c = (this._d + el + ar) | 0
            this._d = (this._e + al + br) | 0
            this._e = (this._a + bl + cr) | 0
            this._a = t
        }

        RIPEMD160.prototype._digest = function() {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            buffer.writeInt32LE(this._e, 16)
            return buffer
        }

        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fn1(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn2(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
        }

        function fn3(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn4(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
        }

        function fn5(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
        }

        module.exports = RIPEMD160

        /***/
    }
    ), /* 240 */
    /***/
    (function(module, exports, __webpack_require__) {

        var exports = module.exports = function SHA(algorithm) {
            algorithm = algorithm.toLowerCase()

            var Algorithm = exports[algorithm]
            if (!Algorithm)
                throw new Error(algorithm + ' is not supported (we accept pull requests)')

            return new Algorithm()
        }

        exports.sha = __webpack_require__(606)
        exports.sha1 = __webpack_require__(607)
        exports.sha224 = __webpack_require__(608)
        exports.sha256 = __webpack_require__(382)
        exports.sha384 = __webpack_require__(609)
        exports.sha512 = __webpack_require__(383)

        /***/
    }
    ), /* 241 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var assert = __webpack_require__(49);

        function Cipher(options) {
            this.options = options;

            this.type = this.options.type;
            this.blockSize = 8;
            this._init();

            this.buffer = new Array(this.blockSize);
            this.bufferOff = 0;
        }
        module.exports = Cipher;

        Cipher.prototype._init = function _init() {// Might be overrided
        }
        ;

        Cipher.prototype.update = function update(data) {
            if (data.length === 0)
                return [];

            if (this.type === 'decrypt')
                return this._updateDecrypt(data);
            else
                return this._updateEncrypt(data);
        }
        ;

        Cipher.prototype._buffer = function _buffer(data, off) {
            // Append data to buffer
            var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
            for (var i = 0; i < min; i++)
                this.buffer[this.bufferOff + i] = data[off + i];
            this.bufferOff += min;

            // Shift next
            return min;
        }
        ;

        Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
            this._update(this.buffer, 0, out, off);
            this.bufferOff = 0;
            return this.blockSize;
        }
        ;

        Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
            var inputOff = 0;
            var outputOff = 0;

            var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
            var out = new Array(count * this.blockSize);

            if (this.bufferOff !== 0) {
                inputOff += this._buffer(data, inputOff);

                if (this.bufferOff === this.buffer.length)
                    outputOff += this._flushBuffer(out, outputOff);
            }

            // Write blocks
            var max = data.length - ((data.length - inputOff) % this.blockSize);
            for (; inputOff < max; inputOff += this.blockSize) {
                this._update(data, inputOff, out, outputOff);
                outputOff += this.blockSize;
            }

            // Queue rest
            for (; inputOff < data.length; inputOff++,
            this.bufferOff++)
                this.buffer[this.bufferOff] = data[inputOff];

            return out;
        }
        ;

        Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
            var inputOff = 0;
            var outputOff = 0;

            var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
            var out = new Array(count * this.blockSize);

            // TODO(indutny): optimize it, this is far from optimal
            for (; count > 0; count--) {
                inputOff += this._buffer(data, inputOff);
                outputOff += this._flushBuffer(out, outputOff);
            }

            // Buffer rest of the input
            inputOff += this._buffer(data, inputOff);

            return out;
        }
        ;

        Cipher.prototype.final = function final(buffer) {
            var first;
            if (buffer)
                first = this.update(buffer);

            var last;
            if (this.type === 'encrypt')
                last = this._finalEncrypt();
            else
                last = this._finalDecrypt();

            if (first)
                return first.concat(last);
            else
                return last;
        }
        ;

        Cipher.prototype._pad = function _pad(buffer, off) {
            if (off === 0)
                return false;

            while (off < buffer.length)
                buffer[off++] = 0;

            return true;
        }
        ;

        Cipher.prototype._finalEncrypt = function _finalEncrypt() {
            if (!this._pad(this.buffer, this.bufferOff))
                return [];

            var out = new Array(this.blockSize);
            this._update(this.buffer, 0, out, 0);
            return out;
        }
        ;

        Cipher.prototype._unpad = function _unpad(buffer) {
            return buffer;
        }
        ;

        Cipher.prototype._finalDecrypt = function _finalDecrypt() {
            assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
            var out = new Array(this.blockSize);
            this._flushBuffer(out, 0);

            return this._unpad(out);
        }
        ;

        /***/
    }
    ), /* 242 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ciphers = __webpack_require__(618)
        var deciphers = __webpack_require__(626)
        var modes = __webpack_require__(395)

        function getCiphers() {
            return Object.keys(modes)
        }

        exports.createCipher = exports.Cipher = ciphers.createCipher
        exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
        exports.createDecipher = exports.Decipher = deciphers.createDecipher
        exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
        exports.listCiphers = exports.getCiphers = getCiphers

        /***/
    }
    ), /* 243 */
    /***/
    (function(module, exports, __webpack_require__) {

        var modeModules = {
            ECB: __webpack_require__(619),
            CBC: __webpack_require__(620),
            CFB: __webpack_require__(621),
            CFB8: __webpack_require__(622),
            CFB1: __webpack_require__(623),
            OFB: __webpack_require__(624),
            CTR: __webpack_require__(393),
            GCM: __webpack_require__(393)
        }

        var modes = __webpack_require__(395)

        for (var key in modes) {
            modes[key].module = modeModules[modes[key].mode]
        }

        module.exports = modes

        /***/
    }
    ), /* 244 */
    /***/
    (function(module, exports, __webpack_require__) {

        var r;

        module.exports = function rand(len) {
            if (!r)
                r = new Rand(null);

            return r.generate(len);
        }
        ;

        function Rand(rand) {
            this.rand = rand;
        }
        module.exports.Rand = Rand;

        Rand.prototype.generate = function generate(len) {
            return this._rand(len);
        }
        ;

        // Emulate crypto API using randy
        Rand.prototype._rand = function _rand(n) {
            if (this.rand.getBytes)
                return this.rand.getBytes(n);

            var res = new Uint8Array(n);
            for (var i = 0; i < res.length; i++)
                res[i] = this.rand.getByte();
            return res;
        }
        ;

        if (typeof self === 'object') {
            if (self.crypto && self.crypto.getRandomValues) {
                // Modern browsers
                Rand.prototype._rand = function _rand(n) {
                    var arr = new Uint8Array(n);
                    self.crypto.getRandomValues(arr);
                    return arr;
                }
                ;
            } else if (self.msCrypto && self.msCrypto.getRandomValues) {
                // IE
                Rand.prototype._rand = function _rand(n) {
                    var arr = new Uint8Array(n);
                    self.msCrypto.getRandomValues(arr);
                    return arr;
                }
                ;

                // Safari's WebWorkers do not have `crypto`
            } else if (typeof window === 'object') {
                // Old junk
                Rand.prototype._rand = function() {
                    throw new Error('Not implemented yet');
                }
                ;
            }
        } else {
            // Node.js or Web worker with no crypto support
            try {
                var crypto = __webpack_require__(630);
                if (typeof crypto.randomBytes !== 'function')
                    throw new Error('Not supported');

                Rand.prototype._rand = function _rand(n) {
                    return crypto.randomBytes(n);
                }
                ;
            } catch (e) {}
        }

        /***/
    }
    ), /* 245 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var bn = __webpack_require__(30);
            var randomBytes = __webpack_require__(94);
            module.exports = crt;
            function blind(priv) {
                var r = getr(priv);
                var blinder = r.toRed(bn.mont(priv.modulus)).redPow(new bn(priv.publicExponent)).fromRed();
                return {
                    blinder: blinder,
                    unblinder: r.invm(priv.modulus)
                };
            }
            function crt(msg, priv) {
                var blinds = blind(priv);
                var len = priv.modulus.byteLength();
                var mod = bn.mont(priv.modulus);
                var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
                var c1 = blinded.toRed(bn.mont(priv.prime1));
                var c2 = blinded.toRed(bn.mont(priv.prime2));
                var qinv = priv.coefficient;
                var p = priv.prime1;
                var q = priv.prime2;
                var m1 = c1.redPow(priv.exponent1);
                var m2 = c2.redPow(priv.exponent2);
                m1 = m1.fromRed();
                m2 = m2.fromRed();
                var h = m1.isub(m2).imul(qinv).umod(p);
                h.imul(q);
                m2.iadd(h);
                return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
            }
            crt.getr = getr;
            function getr(priv) {
                var len = priv.modulus.byteLength();
                var r = new bn(randomBytes(len));
                while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
                    r = new bn(randomBytes(len));
                }
                return r;
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 246 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var elliptic = exports;

        elliptic.version = __webpack_require__(635).version;
        elliptic.utils = __webpack_require__(50);
        elliptic.rand = __webpack_require__(244);
        elliptic.curve = __webpack_require__(401);
        elliptic.curves = __webpack_require__(247);

        // Protocols
        elliptic.ec = __webpack_require__(646);
        elliptic.eddsa = __webpack_require__(650);

        /***/
    }
    ), /* 247 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var curves = exports;

        var hash = __webpack_require__(248);
        var curve = __webpack_require__(401);
        var utils = __webpack_require__(50);

        var assert = utils.assert;

        function PresetCurve(options) {
            if (options.type === 'short')
                this.curve = new curve.short(options);
            else if (options.type === 'edwards')
                this.curve = new curve.edwards(options);
            else
                this.curve = new curve.mont(options);
            this.g = this.curve.g;
            this.n = this.curve.n;
            this.hash = options.hash;

            assert(this.g.validate(), 'Invalid curve');
            assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
        }
        curves.PresetCurve = PresetCurve;

        function defineCurve(name, options) {
            Object.defineProperty(curves, name, {
                configurable: true,
                enumerable: true,
                get: function() {
                    var curve = new PresetCurve(options);
                    Object.defineProperty(curves, name, {
                        configurable: true,
                        enumerable: true,
                        value: curve
                    });
                    return curve;
                }
            });
        }

        defineCurve('p192', {
            type: 'short',
            prime: 'p192',
            p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
            a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
            b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
            n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
            hash: hash.sha256,
            gRed: false,
            g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
        });

        defineCurve('p224', {
            type: 'short',
            prime: 'p224',
            p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
            a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
            b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
            n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
            hash: hash.sha256,
            gRed: false,
            g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
        });

        defineCurve('p256', {
            type: 'short',
            prime: null,
            p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
            a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
            b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
            n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
            hash: hash.sha256,
            gRed: false,
            g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
        });

        defineCurve('p384', {
            type: 'short',
            prime: null,
            p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
            a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
            b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
            n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
            hash: hash.sha384,
            gRed: false,
            g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
        });

        defineCurve('p521', {
            type: 'short',
            prime: null,
            p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
            a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
            b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
            n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
            hash: hash.sha512,
            gRed: false,
            g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
        });

        defineCurve('curve25519', {
            type: 'mont',
            prime: 'p25519',
            p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
            a: '76d06',
            b: '1',
            n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
            hash: hash.sha256,
            gRed: false,
            g: ['9']
        });

        defineCurve('ed25519', {
            type: 'edwards',
            prime: 'p25519',
            p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
            a: '-1',
            c: '1',
            // -121665 * (121666^(-1)) (mod P)
            d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
            n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
            hash: hash.sha256,
            gRed: false,
            g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
            // 4/5
            '6666666666666666666666666666666666666666666666666666666666666658']
        });

        var pre;
        try {
            pre = __webpack_require__(645);
        } catch (e) {
            pre = undefined;
        }

        defineCurve('secp256k1', {
            type: 'short',
            prime: 'k256',
            p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
            a: '0',
            b: '7',
            n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
            h: '1',
            hash: hash.sha256,

            // Precomputed endomorphism
            beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
            lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
            basis: [{
                a: '3086d221a7d46bcde86c90e49284eb15',
                b: '-e4437ed6010e88286f547fa90abfe4c3'
            }, {
                a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
                b: '3086d221a7d46bcde86c90e49284eb15'
            }],

            gRed: false,
            g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
        });

        /***/
    }
    ), /* 248 */
    /***/
    (function(module, exports, __webpack_require__) {

        var hash = exports;

        hash.utils = __webpack_require__(61);
        hash.common = __webpack_require__(124);
        hash.sha = __webpack_require__(639);
        hash.ripemd = __webpack_require__(643);
        hash.hmac = __webpack_require__(644);

        // Proxy hash functions to the main object
        hash.sha1 = hash.sha.sha1;
        hash.sha256 = hash.sha.sha256;
        hash.sha224 = hash.sha.sha224;
        hash.sha384 = hash.sha.sha384;
        hash.sha512 = hash.sha.sha512;
        hash.ripemd160 = hash.ripemd.ripemd160;

        /***/
    }
    ), /* 249 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/colorManipulator.js
        var colorManipulator = __webpack_require__(9);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/createMuiTheme.js + 6 modules
        var createMuiTheme = __webpack_require__(168);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/createStyles/createStyles.js
        function createStyles(styles) {
            return styles;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/createStyles.js
        // let warnOnce = false;
        // To remove in v5

        function createStyles_createStyles(styles) {
            // warning(
            //   warnOnce,
            //   [
            //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',
            //     'Please use @material-ui/styles/createStyles',
            //   ].join('\n'),
            // );
            // warnOnce = true;
            return createStyles(styles);
        }
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/makeStyles.js
        var makeStyles = __webpack_require__(166);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // CONCATENATED MODULE: ../node_modules/convert-css-length/dist/index.esm.js
        var e = function(e) {
            return parseFloat(e)
        };
        /* harmony default export */
        var index_esm = (function(r) {
            return null == r && (r = r),
            function(n, t, i, f) {
                null == i && (i = r),
                null == f && (f = i);
                var l = String(n).match(/[\d.\-\+]*\s*(.*)/)[1] || "";
                if (l === t)
                    return n;
                var u = e(n);
                if ("px" !== l)
                    if ("em" === l)
                        u = e(n) * e(i);
                    else if ("rem" === l)
                        u = e(n) * e(r);
                    else {
                        if ("ex" !== l)
                            return n;
                        u = e(n) * e(i) * 2
                    }
                var a = u;
                if ("px" !== t)
                    if ("em" === t)
                        a = u / e(f);
                    else if ("rem" === t)
                        a = u / e(r);
                    else {
                        if ("ex" !== t)
                            return n;
                        a = u / e(f) / 2
                    }
                return parseFloat(a.toFixed(5)) + t
            }
        }
        );
        //# sourceMappingURL=index.esm.js.map

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
        var defineProperty = __webpack_require__(10);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/cssUtils.js

        function alignProperty(_ref) {
            var size = _ref.size
              , grid = _ref.grid;
            var sizeBelow = size - size % grid;
            var sizeAbove = sizeBelow + grid;
            return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;
        }
        // fontGrid finds a minimal grid (in rem) for the fontSize values so that the
        // lineHeight falls under a x pixels grid, 4px in the case of Material Design,
        // without changing the relative line height

        function fontGrid(_ref2) {
            var lineHeight = _ref2.lineHeight
              , pixels = _ref2.pixels
              , htmlFontSize = _ref2.htmlFontSize;
            return pixels / (lineHeight * htmlFontSize);
        }
        /**
 * generate a responsive version of a given CSS property
 * @example
 * responsiveProperty({
 *   cssProperty: 'fontSize',
 *   min: 15,
 *   max: 20,
 *   unit: 'px',
 *   breakpoints: [300, 600],
 * })
 *
 * // this returns
 *
 * {
 *   fontSize: '15px',
 *   '@media (min-width:300px)': {
 *     fontSize: '17.5px',
 *   },
 *   '@media (min-width:600px)': {
 *     fontSize: '20px',
 *   },
 * }
 *
 * @param {Object} params
 * @param {string} params.cssProperty - The CSS property to be made responsive
 * @param {number} params.min - The smallest value of the CSS property
 * @param {number} params.max - The largest value of the CSS property
 * @param {string} [params.unit] - The unit to be used for the CSS property
 * @param {Array.number} [params.breakpoints]  - An array of breakpoints
 * @param {number} [params.alignStep] - Round scaled value to fall under this grid
 * @returns {Object} responsive styles for {params.cssProperty}
 */

        function responsiveProperty(_ref3) {
            var cssProperty = _ref3.cssProperty
              , min = _ref3.min
              , max = _ref3.max
              , _ref3$unit = _ref3.unit
              , unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit
              , _ref3$breakpoints = _ref3.breakpoints
              , breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints
              , _ref3$transform = _ref3.transform
              , transform = _ref3$transform === void 0 ? null : _ref3$transform;

            var output = Object(defineProperty["a"/* default */
            ])({}, cssProperty, "".concat(min).concat(unit));

            var factor = (max - min) / breakpoints[breakpoints.length - 1];
            breakpoints.forEach(function(breakpoint) {
                var value = min + factor * breakpoint;

                if (transform !== null) {
                    value = transform(value);
                }

                output["@media (min-width:".concat(breakpoint, "px)")] = Object(defineProperty["a"/* default */
                ])({}, cssProperty, "".concat(Math.round(value * 10000) / 10000).concat(unit));
            });
            return output;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js

        function isUnitless(value) {
            return String(parseFloat(value)).length === String(value).length;
        }

        function responsiveFontSizes(themeInput) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var _options$breakpoints = options.breakpoints
              , breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints
              , _options$disableAlign = options.disableAlign
              , disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign
              , _options$factor = options.factor
              , factor = _options$factor === void 0 ? 2 : _options$factor
              , _options$variants = options.variants
              , variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;

            var theme = Object(esm_extends["a"/* default */
            ])({}, themeInput);

            theme.typography = Object(esm_extends["a"/* default */
            ])({}, theme.typography);
            var typography = theme.typography;
            // Convert between css lengths e.g. em->px or px->rem
            // Set the baseFontSize for your project. Defaults to 16px (also the browser default).

            var convert = index_esm(typography.htmlFontSize);
            var breakpointValues = breakpoints.map(function(x) {
                return theme.breakpoints.values[x];
            });
            variants.forEach(function(variant) {
                var style = typography[variant];
                var remFontSize = parseFloat(convert(style.fontSize, 'rem'));

                if (remFontSize <= 1) {
                    return;
                }

                var maxFontSize = remFontSize;
                var minFontSize = 1 + (maxFontSize - 1) / factor;
                var lineHeight = style.lineHeight;

                if (!isUnitless(lineHeight) && !disableAlign) {
                    throw new Error(["Material-UI: unsupported non-unitless line height with grid alignment.", 'Use unitless line heights instead.'].join('\n'));
                }

                if (!isUnitless(lineHeight)) {
                    // make it unitless
                    lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);
                }

                var transform = null;

                if (!disableAlign) {
                    transform = function transform(value) {
                        return alignProperty({
                            size: value,
                            grid: fontGrid({
                                pixels: 4,
                                lineHeight: lineHeight,
                                htmlFontSize: typography.htmlFontSize
                            })
                        });
                    }
                    ;
                }

                typography[variant] = Object(esm_extends["a"/* default */
                ])({}, style, {}, responsiveProperty({
                    cssProperty: 'fontSize',
                    min: minFontSize,
                    max: maxFontSize,
                    unit: 'rem',
                    breakpoints: breakpointValues,
                    transform: transform
                }));
            });
            return theme;
        }
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/styled.js + 1 modules
        var styled = __webpack_require__(169);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/transitions.js
        var transitions = __webpack_require__(22);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/useTheme.js
        var useTheme = __webpack_require__(17);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(97);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/
        __webpack_require__.n(hoist_non_react_statics_cjs);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/useTheme.js
        var useTheme_useTheme = __webpack_require__(753);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/withTheme/withTheme.js

        function withThemeCreator() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var defaultTheme = options.defaultTheme;

            var withTheme = function withTheme(Component) {
                if (false) {}

                var WithTheme = compat_module["default"].forwardRef(function WithTheme(props, ref) {
                    var innerRef = props.innerRef
                      , other = Object(objectWithoutProperties["a"/* default */
                    ])(props, ["innerRef"]);

                    var theme = Object(useTheme_useTheme["a"/* default */
                    ])() || defaultTheme;
                    return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
                    ])({
                        theme: theme,
                        ref: innerRef || ref
                    }, other));
                });
                false ? undefined : void 0;

                if (false) {}

                hoist_non_react_statics_cjs_default()(WithTheme, Component);

                if (false) {}

                return WithTheme;
            };

            return withTheme;
        }
        // Provide the theme object as a prop to the input component.
        // It's an alternative API to useTheme().
        // We encourage the usage of useTheme() where possible.

        var withTheme_withTheme = withThemeCreator();
        /* harmony default export */
        var esm_withTheme_withTheme = (withTheme_withTheme);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/defaultTheme.js
        var styles_defaultTheme = __webpack_require__(63);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/withTheme.js

        var styles_withTheme_withTheme = withThemeCreator({
            defaultTheme: styles_defaultTheme["a"/* default */
            ]
        });
        /* harmony default export */
        var styles_withTheme = (styles_withTheme_withTheme);
        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js
        var createGenerateClassName = __webpack_require__(754);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js + 9 modules
        var jssPreset = __webpack_require__(436);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
        var classCallCheck = __webpack_require__(106);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
        var createClass = __webpack_require__(65);

        // EXTERNAL MODULE: ../node_modules/jss/dist/jss.esm.js + 1 modules
        var jss_esm = __webpack_require__(35);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js
        var StylesProvider = __webpack_require__(775);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/ServerStyleSheets/ServerStyleSheets.js

        var ServerStyleSheets_ServerStyleSheets = /*#__PURE__*/
        function() {
            function ServerStyleSheets() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                Object(classCallCheck["a"/* default */
                ])(this, ServerStyleSheets);

                this.options = options;
            }

            Object(createClass["a"/* default */
            ])(ServerStyleSheets, [{
                key: "collect",
                value: function collect(children) {
                    // This is needed in order to deduplicate the injection of CSS in the page.
                    var sheetsManager = new Map();
                    // This is needed in order to inject the critical CSS.

                    this.sheetsRegistry = new jss_esm["b"/* SheetsRegistry */
                    ]();
                    // A new class name generator

                    var generateClassName = Object(createGenerateClassName["a"/* default */
                    ])();
                    return compat_module["default"].createElement(StylesProvider["b"/* default */
                    ], Object(esm_extends["a"/* default */
                    ])({
                        sheetsManager: sheetsManager,
                        serverGenerateClassName: generateClassName,
                        sheetsRegistry: this.sheetsRegistry
                    }, this.options), children);
                }
            }, {
                key: "toString",
                value: function toString() {
                    return this.sheetsRegistry ? this.sheetsRegistry.toString() : '';
                }
            }, {
                key: "getStyleElement",
                value: function getStyleElement(props) {
                    return compat_module["default"].createElement('style', Object(esm_extends["a"/* default */
                    ])({
                        id: 'jss-server-side',
                        key: 'jss-server-side',
                        dangerouslySetInnerHTML: {
                            __html: this.toString()
                        }
                    }, props));
                }
            }]);

            return ServerStyleSheets;
        }();

        /* harmony default export */
        var esm_ServerStyleSheets_ServerStyleSheets = (ServerStyleSheets_ServerStyleSheets);
        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js
        var ThemeContext = __webpack_require__(172);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/ThemeProvider/nested.js
        var nested = __webpack_require__(174);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js

        // To support composition of theme.

        function mergeOuterLocalTheme(outerTheme, localTheme) {
            if (typeof localTheme === 'function') {
                var mergedTheme = localTheme(outerTheme);

                if (false) {}

                return mergedTheme;
            }

            return Object(esm_extends["a"/* default */
            ])({}, outerTheme, {}, localTheme);
        }
        /**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */

        function ThemeProvider(props) {
            var children = props.children
              , localTheme = props.theme;
            var outerTheme = Object(useTheme_useTheme["a"/* default */
            ])();

            if (false) {}

            var theme = compat_module["default"].useMemo(function() {
                var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);

                if (output != null) {
                    output[nested["a"/* default */
                    ]] = outerTheme !== null;
                }

                return output;
            }, [localTheme, outerTheme]);
            return compat_module["default"].createElement(ThemeContext["a"/* default */
            ].Provider, {
                value: theme
            }, children);
        }

        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        var ThemeProvider_ThemeProvider = (ThemeProvider);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/styles/index.js
        /* concated harmony reexport hexToRgb */
        __webpack_require__.d(__webpack_exports__, "hexToRgb", function() {
            return colorManipulator["g"/* hexToRgb */
            ];
        });
        /* concated harmony reexport rgbToHex */
        __webpack_require__.d(__webpack_exports__, "rgbToHex", function() {
            return colorManipulator["k"/* rgbToHex */
            ];
        });
        /* concated harmony reexport hslToRgb */
        __webpack_require__.d(__webpack_exports__, "hslToRgb", function() {
            return colorManipulator["h"/* hslToRgb */
            ];
        });
        /* concated harmony reexport decomposeColor */
        __webpack_require__.d(__webpack_exports__, "decomposeColor", function() {
            return colorManipulator["b"/* decomposeColor */
            ];
        });
        /* concated harmony reexport recomposeColor */
        __webpack_require__.d(__webpack_exports__, "recomposeColor", function() {
            return colorManipulator["j"/* recomposeColor */
            ];
        });
        /* concated harmony reexport getContrastRatio */
        __webpack_require__.d(__webpack_exports__, "getContrastRatio", function() {
            return colorManipulator["e"/* getContrastRatio */
            ];
        });
        /* concated harmony reexport getLuminance */
        __webpack_require__.d(__webpack_exports__, "getLuminance", function() {
            return colorManipulator["f"/* getLuminance */
            ];
        });
        /* concated harmony reexport emphasize */
        __webpack_require__.d(__webpack_exports__, "emphasize", function() {
            return colorManipulator["c"/* emphasize */
            ];
        });
        /* concated harmony reexport fade */
        __webpack_require__.d(__webpack_exports__, "fade", function() {
            return colorManipulator["d"/* fade */
            ];
        });
        /* concated harmony reexport darken */
        __webpack_require__.d(__webpack_exports__, "darken", function() {
            return colorManipulator["a"/* darken */
            ];
        });
        /* concated harmony reexport lighten */
        __webpack_require__.d(__webpack_exports__, "lighten", function() {
            return colorManipulator["i"/* lighten */
            ];
        });
        /* concated harmony reexport createMuiTheme */
        __webpack_require__.d(__webpack_exports__, "createMuiTheme", function() {
            return createMuiTheme["a"/* default */
            ];
        });
        /* concated harmony reexport createStyles */
        __webpack_require__.d(__webpack_exports__, "createStyles", function() {
            return createStyles_createStyles;
        });
        /* concated harmony reexport makeStyles */
        __webpack_require__.d(__webpack_exports__, "makeStyles", function() {
            return makeStyles["a"/* default */
            ];
        });
        /* concated harmony reexport responsiveFontSizes */
        __webpack_require__.d(__webpack_exports__, "responsiveFontSizes", function() {
            return responsiveFontSizes;
        });
        /* concated harmony reexport styled */
        __webpack_require__.d(__webpack_exports__, "styled", function() {
            return styled["a"/* default */
            ];
        });
        /* concated harmony reexport easing */
        __webpack_require__.d(__webpack_exports__, "easing", function() {
            return transitions["c"/* easing */
            ];
        });
        /* concated harmony reexport duration */
        __webpack_require__.d(__webpack_exports__, "duration", function() {
            return transitions["b"/* duration */
            ];
        });
        /* concated harmony reexport useTheme */
        __webpack_require__.d(__webpack_exports__, "useTheme", function() {
            return useTheme["a"/* default */
            ];
        });
        /* concated harmony reexport withStyles */
        __webpack_require__.d(__webpack_exports__, "withStyles", function() {
            return withStyles["a"/* default */
            ];
        });
        /* concated harmony reexport withTheme */
        __webpack_require__.d(__webpack_exports__, "withTheme", function() {
            return styles_withTheme;
        });
        /* concated harmony reexport createGenerateClassName */
        __webpack_require__.d(__webpack_exports__, "createGenerateClassName", function() {
            return createGenerateClassName["a"/* default */
            ];
        });
        /* concated harmony reexport jssPreset */
        __webpack_require__.d(__webpack_exports__, "jssPreset", function() {
            return jssPreset["a"/* default */
            ];
        });
        /* concated harmony reexport ServerStyleSheets */
        __webpack_require__.d(__webpack_exports__, "ServerStyleSheets", function() {
            return esm_ServerStyleSheets_ServerStyleSheets;
        });
        /* concated harmony reexport StylesProvider */
        __webpack_require__.d(__webpack_exports__, "StylesProvider", function() {
            return StylesProvider["b"/* default */
            ];
        });
        /* concated harmony reexport MuiThemeProvider */
        __webpack_require__.d(__webpack_exports__, "MuiThemeProvider", function() {
            return ThemeProvider_ThemeProvider;
        });
        /* concated harmony reexport ThemeProvider */
        __webpack_require__.d(__webpack_exports__, "ThemeProvider", function() {
            return ThemeProvider_ThemeProvider;
        });

        /***/
    }
    ), /* 250 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    margin: 0
                },

                /* Styles applied to the root element if `variant="body2"`. */
                body2: theme.typography.body2,

                /* Styles applied to the root element if `variant="body1"`. */
                body1: theme.typography.body1,

                /* Styles applied to the root element if `variant="caption"`. */
                caption: theme.typography.caption,

                /* Styles applied to the root element if `variant="button"`. */
                button: theme.typography.button,

                /* Styles applied to the root element if `variant="h1"`. */
                h1: theme.typography.h1,

                /* Styles applied to the root element if `variant="h2"`. */
                h2: theme.typography.h2,

                /* Styles applied to the root element if `variant="h3"`. */
                h3: theme.typography.h3,

                /* Styles applied to the root element if `variant="h4"`. */
                h4: theme.typography.h4,

                /* Styles applied to the root element if `variant="h5"`. */
                h5: theme.typography.h5,

                /* Styles applied to the root element if `variant="h6"`. */
                h6: theme.typography.h6,

                /* Styles applied to the root element if `variant="subtitle1"`. */
                subtitle1: theme.typography.subtitle1,

                /* Styles applied to the root element if `variant="subtitle2"`. */
                subtitle2: theme.typography.subtitle2,

                /* Styles applied to the root element if `variant="overline"`. */
                overline: theme.typography.overline,

                /* Styles applied to the root element if `variant="srOnly"`. Only accessible to screen readers. */
                srOnly: {
                    position: 'absolute',
                    height: 1,
                    width: 1,
                    overflow: 'hidden'
                },

                /* Styles applied to the root element if `align="left"`. */
                alignLeft: {
                    textAlign: 'left'
                },

                /* Styles applied to the root element if `align="center"`. */
                alignCenter: {
                    textAlign: 'center'
                },

                /* Styles applied to the root element if `align="right"`. */
                alignRight: {
                    textAlign: 'right'
                },

                /* Styles applied to the root element if `align="justify"`. */
                alignJustify: {
                    textAlign: 'justify'
                },

                /* Styles applied to the root element if `nowrap={true}`. */
                noWrap: {
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                },

                /* Styles applied to the root element if `gutterBottom={true}`. */
                gutterBottom: {
                    marginBottom: '0.35em'
                },

                /* Styles applied to the root element if `paragraph={true}`. */
                paragraph: {
                    marginBottom: 16
                },

                /* Styles applied to the root element if `color="inherit"`. */
                colorInherit: {
                    color: 'inherit'
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main
                },

                /* Styles applied to the root element if `color="textPrimary"`. */
                colorTextPrimary: {
                    color: theme.palette.text.primary
                },

                /* Styles applied to the root element if `color="textSecondary"`. */
                colorTextSecondary: {
                    color: theme.palette.text.secondary
                },

                /* Styles applied to the root element if `color="error"`. */
                colorError: {
                    color: theme.palette.error.main
                },

                /* Styles applied to the root element if `display="inline"`. */
                displayInline: {
                    display: 'inline'
                },

                /* Styles applied to the root element if `display="block"`. */
                displayBlock: {
                    display: 'block'
                }
            };
        };
        var defaultVariantMapping = {
            h1: 'h1',
            h2: 'h2',
            h3: 'h3',
            h4: 'h4',
            h5: 'h5',
            h6: 'h6',
            subtitle1: 'h6',
            subtitle2: 'h6',
            body1: 'p',
            body2: 'p'
        };
        var Typography = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Typography(props, ref) {
            var _props$align = props.align
              , align = _props$align === void 0 ? 'inherit' : _props$align
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'initial' : _props$color
              , component = props.component
              , _props$display = props.display
              , display = _props$display === void 0 ? 'initial' : _props$display
              , _props$gutterBottom = props.gutterBottom
              , gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom
              , _props$noWrap = props.noWrap
              , noWrap = _props$noWrap === void 0 ? false : _props$noWrap
              , _props$paragraph = props.paragraph
              , paragraph = _props$paragraph === void 0 ? false : _props$paragraph
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'body1' : _props$variant
              , _props$variantMapping = props.variantMapping
              , variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["align", "classes", "className", "color", "component", "display", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"]);

            var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes["align".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(align))], display !== 'initial' && classes["display".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(display))]),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiTypography'
        })(Typography));

        /***/
    }
    ), /* 251 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
        /* harmony import */
        var _FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
                "a"])({
                    color: theme.palette.text.secondary
                }, theme.typography.body1, {
                    lineHeight: 1,
                    padding: 0,
                    '&$focused': {
                        color: theme.palette.primary.main
                    },
                    '&$disabled': {
                        color: theme.palette.text.disabled
                    },
                    '&$error': {
                        color: theme.palette.error.main
                    }
                }),

                /* Styles applied to the root element if the color is secondary. */
                colorSecondary: {
                    '&$focused': {
                        color: theme.palette.secondary.main
                    }
                },

                /* Pseudo-class applied to the root element if `focused={true}`. */
                focused: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Pseudo-class applied to the root element if `error={true}`. */
                error: {},

                /* Pseudo-class applied to the root element if `filled={true}`. */
                filled: {},

                /* Pseudo-class applied to the root element if `required={true}`. */
                required: {},

                /* Styles applied to the asterisk element. */
                asterisk: {
                    '&$error': {
                        color: theme.palette.error.main
                    }
                }
            };
        };
        var FormLabel = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function FormLabel(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , color = props.color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'label' : _props$component
              , disabled = props.disabled
              , error = props.error
              , filled = props.filled
              , focused = props.focused
              , required = props.required
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(props, ["children", "classes", "className", "color", "component", "disabled", "error", "filled", "focused", "required"]);

            var muiFormControl = Object(_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])();
            var fcs = Object(_FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__[/* default */
                "a"])(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),
                ref: ref
            }, other), children, fcs.required && react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("span", {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.asterisk, fcs.error && classes.error)
            }, "\u2009", '*'));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_8__[/* default */
        "a"])(styles, {
            name: 'MuiFormLabel'
        })(FormLabel));

        /***/
    }
    ), /* 252 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _InputBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(435);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);

        var styles = function styles(theme) {
            var light = theme.palette.type === 'light';
            var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative'
                },

                /* Styles applied to the root element if the component is a descendant of `FormControl`. */
                formControl: {
                    'label + &': {
                        marginTop: 16
                    }
                },

                /* Styles applied to the root element if the component is focused. */
                focused: {},

                /* Styles applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if color secondary. */
                colorSecondary: {
                    '&$underline:after': {
                        borderBottomColor: theme.palette.secondary.main
                    }
                },

                /* Styles applied to the root element if `disableUnderline={false}`. */
                underline: {
                    '&:after': {
                        borderBottom: "2px solid ".concat(theme.palette.primary.main),
                        left: 0,
                        bottom: 0,
                        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                        content: '""',
                        position: 'absolute',
                        right: 0,
                        transform: 'scaleX(0)',
                        transition: theme.transitions.create('transform', {
                            duration: theme.transitions.duration.shorter,
                            easing: theme.transitions.easing.easeOut
                        }),
                        pointerEvents: 'none'// Transparent to the hover style.

                    },
                    '&$focused:after': {
                        transform: 'scaleX(1)'
                    },
                    '&$error:after': {
                        borderBottomColor: theme.palette.error.main,
                        transform: 'scaleX(1)'// error is always underlined in red

                    },
                    '&:before': {
                        borderBottom: "1px solid ".concat(bottomLineColor),
                        left: 0,
                        bottom: 0,
                        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                        content: '"\\00a0"',
                        position: 'absolute',
                        right: 0,
                        transition: theme.transitions.create('border-bottom-color', {
                            duration: theme.transitions.duration.shorter
                        }),
                        pointerEvents: 'none'// Transparent to the hover style.

                    },
                    '&:hover:not($disabled):before': {
                        borderBottom: "2px solid ".concat(theme.palette.text.primary),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            borderBottom: "1px solid ".concat(bottomLineColor)
                        }
                    },
                    '&$disabled:before': {
                        borderBottomStyle: 'dotted'
                    }
                },

                /* Styles applied to the root element if `error={true}`. */
                error: {},

                /* Styles applied to the `input` element if `margin="dense"`. */
                marginDense: {},

                /* Styles applied to the root element if `multiline={true}`. */
                multiline: {},

                /* Styles applied to the root element if `fullWidth={true}`. */
                fullWidth: {},

                /* Styles applied to the `input` element. */
                input: {},

                /* Styles applied to the `input` element if `margin="dense"`. */
                inputMarginDense: {},

                /* Styles applied to the `input` element if `multiline={true}`. */
                inputMultiline: {},

                /* Styles applied to the `input` element if `type="search"`. */
                inputTypeSearch: {}
            };
        };
        var Input = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Input(props, ref) {
            var disableUnderline = props.disableUnderline
              , classes = props.classes
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$inputComponent = props.inputComponent
              , inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent
              , _props$multiline = props.multiline
              , multiline = _props$multiline === void 0 ? false : _props$multiline
              , _props$type = props.type
              , type = _props$type === void 0 ? 'text' : _props$type
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_InputBase__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                classes: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({}, classes, {
                    root: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                    "a"])(classes.root, !disableUnderline && classes.underline),
                    underline: null
                }),
                fullWidth: fullWidth,
                inputComponent: inputComponent,
                multiline: multiline,
                ref: ref,
                type: type
            }, other));
        });
        false ? undefined : void 0;
        Input.muiName = 'Input';
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiInput'
        })(Input));

        /***/
    }
    ), /* 253 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return uniqueBy;
        });
        function uniqueBy(arr, fn) {
            var identifiers = new Set();
            return arr.filter(function(item) {
                var identifier = fn(item);

                if (!identifiers.has(identifier)) {
                    identifiers.add(identifier);
                    return true;
                }
            });
        }

        /***/
    }
    ), /* 254 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "popperGenerator", function() {
            return popperGenerator;
        });
        /* unused harmony export createPopper */
        /* harmony import */
        var _dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(186);
        /* harmony import */
        var _dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(108);
        /* harmony import */
        var _dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(130);
        /* harmony import */
        var _dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(109);
        /* harmony import */
        var _utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(432);
        /* harmony import */
        var _utils_debounce_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(433);
        /* harmony import */
        var _dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(27);

        var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided to Popper, they must be either a valid DOM element, virtual element, or a jQuery-wrapped DOM element.';
        var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
        var DEFAULT_OPTIONS = {
            placement: 'bottom',
            modifiers: [],
            strategy: 'absolute'
        };

        function areValidElements() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return !args.some(function(element) {
                return !(element && typeof element.getBoundingClientRect === 'function');
            });
        }

        function popperGenerator(generatorOptions) {
            if (generatorOptions === void 0) {
                generatorOptions = {};
            }

            var _generatorOptions = generatorOptions
              , _generatorOptions$def = _generatorOptions.defaultModifiers
              , defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def
              , _generatorOptions$def2 = _generatorOptions.defaultOptions
              , defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
            return function createPopper(reference, popper, options) {
                if (options === void 0) {
                    options = defaultOptions;
                }

                var state = {
                    placement: 'bottom',
                    orderedModifiers: [],
                    options: Object.assign({}, DEFAULT_OPTIONS, {}, defaultOptions),
                    modifiersData: {},
                    elements: {
                        reference: reference,
                        popper: popper
                    },
                    attributes: {},
                    styles: {}
                };
                var effectCleanupFns = [];
                var isDestroyed = false;
                var instance = {
                    state: state,
                    setOptions: function setOptions(options) {
                        cleanupModifierEffects();
                        state.options = Object.assign({}, defaultOptions, {}, state.options, {}, options);
                        state.scrollParents = {
                            reference: Object(_dom_utils_instanceOf_js__WEBPACK_IMPORTED_MODULE_6__[/* isElement */
                            "a"])(reference) ? Object(_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_2__[/* default */
                            "a"])(reference) : [],
                            popper: Object(_dom_utils_listScrollParents_js__WEBPACK_IMPORTED_MODULE_2__[/* default */
                            "a"])(popper)
                        };
                        // Orders the modifiers based on their dependencies and `phase`
                        // properties

                        var orderedModifiers = Object(_utils_orderModifiers_js__WEBPACK_IMPORTED_MODULE_4__[/* default */
                        "a"])([].concat(state.options.modifiers.filter(function(modifier) {
                            return !defaultModifiers.find(function(_ref) {
                                var name = _ref.name;
                                return name === modifier.name;
                            });
                        }), defaultModifiers.map(function(defaultModifier) {
                            return Object.assign({}, defaultModifier, {}, state.options.modifiers.find(function(_ref2) {
                                var name = _ref2.name;
                                return name === defaultModifier.name;
                            }));
                        })));
                        // Validate the provided modifiers so that the consumer will get warned
                        // if one of the modifiers is invalid for any reason

                        if (false) {
                            var _getComputedStyle, marginTop, marginRight, marginBottom, marginLeft, flipModifier, modifiers;
                        }
                        // Strip out disabled modifiers

                        state.orderedModifiers = orderedModifiers.filter(function(m) {
                            return m.enabled;
                        });
                        runModifierEffects();
                        return instance.update();
                    },
                    // Sync update – it will always be executed, even if not necessary. This
                    // is useful for low frequency updates where sync behavior simplifies the
                    // logic.
                    // For high frequency updates (e.g. `resize` and `scroll` events), always
                    // prefer the async Popper#update method
                    forceUpdate: function forceUpdate() {
                        if (isDestroyed) {
                            return;
                        }

                        var _state$elements = state.elements
                          , reference = _state$elements.reference
                          , popper = _state$elements.popper;
                        // Don't proceed if `reference` or `popper` are not valid elements
                        // anymore

                        if (!areValidElements(reference, popper)) {
                            if (false) {}

                            return;
                        }
                        // Store the reference and popper rects to be read by modifiers

                        state.rects = {
                            reference: Object(_dom_utils_getCompositeRect_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
                            "a"])(reference, Object(_dom_utils_getOffsetParent_js__WEBPACK_IMPORTED_MODULE_3__[/* default */
                            "a"])(popper), state.options.strategy === 'fixed'),
                            popper: Object(_dom_utils_getLayoutRect_js__WEBPACK_IMPORTED_MODULE_1__[/* default */
                            "a"])(popper)
                        };
                        // Modifiers have the ability to reset the current update cycle. The
                        // most common use case for this is the `flip` modifier changing the
                        // placement, which then needs to re-run all the modifiers, because the
                        // logic was previously ran for the previous placement and is therefore
                        // stale/incorrect

                        state.reset = false;
                        state.placement = state.options.placement;
                        // On each update cycle, the `modifiersData` property for each modifier
                        // is filled with the initial data specified by the modifier. This means
                        // it doesn't persist and is fresh on each update.
                        // To ensure persistent data, use `${name}#persistent`

                        state.orderedModifiers.forEach(function(modifier) {
                            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
                        });
                        var __debug_loops__ = 0;

                        for (var index = 0; index < state.orderedModifiers.length; index++) {
                            if (false) {}

                            if (state.reset === true) {
                                state.reset = false;
                                index = -1;
                                continue;
                            }

                            var _state$orderedModifie = state.orderedModifiers[index]
                              , fn = _state$orderedModifie.fn
                              , _state$orderedModifie2 = _state$orderedModifie.options
                              , _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2
                              , name = _state$orderedModifie.name;

                            if (typeof fn === 'function') {
                                state = fn({
                                    state: state,
                                    options: _options,
                                    name: name,
                                    instance: instance
                                }) || state;
                            }
                        }
                    },
                    // Async and optimistically optimized update – it will not be executed if
                    // not necessary (debounced to run at most once-per-tick)
                    update: Object(_utils_debounce_js__WEBPACK_IMPORTED_MODULE_5__[/* default */
                    "a"])(function() {
                        return new Promise(function(resolve) {
                            instance.forceUpdate();
                            resolve(state);
                        }
                        );
                    }),
                    destroy: function destroy() {
                        cleanupModifierEffects();
                        isDestroyed = true;
                    }
                };

                if (!areValidElements(reference, popper)) {
                    if (false) {}

                    return instance;
                }

                instance.setOptions(options).then(function(state) {
                    if (!isDestroyed && options.onFirstUpdate) {
                        options.onFirstUpdate(state);
                    }
                });
                // Modifiers have the ability to execute arbitrary code before the first
                // update cycle runs. They will be executed in the same order as the update
                // cycle. This is useful when a modifier adds some persistent data that
                // other modifiers need to use, but the modifier is run after the dependent
                // one.

                function runModifierEffects() {
                    state.orderedModifiers.forEach(function(_ref5) {
                        var name = _ref5.name
                          , _ref5$options = _ref5.options
                          , options = _ref5$options === void 0 ? {} : _ref5$options
                          , effect = _ref5.effect;

                        if (typeof effect === 'function') {
                            var cleanupFn = effect({
                                state: state,
                                name: name,
                                instance: instance,
                                options: options
                            });

                            var noopFn = function noopFn() {};

                            effectCleanupFns.push(cleanupFn || noopFn);
                        }
                    });
                }

                function cleanupModifierEffects() {
                    effectCleanupFns.forEach(function(fn) {
                        return fn();
                    });
                    effectCleanupFns = [];
                }

                return instance;
            }
            ;
        }
        var createPopper = /*#__PURE__*/
        popperGenerator();

        /***/
    }
    ), /* 255 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/useTheme.js
        var useTheme = __webpack_require__(753);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js
        var getThemeProps = __webpack_require__(776);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/ownerDocument.js
        var ownerDocument = __webpack_require__(23);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Portal/Portal.js
        var Portal = __webpack_require__(779);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/createChainedFunction.js
        var createChainedFunction = __webpack_require__(47);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useForkRef.js
        var useForkRef = __webpack_require__(13);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useEventCallback.js
        var useEventCallback = __webpack_require__(19);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/zIndex.js
        var zIndex = __webpack_require__(175);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Modal/ModalManager.js
        var ModalManager = __webpack_require__(127);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Modal/TrapFocus.js
        /* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */

        /**
 * @ignore - internal component.
 */

        function TrapFocus(props) {
            var children = props.children
              , _props$disableAutoFoc = props.disableAutoFocus
              , disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc
              , _props$disableEnforce = props.disableEnforceFocus
              , disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce
              , _props$disableRestore = props.disableRestoreFocus
              , disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore
              , getDoc = props.getDoc
              , isEnabled = props.isEnabled
              , open = props.open;
            var ignoreNextEnforceFocus = compat_module["default"].useRef();
            var sentinelStart = compat_module["default"].useRef(null);
            var sentinelEnd = compat_module["default"].useRef(null);
            var nodeToRestore = compat_module["default"].useRef();
            var rootRef = compat_module["default"].useRef(null);
            // can be removed once we drop support for non ref forwarding class components

            var handleOwnRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                rootRef.current = compat_module["default"].findDOMNode(instance);
            }, []);
            var handleRef = Object(useForkRef["a"/* default */
            ])(children.ref, handleOwnRef);
            // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.
            // https://reactjs.org/docs/hooks-reference.html#usememo

            compat_module["default"].useMemo(function() {
                if (!open || typeof window === 'undefined') {
                    return;
                }

                nodeToRestore.current = getDoc().activeElement;
            }, [open]);
            // eslint-disable-line react-hooks/exhaustive-deps

            compat_module["default"].useEffect(function() {
                if (!open) {
                    return;
                }

                var doc = Object(ownerDocument["a"/* default */
                ])(rootRef.current);
                // We might render an empty child.

                if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {
                    if (!rootRef.current.hasAttribute('tabIndex')) {
                        if (false) {}

                        rootRef.current.setAttribute('tabIndex', -1);
                    }

                    rootRef.current.focus();
                }

                var contain = function contain() {
                    if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
                        ignoreNextEnforceFocus.current = false;
                        return;
                    }

                    if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {
                        rootRef.current.focus();
                    }
                };

                var loopFocus = function loopFocus(event) {
                    // 9 = Tab
                    if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {
                        return;
                    }
                    // Make sure the next tab starts from the right place.

                    if (doc.activeElement === rootRef.current) {
                        // We need to ignore the next contain as
                        // it will try to move the focus back to the rootRef element.
                        ignoreNextEnforceFocus.current = true;

                        if (event.shiftKey) {
                            sentinelEnd.current.focus();
                        } else {
                            sentinelStart.current.focus();
                        }
                    }
                };

                doc.addEventListener('focus', contain, true);
                doc.addEventListener('keydown', loopFocus, true);
                // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area
                // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.
                //
                // The whatwg spec defines how the browser should behave but does not explicitly mention any events:
                // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.

                var interval = setInterval(function() {
                    contain();
                }, 50);
                return function() {
                    clearInterval(interval);
                    doc.removeEventListener('focus', contain, true);
                    doc.removeEventListener('keydown', loopFocus, true);
                    // restoreLastFocus()

                    if (!disableRestoreFocus) {
                        // In IE 11 it is possible for document.activeElement to be null resulting
                        // in nodeToRestore.current being null.
                        // Not all elements in IE 11 have a focus method.
                        // Once IE 11 support is dropped the focus() call can be unconditional.
                        if (nodeToRestore.current && nodeToRestore.current.focus) {
                            nodeToRestore.current.focus();
                        }

                        nodeToRestore.current = null;
                    }
                }
                ;
            }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, compat_module["default"].createElement("div", {
                tabIndex: 0,
                ref: sentinelStart,
                "data-test": "sentinelStart"
            }), compat_module["default"].cloneElement(children, {
                ref: handleRef
            }), compat_module["default"].createElement("div", {
                tabIndex: 0,
                ref: sentinelEnd,
                "data-test": "sentinelEnd"
            }));
        }

        false ? undefined : void 0;
        /*

In the future, we should be able to replace TrapFocus with:
https://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md

```jsx
import FocusScope from 'react-dom/FocusScope';

function TrapFocus(props) {
  const {
    children
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableRestoreFocus = false,
    open,
  } = props;

  if (!open) {
    return children;
  }

  return (
    <FocusScope
      autoFocus={!disableAutoFocus}
      contain={!disableEnforceFocus}
      restoreFocus={!disableRestoreFocus}
    >
      {children}
    </FocusScope>
  );
}
```

*/

        /* harmony default export */
        var Modal_TrapFocus = (TrapFocus);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js

        var styles = {
            /* Styles applied to the root element. */
            root: {
                zIndex: -1,
                position: 'fixed',
                right: 0,
                bottom: 0,
                top: 0,
                left: 0,
                backgroundColor: 'rgba(0, 0, 0, 0.5)',
                WebkitTapHighlightColor: 'transparent',
                // Disable scroll capabilities.
                touchAction: 'none'
            },

            /* Styles applied to the root element if `invisible={true}`. */
            invisible: {
                backgroundColor: 'transparent'
            }
        };
        /**
 * @ignore - internal component.
 */

        var SimpleBackdrop_SimpleBackdrop = compat_module["default"].forwardRef(function SimpleBackdrop(props, ref) {
            var _props$invisible = props.invisible
              , invisible = _props$invisible === void 0 ? false : _props$invisible
              , open = props.open
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["invisible", "open"]);

            return open ? compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                "aria-hidden": true,
                ref: ref
            }, other, {
                style: Object(esm_extends["a"/* default */
                ])({}, styles.root, {}, invisible ? styles.invisible : {}, {}, other.style)
            })) : null;
        });
        false ? undefined : void 0;
        /* harmony default export */
        var Modal_SimpleBackdrop = (SimpleBackdrop_SimpleBackdrop);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Modal/Modal.js
        /* unused harmony export styles */

        function getContainer(container) {
            container = typeof container === 'function' ? container() : container;
            return compat_module["default"].findDOMNode(container);
        }

        function getHasTransition(props) {
            return props.children ? props.children.props.hasOwnProperty('in') : false;
        }
        // A modal manager used to track and manage the state of open Modals.
        // Modals don't open on the server so this won't conflict with concurrent requests.

        var defaultManager = new ModalManager["b"/* default */
        ]();
        var Modal_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'fixed',
                    zIndex: theme.zIndex.modal,
                    right: 0,
                    bottom: 0,
                    top: 0,
                    left: 0
                },

                /* Styles applied to the root element if the `Modal` has exited. */
                hidden: {
                    visibility: 'hidden'
                }
            };
        };
        /**
 * Modal is a lower-level construct that is leveraged by the following components:
 *
 * - [Dialog](/api/dialog/)
 * - [Drawer](/api/drawer/)
 * - [Menu](/api/menu/)
 * - [Popover](/api/popover/)
 *
 * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component
 * rather than directly using Modal.
 *
 * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).
 */

        var Modal_Modal = compat_module["default"].forwardRef(function Modal(inProps, ref) {
            var theme = Object(useTheme["a"/* default */
            ])();
            var props = Object(getThemeProps["a"/* default */
            ])({
                name: 'MuiModal',
                props: Object(esm_extends["a"/* default */
                ])({}, inProps),
                theme: theme
            });

            var _props$BackdropCompon = props.BackdropComponent
              , BackdropComponent = _props$BackdropCompon === void 0 ? Modal_SimpleBackdrop : _props$BackdropCompon
              , BackdropProps = props.BackdropProps
              , children = props.children
              , _props$closeAfterTran = props.closeAfterTransition
              , closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran
              , container = props.container
              , _props$disableAutoFoc = props.disableAutoFocus
              , disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc
              , _props$disableBackdro = props.disableBackdropClick
              , disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro
              , _props$disableEnforce = props.disableEnforceFocus
              , disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce
              , _props$disableEscapeK = props.disableEscapeKeyDown
              , disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK
              , _props$disablePortal = props.disablePortal
              , disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal
              , _props$disableRestore = props.disableRestoreFocus
              , disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore
              , _props$disableScrollL = props.disableScrollLock
              , disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL
              , _props$hideBackdrop = props.hideBackdrop
              , hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop
              , _props$keepMounted = props.keepMounted
              , keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted
              , _props$manager = props.manager
              , manager = _props$manager === void 0 ? defaultManager : _props$manager
              , onBackdropClick = props.onBackdropClick
              , onClose = props.onClose
              , onEscapeKeyDown = props.onEscapeKeyDown
              , onRendered = props.onRendered
              , open = props.open
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["BackdropComponent", "BackdropProps", "children", "closeAfterTransition", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]);

            var _React$useState = compat_module["default"].useState(true)
              , exited = _React$useState[0]
              , setExited = _React$useState[1];

            var modal = compat_module["default"].useRef({});
            var mountNodeRef = compat_module["default"].useRef(null);
            var modalRef = compat_module["default"].useRef(null);
            var handleRef = Object(useForkRef["a"/* default */
            ])(modalRef, ref);
            var hasTransition = getHasTransition(props);

            var getDoc = function getDoc() {
                return Object(ownerDocument["a"/* default */
                ])(mountNodeRef.current);
            };

            var getModal = function getModal() {
                modal.current.modalRef = modalRef.current;
                modal.current.mountNode = mountNodeRef.current;
                return modal.current;
            };

            var handleMounted = function handleMounted() {
                manager.mount(getModal(), {
                    disableScrollLock: disableScrollLock
                });
                // Fix a bug on Chrome where the scroll isn't initially 0.

                modalRef.current.scrollTop = 0;
            };

            var handleOpen = Object(useEventCallback["a"/* default */
            ])(function() {
                var resolvedContainer = getContainer(container) || getDoc().body;
                manager.add(getModal(), resolvedContainer);
                // The element was already mounted.

                if (modalRef.current) {
                    handleMounted();
                }
            });
            var isTopModal = compat_module["default"].useCallback(function() {
                return manager.isTopModal(getModal());
            }, [manager]);
            var handlePortalRef = Object(useEventCallback["a"/* default */
            ])(function(node) {
                mountNodeRef.current = node;

                if (!node) {
                    return;
                }

                if (onRendered) {
                    onRendered();
                }

                if (open && isTopModal()) {
                    handleMounted();
                } else {
                    Object(ModalManager["a"/* ariaHidden */
                    ])(modalRef.current, true);
                }
            });
            var handleClose = compat_module["default"].useCallback(function() {
                manager.remove(getModal());
            }, [manager]);
            compat_module["default"].useEffect(function() {
                return function() {
                    handleClose();
                }
                ;
            }, [handleClose]);
            compat_module["default"].useEffect(function() {
                if (open) {
                    handleOpen();
                } else if (!hasTransition || !closeAfterTransition) {
                    handleClose();
                }
            }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);

            if (!keepMounted && !open && (!hasTransition || exited)) {
                return null;
            }

            var handleEnter = function handleEnter() {
                setExited(false);
            };

            var handleExited = function handleExited() {
                setExited(true);

                if (closeAfterTransition) {
                    handleClose();
                }
            };

            var handleBackdropClick = function handleBackdropClick(event) {
                if (event.target !== event.currentTarget) {
                    return;
                }

                if (onBackdropClick) {
                    onBackdropClick(event);
                }

                if (!disableBackdropClick && onClose) {
                    onClose(event, 'backdropClick');
                }
            };

            var handleKeyDown = function handleKeyDown(event) {
                // The handler doesn't take event.defaultPrevented into account:
                //
                // event.preventDefault() is meant to stop default behaviours like
                // clicking a checkbox to check it, hitting a button to submit a form,
                // and hitting left arrow to move the cursor in a text input etc.
                // Only special HTML elements have these default behaviors.
                if (event.key !== 'Escape' || !isTopModal()) {
                    return;
                }
                // Swallow the event, in case someone is listening for the escape key on the body.

                event.stopPropagation();

                if (onEscapeKeyDown) {
                    onEscapeKeyDown(event);
                }

                if (!disableEscapeKeyDown && onClose) {
                    onClose(event, 'escapeKeyDown');
                }
            };

            var inlineStyle = Modal_styles(theme || {
                zIndex: zIndex["a"/* default */
                ]
            });
            var childProps = {};

            if (children.props.tabIndex === undefined) {
                childProps.tabIndex = children.props.tabIndex || '-1';
            }
            // It's a Transition like component

            if (hasTransition) {
                childProps.onEnter = Object(createChainedFunction["a"/* default */
                ])(handleEnter, children.props.onEnter);
                childProps.onExited = Object(createChainedFunction["a"/* default */
                ])(handleExited, children.props.onExited);
            }

            return compat_module["default"].createElement(Portal["a"/* default */
            ], {
                ref: handlePortalRef,
                container: container,
                disablePortal: disablePortal
            }, compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                ref: handleRef,
                onKeyDown: handleKeyDown,
                role: "presentation"
            }, other, {
                style: Object(esm_extends["a"/* default */
                ])({}, inlineStyle.root, {}, !open && exited ? inlineStyle.hidden : {}, {}, other.style)
            }), hideBackdrop ? null : compat_module["default"].createElement(BackdropComponent, Object(esm_extends["a"/* default */
            ])({
                open: open,
                onClick: handleBackdropClick
            }, BackdropProps)), compat_module["default"].createElement(Modal_TrapFocus, {
                disableEnforceFocus: disableEnforceFocus,
                disableAutoFocus: disableAutoFocus,
                disableRestoreFocus: disableRestoreFocus,
                getDoc: getDoc,
                isEnabled: isTopModal,
                open: open
            }, compat_module["default"].cloneElement(children, childProps))));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Modal_Modal = __webpack_exports__["a"] = (Modal_Modal);

        /***/
    }
    ), /* 256 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var reactIs = __webpack_require__(37);

        /**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
        var REACT_STATICS = {
            childContextTypes: true,
            contextType: true,
            contextTypes: true,
            defaultProps: true,
            displayName: true,
            getDefaultProps: true,
            getDerivedStateFromError: true,
            getDerivedStateFromProps: true,
            mixins: true,
            propTypes: true,
            type: true
        };
        var KNOWN_STATICS = {
            name: true,
            length: true,
            prototype: true,
            caller: true,
            callee: true,
            arguments: true,
            arity: true
        };
        var FORWARD_REF_STATICS = {
            '$$typeof': true,
            render: true,
            defaultProps: true,
            displayName: true,
            propTypes: true
        };
        var MEMO_STATICS = {
            '$$typeof': true,
            compare: true,
            defaultProps: true,
            displayName: true,
            propTypes: true,
            type: true
        };
        var TYPE_STATICS = {};
        TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;

        function getStatics(component) {
            if (reactIs.isMemo(component)) {
                return MEMO_STATICS;
            }

            return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
        }

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = Object.prototype;
        function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
            if (typeof sourceComponent !== 'string') {
                // don't hoist over string (html) components
                if (objectPrototype) {
                    var inheritedComponent = getPrototypeOf(sourceComponent);

                    if (inheritedComponent && inheritedComponent !== objectPrototype) {
                        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                    }
                }

                var keys = getOwnPropertyNames(sourceComponent);

                if (getOwnPropertySymbols) {
                    keys = keys.concat(getOwnPropertySymbols(sourceComponent));
                }

                var targetStatics = getStatics(targetComponent);
                var sourceStatics = getStatics(sourceComponent);

                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];

                    if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                        try {
                            // Avoid failures from read-only properties
                            defineProperty(targetComponent, key, descriptor);
                        } catch (e) {}
                    }
                }
            }

            return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
    }
    ), /* 257 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global, module) {
            /* harmony import */
            var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(431);
            /* global window */

            var root;

            if (typeof self !== 'undefined') {
                root = self;
            } else if (typeof window !== 'undefined') {
                root = window;
            } else if (typeof global !== 'undefined') {
                root = global;
            } else if (true) {
                root = module;
            } else {}

            var result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(root);
            /* harmony default export */
            __webpack_exports__["a"] = (result);

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(580)(module)))

        /***/
    }
    ), /* 258 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useForkRef.js
        var useForkRef = __webpack_require__(13);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useEventCallback.js
        var useEventCallback = __webpack_require__(19);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/NoSsr/NoSsr.js
        var NoSsr = __webpack_require__(777);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/focusVisible.js
        var utils_focusVisible = __webpack_require__(72);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
        var toConsumableArray = __webpack_require__(21);

        // EXTERNAL MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        var objectWithoutPropertiesLoose = __webpack_require__(176);

        // CONCATENATED MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            return _extends.apply(this, arguments);
        }
        // EXTERNAL MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
        var inheritsLoose = __webpack_require__(177);

        // CONCATENATED MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
        function _assertThisInitialized(self) {
            if (self === void 0) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return self;
        }
        // EXTERNAL MODULE: ../node_modules/react-transition-group/esm/TransitionGroupContext.js
        var TransitionGroupContext = __webpack_require__(83);

        // CONCATENATED MODULE: ../node_modules/react-transition-group/esm/utils/ChildMapping.js

        /**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

        function getChildMapping(children, mapFn) {
            var mapper = function mapper(child) {
                return mapFn && Object(compat_module["isValidElement"])(child) ? mapFn(child) : child;
            };

            var result = Object.create(null);
            if (children)
                compat_module["Children"].map(children, function(c) {
                    return c;
                }).forEach(function(child) {
                    // run the map function here instead so that the key is the computed one
                    result[child.key] = mapper(child);
                });
            return result;
        }
        /**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

        function mergeChildMappings(prev, next) {
            prev = prev || {};
            next = next || {};

            function getValueForKey(key) {
                return key in next ? next[key] : prev[key];
            }
            // For each key of `next`, the list of keys to insert before that key in
            // the combined list

            var nextKeysPending = Object.create(null);
            var pendingKeys = [];

            for (var prevKey in prev) {
                if (prevKey in next) {
                    if (pendingKeys.length) {
                        nextKeysPending[prevKey] = pendingKeys;
                        pendingKeys = [];
                    }
                } else {
                    pendingKeys.push(prevKey);
                }
            }

            var i;
            var childMapping = {};

            for (var nextKey in next) {
                if (nextKeysPending[nextKey]) {
                    for (i = 0; i < nextKeysPending[nextKey].length; i++) {
                        var pendingNextKey = nextKeysPending[nextKey][i];
                        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
                    }
                }

                childMapping[nextKey] = getValueForKey(nextKey);
            }
            // Finally, add the keys which didn't appear before any key in `next`

            for (i = 0; i < pendingKeys.length; i++) {
                childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
            }

            return childMapping;
        }

        function getProp(child, prop, props) {
            return props[prop] != null ? props[prop] : child.props[prop];
        }

        function getInitialChildMapping(props, onExited) {
            return getChildMapping(props.children, function(child) {
                return Object(compat_module["cloneElement"])(child, {
                    onExited: onExited.bind(null, child),
                    in: true,
                    appear: getProp(child, 'appear', props),
                    enter: getProp(child, 'enter', props),
                    exit: getProp(child, 'exit', props)
                });
            });
        }
        function getNextChildMapping(nextProps, prevChildMapping, onExited) {
            var nextChildMapping = getChildMapping(nextProps.children);
            var children = mergeChildMappings(prevChildMapping, nextChildMapping);
            Object.keys(children).forEach(function(key) {
                var child = children[key];
                if (!Object(compat_module["isValidElement"])(child))
                    return;
                var hasPrev = key in prevChildMapping;
                var hasNext = key in nextChildMapping;
                var prevChild = prevChildMapping[key];
                var isLeaving = Object(compat_module["isValidElement"])(prevChild) && !prevChild.props.in;
                // item is new (entering)

                if (hasNext && (!hasPrev || isLeaving)) {
                    // console.log('entering', key)
                    children[key] = Object(compat_module["cloneElement"])(child, {
                        onExited: onExited.bind(null, child),
                        in: true,
                        exit: getProp(child, 'exit', nextProps),
                        enter: getProp(child, 'enter', nextProps)
                    });
                } else if (!hasNext && hasPrev && !isLeaving) {
                    // item is old (exiting)
                    // console.log('leaving', key)
                    children[key] = Object(compat_module["cloneElement"])(child, {
                        in: false
                    });
                } else if (hasNext && hasPrev && Object(compat_module["isValidElement"])(prevChild)) {
                    // item hasn't changed transition states
                    // copy over the last transition props;
                    // console.log('unchanged', key)
                    children[key] = Object(compat_module["cloneElement"])(child, {
                        onExited: onExited.bind(null, child),
                        in: prevChild.props.in,
                        exit: getProp(child, 'exit', nextProps),
                        enter: getProp(child, 'enter', nextProps)
                    });
                }
            });
            return children;
        }
        // CONCATENATED MODULE: ../node_modules/react-transition-group/esm/TransitionGroup.js

        var values = Object.values || function(obj) {
            return Object.keys(obj).map(function(k) {
                return obj[k];
            });
        }
        ;

        var defaultProps = {
            component: 'div',
            childFactory: function childFactory(child) {
                return child;
            }/**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

        };

        var TransitionGroup_TransitionGroup = /*#__PURE__*/
        function(_React$Component) {
            Object(inheritsLoose["a"/* default */
            ])(TransitionGroup, _React$Component);

            function TransitionGroup(props, context) {
                var _this;

                _this = _React$Component.call(this, props, context) || this;

                var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));
                // Initial children should all be entering, dependent on appear

                _this.state = {
                    contextValue: {
                        isMounting: true
                    },
                    handleExited: handleExited,
                    firstRender: true
                };
                return _this;
            }

            var _proto = TransitionGroup.prototype;

            _proto.componentDidMount = function componentDidMount() {
                this.mounted = true;
                this.setState({
                    contextValue: {
                        isMounting: false
                    }
                });
            }
            ;

            _proto.componentWillUnmount = function componentWillUnmount() {
                this.mounted = false;
            }
            ;

            TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
                var prevChildMapping = _ref.children
                  , handleExited = _ref.handleExited
                  , firstRender = _ref.firstRender;
                return {
                    children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
                    firstRender: false
                };
            }
            ;

            _proto.handleExited = function handleExited(child, node) {
                var currentChildMapping = getChildMapping(this.props.children);
                if (child.key in currentChildMapping)
                    return;

                if (child.props.onExited) {
                    child.props.onExited(node);
                }

                if (this.mounted) {
                    this.setState(function(state) {
                        var children = _extends({}, state.children);

                        delete children[child.key];
                        return {
                            children: children
                        };
                    });
                }
            }
            ;

            _proto.render = function render() {
                var _this$props = this.props
                  , Component = _this$props.component
                  , childFactory = _this$props.childFactory
                  , props = Object(objectWithoutPropertiesLoose["a"/* default */
                ])(_this$props, ["component", "childFactory"]);

                var contextValue = this.state.contextValue;
                var children = values(this.state.children).map(childFactory);
                delete props.appear;
                delete props.enter;
                delete props.exit;

                if (Component === null) {
                    return compat_module["default"].createElement(TransitionGroupContext["a"/* default */
                    ].Provider, {
                        value: contextValue
                    }, children);
                }

                return compat_module["default"].createElement(TransitionGroupContext["a"/* default */
                ].Provider, {
                    value: contextValue
                }, compat_module["default"].createElement(Component, props, children));
            }
            ;

            return TransitionGroup;
        }(compat_module["default"].Component);

        TransitionGroup_TransitionGroup.propTypes = false ? undefined : {};
        TransitionGroup_TransitionGroup.defaultProps = defaultProps;
        /* harmony default export */
        var esm_TransitionGroup = (TransitionGroup_TransitionGroup);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ButtonBase/Ripple.js

        var useEnhancedEffect = typeof window === 'undefined' ? compat_module["default"].useEffect : compat_module["default"].useLayoutEffect;
        /**
 * @ignore - internal component.
 */

        function Ripple(props) {
            var classes = props.classes
              , _props$pulsate = props.pulsate
              , pulsate = _props$pulsate === void 0 ? false : _props$pulsate
              , rippleX = props.rippleX
              , rippleY = props.rippleY
              , rippleSize = props.rippleSize
              , inProp = props.in
              , _props$onExited = props.onExited
              , onExited = _props$onExited === void 0 ? function() {}
            : _props$onExited
              , timeout = props.timeout;

            var _React$useState = compat_module["default"].useState(false)
              , leaving = _React$useState[0]
              , setLeaving = _React$useState[1];

            var rippleClassName = Object(clsx_m["a"/* default */
            ])(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
            var rippleStyles = {
                width: rippleSize,
                height: rippleSize,
                top: -(rippleSize / 2) + rippleY,
                left: -(rippleSize / 2) + rippleX
            };
            var childClassName = Object(clsx_m["a"/* default */
            ])(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
            var handleExited = Object(useEventCallback["a"/* default */
            ])(onExited);
            // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority

            useEnhancedEffect(function() {
                if (!inProp) {
                    // react-transition-group#onExit
                    setLeaving(true);
                    // react-transition-group#onExited

                    var timeoutId = setTimeout(handleExited, timeout);
                    return function() {
                        clearTimeout(timeoutId);
                    }
                    ;
                }

                return undefined;
            }, [handleExited, inProp, timeout]);
            return compat_module["default"].createElement("span", {
                className: rippleClassName,
                style: rippleStyles
            }, compat_module["default"].createElement("span", {
                className: childClassName
            }));
        }

        false ? undefined : void 0;
        /* harmony default export */
        var ButtonBase_Ripple = (Ripple);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js

        var DURATION = 550;
        var DELAY_RIPPLE = 80;
        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    overflow: 'hidden',
                    pointerEvents: 'none',
                    position: 'absolute',
                    zIndex: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0,
                    borderRadius: 'inherit'
                },

                /* Styles applied to the internal `Ripple` components `ripple` class. */
                ripple: {
                    opacity: 0,
                    position: 'absolute'
                },

                /* Styles applied to the internal `Ripple` components `rippleVisible` class. */
                rippleVisible: {
                    opacity: 0.3,
                    transform: 'scale(1)',
                    animation: "$enter ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
                },

                /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */
                ripplePulsate: {
                    animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
                },

                /* Styles applied to the internal `Ripple` components `child` class. */
                child: {
                    opacity: 1,
                    display: 'block',
                    width: '100%',
                    height: '100%',
                    borderRadius: '50%',
                    backgroundColor: 'currentColor'
                },

                /* Styles applied to the internal `Ripple` components `childLeaving` class. */
                childLeaving: {
                    opacity: 0,
                    animation: "$exit ".concat(DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
                },

                /* Styles applied to the internal `Ripple` components `childPulsate` class. */
                childPulsate: {
                    position: 'absolute',
                    left: 0,
                    top: 0,
                    animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
                },
                '@keyframes enter': {
                    '0%': {
                        transform: 'scale(0)',
                        opacity: 0.1
                    },
                    '100%': {
                        transform: 'scale(1)',
                        opacity: 0.3
                    }
                },
                '@keyframes exit': {
                    '0%': {
                        opacity: 1
                    },
                    '100%': {
                        opacity: 0
                    }
                },
                '@keyframes pulsate': {
                    '0%': {
                        transform: 'scale(1)'
                    },
                    '50%': {
                        transform: 'scale(0.92)'
                    },
                    '100%': {
                        transform: 'scale(1)'
                    }
                }
            };
        };
        /**
 * @ignore - internal component.
 *
 * TODO v5: Make private
 */

        var TouchRipple_TouchRipple = compat_module["default"].forwardRef(function TouchRipple(props, ref) {
            var _props$center = props.center
              , centerProp = _props$center === void 0 ? false : _props$center
              , classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["center", "classes", "className"]);

            var _React$useState = compat_module["default"].useState([])
              , ripples = _React$useState[0]
              , setRipples = _React$useState[1];

            var nextKey = compat_module["default"].useRef(0);
            var rippleCallback = compat_module["default"].useRef(null);
            compat_module["default"].useEffect(function() {
                if (rippleCallback.current) {
                    rippleCallback.current();
                    rippleCallback.current = null;
                }
            }, [ripples]);
            // Used to filter out mouse emulated events on mobile.

            var ignoringMouseDown = compat_module["default"].useRef(false);
            // We use a timer in order to only show the ripples for touch "click" like events.
            // We don't want to display the ripple for touch scroll events.

            var startTimer = compat_module["default"].useRef(null);
            // This is the hook called once the previous timeout is ready.

            var startTimerCommit = compat_module["default"].useRef(null);
            var container = compat_module["default"].useRef(null);
            compat_module["default"].useEffect(function() {
                return function() {
                    clearTimeout(startTimer.current);
                }
                ;
            }, []);
            var startCommit = compat_module["default"].useCallback(function(params) {
                var pulsate = params.pulsate
                  , rippleX = params.rippleX
                  , rippleY = params.rippleY
                  , rippleSize = params.rippleSize
                  , cb = params.cb;
                setRipples(function(oldRipples) {
                    return [].concat(Object(toConsumableArray["a"/* default */
                    ])(oldRipples), [compat_module["default"].createElement(ButtonBase_Ripple, {
                        key: nextKey.current,
                        classes: classes,
                        timeout: DURATION,
                        pulsate: pulsate,
                        rippleX: rippleX,
                        rippleY: rippleY,
                        rippleSize: rippleSize
                    })]);
                });
                nextKey.current += 1;
                rippleCallback.current = cb;
            }, [classes]);
            var start = compat_module["default"].useCallback(function() {
                var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var cb = arguments.length > 2 ? arguments[2] : undefined;
                var _options$pulsate = options.pulsate
                  , pulsate = _options$pulsate === void 0 ? false : _options$pulsate
                  , _options$center = options.center
                  , center = _options$center === void 0 ? centerProp || options.pulsate : _options$center
                  , _options$fakeElement = options.fakeElement
                  , fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;

                if (event.type === 'mousedown' && ignoringMouseDown.current) {
                    ignoringMouseDown.current = false;
                    return;
                }

                if (event.type === 'touchstart') {
                    ignoringMouseDown.current = true;
                }

                var element = fakeElement ? null : container.current;
                var rect = element ? element.getBoundingClientRect() : {
                    width: 0,
                    height: 0,
                    left: 0,
                    top: 0
                };
                // Get the size of the ripple

                var rippleX;
                var rippleY;
                var rippleSize;

                if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
                    rippleX = Math.round(rect.width / 2);
                    rippleY = Math.round(rect.height / 2);
                } else {
                    var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
                    var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
                    rippleX = Math.round(clientX - rect.left);
                    rippleY = Math.round(clientY - rect.top);
                }

                if (center) {
                    rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3);
                    // For some reason the animation is broken on Mobile Chrome if the size if even.

                    if (rippleSize % 2 === 0) {
                        rippleSize += 1;
                    }
                } else {
                    var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
                    var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
                    rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
                }
                // Touche devices

                if (event.touches) {
                    // check that this isn't another touchstart due to multitouch
                    // otherwise we will only clear a single timer when unmounting while two
                    // are running
                    if (startTimerCommit.current === null) {
                        // Prepare the ripple effect.
                        startTimerCommit.current = function() {
                            startCommit({
                                pulsate: pulsate,
                                rippleX: rippleX,
                                rippleY: rippleY,
                                rippleSize: rippleSize,
                                cb: cb
                            });
                        }
                        ;
                        // Delay the execution of the ripple effect.

                        startTimer.current = setTimeout(function() {
                            if (startTimerCommit.current) {
                                startTimerCommit.current();
                                startTimerCommit.current = null;
                            }
                        }, DELAY_RIPPLE);
                        // We have to make a tradeoff with this value.
                    }
                } else {
                    startCommit({
                        pulsate: pulsate,
                        rippleX: rippleX,
                        rippleY: rippleY,
                        rippleSize: rippleSize,
                        cb: cb
                    });
                }
            }, [centerProp, startCommit]);
            var pulsate = compat_module["default"].useCallback(function() {
                start({}, {
                    pulsate: true
                });
            }, [start]);
            var stop = compat_module["default"].useCallback(function(event, cb) {
                clearTimeout(startTimer.current);
                // The touch interaction occurs too quickly.
                // We still want to show ripple effect.

                if (event.type === 'touchend' && startTimerCommit.current) {
                    event.persist();
                    startTimerCommit.current();
                    startTimerCommit.current = null;
                    startTimer.current = setTimeout(function() {
                        stop(event, cb);
                    });
                    return;
                }

                startTimerCommit.current = null;
                setRipples(function(oldRipples) {
                    if (oldRipples.length > 0) {
                        return oldRipples.slice(1);
                    }

                    return oldRipples;
                });
                rippleCallback.current = cb;
            }, []);
            compat_module["default"].useImperativeHandle(ref, function() {
                return {
                    pulsate: pulsate,
                    start: start,
                    stop: stop
                };
            }, [pulsate, start, stop]);
            return compat_module["default"].createElement("span", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: container
            }, other), compat_module["default"].createElement(esm_TransitionGroup, {
                component: null,
                exit: true
            }, ripples));
        });
        // TODO cleanup after https://github.com/reactjs/react-docgen/pull/378 is released

        function withMuiName(Component) {
            Component.muiName = 'MuiTouchRipple';
            return Component;
        }

        false ? undefined : void 0;
        /* harmony default export */
        var ButtonBase_TouchRipple = (Object(withStyles["a"/* default */
        ])(styles, {
            flip: false,
            name: 'MuiTouchRipple'
        })(withMuiName(compat_module["default"].memo(TouchRipple_TouchRipple))));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js
        /* unused harmony export styles */

        var ButtonBase_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'inline-flex',
                alignItems: 'center',
                justifyContent: 'center',
                position: 'relative',
                WebkitTapHighlightColor: 'transparent',
                backgroundColor: 'transparent',
                // Reset default value
                // We disable the focus ring for mouse, touch and keyboard users.
                outline: 0,
                border: 0,
                margin: 0,
                // Remove the margin in Safari
                borderRadius: 0,
                padding: 0,
                // Remove the padding in Firefox
                cursor: 'pointer',
                userSelect: 'none',
                verticalAlign: 'middle',
                '-moz-appearance': 'none',
                // Reset
                '-webkit-appearance': 'none',
                // Reset
                textDecoration: 'none',
                // So we take precedent over the style of a native <a /> element.
                color: 'inherit',
                '&::-moz-focus-inner': {
                    borderStyle: 'none'// Remove Firefox dotted outline.

                },
                '&$disabled': {
                    pointerEvents: 'none',
                    // Disable link interactions
                    cursor: 'default'
                }
            },

            /* Pseudo-class applied to the root element if `disabled={true}`. */
            disabled: {},

            /* Pseudo-class applied to the root element if keyboard focused. */
            focusVisible: {}
        };
        /**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */

        var ButtonBase_ButtonBase = compat_module["default"].forwardRef(function ButtonBase(props, ref) {
            var action = props.action
              , buttonRefProp = props.buttonRef
              , _props$centerRipple = props.centerRipple
              , centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , component = _props$component === void 0 ? 'button' : _props$component
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableRipple = props.disableRipple
              , disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple
              , _props$disableTouchRi = props.disableTouchRipple
              , disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi
              , _props$focusRipple = props.focusRipple
              , focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple
              , focusVisibleClassName = props.focusVisibleClassName
              , onBlur = props.onBlur
              , onClick = props.onClick
              , onFocus = props.onFocus
              , onFocusVisible = props.onFocusVisible
              , onKeyDown = props.onKeyDown
              , onKeyUp = props.onKeyUp
              , onMouseDown = props.onMouseDown
              , onMouseLeave = props.onMouseLeave
              , onMouseUp = props.onMouseUp
              , onTouchEnd = props.onTouchEnd
              , onTouchMove = props.onTouchMove
              , onTouchStart = props.onTouchStart
              , onDragLeave = props.onDragLeave
              , _props$tabIndex = props.tabIndex
              , tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex
              , TouchRippleProps = props.TouchRippleProps
              , _props$type = props.type
              , type = _props$type === void 0 ? 'button' : _props$type
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "onDragLeave", "tabIndex", "TouchRippleProps", "type"]);

            var buttonRef = compat_module["default"].useRef(null);

            function getButtonNode() {
                // #StrictMode ready
                return compat_module["default"].findDOMNode(buttonRef.current);
            }

            var rippleRef = compat_module["default"].useRef(null);

            var _React$useState = compat_module["default"].useState(false)
              , focusVisible = _React$useState[0]
              , setFocusVisible = _React$useState[1];

            if (disabled && focusVisible) {
                setFocusVisible(false);
            }

            var _useIsFocusVisible = Object(utils_focusVisible["a"/* useIsFocusVisible */
            ])()
              , isFocusVisible = _useIsFocusVisible.isFocusVisible
              , onBlurVisible = _useIsFocusVisible.onBlurVisible
              , focusVisibleRef = _useIsFocusVisible.ref;

            compat_module["default"].useImperativeHandle(action, function() {
                return {
                    focusVisible: function focusVisible() {
                        setFocusVisible(true);
                        buttonRef.current.focus();
                    }
                };
            }, []);
            compat_module["default"].useEffect(function() {
                if (focusVisible && focusRipple && !disableRipple) {
                    rippleRef.current.pulsate();
                }
            }, [disableRipple, focusRipple, focusVisible]);

            function useRippleHandler(rippleAction, eventCallback) {
                var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;
                return Object(useEventCallback["a"/* default */
                ])(function(event) {
                    if (eventCallback) {
                        eventCallback(event);
                    }

                    var ignore = skipRippleAction;

                    if (!ignore && rippleRef.current) {
                        rippleRef.current[rippleAction](event);
                    }

                    return true;
                });
            }

            var handleMouseDown = useRippleHandler('start', onMouseDown);
            var handleDragLeave = useRippleHandler('stop', onDragLeave);
            var handleMouseUp = useRippleHandler('stop', onMouseUp);
            var handleMouseLeave = useRippleHandler('stop', function(event) {
                if (focusVisible) {
                    event.preventDefault();
                }

                if (onMouseLeave) {
                    onMouseLeave(event);
                }
            });
            var handleTouchStart = useRippleHandler('start', onTouchStart);
            var handleTouchEnd = useRippleHandler('stop', onTouchEnd);
            var handleTouchMove = useRippleHandler('stop', onTouchMove);
            var handleBlur = useRippleHandler('stop', function(event) {
                if (focusVisible) {
                    onBlurVisible(event);
                    setFocusVisible(false);
                }

                if (onBlur) {
                    onBlur(event);
                }
            }, false);
            var handleFocus = Object(useEventCallback["a"/* default */
            ])(function(event) {
                if (disabled) {
                    return;
                }
                // Fix for https://github.com/facebook/react/issues/7769

                if (!buttonRef.current) {
                    buttonRef.current = event.currentTarget;
                }

                if (isFocusVisible(event)) {
                    setFocusVisible(true);

                    if (onFocusVisible) {
                        onFocusVisible(event);
                    }
                }

                if (onFocus) {
                    onFocus(event);
                }
            });

            var isNonNativeButton = function isNonNativeButton() {
                var button = getButtonNode();
                return component && component !== 'button' && !(button.tagName === 'A' && button.href);
            };
            /**
   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat
   */

            var keydownRef = compat_module["default"].useRef(false);
            var handleKeyDown = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // Check if key is already down to avoid repeats being counted as multiple activations
                if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {
                    keydownRef.current = true;
                    event.persist();
                    rippleRef.current.stop(event, function() {
                        rippleRef.current.start(event);
                    });
                }

                if (onKeyDown) {
                    onKeyDown(event);
                }
                // Keyboard accessibility for non interactive elements

                if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter') {
                    event.preventDefault();

                    if (onClick) {
                        onClick(event);
                    }
                }
            });
            var handleKeyUp = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed
                // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0
                if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {
                    keydownRef.current = false;
                    event.persist();
                    rippleRef.current.stop(event, function() {
                        rippleRef.current.pulsate(event);
                    });
                }

                if (onKeyUp) {
                    onKeyUp(event);
                }
                // Keyboard accessibility for non interactive elements

                if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {
                    event.preventDefault();

                    if (onClick) {
                        onClick(event);
                    }
                }
            });
            var ComponentProp = component;

            if (ComponentProp === 'button' && other.href) {
                ComponentProp = 'a';
            }

            var buttonProps = {};

            if (ComponentProp === 'button') {
                buttonProps.type = type;
                buttonProps.disabled = disabled;
            } else {
                if (ComponentProp !== 'a' || !other.href) {
                    buttonProps.role = 'button';
                }

                buttonProps['aria-disabled'] = disabled;
            }

            var handleUserRef = Object(useForkRef["a"/* default */
            ])(buttonRefProp, ref);
            var handleOwnRef = Object(useForkRef["a"/* default */
            ])(focusVisibleRef, buttonRef);
            var handleRef = Object(useForkRef["a"/* default */
            ])(handleUserRef, handleOwnRef);
            return compat_module["default"].createElement(ComponentProp, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),
                onBlur: handleBlur,
                onClick: onClick,
                onFocus: handleFocus,
                onKeyDown: handleKeyDown,
                onKeyUp: handleKeyUp,
                onMouseDown: handleMouseDown,
                onMouseLeave: handleMouseLeave,
                onMouseUp: handleMouseUp,
                onDragLeave: handleDragLeave,
                onTouchEnd: handleTouchEnd,
                onTouchMove: handleTouchMove,
                onTouchStart: handleTouchStart,
                ref: handleRef,
                tabIndex: disabled ? -1 : tabIndex
            }, buttonProps, other), children, !disableRipple && !disabled ? compat_module["default"].createElement(NoSsr["a"/* default */
            ], null, compat_module["default"].createElement(ButtonBase_TouchRipple, Object(esm_extends["a"/* default */
            ])({
                ref: rippleRef,
                center: centerRipple
            }, TouchRippleProps))) : null);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ButtonBase_ButtonBase = __webpack_exports__["a"] = (Object(withStyles["a"/* default */
        ])(ButtonBase_styles, {
            name: 'MuiButtonBase'
        })(ButtonBase_ButtonBase));

        /***/
    }
    ), /* 259 */
    , /* 260 */
    , /* 261 */
    , /* 262 */
    , /* 263 */
    , /* 264 */
    , /* 265 */
    , /* 266 */
    , /* 267 */
    , /* 268 */
    , /* 269 */
    , /* 270 */
    , /* 271 */
    , /* 272 */
    , /* 273 */
    , /* 274 */
    , /* 275 */
    , /* 276 */
    , /* 277 */
    , /* 278 */
    , /* 279 */
    , /* 280 */
    , /* 281 */
    , /* 282 */
    , /* 283 */
    , /* 284 */
    , /* 285 */
    , /* 286 */
    , /* 287 */
    , /* 288 */
    , /* 289 */
    , /* 290 */
    , /* 291 */
    , /* 292 */
    , /* 293 */
    , /* 294 */
    , /* 295 */
    , /* 296 */
    , /* 297 */
    , /* 298 */
    , /* 299 */
    , /* 300 */
    , /* 301 */
    , /* 302 */
    , /* 303 */
    , /* 304 */
    , /* 305 */
    , /* 306 */
    , /* 307 */
    , /* 308 */
    , /* 309 */
    , /* 310 */
    , /* 311 */
    , /* 312 */
    , /* 313 */
    , /* 314 */
    , /* 315 */
    , /* 316 */
    , /* 317 */
    , /* 318 */
    , /* 319 */
    , /* 320 */
    , /* 321 */
    , /* 322 */
    , /* 323 */
    , /* 324 */
    , /* 325 */
    , /* 326 */
    , /* 327 */
    , /* 328 */
    /***/
    (function(module, exports) {

        function _defineProperty(obj, key, value) {
            if (key in obj) {
                Object.defineProperty(obj, key, {
                    value: value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
            } else {
                obj[key] = value;
            }

            return obj;
        }

        module.exports = _defineProperty;

        /***/
    }
    ), /* 329 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export isObject */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return deepmerge;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58);

        function isObject(item) {
            return item && Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(item) === 'object' && !Array.isArray(item);
        }
        function deepmerge(target, source) {
            var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
                clone: true
            };
            var output = options.clone ? Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({}, target) : target;

            if (isObject(target) && isObject(source)) {
                Object.keys(source).forEach(function(key) {
                    // Avoid prototype pollution
                    if (key === '__proto__') {
                        return;
                    }

                    if (isObject(source[key]) && key in target) {
                        output[key] = deepmerge(target[key], source[key], options);
                    } else {
                        output[key] = source[key];
                    }
                });
            }

            return output;
        }

        /***/
    }
    ), /* 330 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);
        /* harmony import */
        var _ButtonBase__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(258);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
                "a"])({}, theme.typography.button, {
                    boxSizing: 'border-box',
                    minWidth: 64,
                    padding: '6px 16px',
                    borderRadius: theme.shape.borderRadius,
                    color: theme.palette.text.primary,
                    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {
                        duration: theme.transitions.duration.short
                    }),
                    '&:hover': {
                        textDecoration: 'none',
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.text.primary, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        },
                        '&$disabled': {
                            backgroundColor: 'transparent'
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled
                    }
                }),

                /* Styles applied to the span element that wraps the children. */
                label: {
                    width: '100%',
                    // Ensure the correct width for iOS Safari
                    display: 'inherit',
                    alignItems: 'inherit',
                    justifyContent: 'inherit'
                },

                /* Styles applied to the root element if `variant="text"`. */
                text: {
                    padding: '6px 8px'
                },

                /* Styles applied to the root element if `variant="text"` and `color="primary"`. */
                textPrimary: {
                    color: theme.palette.primary.main,
                    '&:hover': {
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Styles applied to the root element if `variant="text"` and `color="secondary"`. */
                textSecondary: {
                    color: theme.palette.secondary.main,
                    '&:hover': {
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Styles applied to the root element if `variant="outlined"`. */
                outlined: {
                    padding: '5px 15px',
                    border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),
                    '&$disabled': {
                        border: "1px solid ".concat(theme.palette.action.disabled)
                    }
                },

                /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
                outlinedPrimary: {
                    color: theme.palette.primary.main,
                    border: "1px solid ".concat(Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                    "d"])(theme.palette.primary.main, 0.5)),
                    '&:hover': {
                        border: "1px solid ".concat(theme.palette.primary.main),
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
                outlinedSecondary: {
                    color: theme.palette.secondary.main,
                    border: "1px solid ".concat(Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                    "d"])(theme.palette.secondary.main, 0.5)),
                    '&:hover': {
                        border: "1px solid ".concat(theme.palette.secondary.main),
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    },
                    '&$disabled': {
                        border: "1px solid ".concat(theme.palette.action.disabled)
                    }
                },

                /* Styles applied to the root element if `variant="contained"`. */
                contained: {
                    color: theme.palette.getContrastText(theme.palette.grey[300]),
                    backgroundColor: theme.palette.grey[300],
                    boxShadow: theme.shadows[2],
                    '&:hover': {
                        backgroundColor: theme.palette.grey.A100,
                        boxShadow: theme.shadows[4],
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            boxShadow: theme.shadows[2],
                            backgroundColor: theme.palette.grey[300]
                        },
                        '&$disabled': {
                            backgroundColor: theme.palette.action.disabledBackground
                        }
                    },
                    '&$focusVisible': {
                        boxShadow: theme.shadows[6]
                    },
                    '&:active': {
                        boxShadow: theme.shadows[8]
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled,
                        boxShadow: theme.shadows[0],
                        backgroundColor: theme.palette.action.disabledBackground
                    }
                },

                /* Styles applied to the root element if `variant="contained"` and `color="primary"`. */
                containedPrimary: {
                    color: theme.palette.primary.contrastText,
                    backgroundColor: theme.palette.primary.main,
                    '&:hover': {
                        backgroundColor: theme.palette.primary.dark,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: theme.palette.primary.main
                        }
                    }
                },

                /* Styles applied to the root element if `variant="contained"` and `color="secondary"`. */
                containedSecondary: {
                    color: theme.palette.secondary.contrastText,
                    backgroundColor: theme.palette.secondary.main,
                    '&:hover': {
                        backgroundColor: theme.palette.secondary.dark,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: theme.palette.secondary.main
                        }
                    }
                },

                /* Styles applied to the root element if `disableElevation={true}`. */
                disableElevation: {
                    boxShadow: 'none',
                    '&:hover': {
                        boxShadow: 'none'
                    },
                    '&$focusVisible': {
                        boxShadow: 'none'
                    },
                    '&:active': {
                        boxShadow: 'none'
                    },
                    '&$disabled': {
                        boxShadow: 'none'
                    }
                },

                /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */
                focusVisible: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `color="inherit"`. */
                colorInherit: {
                    color: 'inherit',
                    borderColor: 'currentColor'
                },

                /* Styles applied to the root element if `size="small"` and `variant="text"`. */
                textSizeSmall: {
                    padding: '4px 5px',
                    fontSize: theme.typography.pxToRem(13)
                },

                /* Styles applied to the root element if `size="large"` and `variant="text"`. */
                textSizeLarge: {
                    padding: '8px 11px',
                    fontSize: theme.typography.pxToRem(15)
                },

                /* Styles applied to the root element if `size="small"` and `variant="outlined"`. */
                outlinedSizeSmall: {
                    padding: '3px 9px',
                    fontSize: theme.typography.pxToRem(13)
                },

                /* Styles applied to the root element if `size="large"` and `variant="outlined"`. */
                outlinedSizeLarge: {
                    padding: '7px 21px',
                    fontSize: theme.typography.pxToRem(15)
                },

                /* Styles applied to the root element if `size="small"` and `variant="contained"`. */
                containedSizeSmall: {
                    padding: '4px 10px',
                    fontSize: theme.typography.pxToRem(13)
                },

                /* Styles applied to the root element if `size="large"` and `variant="contained"`. */
                containedSizeLarge: {
                    padding: '8px 22px',
                    fontSize: theme.typography.pxToRem(15)
                },

                /* Styles applied to the root element if `size="small"`. */
                sizeSmall: {},

                /* Styles applied to the root element if `size="large"`. */
                sizeLarge: {},

                /* Styles applied to the root element if `fullWidth={true}`. */
                fullWidth: {
                    width: '100%'
                },

                /* Styles applied to the startIcon element if supplied. */
                startIcon: {
                    display: 'inherit',
                    marginRight: 8,
                    marginLeft: -4,
                    '&$iconSizeSmall': {
                        marginLeft: -2
                    }
                },

                /* Styles applied to the endIcon element if supplied. */
                endIcon: {
                    display: 'inherit',
                    marginRight: -4,
                    marginLeft: 8,
                    '&$iconSizeSmall': {
                        marginRight: -2
                    }
                },

                /* Styles applied to the icon element if supplied and `size="small"`. */
                iconSizeSmall: {
                    '& > *:first-child': {
                        fontSize: 18
                    }
                },

                /* Styles applied to the icon element if supplied and `size="medium"`. */
                iconSizeMedium: {
                    '& > *:first-child': {
                        fontSize: 20
                    }
                },

                /* Styles applied to the icon element if supplied and `size="large"`. */
                iconSizeLarge: {
                    '& > *:first-child': {
                        fontSize: 22
                    }
                }
            };
        };
        var Button = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Button(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$component = props.component
              , component = _props$component === void 0 ? 'button' : _props$component
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableElevati = props.disableElevation
              , disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati
              , _props$disableFocusRi = props.disableFocusRipple
              , disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi
              , endIconProp = props.endIcon
              , focusVisibleClassName = props.focusVisibleClassName
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , startIconProp = props.startIcon
              , _props$type = props.type
              , type = _props$type === void 0 ? 'button' : _props$type
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'text' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(props, ["children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"]);

            var startIcon = startIconProp && react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("span", {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.startIcon, classes["iconSize".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(size))])
            }, startIconProp);
            var endIcon = endIconProp && react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("span", {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.endIcon, classes["iconSize".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(size))])
            }, endIconProp);
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_ButtonBase__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes["".concat(variant).concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(color))], size !== 'medium' && [classes["".concat(variant, "Size").concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(size))], classes["size".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),
                component: component,
                disabled: disabled,
                focusRipple: !disableFocusRipple,
                focusVisibleClassName: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.focusVisible, focusVisibleClassName),
                ref: ref,
                type: type
            }, other), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("span", {
                className: classes.label
            }, startIcon, children, endIcon));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiButton'
        })(Button));

        /***/
    }
    ), /* 331 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _FormControl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);
        /* harmony import */
        var _Typography__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(250);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'inline-flex',
                    alignItems: 'center',
                    cursor: 'pointer',
                    // For correct alignment with the text.
                    verticalAlign: 'middle',
                    WebkitTapHighlightColor: 'transparent',
                    marginLeft: -11,
                    marginRight: 16,
                    // used for row presentation of radio/checkbox
                    '&$disabled': {
                        cursor: 'default'
                    }
                },

                /* Styles applied to the root element if `labelPlacement="start"`. */
                labelPlacementStart: {
                    flexDirection: 'row-reverse',
                    marginLeft: 16,
                    // used for row presentation of radio/checkbox
                    marginRight: -11
                },

                /* Styles applied to the root element if `labelPlacement="top"`. */
                labelPlacementTop: {
                    flexDirection: 'column-reverse',
                    marginLeft: 16
                },

                /* Styles applied to the root element if `labelPlacement="bottom"`. */
                labelPlacementBottom: {
                    flexDirection: 'column',
                    marginLeft: 16
                },

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the label's Typography component. */
                label: {
                    '&$disabled': {
                        color: theme.palette.text.disabled
                    }
                }
            };
        };
        /**
 * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.
 * Use this component if you want to display an extra label.
 */

        var FormControlLabel = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function FormControlLabel(props, ref) {
            var checked = props.checked
              , classes = props.classes
              , className = props.className
              , control = props.control
              , disabledProp = props.disabled
              , inputRef = props.inputRef
              , label = props.label
              , _props$labelPlacement = props.labelPlacement
              , labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement
              , name = props.name
              , onChange = props.onChange
              , value = props.value
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["checked", "classes", "className", "control", "disabled", "inputRef", "label", "labelPlacement", "name", "onChange", "value"]);

            var muiFormControl = Object(_FormControl__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])();
            var disabled = disabledProp;

            if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {
                disabled = control.props.disabled;
            }

            if (typeof disabled === 'undefined' && muiFormControl) {
                disabled = muiFormControl.disabled;
            }

            var controlProps = {
                disabled: disabled
            };
            ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function(key) {
                if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {
                    controlProps[key] = props[key];
                }
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("label", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, labelPlacement !== 'end' && classes["labelPlacement".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(labelPlacement))], disabled && classes.disabled),
                ref: ref
            }, other), react__WEBPACK_IMPORTED_MODULE_2__["default"].cloneElement(control, controlProps), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_Typography__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"], {
                component: "span",
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.label, disabled && classes.disabled)
            }, label));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiFormControlLabel'
        })(FormControlLabel));

        /***/
    }
    ), /* 332 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
        /* harmony import */
        var _FormGroup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(756);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(13);
        /* harmony import */
        var _utils_useControlled__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(52);
        /* harmony import */
        var _RadioGroupContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(178);

        var RadioGroup = react__WEBPACK_IMPORTED_MODULE_3__["default"].forwardRef(function RadioGroup(props, ref) {
            var actions = props.actions
              , children = props.children
              , name = props.name
              , valueProp = props.value
              , onChange = props.onChange
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__[/* default */
            "a"])(props, ["actions", "children", "name", "value", "onChange"]);

            var rootRef = react__WEBPACK_IMPORTED_MODULE_3__["default"].useRef(null);

            var _useControlled = Object(_utils_useControlled__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"])({
                controlled: valueProp,
                default: props.defaultValue,
                name: 'RadioGroup'
            })
              , _useControlled2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(_useControlled, 2)
              , value = _useControlled2[0]
              , setValue = _useControlled2[1];

            react__WEBPACK_IMPORTED_MODULE_3__["default"].useImperativeHandle(actions, function() {
                return {
                    focus: function focus() {
                        var input = rootRef.current.querySelector('input:not(:disabled):checked');

                        if (!input) {
                            input = rootRef.current.querySelector('input:not(:disabled)');
                        }

                        if (input) {
                            input.focus();
                        }
                    }
                };
            }, []);
            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])(ref, rootRef);

            var handleChange = function handleChange(event) {
                setValue(event.target.value);

                if (onChange) {
                    onChange(event, event.target.value);
                }
            };

            return react__WEBPACK_IMPORTED_MODULE_3__["default"].createElement(_RadioGroupContext__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"].Provider, {
                value: {
                    name: name,
                    onChange: handleChange,
                    value: value
                }
            }, react__WEBPACK_IMPORTED_MODULE_3__["default"].createElement(_FormGroup__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                role: "radiogroup",
                ref: handleRef
            }, other), children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (RadioGroup);

        /***/
    }
    ), /* 333 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global) {
            /** Detect free variable `global` from Node.js. */
            var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

            module.exports = freeGlobal;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 334 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var funcProto = Function.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
        function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return (func + '');
                } catch (e) {}
            }
            return '';
        }

        module.exports = toSource;

        /***/
    }
    ), /* 335 */
    /***/
    (function(module, exports, __webpack_require__) {

        var SetCache = __webpack_require__(498)
          , arraySome = __webpack_require__(501)
          , cacheHas = __webpack_require__(502);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1
          , COMPARE_UNORDERED_FLAG = 2;

        /**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG
              , arrLength = array.length
              , othLength = other.length;

            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
                return false;
            }
            // Assume cyclic values are equal.
            var stacked = stack.get(array);
            if (stacked && stack.get(other)) {
                return stacked == other;
            }
            var index = -1
              , result = true
              , seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

            stack.set(array, other);
            stack.set(other, array);

            // Ignore non-index properties.
            while (++index < arrLength) {
                var arrValue = array[index]
                  , othValue = other[index];

                if (customizer) {
                    var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                }
                if (compared !== undefined) {
                    if (compared) {
                        continue;
                    }
                    result = false;
                    break;
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                    if (!arraySome(other, function(othValue, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                            return seen.push(othIndex);
                        }
                    })) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack['delete'](array);
            stack['delete'](other);
            return result;
        }

        module.exports = equalArrays;

        /***/
    }
    ), /* 336 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(60);

        /** Built-in value references. */
        var Uint8Array = root.Uint8Array;

        module.exports = Uint8Array;

        /***/
    }
    ), /* 337 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetAllKeys = __webpack_require__(338)
          , getSymbols = __webpack_require__(215)
          , keys = __webpack_require__(86);

        /**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
        function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }

        module.exports = getAllKeys;

        /***/
    }
    ), /* 338 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayPush = __webpack_require__(339)
          , isArray = __webpack_require__(56);

        /**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }

        module.exports = baseGetAllKeys;

        /***/
    }
    ), /* 339 */
    /***/
    (function(module, exports) {

        /**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
        function arrayPush(array, values) {
            var index = -1
              , length = values.length
              , offset = array.length;

            while (++index < length) {
                array[offset + index] = values[index];
            }
            return array;
        }

        module.exports = arrayPush;

        /***/
    }
    ), /* 340 */
    /***/
    (function(module, exports) {

        /**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
        function stubArray() {
            return [];
        }

        module.exports = stubArray;

        /***/
    }
    ), /* 341 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseTimes = __webpack_require__(342)
          , isArguments = __webpack_require__(343)
          , isArray = __webpack_require__(56)
          , isBuffer = __webpack_require__(147)
          , isIndex = __webpack_require__(344)
          , isTypedArray = __webpack_require__(216);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
        function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value)
              , isArg = !isArr && isArguments(value)
              , isBuff = !isArr && !isArg && isBuffer(value)
              , isType = !isArr && !isArg && !isBuff && isTypedArray(value)
              , skipIndexes = isArr || isArg || isBuff || isType
              , result = skipIndexes ? baseTimes(value.length, String) : []
              , length = result.length;

            for (var key in value) {
                if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (// Safari 9 has enumerable `arguments.length` in strict mode.
                key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
                (isBuff && (key == 'offset' || key == 'parent')) || // PhantomJS 2 has enumerable non-index properties on typed arrays.
                (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) || // Skip index properties.
                isIndex(key, length)))) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = arrayLikeKeys;

        /***/
    }
    ), /* 342 */
    /***/
    (function(module, exports) {

        /**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
        function baseTimes(n, iteratee) {
            var index = -1
              , result = Array(n);

            while (++index < n) {
                result[index] = iteratee(index);
            }
            return result;
        }

        module.exports = baseTimes;

        /***/
    }
    ), /* 343 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsArguments = __webpack_require__(508)
          , isObjectLike = __webpack_require__(75);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Built-in value references. */
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;

        /**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
        var isArguments = baseIsArguments(function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
        }
        ;

        module.exports = isArguments;

        /***/
    }
    ), /* 344 */
    /***/
    (function(module, exports) {

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
        function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;

            return !!length && (type == 'number' || (type != 'symbol' && reIsUint.test(value))) && (value > -1 && value % 1 == 0 && value < length);
        }

        module.exports = isIndex;

        /***/
    }
    ), /* 345 */
    /***/
    (function(module, exports) {

        /**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            }
            ;
        }

        module.exports = overArg;

        /***/
    }
    ), /* 346 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(69);

        /** Built-in value references. */
        var objectCreate = Object.create;

        /**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
        var baseCreate = (function() {
            function object() {}
            return function(proto) {
                if (!isObject(proto)) {
                    return {};
                }
                if (objectCreate) {
                    return objectCreate(proto);
                }
                object.prototype = proto;
                var result = new object;
                object.prototype = undefined;
                return result;
            }
            ;
        }());

        module.exports = baseCreate;

        /***/
    }
    ), /* 347 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseFor = __webpack_require__(518)
          , keys = __webpack_require__(86);

        /**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
        function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }

        module.exports = baseForOwn;

        /***/
    }
    ), /* 348 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(69);

        /**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
        function isStrictComparable(value) {
            return value === value && !isObject(value);
        }

        module.exports = isStrictComparable;

        /***/
    }
    ), /* 349 */
    /***/
    (function(module, exports) {

        /**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
        function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (object == null) {
                    return false;
                }
                return object[key] === srcValue && (srcValue !== undefined || (key in Object(object)));
            }
            ;
        }

        module.exports = matchesStrictComparable;

        /***/
    }
    ), /* 350 */
    /***/
    (function(module, exports, __webpack_require__) {

        var castPath = __webpack_require__(351)
          , toKey = __webpack_require__(152);

        /**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
        function baseGet(object, path) {
            path = castPath(path, object);

            var index = 0
              , length = path.length;

            while (object != null && index < length) {
                object = object[toKey(path[index++])];
            }
            return (index && index == length) ? object : undefined;
        }

        module.exports = baseGet;

        /***/
    }
    ), /* 351 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArray = __webpack_require__(56)
          , isKey = __webpack_require__(222)
          , stringToPath = __webpack_require__(525)
          , toString = __webpack_require__(528);

        /**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
        function castPath(value, object) {
            if (isArray(value)) {
                return value;
            }
            return isKey(value, object) ? [value] : stringToPath(toString(value));
        }

        module.exports = castPath;

        /***/
    }
    ), /* 352 */
    /***/
    (function(module, exports) {

        /**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
        function identity(value) {
            return value;
        }

        module.exports = identity;

        /***/
    }
    ), /* 353 */
    /***/
    (function(module, exports, __webpack_require__) {

        var identity = __webpack_require__(352);

        /**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
        function castFunction(value) {
            return typeof value == 'function' ? value : identity;
        }

        module.exports = castFunction;

        /***/
    }
    ), /* 354 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const declarations_1 = __webpack_require__(540);
        /**
 * @see https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize#VoiceSelectionParams
 * @type {{ssmlGender: GoogleCloudVoiceSsmlVoiceGender; name: string; languageCode: string}}
 */

        exports.GOOGLE_CLOUD_DEFAULT_VOICE = {
            languageCode: 'en-US',
            name: 'en-US-Wavenet-D',
            ssmlGender: declarations_1.GoogleCloudVoiceSsmlVoiceGender.FEMALE
        };
        /**
 * @see https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize#AudioConfig
 * @type {{sampleRateHertz: number; volumeGainDb: number; speakingRate: number; audioEncoding: GoogleCloudAudioEncoding; pitch: number; effectsProfileId: GoogleCloudVoiceAudioProfile.HANDSET_CLASS_DEVICE[]}}
 */

        exports.GOOGLE_CLOUD_DEFAULT_AUDIO_CONFIG = {
            audioEncoding: declarations_1.GoogleCloudAudioEncoding.LINEAR16,
            speakingRate: 1,
            pitch: 0,
            sampleRateHertz: 24000,
            volumeGainDb: 0,
            effectsProfileId: [declarations_1.GoogleCloudVoiceAudioProfile.HANDSET_CLASS_DEVICE]
        };

        /***/
    }
    ), /* 355 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseClone = __webpack_require__(541);

        /** Used to compose bitmasks for cloning. */
        var CLONE_DEEP_FLAG = 1
          , CLONE_SYMBOLS_FLAG = 4;

        /**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
        function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
        }

        module.exports = cloneDeep;

        /***/
    }
    ), /* 356 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseAssignValue = __webpack_require__(357)
          , eq = __webpack_require__(211);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
        function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || (value === undefined && !(key in object))) {
                baseAssignValue(object, key, value);
            }
        }

        module.exports = assignValue;

        /***/
    }
    ), /* 357 */
    /***/
    (function(module, exports, __webpack_require__) {

        var defineProperty = __webpack_require__(542);

        /**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
        function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) {
                defineProperty(object, key, {
                    'configurable': true,
                    'enumerable': true,
                    'value': value,
                    'writable': true
                });
            } else {
                object[key] = value;
            }
        }

        module.exports = baseAssignValue;

        /***/
    }
    ), /* 358 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayLikeKeys = __webpack_require__(341)
          , baseKeysIn = __webpack_require__(545)
          , isArrayLike = __webpack_require__(148);

        /**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
        function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
        }

        module.exports = keysIn;

        /***/
    }
    ), /* 359 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayPush = __webpack_require__(339)
          , getPrototype = __webpack_require__(223)
          , getSymbols = __webpack_require__(215)
          , stubArray = __webpack_require__(340);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeGetSymbols = Object.getOwnPropertySymbols;

        /**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
        var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result = [];
            while (object) {
                arrayPush(result, getSymbols(object));
                object = getPrototype(object);
            }
            return result;
        }
        ;

        module.exports = getSymbolsIn;

        /***/
    }
    ), /* 360 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayEach = __webpack_require__(221)
          , baseEach = __webpack_require__(564)
          , castFunction = __webpack_require__(353)
          , isArray = __webpack_require__(56);

        /**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
        function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, castFunction(iteratee));
        }

        module.exports = forEach;

        /***/
    }
    ), /* 361 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _InputBase_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7);
        /* harmony import */
        var _utils_isMuiElement__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(67);
        /* harmony import */
        var _FormControlContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(66);

        var styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'inline-flex',
                flexDirection: 'column',
                position: 'relative',
                // Reset fieldset default style.
                minWidth: 0,
                padding: 0,
                margin: 0,
                border: 0,
                verticalAlign: 'top'// Fix alignment issue on Safari.

            },

            /* Styles applied to the root element if `margin="normal"`. */
            marginNormal: {
                marginTop: 16,
                marginBottom: 8
            },

            /* Styles applied to the root element if `margin="dense"`. */
            marginDense: {
                marginTop: 8,
                marginBottom: 4
            },

            /* Styles applied to the root element if `fullWidth={true}`. */
            fullWidth: {
                width: '100%'
            }
        };
        /**
 * Provides context such as filled/focused/error/required for form inputs.
 * Relying on the context provides high flexibility and ensures that the state always stays
 * consistent across the children of the `FormControl`.
 * This context is used by the following components:
 *
 *  - FormLabel
 *  - FormHelperText
 *  - Input
 *  - InputLabel
 *
 * You can find one composition example below and more going to [the demos](/components/text-fields/#components).
 *
 * ```jsx
 * <FormControl>
 *   <InputLabel htmlFor="my-input">Email address</InputLabel>
 *   <Input id="my-input" aria-describedby="my-helper-text" />
 *   <FormHelperText id="my-helper-text">We'll never share your email.</FormHelperText>
 * </FormControl>
 * ```
 *
 * ⚠️Only one input can be used within a FormControl.
 */

        var FormControl = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function FormControl(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$error = props.error
              , error = _props$error === void 0 ? false : _props$error
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$hiddenLabel = props.hiddenLabel
              , hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel
              , _props$margin = props.margin
              , margin = _props$margin === void 0 ? 'none' : _props$margin
              , _props$required = props.required
              , required = _props$required === void 0 ? false : _props$required
              , size = props.size
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "classes", "className", "color", "component", "disabled", "error", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"]);

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_2__["default"].useState(function() {
                // We need to iterate through the children and find the Input in order
                // to fully support server-side rendering.
                var initialAdornedStart = false;

                if (children) {
                    react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.forEach(children, function(child) {
                        if (!Object(_utils_isMuiElement__WEBPACK_IMPORTED_MODULE_8__[/* default */
                        "a"])(child, ['Input', 'Select'])) {
                            return;
                        }

                        var input = Object(_utils_isMuiElement__WEBPACK_IMPORTED_MODULE_8__[/* default */
                        "a"])(child, ['Select']) ? child.props.input : child;

                        if (input && Object(_InputBase_utils__WEBPACK_IMPORTED_MODULE_5__[/* isAdornedStart */
                        "a"])(input.props)) {
                            initialAdornedStart = true;
                        }
                    });
                }

                return initialAdornedStart;
            })
              , adornedStart = _React$useState[0]
              , setAdornedStart = _React$useState[1];

            var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_2__["default"].useState(function() {
                // We need to iterate through the children and find the Input in order
                // to fully support server-side rendering.
                var initialFilled = false;

                if (children) {
                    react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.forEach(children, function(child) {
                        if (!Object(_utils_isMuiElement__WEBPACK_IMPORTED_MODULE_8__[/* default */
                        "a"])(child, ['Input', 'Select'])) {
                            return;
                        }

                        if (Object(_InputBase_utils__WEBPACK_IMPORTED_MODULE_5__[/* isFilled */
                        "b"])(child.props, true)) {
                            initialFilled = true;
                        }
                    });
                }

                return initialFilled;
            })
              , filled = _React$useState2[0]
              , setFilled = _React$useState2[1];

            var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_2__["default"].useState(false)
              , focused = _React$useState3[0]
              , setFocused = _React$useState3[1];

            if (disabled && focused) {
                setFocused(false);
            }

            var registerEffect;

            if (false) {
                var registeredInput;
            }

            var onFilled = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function() {
                setFilled(true);
            }, []);
            var onEmpty = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function() {
                setFilled(false);
            }, []);
            var childContext = {
                adornedStart: adornedStart,
                setAdornedStart: setAdornedStart,
                color: color,
                disabled: disabled,
                error: error,
                filled: filled,
                focused: focused,
                hiddenLabel: hiddenLabel,
                margin: (size === 'small' ? 'dense' : undefined) || margin,
                onBlur: function onBlur() {
                    setFocused(false);
                },
                onEmpty: onEmpty,
                onFilled: onFilled,
                onFocus: function onFocus() {
                    setFocused(true);
                },
                registerEffect: registerEffect,
                required: required,
                variant: variant
            };
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_FormControlContext__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"].Provider, {
                value: childContext
            }, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, margin !== 'none' && classes["margin".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__[/* default */
                "a"])(margin))], fullWidth && classes.fullWidth),
                ref: ref
            }, other), children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiFormControl'
        })(FormControl));

        /***/
    }
    ), /* 362 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
        /* harmony import */
        var _FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4);
        /* harmony import */
        var _FormLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(251);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'block',
                    transformOrigin: 'top left'
                },

                /* Pseudo-class applied to the root element if `focused={true}`. */
                focused: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Pseudo-class applied to the root element if `error={true}`. */
                error: {},

                /* Pseudo-class applied to the root element if `required={true}`. */
                required: {},

                /* Pseudo-class applied to the asterisk element. */
                asterisk: {},

                /* Styles applied to the root element if the component is a descendant of `FormControl`. */
                formControl: {
                    position: 'absolute',
                    left: 0,
                    top: 0,
                    // slight alteration to spec spacing to match visual spec result
                    transform: 'translate(0, 24px) scale(1)'
                },

                /* Styles applied to the root element if `margin="dense"`. */
                marginDense: {
                    // Compensation for the `Input.inputDense` style.
                    transform: 'translate(0, 21px) scale(1)'
                },

                /* Styles applied to the `input` element if `shrink={true}`. */
                shrink: {
                    transform: 'translate(0, 1.5px) scale(0.75)',
                    transformOrigin: 'top left'
                },

                /* Styles applied to the `input` element if `disableAnimation={false}`. */
                animated: {
                    transition: theme.transitions.create(['color', 'transform'], {
                        duration: theme.transitions.duration.shorter,
                        easing: theme.transitions.easing.easeOut
                    })
                },

                /* Styles applied to the root element if `variant="filled"`. */
                filled: {
                    // Chrome's autofill feature gives the input field a yellow background.
                    // Since the input field is behind the label in the HTML tree,
                    // the input field is drawn last and hides the label with an opaque background color.
                    // zIndex: 1 will raise the label above opaque background-colors of input.
                    zIndex: 1,
                    pointerEvents: 'none',
                    transform: 'translate(12px, 20px) scale(1)',
                    '&$marginDense': {
                        transform: 'translate(12px, 17px) scale(1)'
                    },
                    '&$shrink': {
                        transform: 'translate(12px, 10px) scale(0.75)',
                        '&$marginDense': {
                            transform: 'translate(12px, 7px) scale(0.75)'
                        }
                    }
                },

                /* Styles applied to the root element if `variant="outlined"`. */
                outlined: {
                    // see comment above on filled.zIndex
                    zIndex: 1,
                    pointerEvents: 'none',
                    transform: 'translate(14px, 20px) scale(1)',
                    '&$marginDense': {
                        transform: 'translate(14px, 12px) scale(1)'
                    },
                    '&$shrink': {
                        transform: 'translate(14px, -6px) scale(0.75)'
                    }
                }
            };
        };
        var InputLabel = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function InputLabel(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$disableAnimati = props.disableAnimation
              , disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati
              , margin = props.margin
              , shrinkProp = props.shrink
              , variant = props.variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["classes", "className", "disableAnimation", "margin", "shrink", "variant"]);

            var muiFormControl = Object(_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])();
            var shrink = shrinkProp;

            if (typeof shrink === 'undefined' && muiFormControl) {
                shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;
            }

            var fcs = Object(_FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['margin', 'variant']
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_FormLabel__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                "data-shrink": shrink,
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, {
                    dense: classes.marginDense
                }[fcs.margin], {
                    filled: classes.filled,
                    outlined: classes.outlined
                }[fcs.variant]),
                classes: {
                    focused: classes.focused,
                    disabled: classes.disabled,
                    error: classes.error,
                    required: classes.required,
                    asterisk: classes.asterisk
                },
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_7__[/* default */
        "a"])(styles, {
            name: 'MuiInputLabel'
        })(InputLabel));

        /***/
    }
    ), /* 363 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    boxSizing: 'border-box',
                    lineHeight: '48px',
                    listStyle: 'none',
                    color: theme.palette.text.secondary,
                    fontFamily: theme.typography.fontFamily,
                    fontWeight: theme.typography.fontWeightMedium,
                    fontSize: theme.typography.pxToRem(14)
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main
                },

                /* Styles applied to the root element if `color="inherit"`. */
                colorInherit: {
                    color: 'inherit'
                },

                /* Styles applied to the inner `component` element if `disableGutters={false}`. */
                gutters: {
                    paddingLeft: 16,
                    paddingRight: 16
                },

                /* Styles applied to the root element if `inset={true}`. */
                inset: {
                    paddingLeft: 72
                },

                /* Styles applied to the root element if `disableSticky={false}`. */
                sticky: {
                    position: 'sticky',
                    top: 0,
                    zIndex: 1,
                    backgroundColor: 'inherit'
                }
            };
        };
        var ListSubheader = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function ListSubheader(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'li' : _props$component
              , _props$disableGutters = props.disableGutters
              , disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters
              , _props$disableSticky = props.disableSticky
              , disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky
              , _props$inset = props.inset
              , inset = _props$inset === void 0 ? false : _props$inset
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["classes", "className", "color", "component", "disableGutters", "disableSticky", "inset"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, color !== 'default' && classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiListSubheader'
        })(ListSubheader));

        /***/
    }
    ), /* 364 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
        /* harmony import */
        var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);
        /* harmony import */
        var _ListItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(758);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[/* default */
                "a"])({}, theme.typography.body1, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[/* default */
                "a"])({
                    minHeight: 48,
                    paddingTop: 6,
                    paddingBottom: 6,
                    boxSizing: 'border-box',
                    width: 'auto',
                    overflow: 'hidden',
                    whiteSpace: 'nowrap'
                }, theme.breakpoints.up('sm'), {
                    minHeight: 'auto'
                })),
                // TODO To remove in v5?

                /* Styles applied to the root element if `disableGutters={false}`. */
                gutters: {},

                /* Styles applied to the root element if `selected={true}`. */
                selected: {},

                /* Styles applied to the root element if dense. */
                dense: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[/* default */
                "a"])({}, theme.typography.body2, {
                    minHeight: 'auto'
                })
            };
        };
        var MenuItem = react__WEBPACK_IMPORTED_MODULE_3__["default"].forwardRef(function MenuItem(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , component = _props$component === void 0 ? 'li' : _props$component
              , _props$disableGutters = props.disableGutters
              , disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters
              , _props$role = props.role
              , role = _props$role === void 0 ? 'menuitem' : _props$role
              , selected = props.selected
              , tabIndexProp = props.tabIndex
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(props, ["classes", "className", "component", "disableGutters", "role", "selected", "tabIndex"]);

            var tabIndex;

            if (!props.disabled) {
                tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;
            }

            return react__WEBPACK_IMPORTED_MODULE_3__["default"].createElement(_ListItem__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[/* default */
            "a"])({
                button: true,
                role: role,
                tabIndex: tabIndex,
                component: component,
                selected: selected,
                disableGutters: disableGutters,
                classes: {
                    dense: classes.dense
                },
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiMenuItem'
        })(MenuItem));

        /***/
    }
    ), /* 365 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIteratee = __webpack_require__(150)
          , isArrayLike = __webpack_require__(148)
          , keys = __webpack_require__(86);

        /**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
        function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
                var iterable = Object(collection);
                if (!isArrayLike(collection)) {
                    var iteratee = baseIteratee(predicate, 3);
                    collection = keys(collection);
                    predicate = function(key) {
                        return iteratee(iterable[key], key, iterable);
                    }
                    ;
                }
                var index = findIndexFunc(collection, predicate, fromIndex);
                return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            }
            ;
        }

        module.exports = createFind;

        /***/
    }
    ), /* 366 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseFindIndex = __webpack_require__(367)
          , baseIteratee = __webpack_require__(150)
          , toInteger = __webpack_require__(224);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max
          , nativeMin = Math.min;

        /**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
        function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
                return -1;
            }
            var index = length - 1;
            if (fromIndex !== undefined) {
                index = toInteger(fromIndex);
                index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, baseIteratee(predicate, 3), index, true);
        }

        module.exports = findLastIndex;

        /***/
    }
    ), /* 367 */
    /***/
    (function(module, exports) {

        /**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length
              , index = fromIndex + (fromRight ? 1 : -1);

            while ((fromRight ? index-- : ++index < length)) {
                if (predicate(array[index], index, array)) {
                    return index;
                }
            }
            return -1;
        }

        module.exports = baseFindIndex;

        /***/
    }
    ), /* 368 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const data_1 = __webpack_require__(24);

        exports.pluginObject = {
            id: data_1.Ids.PageNavigation,
            title: 'Page Navigation',
            enabled: false,
            customComponent: true,
            options: [],
            tasks: []
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 369 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const dom_1 = tslib_1.__importDefault(__webpack_require__(227));

        var KeyboardLayoutKeySize;

        (function(KeyboardLayoutKeySize) {
            KeyboardLayoutKeySize[KeyboardLayoutKeySize["Normal"] = 0] = "Normal";
            KeyboardLayoutKeySize[KeyboardLayoutKeySize["Large"] = 1] = "Large";
            KeyboardLayoutKeySize[KeyboardLayoutKeySize["XLarge"] = 2] = "XLarge";
            KeyboardLayoutKeySize[KeyboardLayoutKeySize["XXLarge"] = 3] = "XXLarge";
        }
        )(KeyboardLayoutKeySize = exports.KeyboardLayoutKeySize || (exports.KeyboardLayoutKeySize = {}));

        var KeyboardLanguage;

        (function(KeyboardLanguage) {
            KeyboardLanguage["enUS"] = "en-US";
        }
        )(KeyboardLanguage = exports.KeyboardLanguage || (exports.KeyboardLanguage = {}));

        class Key {
            constructor({displayedValue, size, type, action, insertedValue}) {
                this.size = KeyboardLayoutKeySize.Normal;
                this.action = action ? action : undefined;
                this._displayedValue = displayedValue ? displayedValue : undefined;
                this.size = size ? size : this.size;
                this.type = type;
                this.insertValued = insertedValue ? insertedValue : this.insertValued;
            }

            toString() {
                return this._displayedValue ? this._displayedValue : this.type.toString();
            }

        }

        exports.Key = Key;
        exports.KeyboardLayoutENUS = {
            lang: KeyboardLanguage.enUS,
            rows: [[new Key({
                type: '`'
            }), new Key({
                type: '1'
            }), new Key({
                type: '2'
            }), new Key({
                type: '3'
            }), new Key({
                type: '4'
            }), new Key({
                type: '5'
            }), new Key({
                type: '6'
            }), new Key({
                type: '7'
            }), new Key({
                type: '8'
            }), new Key({
                type: '9'
            }), new Key({
                type: '0'
            }), new Key({
                type: '-'
            }), new Key({
                type: '='
            }), new Key({
                action: dom_1.default.simulateBackspaceInInputElement,
                displayedValue: '⌫',
                size: KeyboardLayoutKeySize.Large,
                type: "Backspace"/* Backspace */

            }), new Key({
                action: dom_1.default.simulateDeleteInInputElement,
                displayedValue: 'DEL',
                type: "Delete"/* Delete */

            })], [new Key({
                displayedValue: 'TAB',
                insertedValue: '\t',
                size: KeyboardLayoutKeySize.Large,
                type: "Tab"/* Tab */

            }), new Key({
                type: 'q'
            }), new Key({
                type: 'w'
            }), new Key({
                type: 'e'
            }), new Key({
                type: 'r'
            }), new Key({
                type: 't'
            }), new Key({
                type: 'y'
            }), new Key({
                type: 'u'
            }), new Key({
                type: 'i'
            }), new Key({
                type: 'o'
            }), new Key({
                type: 'p'
            }), new Key({
                type: '['
            }), new Key({
                type: ']'
            }), new Key({
                size: KeyboardLayoutKeySize.Large,
                type: '\\'
            })], [new Key({
                displayedValue: 'CAPSLOCK',
                size: KeyboardLayoutKeySize.Large,
                type: "CapsLock"/* CapsLock */

            }), new Key({
                type: 'a'
            }), new Key({
                type: 's'
            }), new Key({
                type: 'd'
            }), new Key({
                type: 'f'
            }), new Key({
                type: 'g'
            }), new Key({
                type: 'h'
            }), new Key({
                type: 'j'
            }), new Key({
                type: 'k'
            }), new Key({
                type: 'l'
            }), new Key({
                type: ';'
            }), // tslint:disable-next-line:quotemark
            new Key({
                type: "'"
            }), new Key({
                displayedValue: 'ENTER',
                insertedValue: '\n',
                size: KeyboardLayoutKeySize.Large,
                type: "Enter"/* Enter */

            })], [new Key({
                displayedValue: 'SHIFT',
                size: KeyboardLayoutKeySize.Large,
                type: "Shift"/* Shift */

            }), new Key({
                type: 'z'
            }), new Key({
                type: 'x'
            }), new Key({
                type: 'c'
            }), new Key({
                type: 'v'
            }), new Key({
                type: 'b'
            }), new Key({
                type: 'n'
            }), new Key({
                type: 'm'
            }), new Key({
                type: ','
            }), new Key({
                type: '.'
            }), new Key({
                type: '/'
            }), new Key({
                displayedValue: 'SHIFT',
                size: KeyboardLayoutKeySize.Large,
                type: "Shift"/* Shift */

            })], [new Key({
                displayedValue: 'CTRL',
                size: KeyboardLayoutKeySize.Large,
                type: "Control"/* Control */

            }), new Key({
                displayedValue: 'ALT',
                type: "Alt"/* Alt */

            }), new Key({
                displayedValue: 'SPACE',
                insertedValue: ' ',
                size: KeyboardLayoutKeySize.XXLarge,
                type: ' '
            }), new Key({
                displayedValue: 'ALT',
                type: "Alt"/* Alt */

            }), new Key({
                displayedValue: 'CTRL',
                size: KeyboardLayoutKeySize.Large,
                type: "Control"/* Control */

            })]]
        };

        /***/
    }
    ), /* 370 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const enum_1 = __webpack_require__(28);

        const data_1 = __webpack_require__(24);

        function *onEnable() {}

        exports.pluginObject = {
            id: data_1.Ids.VirtualKeyboard,
            title: 'Virtual Keyboard',
            enabled: false,
            customComponent: true,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: []
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: []
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 371 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const enum_1 = __webpack_require__(28);

        const data_1 = __webpack_require__(24);

        exports.pluginObject = {
            id: data_1.Ids.TextToSpeech,
            title: 'Text-to-Speech',
            enabled: false,
            options: [],
            customComponent: true,
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: []
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: []
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 372 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const immer_reducer_1 = __webpack_require__(157);

        const redux_1 = __webpack_require__(128);

        const redux_render_prop_1 = __webpack_require__(583);

        const redux_saga_1 = tslib_1.__importDefault(__webpack_require__(423));

        const reducers_1 = __webpack_require__(229);

        const selectors_1 = __webpack_require__(41);

        const actions_1 = __webpack_require__(92);

        const sagas_1 = __webpack_require__(231);

        const state_1 = __webpack_require__(230);

        exports.createConnector = redux_render_prop_1.makeConnector({
            prepareState: state=>new selectors_1.Selectors(state),
            prepareActions: dispatch=>redux_1.bindActionCreators(actions_1.ActionCreators, dispatch)
        });
        const composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...
        }) : redux_1.compose;
        /**
 * Combine multiple reducers into a single one
 *
 * @param reducers two or more reducer
 */

        function composeReducers(...reducers) {
            return (firstState,action)=>reducers.reduce((state,subReducer)=>{
                if (typeof subReducer === 'function') {
                    return subReducer(state, action);
                }

                return state;
            }
            , firstState) || firstState;
        }

        function createPluginStore() {
            // const reducer = composeReducers<State>(
            //   createReducerFunction(BaseReducer, defaultState)
            // );
            const reducer = immer_reducer_1.createReducerFunction(reducers_1.BaseReducer, state_1.defaultState);
            const sagaMiddleware = redux_saga_1.default();
            // const reducerFunction = createReducerFunction(MyImmerReducer, initialState);

            const store = redux_1.createStore(reducer, composeEnhancers(redux_1.applyMiddleware(sagaMiddleware)));
            sagaMiddleware.run(sagas_1.rootSagas);
            return store;
        }

        exports.createPluginStore = createPluginStore;

        /***/
    }
    ), /* 373 */
    /***/
    (function(module, exports, __webpack_require__) {

        var jws = __webpack_require__(232);

        module.exports = function(jwt, options) {
            options = options || {};
            var decoded = jws.decode(jwt, options);
            if (!decoded) {
                return null;
            }
            var payload = decoded.payload;

            //try parse the payload
            if (typeof payload === 'string') {
                try {
                    var obj = JSON.parse(payload);
                    if (obj !== null && typeof obj === 'object') {
                        payload = obj;
                    }
                } catch (e) {}
            }

            //return header if `complete` option is enabled.  header includes claims
            //such as `kid` and `alg` used to select the key within a JWKS needed to
            //verify the signature
            if (options.complete === true) {
                return {
                    header: decoded.header,
                    payload: payload,
                    signature: decoded.signature
                };
            }
            return payload;
        }
        ;

        /***/
    }
    ), /* 374 */
    /***/
    (function(module, exports) {

        var toString = {}.toString;

        module.exports = Array.isArray || function(arr) {
            return toString.call(arr) == '[object Array]';
        }
        ;

        /***/
    }
    ), /* 375 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(process) {
            /*global module, process*/
            var Buffer = __webpack_require__(15).Buffer;
            var Stream = __webpack_require__(93);
            var util = __webpack_require__(159);

            function DataStream(data) {
                this.buffer = null;
                this.writable = true;
                this.readable = true;

                // No input
                if (!data) {
                    this.buffer = Buffer.alloc(0);
                    return this;
                }

                // Stream
                if (typeof data.pipe === 'function') {
                    this.buffer = Buffer.alloc(0);
                    data.pipe(this);
                    return this;
                }

                // Buffer or String
                // or Object (assumedly a passworded key)
                if (data.length || typeof data === 'object') {
                    this.buffer = data;
                    this.writable = false;
                    process.nextTick(function() {
                        this.emit('end', data);
                        this.readable = false;
                        this.emit('close');
                    }
                    .bind(this));
                    return this;
                }

                throw new TypeError('Unexpected data type (' + typeof data + ')');
            }
            util.inherits(DataStream, Stream);

            DataStream.prototype.write = function write(data) {
                this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);
                this.emit('data', data);
            }
            ;

            DataStream.prototype.end = function end(data) {
                if (data)
                    this.write(data);
                this.emit('end', data);
                this.emit('close');
                this.writable = false;
                this.readable = false;
            }
            ;

            module.exports = DataStream;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 376 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global, process) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            /*<replacement>*/

            var pna = __webpack_require__(158);
            /*</replacement>*/

            module.exports = Readable;

            /*<replacement>*/
            var isArray = __webpack_require__(374);
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;

            /*<replacement>*/
            var EE = __webpack_require__(233).EventEmitter;

            var EElistenerCount = function(emitter, type) {
                return emitter.listeners(type).length;
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = __webpack_require__(377);
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = __webpack_require__(235).Buffer;
            var OurUint8Array = global.Uint8Array || function() {}
            ;
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            /*<replacement>*/
            var util = Object.create(__webpack_require__(121));
            util.inherits = __webpack_require__(16);
            /*</replacement>*/

            /*<replacement>*/
            var debugUtil = __webpack_require__(591);
            var debug = void 0;
            if (debugUtil && debugUtil.debuglog) {
                debug = debugUtil.debuglog('stream');
            } else {
                debug = function() {}
                ;
            }
            /*</replacement>*/

            var BufferList = __webpack_require__(592);
            var destroyImpl = __webpack_require__(378);
            var StringDecoder;

            util.inherits(Readable, Stream);

            var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

            function prependListener(emitter, event, fn) {
                // Sadly this is not cacheable as some libraries bundle their own
                // event emitter implementation with them.
                if (typeof emitter.prependListener === 'function')
                    return emitter.prependListener(event, fn);

                // This is a hack to make sure that our error handler is attached before any
                // userland ones.  NEVER DO THIS. This is here only because this code needs
                // to continue to work with older versions of Node.js that do not include
                // the prependListener() method. The goal is to eventually remove this hack.
                if (!emitter._events || !emitter._events[event])
                    emitter.on(event, fn);
                else if (isArray(emitter._events[event]))
                    emitter._events[event].unshift(fn);
                else
                    emitter._events[event] = [fn, emitter._events[event]];
            }

            function ReadableState(options, stream) {
                Duplex = Duplex || __webpack_require__(78);

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag. Used to make read(n) ignore n and to
                // make all the buffer merging and length checks go away
                this.objectMode = !!options.objectMode;

                if (isDuplex)
                    this.objectMode = this.objectMode || !!options.readableObjectMode;

                // the point at which it stops calling _read() to fill the buffer
                // Note: 0 is a valid value, means "don't call _read preemptively ever"
                var hwm = options.highWaterMark;
                var readableHwm = options.readableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0)
                    this.highWaterMark = hwm;
                else if (isDuplex && (readableHwm || readableHwm === 0))
                    this.highWaterMark = readableHwm;
                else
                    this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // A linked list is used to store data chunks instead of an array because the
                // linked list can remove elements from the beginning faster than
                // array.shift()
                this.buffer = new BufferList();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = false;
                this.endEmitted = false;
                this.reading = false;

                // a flag to be able to tell if the event 'readable'/'data' is emitted
                // immediately, or on a later tick.  We set this to true at first, because
                // any actions that shouldn't happen until "later" should generally also
                // not happen before the first read call.
                this.sync = true;

                // whenever we return null, then we set a flag to say
                // that we're awaiting a 'readable' event emission.
                this.needReadable = false;
                this.emittedReadable = false;
                this.readableListening = false;
                this.resumeScheduled = false;

                // has it been destroyed
                this.destroyed = false;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // the number of writers that are awaiting a drain event in .pipe()s
                this.awaitDrain = 0;

                // if true, a maybeReadMore has been scheduled
                this.readingMore = false;

                this.decoder = null;
                this.encoding = null;
                if (options.encoding) {
                    if (!StringDecoder)
                        StringDecoder = __webpack_require__(237).StringDecoder;
                    this.decoder = new StringDecoder(options.encoding);
                    this.encoding = options.encoding;
                }
            }

            function Readable(options) {
                Duplex = Duplex || __webpack_require__(78);

                if (!(this instanceof Readable))
                    return new Readable(options);

                this._readableState = new ReadableState(options,this);

                // legacy
                this.readable = true;

                if (options) {
                    if (typeof options.read === 'function')
                        this._read = options.read;

                    if (typeof options.destroy === 'function')
                        this._destroy = options.destroy;
                }

                Stream.call(this);
            }

            Object.defineProperty(Readable.prototype, 'destroyed', {
                get: function() {
                    if (this._readableState === undefined) {
                        return false;
                    }
                    return this._readableState.destroyed;
                },
                set: function(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._readableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._readableState.destroyed = value;
                }
            });

            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;
            Readable.prototype._destroy = function(err, cb) {
                this.push(null);
                cb(err);
            }
            ;

            // Manually shove something into the read() buffer.
            // This returns true if the highWaterMark has not been hit yet,
            // similar to how Writable.write() returns true if you should
            // write() some more.
            Readable.prototype.push = function(chunk, encoding) {
                var state = this._readableState;
                var skipChunkCheck;

                if (!state.objectMode) {
                    if (typeof chunk === 'string') {
                        encoding = encoding || state.defaultEncoding;
                        if (encoding !== state.encoding) {
                            chunk = Buffer.from(chunk, encoding);
                            encoding = '';
                        }
                        skipChunkCheck = true;
                    }
                } else {
                    skipChunkCheck = true;
                }

                return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
            }
            ;

            // Unshift should *always* be something directly out of read()
            Readable.prototype.unshift = function(chunk) {
                return readableAddChunk(this, chunk, null, true, false);
            }
            ;

            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                var state = stream._readableState;
                if (chunk === null) {
                    state.reading = false;
                    onEofChunk(stream, state);
                } else {
                    var er;
                    if (!skipChunkCheck)
                        er = chunkInvalid(state, chunk);
                    if (er) {
                        stream.emit('error', er);
                    } else if (state.objectMode || chunk && chunk.length > 0) {
                        if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
                            chunk = _uint8ArrayToBuffer(chunk);
                        }

                        if (addToFront) {
                            if (state.endEmitted)
                                stream.emit('error', new Error('stream.unshift() after end event'));
                            else
                                addChunk(stream, state, chunk, true);
                        } else if (state.ended) {
                            stream.emit('error', new Error('stream.push() after EOF'));
                        } else {
                            state.reading = false;
                            if (state.decoder && !encoding) {
                                chunk = state.decoder.write(chunk);
                                if (state.objectMode || chunk.length !== 0)
                                    addChunk(stream, state, chunk, false);
                                else
                                    maybeReadMore(stream, state);
                            } else {
                                addChunk(stream, state, chunk, false);
                            }
                        }
                    } else if (!addToFront) {
                        state.reading = false;
                    }
                }

                return needMoreData(state);
            }

            function addChunk(stream, state, chunk, addToFront) {
                if (state.flowing && state.length === 0 && !state.sync) {
                    stream.emit('data', chunk);
                    stream.read(0);
                } else {
                    // update the buffer info.
                    state.length += state.objectMode ? 1 : chunk.length;
                    if (addToFront)
                        state.buffer.unshift(chunk);
                    else
                        state.buffer.push(chunk);

                    if (state.needReadable)
                        emitReadable(stream);
                }
                maybeReadMore(stream, state);
            }

            function chunkInvalid(state, chunk) {
                var er;
                if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                return er;
            }

            // if it's past the high water mark, we can push in some more.
            // Also, if we have no data yet, we can stand some
            // more bytes.  This is to work around cases where hwm=0,
            // such as the repl.  Also, if the push() triggered a
            // readable event, and the user called read(largeNumber) such that
            // needReadable was set, then we ought to push more, so that another
            // 'readable' event will be triggered.
            function needMoreData(state) {
                return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
            }

            Readable.prototype.isPaused = function() {
                return this._readableState.flowing === false;
            }
            ;

            // backwards compatibility.
            Readable.prototype.setEncoding = function(enc) {
                if (!StringDecoder)
                    StringDecoder = __webpack_require__(237).StringDecoder;
                this._readableState.decoder = new StringDecoder(enc);
                this._readableState.encoding = enc;
                return this;
            }
            ;

            // Don't raise the hwm > 8MB
            var MAX_HWM = 0x800000;
            function computeNewHighWaterMark(n) {
                if (n >= MAX_HWM) {
                    n = MAX_HWM;
                } else {
                    // Get the next highest power of 2 to prevent increasing hwm excessively in
                    // tiny amounts
                    n--;
                    n |= n >>> 1;
                    n |= n >>> 2;
                    n |= n >>> 4;
                    n |= n >>> 8;
                    n |= n >>> 16;
                    n++;
                }
                return n;
            }

            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function howMuchToRead(n, state) {
                if (n <= 0 || state.length === 0 && state.ended)
                    return 0;
                if (state.objectMode)
                    return 1;
                if (n !== n) {
                    // Only flow one buffer at a time
                    if (state.flowing && state.length)
                        return state.buffer.head.data.length;
                    else
                        return state.length;
                }
                // If we're asking for more than the current hwm, then raise the hwm.
                if (n > state.highWaterMark)
                    state.highWaterMark = computeNewHighWaterMark(n);
                if (n <= state.length)
                    return n;
                // Don't have enough
                if (!state.ended) {
                    state.needReadable = true;
                    return 0;
                }
                return state.length;
            }

            // you can override either this method, or the async _read(n) below.
            Readable.prototype.read = function(n) {
                debug('read', n);
                n = parseInt(n, 10);
                var state = this._readableState;
                var nOrig = n;

                if (n !== 0)
                    state.emittedReadable = false;

                // if we're doing read(0) to trigger a readable event, but we
                // already have a bunch of data in the buffer, then just trigger
                // the 'readable' event and move on.
                if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
                    debug('read: emitReadable', state.length, state.ended);
                    if (state.length === 0 && state.ended)
                        endReadable(this);
                    else
                        emitReadable(this);
                    return null;
                }

                n = howMuchToRead(n, state);

                // if we've ended, and we're now clear, then finish it up.
                if (n === 0 && state.ended) {
                    if (state.length === 0)
                        endReadable(this);
                    return null;
                }

                // All the actual chunk generation logic needs to be
                // *below* the call to _read.  The reason is that in certain
                // synthetic stream cases, such as passthrough streams, _read
                // may be a completely synchronous operation which may change
                // the state of the read buffer, providing enough data when
                // before there was *not* enough.
                //
                // So, the steps are:
                // 1. Figure out what the state of things will be after we do
                // a read from the buffer.
                //
                // 2. If that resulting state will trigger a _read, then call _read.
                // Note that this may be asynchronous, or synchronous.  Yes, it is
                // deeply ugly to write APIs this way, but that still doesn't mean
                // that the Readable class should behave improperly, as streams are
                // designed to be sync/async agnostic.
                // Take note if the _read call is sync or async (ie, if the read call
                // has returned yet), so that we know whether or not it's safe to emit
                // 'readable' etc.
                //
                // 3. Actually pull the requested chunks out of the buffer and return.

                // if we need a readable event, then we need to do some reading.
                var doRead = state.needReadable;
                debug('need readable', doRead);

                // if we currently have less than the highWaterMark, then also read some
                if (state.length === 0 || state.length - n < state.highWaterMark) {
                    doRead = true;
                    debug('length less than watermark', doRead);
                }

                // however, if we've ended, then there's no point, and if we're already
                // reading, then it's unnecessary.
                if (state.ended || state.reading) {
                    doRead = false;
                    debug('reading or ended', doRead);
                } else if (doRead) {
                    debug('do read');
                    state.reading = true;
                    state.sync = true;
                    // if the length is currently zero, then we *need* a readable event.
                    if (state.length === 0)
                        state.needReadable = true;
                    // call internal read method
                    this._read(state.highWaterMark);
                    state.sync = false;
                    // If _read pushed data synchronously, then `reading` will be false,
                    // and we need to re-evaluate how much data we can return to the user.
                    if (!state.reading)
                        n = howMuchToRead(nOrig, state);
                }

                var ret;
                if (n > 0)
                    ret = fromList(n, state);
                else
                    ret = null;

                if (ret === null) {
                    state.needReadable = true;
                    n = 0;
                } else {
                    state.length -= n;
                }

                if (state.length === 0) {
                    // If we have nothing in the buffer, then we want to know
                    // as soon as we *do* get something into the buffer.
                    if (!state.ended)
                        state.needReadable = true;

                    // If we tried to read() past the EOF, then emit end on the next tick.
                    if (nOrig !== n && state.ended)
                        endReadable(this);
                }

                if (ret !== null)
                    this.emit('data', ret);

                return ret;
            }
            ;

            function onEofChunk(stream, state) {
                if (state.ended)
                    return;
                if (state.decoder) {
                    var chunk = state.decoder.end();
                    if (chunk && chunk.length) {
                        state.buffer.push(chunk);
                        state.length += state.objectMode ? 1 : chunk.length;
                    }
                }
                state.ended = true;

                // emit 'readable' now to make sure it gets picked up.
                emitReadable(stream);
            }

            // Don't emit readable right away in sync mode, because this can trigger
            // another read() call => stack overflow.  This way, it might trigger
            // a nextTick recursion warning, but that's not so bad.
            function emitReadable(stream) {
                var state = stream._readableState;
                state.needReadable = false;
                if (!state.emittedReadable) {
                    debug('emitReadable', state.flowing);
                    state.emittedReadable = true;
                    if (state.sync)
                        pna.nextTick(emitReadable_, stream);
                    else
                        emitReadable_(stream);
                }
            }

            function emitReadable_(stream) {
                debug('emit readable');
                stream.emit('readable');
                flow(stream);
            }

            // at this point, the user has presumably seen the 'readable' event,
            // and called read() to consume some data.  that may have triggered
            // in turn another _read(n) call, in which case reading = true if
            // it's in progress.
            // However, if we're not ended, or reading, and the length < hwm,
            // then go ahead and try to read some more preemptively.
            function maybeReadMore(stream, state) {
                if (!state.readingMore) {
                    state.readingMore = true;
                    pna.nextTick(maybeReadMore_, stream, state);
                }
            }

            function maybeReadMore_(stream, state) {
                var len = state.length;
                while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
                    debug('maybeReadMore read 0');
                    stream.read(0);
                    if (len === state.length)
                        // didn't get any data, stop spinning.
                        break;
                    else
                        len = state.length;
                }
                state.readingMore = false;
            }

            // abstract method.  to be overridden in specific implementation classes.
            // call cb(er, data) where data is <= n in length.
            // for virtual (non-string, non-buffer) streams, "length" is somewhat
            // arbitrary, and perhaps not very meaningful.
            Readable.prototype._read = function(n) {
                this.emit('error', new Error('_read() is not implemented'));
            }
            ;

            Readable.prototype.pipe = function(dest, pipeOpts) {
                var src = this;
                var state = this._readableState;

                switch (state.pipesCount) {
                case 0:
                    state.pipes = dest;
                    break;
                case 1:
                    state.pipes = [state.pipes, dest];
                    break;
                default:
                    state.pipes.push(dest);
                    break;
                }
                state.pipesCount += 1;
                debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

                var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

                var endFn = doEnd ? onend : unpipe;
                if (state.endEmitted)
                    pna.nextTick(endFn);
                else
                    src.once('end', endFn);

                dest.on('unpipe', onunpipe);
                function onunpipe(readable, unpipeInfo) {
                    debug('onunpipe');
                    if (readable === src) {
                        if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                            unpipeInfo.hasUnpiped = true;
                            cleanup();
                        }
                    }
                }

                function onend() {
                    debug('onend');
                    dest.end();
                }

                // when the dest drains, it reduces the awaitDrain counter
                // on the source.  This would be more elegant with a .once()
                // handler in flow(), but adding and removing repeatedly is
                // too slow.
                var ondrain = pipeOnDrain(src);
                dest.on('drain', ondrain);

                var cleanedUp = false;
                function cleanup() {
                    debug('cleanup');
                    // cleanup event handlers once the pipe is broken
                    dest.removeListener('close', onclose);
                    dest.removeListener('finish', onfinish);
                    dest.removeListener('drain', ondrain);
                    dest.removeListener('error', onerror);
                    dest.removeListener('unpipe', onunpipe);
                    src.removeListener('end', onend);
                    src.removeListener('end', unpipe);
                    src.removeListener('data', ondata);

                    cleanedUp = true;

                    // if the reader is waiting for a drain event from this
                    // specific writer, then it would cause it to never start
                    // flowing again.
                    // So, if this is awaiting a drain, then we just call it now.
                    // If we don't know, then assume that we are waiting for one.
                    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
                        ondrain();
                }

                // If the user pushes more data while we're writing to dest then we'll end up
                // in ondata again. However, we only want to increase awaitDrain once because
                // dest will only emit one 'drain' event for the multiple writes.
                // => Introduce a guard on increasing awaitDrain.
                var increasedAwaitDrain = false;
                src.on('data', ondata);
                function ondata(chunk) {
                    debug('ondata');
                    increasedAwaitDrain = false;
                    var ret = dest.write(chunk);
                    if (false === ret && !increasedAwaitDrain) {
                        // If the user unpiped during `dest.write()`, it is possible
                        // to get stuck in a permanently paused state if that write
                        // also returned false.
                        // => Check whether `dest` is still a piping destination.
                        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                            debug('false write response, pause', src._readableState.awaitDrain);
                            src._readableState.awaitDrain++;
                            increasedAwaitDrain = true;
                        }
                        src.pause();
                    }
                }

                // if the dest has an error, then stop piping into it.
                // however, don't suppress the throwing behavior for this.
                function onerror(er) {
                    debug('onerror', er);
                    unpipe();
                    dest.removeListener('error', onerror);
                    if (EElistenerCount(dest, 'error') === 0)
                        dest.emit('error', er);
                }

                // Make sure our error handler is attached before userland ones.
                prependListener(dest, 'error', onerror);

                // Both close and finish should trigger unpipe, but only once.
                function onclose() {
                    dest.removeListener('finish', onfinish);
                    unpipe();
                }
                dest.once('close', onclose);
                function onfinish() {
                    debug('onfinish');
                    dest.removeListener('close', onclose);
                    unpipe();
                }
                dest.once('finish', onfinish);

                function unpipe() {
                    debug('unpipe');
                    src.unpipe(dest);
                }

                // tell the dest that it's being piped to
                dest.emit('pipe', src);

                // start the flow if it hasn't been started already.
                if (!state.flowing) {
                    debug('pipe resume');
                    src.resume();
                }

                return dest;
            }
            ;

            function pipeOnDrain(src) {
                return function() {
                    var state = src._readableState;
                    debug('pipeOnDrain', state.awaitDrain);
                    if (state.awaitDrain)
                        state.awaitDrain--;
                    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                        state.flowing = true;
                        flow(src);
                    }
                }
                ;
            }

            Readable.prototype.unpipe = function(dest) {
                var state = this._readableState;
                var unpipeInfo = {
                    hasUnpiped: false
                };

                // if we're not piping anywhere, then do nothing.
                if (state.pipesCount === 0)
                    return this;

                // just one destination.  most common case.
                if (state.pipesCount === 1) {
                    // passed in one, but it's not the right one.
                    if (dest && dest !== state.pipes)
                        return this;

                    if (!dest)
                        dest = state.pipes;

                    // got a match.
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;
                    if (dest)
                        dest.emit('unpipe', this, unpipeInfo);
                    return this;
                }

                // slow case. multiple pipe destinations.

                if (!dest) {
                    // remove all.
                    var dests = state.pipes;
                    var len = state.pipesCount;
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;

                    for (var i = 0; i < len; i++) {
                        dests[i].emit('unpipe', this, unpipeInfo);
                    }
                    return this;
                }

                // try to find the right one.
                var index = indexOf(state.pipes, dest);
                if (index === -1)
                    return this;

                state.pipes.splice(index, 1);
                state.pipesCount -= 1;
                if (state.pipesCount === 1)
                    state.pipes = state.pipes[0];

                dest.emit('unpipe', this, unpipeInfo);

                return this;
            }
            ;

            // set up data events if they are asked for
            // Ensure readable listeners eventually get something
            Readable.prototype.on = function(ev, fn) {
                var res = Stream.prototype.on.call(this, ev, fn);

                if (ev === 'data') {
                    // Start flowing on next tick if stream isn't explicitly paused
                    if (this._readableState.flowing !== false)
                        this.resume();
                } else if (ev === 'readable') {
                    var state = this._readableState;
                    if (!state.endEmitted && !state.readableListening) {
                        state.readableListening = state.needReadable = true;
                        state.emittedReadable = false;
                        if (!state.reading) {
                            pna.nextTick(nReadingNextTick, this);
                        } else if (state.length) {
                            emitReadable(this);
                        }
                    }
                }

                return res;
            }
            ;
            Readable.prototype.addListener = Readable.prototype.on;

            function nReadingNextTick(self) {
                debug('readable nexttick read 0');
                self.read(0);
            }

            // pause() and resume() are remnants of the legacy readable stream API
            // If the user uses them, then switch into old mode.
            Readable.prototype.resume = function() {
                var state = this._readableState;
                if (!state.flowing) {
                    debug('resume');
                    state.flowing = true;
                    resume(this, state);
                }
                return this;
            }
            ;

            function resume(stream, state) {
                if (!state.resumeScheduled) {
                    state.resumeScheduled = true;
                    pna.nextTick(resume_, stream, state);
                }
            }

            function resume_(stream, state) {
                if (!state.reading) {
                    debug('resume read 0');
                    stream.read(0);
                }

                state.resumeScheduled = false;
                state.awaitDrain = 0;
                stream.emit('resume');
                flow(stream);
                if (state.flowing && !state.reading)
                    stream.read(0);
            }

            Readable.prototype.pause = function() {
                debug('call pause flowing=%j', this._readableState.flowing);
                if (false !== this._readableState.flowing) {
                    debug('pause');
                    this._readableState.flowing = false;
                    this.emit('pause');
                }
                return this;
            }
            ;

            function flow(stream) {
                var state = stream._readableState;
                debug('flow', state.flowing);
                while (state.flowing && stream.read() !== null) {}
            }

            // wrap an old-style stream as the async data source.
            // This is *not* part of the readable stream interface.
            // It is an ugly unfortunate mess of history.
            Readable.prototype.wrap = function(stream) {
                var _this = this;

                var state = this._readableState;
                var paused = false;

                stream.on('end', function() {
                    debug('wrapped end');
                    if (state.decoder && !state.ended) {
                        var chunk = state.decoder.end();
                        if (chunk && chunk.length)
                            _this.push(chunk);
                    }

                    _this.push(null);
                });

                stream.on('data', function(chunk) {
                    debug('wrapped data');
                    if (state.decoder)
                        chunk = state.decoder.write(chunk);

                    // don't skip over falsy values in objectMode
                    if (state.objectMode && (chunk === null || chunk === undefined))
                        return;
                    else if (!state.objectMode && (!chunk || !chunk.length))
                        return;

                    var ret = _this.push(chunk);
                    if (!ret) {
                        paused = true;
                        stream.pause();
                    }
                });

                // proxy all the other methods.
                // important when wrapping filters and duplexes.
                for (var i in stream) {
                    if (this[i] === undefined && typeof stream[i] === 'function') {
                        this[i] = function(method) {
                            return function() {
                                return stream[method].apply(stream, arguments);
                            }
                            ;
                        }(i);
                    }
                }

                // proxy certain important events.
                for (var n = 0; n < kProxyEvents.length; n++) {
                    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                }

                // when we try to consume some more bytes, simply unpause the
                // underlying stream.
                this._read = function(n) {
                    debug('wrapped _read', n);
                    if (paused) {
                        paused = false;
                        stream.resume();
                    }
                }
                ;

                return this;
            }
            ;

            Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function() {
                    return this._readableState.highWaterMark;
                }
            });

            // exposed for testing purposes only.
            Readable._fromList = fromList;

            // Pluck off n bytes from an array of buffers.
            // Length is the combined lengths of all the buffers in the list.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromList(n, state) {
                // nothing buffered
                if (state.length === 0)
                    return null;

                var ret;
                if (state.objectMode)
                    ret = state.buffer.shift();
                else if (!n || n >= state.length) {
                    // read it all, truncate the list
                    if (state.decoder)
                        ret = state.buffer.join('');
                    else if (state.buffer.length === 1)
                        ret = state.buffer.head.data;
                    else
                        ret = state.buffer.concat(state.length);
                    state.buffer.clear();
                } else {
                    // read part of list
                    ret = fromListPartial(n, state.buffer, state.decoder);
                }

                return ret;
            }

            // Extracts only enough buffered data to satisfy the amount requested.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromListPartial(n, list, hasStrings) {
                var ret;
                if (n < list.head.data.length) {
                    // slice is the same for buffers and strings
                    ret = list.head.data.slice(0, n);
                    list.head.data = list.head.data.slice(n);
                } else if (n === list.head.data.length) {
                    // first chunk is a perfect match
                    ret = list.shift();
                } else {
                    // result spans more than one buffer
                    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
                }
                return ret;
            }

            // Copies a specified amount of characters from the list of buffered data
            // chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBufferString(n, list) {
                var p = list.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while (p = p.next) {
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length)
                        ret += str;
                    else
                        ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next)
                                list.head = p.next;
                            else
                                list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

            // Copies a specified amount of bytes from the list of buffered data chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBuffer(n, list) {
                var ret = Buffer.allocUnsafe(n);
                var p = list.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while (p = p.next) {
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next)
                                list.head = p.next;
                            else
                                list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

            function endReadable(stream) {
                var state = stream._readableState;

                // If we get here before consuming all the bytes, then that is a
                // bug in node.  Should never happen.
                if (state.length > 0)
                    throw new Error('"endReadable()" called on non-empty stream');

                if (!state.endEmitted) {
                    state.ended = true;
                    pna.nextTick(endReadableNT, state, stream);
                }
            }

            function endReadableNT(state, stream) {
                // Check that we didn't get one last unshift.
                if (!state.endEmitted && state.length === 0) {
                    state.endEmitted = true;
                    stream.readable = false;
                    stream.emit('end');
                }
            }

            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    if (xs[i] === x)
                        return i;
                }
                return -1;
            }
            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(44)))

        /***/
    }
    ), /* 377 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(233).EventEmitter;

        /***/
    }
    ), /* 378 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        /*<replacement>*/

        var pna = __webpack_require__(158);
        /*</replacement>*/

        // undocumented cb() API, needed for core, not for public API
        function destroy(err, cb) {
            var _this = this;

            var readableDestroyed = this._readableState && this._readableState.destroyed;
            var writableDestroyed = this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
                if (cb) {
                    cb(err);
                } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
                    pna.nextTick(emitErrorNT, this, err);
                }
                return this;
            }

            // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
                this._readableState.destroyed = true;
            }

            // if this is a duplex stream mark the writable part as destroyed as well
            if (this._writableState) {
                this._writableState.destroyed = true;
            }

            this._destroy(err || null, function(err) {
                if (!cb && err) {
                    pna.nextTick(emitErrorNT, _this, err);
                    if (_this._writableState) {
                        _this._writableState.errorEmitted = true;
                    }
                } else if (cb) {
                    cb(err);
                }
            });

            return this;
        }

        function undestroy() {
            if (this._readableState) {
                this._readableState.destroyed = false;
                this._readableState.reading = false;
                this._readableState.ended = false;
                this._readableState.endEmitted = false;
            }

            if (this._writableState) {
                this._writableState.destroyed = false;
                this._writableState.ended = false;
                this._writableState.ending = false;
                this._writableState.finished = false;
                this._writableState.errorEmitted = false;
            }
        }

        function emitErrorNT(self, err) {
            self.emit('error', err);
        }

        module.exports = {
            destroy: destroy,
            undestroy: undestroy
        };

        /***/
    }
    ), /* 379 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a transform stream is a readable/writable stream where you do
        // something with the data.  Sometimes it's called a "filter",
        // but that's not a great name for it, since that implies a thing where
        // some bits pass through, and others are simply ignored.  (That would
        // be a valid example of a transform, of course.)
        //
        // While the output is causally related to the input, it's not a
        // necessarily symmetric or synchronous transformation.  For example,
        // a zlib stream might take multiple plain-text writes(), and then
        // emit a single compressed chunk some time in the future.
        //
        // Here's how this works:
        //
        // The Transform stream has all the aspects of the readable and writable
        // stream classes.  When you write(chunk), that calls _write(chunk,cb)
        // internally, and returns false if there's a lot of pending writes
        // buffered up.  When you call read(), that calls _read(n) until
        // there's enough pending readable data buffered up.
        //
        // In a transform stream, the written data is placed in a buffer.  When
        // _read(n) is called, it transforms the queued up data, calling the
        // buffered _write cb's as it consumes chunks.  If consuming a single
        // written chunk would result in multiple output chunks, then the first
        // outputted bit calls the readcb, and subsequent chunks just go into
        // the read buffer, and will cause it to emit 'readable' if necessary.
        //
        // This way, back-pressure is actually determined by the reading side,
        // since _read has to be called to start processing a new chunk.  However,
        // a pathological inflate type of transform can cause excessive buffering
        // here.  For example, imagine a stream where every byte of input is
        // interpreted as an integer from 0-255, and then results in that many
        // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
        // 1kb of data being output.  In this case, you could write a very small
        // amount of input, and end up with a very large amount of output.  In
        // such a pathological inflating mechanism, there'd be no way to tell
        // the system to stop doing the transform.  A single 4MB write could
        // cause the system to run out of memory.
        //
        // However, even in such a pathological case, only a single written chunk
        // would be consumed, and then the rest would wait (un-transformed) until
        // the results of the previous transformed chunk were consumed.

        module.exports = Transform;

        var Duplex = __webpack_require__(78);

        /*<replacement>*/
        var util = Object.create(__webpack_require__(121));
        util.inherits = __webpack_require__(16);
        /*</replacement>*/

        util.inherits(Transform, Duplex);

        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = false;

            var cb = ts.writecb;

            if (!cb) {
                return this.emit('error', new Error('write callback called multiple times'));
            }

            ts.writechunk = null;
            ts.writecb = null;

            if (data != null)
                // single equals check for both `null` and `undefined`
                this.push(data);

            cb(er);

            var rs = this._readableState;
            rs.reading = false;
            if (rs.needReadable || rs.length < rs.highWaterMark) {
                this._read(rs.highWaterMark);
            }
        }

        function Transform(options) {
            if (!(this instanceof Transform))
                return new Transform(options);

            Duplex.call(this, options);

            this._transformState = {
                afterTransform: afterTransform.bind(this),
                needTransform: false,
                transforming: false,
                writecb: null,
                writechunk: null,
                writeencoding: null
            };

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true;

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false;

            if (options) {
                if (typeof options.transform === 'function')
                    this._transform = options.transform;

                if (typeof options.flush === 'function')
                    this._flush = options.flush;
            }

            // When the writable side finishes, then flush out anything remaining.
            this.on('prefinish', prefinish);
        }

        function prefinish() {
            var _this = this;

            if (typeof this._flush === 'function') {
                this._flush(function(er, data) {
                    done(_this, er, data);
                });
            } else {
                done(this, null, null);
            }
        }

        Transform.prototype.push = function(chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
        }
        ;

        // This is the part where you do stuff!
        // override this function in implementation classes.
        // 'chunk' is an input chunk.
        //
        // Call `push(newChunk)` to pass along transformed output
        // to the readable side.  You may call 'push' zero or more times.
        //
        // Call `cb(err)` when you are done with this chunk.  If you pass
        // an error, then that'll put the hurt on the whole operation.  If you
        // never call cb(), then you'll never get another chunk.
        Transform.prototype._transform = function(chunk, encoding, cb) {
            throw new Error('_transform() is not implemented');
        }
        ;

        Transform.prototype._write = function(chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;
            if (!ts.transforming) {
                var rs = this._readableState;
                if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
                    this._read(rs.highWaterMark);
            }
        }
        ;

        // Doesn't matter what the args are here.
        // _transform does all the work.
        // That we got here means that the readable side wants more data.
        Transform.prototype._read = function(n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
                ts.transforming = true;
                this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
            } else {
                // mark that we need a transform, so that any data that comes in
                // will get processed, now that we've asked for it.
                ts.needTransform = true;
            }
        }
        ;

        Transform.prototype._destroy = function(err, cb) {
            var _this2 = this;

            Duplex.prototype._destroy.call(this, err, function(err2) {
                cb(err2);
                _this2.emit('close');
            });
        }
        ;

        function done(stream, er, data) {
            if (er)
                return stream.emit('error', er);

            if (data != null)
                // single equals check for both `null` and `undefined`
                stream.push(data);

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            if (stream._writableState.length)
                throw new Error('Calling transform done when ws.length != 0');

            if (stream._transformState.transforming)
                throw new Error('Calling transform done when still transforming');

            return stream.push(null);
        }

        /***/
    }
    ), /* 380 */
    /***/
    (function(module, exports, __webpack_require__) {

        var bufferEqual = __webpack_require__(604);
        var Buffer = __webpack_require__(15).Buffer;
        var crypto = __webpack_require__(605);
        var formatEcdsa = __webpack_require__(672);
        var util = __webpack_require__(159);

        var MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".'
        var MSG_INVALID_SECRET = 'secret must be a string or buffer';
        var MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';
        var MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';

        var supportsKeyObjects = typeof crypto.createPublicKey === 'function';
        if (supportsKeyObjects) {
            MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';
            MSG_INVALID_SECRET += 'or a KeyObject';
        }

        function checkIsPublicKey(key) {
            if (Buffer.isBuffer(key)) {
                return;
            }

            if (typeof key === 'string') {
                return;
            }

            if (!supportsKeyObjects) {
                throw typeError(MSG_INVALID_VERIFIER_KEY);
            }

            if (typeof key !== 'object') {
                throw typeError(MSG_INVALID_VERIFIER_KEY);
            }

            if (typeof key.type !== 'string') {
                throw typeError(MSG_INVALID_VERIFIER_KEY);
            }

            if (typeof key.asymmetricKeyType !== 'string') {
                throw typeError(MSG_INVALID_VERIFIER_KEY);
            }

            if (typeof key.export !== 'function') {
                throw typeError(MSG_INVALID_VERIFIER_KEY);
            }
        }
        ;
        function checkIsPrivateKey(key) {
            if (Buffer.isBuffer(key)) {
                return;
            }

            if (typeof key === 'string') {
                return;
            }

            if (typeof key === 'object') {
                return;
            }

            throw typeError(MSG_INVALID_SIGNER_KEY);
        }
        ;
        function checkIsSecretKey(key) {
            if (Buffer.isBuffer(key)) {
                return;
            }

            if (typeof key === 'string') {
                return key;
            }

            if (!supportsKeyObjects) {
                throw typeError(MSG_INVALID_SECRET);
            }

            if (typeof key !== 'object') {
                throw typeError(MSG_INVALID_SECRET);
            }

            if (key.type !== 'secret') {
                throw typeError(MSG_INVALID_SECRET);
            }

            if (typeof key.export !== 'function') {
                throw typeError(MSG_INVALID_SECRET);
            }
        }

        function fromBase64(base64) {
            return base64.replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
        }

        function toBase64(base64url) {
            base64url = base64url.toString();

            var padding = 4 - base64url.length % 4;
            if (padding !== 4) {
                for (var i = 0; i < padding; ++i) {
                    base64url += '=';
                }
            }

            return base64url.replace(/\-/g, '+').replace(/_/g, '/');
        }

        function typeError(template) {
            var args = [].slice.call(arguments, 1);
            var errMsg = util.format.bind(util, template).apply(null, args);
            return new TypeError(errMsg);
        }

        function bufferOrString(obj) {
            return Buffer.isBuffer(obj) || typeof obj === 'string';
        }

        function normalizeInput(thing) {
            if (!bufferOrString(thing))
                thing = JSON.stringify(thing);
            return thing;
        }

        function createHmacSigner(bits) {
            return function sign(thing, secret) {
                checkIsSecretKey(secret);
                thing = normalizeInput(thing);
                var hmac = crypto.createHmac('sha' + bits, secret);
                var sig = (hmac.update(thing),
                hmac.digest('base64'))
                return fromBase64(sig);
            }
        }

        function createHmacVerifier(bits) {
            return function verify(thing, signature, secret) {
                var computedSig = createHmacSigner(bits)(thing, secret);
                return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));
            }
        }

        function createKeySigner(bits) {
            return function sign(thing, privateKey) {
                checkIsPrivateKey(privateKey);
                thing = normalizeInput(thing);
                // Even though we are specifying "RSA" here, this works with ECDSA
                // keys as well.
                var signer = crypto.createSign('RSA-SHA' + bits);
                var sig = (signer.update(thing),
                signer.sign(privateKey, 'base64'));
                return fromBase64(sig);
            }
        }

        function createKeyVerifier(bits) {
            return function verify(thing, signature, publicKey) {
                checkIsPublicKey(publicKey);
                thing = normalizeInput(thing);
                signature = toBase64(signature);
                var verifier = crypto.createVerify('RSA-SHA' + bits);
                verifier.update(thing);
                return verifier.verify(publicKey, signature, 'base64');
            }
        }

        function createPSSKeySigner(bits) {
            return function sign(thing, privateKey) {
                checkIsPrivateKey(privateKey);
                thing = normalizeInput(thing);
                var signer = crypto.createSign('RSA-SHA' + bits);
                var sig = (signer.update(thing),
                signer.sign({
                    key: privateKey,
                    padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
                    saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
                }, 'base64'));
                return fromBase64(sig);
            }
        }

        function createPSSKeyVerifier(bits) {
            return function verify(thing, signature, publicKey) {
                checkIsPublicKey(publicKey);
                thing = normalizeInput(thing);
                signature = toBase64(signature);
                var verifier = crypto.createVerify('RSA-SHA' + bits);
                verifier.update(thing);
                return verifier.verify({
                    key: publicKey,
                    padding: crypto.constants.RSA_PKCS1_PSS_PADDING,
                    saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST
                }, signature, 'base64');
            }
        }

        function createECDSASigner(bits) {
            var inner = createKeySigner(bits);
            return function sign() {
                var signature = inner.apply(null, arguments);
                signature = formatEcdsa.derToJose(signature, 'ES' + bits);
                return signature;
            }
            ;
        }

        function createECDSAVerifer(bits) {
            var inner = createKeyVerifier(bits);
            return function verify(thing, signature, publicKey) {
                signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');
                var result = inner(thing, signature, publicKey);
                return result;
            }
            ;
        }

        function createNoneSigner() {
            return function sign() {
                return '';
            }
        }

        function createNoneVerifier() {
            return function verify(thing, signature) {
                return signature === '';
            }
        }

        module.exports = function jwa(algorithm) {
            var signerFactories = {
                hs: createHmacSigner,
                rs: createKeySigner,
                ps: createPSSKeySigner,
                es: createECDSASigner,
                none: createNoneSigner,
            }
            var verifierFactories = {
                hs: createHmacVerifier,
                rs: createKeyVerifier,
                ps: createPSSKeyVerifier,
                es: createECDSAVerifer,
                none: createNoneVerifier,
            }
            var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);
            if (!match)
                throw typeError(MSG_INVALID_ALGORITHM, algorithm);
            var algo = (match[1] || match[3]).toLowerCase();
            var bits = match[2];

            return {
                sign: signerFactories[algo](bits),
                verify: verifierFactories[algo](bits),
            }
        }
        ;

        /***/
    }
    ), /* 381 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var Buffer = __webpack_require__(15).Buffer
        var Transform = __webpack_require__(93).Transform
        var inherits = __webpack_require__(16)

        function throwIfNotStringOrBuffer(val, prefix) {
            if (!Buffer.isBuffer(val) && typeof val !== 'string') {
                throw new TypeError(prefix + ' must be a string or a buffer')
            }
        }

        function HashBase(blockSize) {
            Transform.call(this)

            this._block = Buffer.allocUnsafe(blockSize)
            this._blockSize = blockSize
            this._blockOffset = 0
            this._length = [0, 0, 0, 0]

            this._finalized = false
        }

        inherits(HashBase, Transform)

        HashBase.prototype._transform = function(chunk, encoding, callback) {
            var error = null
            try {
                this.update(chunk, encoding)
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype._flush = function(callback) {
            var error = null
            try {
                this.push(this.digest())
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype.update = function(data, encoding) {
            throwIfNotStringOrBuffer(data, 'Data')
            if (this._finalized)
                throw new Error('Digest already called')
            if (!Buffer.isBuffer(data))
                data = Buffer.from(data, encoding)

            // consume data
            var block = this._block
            var offset = 0
            while (this._blockOffset + data.length - offset >= this._blockSize) {
                for (var i = this._blockOffset; i < this._blockSize; )
                    block[i++] = data[offset++]
                this._update()
                this._blockOffset = 0
            }
            while (offset < data.length)
                block[this._blockOffset++] = data[offset++]

            // update length
            for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
                this._length[j] += carry
                carry = (this._length[j] / 0x0100000000) | 0
                if (carry > 0)
                    this._length[j] -= 0x0100000000 * carry
            }

            return this
        }

        HashBase.prototype._update = function() {
            throw new Error('_update is not implemented')
        }

        HashBase.prototype.digest = function(encoding) {
            if (this._finalized)
                throw new Error('Digest already called')
            this._finalized = true

            var digest = this._digest()
            if (encoding !== undefined)
                digest = digest.toString(encoding)

            // reset state
            this._block.fill(0)
            this._blockOffset = 0
            for (var i = 0; i < 4; ++i)
                this._length[i] = 0

            return digest
        }

        HashBase.prototype._digest = function() {
            throw new Error('_digest is not implemented')
        }

        module.exports = HashBase

        /***/
    }
    ), /* 382 */
    /***/
    (function(module, exports, __webpack_require__) {

        /**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

        var inherits = __webpack_require__(16)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2]

        var W = new Array(64)

        function Sha256() {
            this.init()

            this._w = W
            // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha256, Hash)

        Sha256.prototype.init = function() {
            this._a = 0x6a09e667
            this._b = 0xbb67ae85
            this._c = 0x3c6ef372
            this._d = 0xa54ff53a
            this._e = 0x510e527f
            this._f = 0x9b05688c
            this._g = 0x1f83d9ab
            this._h = 0x5be0cd19

            return this
        }

        function ch(x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj(x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0(x) {
            return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
        }

        function sigma1(x) {
            return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
        }

        function gamma0(x) {
            return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
        }

        function gamma1(x) {
            return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
        }

        Sha256.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0
            var f = this._f | 0
            var g = this._g | 0
            var h = this._h | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 64; ++i)
                W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

            for (var j = 0; j < 64; ++j) {
                var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
                var T2 = (sigma0(a) + maj(a, b, c)) | 0

                h = g
                g = f
                f = e
                e = (d + T1) | 0
                d = c
                c = b
                b = a
                a = (T1 + T2) | 0
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
            this._f = (f + this._f) | 0
            this._g = (g + this._g) | 0
            this._h = (h + this._h) | 0
        }

        Sha256.prototype._hash = function() {
            var H = Buffer.allocUnsafe(32)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)
            H.writeInt32BE(this._h, 28)

            return H
        }

        module.exports = Sha256

        /***/
    }
    ), /* 383 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817]

        var W = new Array(160)

        function Sha512() {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha512, Hash)

        Sha512.prototype.init = function() {
            this._ah = 0x6a09e667
            this._bh = 0xbb67ae85
            this._ch = 0x3c6ef372
            this._dh = 0xa54ff53a
            this._eh = 0x510e527f
            this._fh = 0x9b05688c
            this._gh = 0x1f83d9ab
            this._hh = 0x5be0cd19

            this._al = 0xf3bcc908
            this._bl = 0x84caa73b
            this._cl = 0xfe94f82b
            this._dl = 0x5f1d36f1
            this._el = 0xade682d1
            this._fl = 0x2b3e6c1f
            this._gl = 0xfb41bd6b
            this._hl = 0x137e2179

            return this
        }

        function Ch(x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj(x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0(x, xl) {
            return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
        }

        function sigma1(x, xl) {
            return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
        }

        function Gamma0(x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
        }

        function Gamma0l(x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
        }

        function Gamma1(x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
        }

        function Gamma1l(x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
        }

        function getCarry(a, b) {
            return (a >>> 0) < (b >>> 0) ? 1 : 0
        }

        Sha512.prototype._update = function(M) {
            var W = this._w

            var ah = this._ah | 0
            var bh = this._bh | 0
            var ch = this._ch | 0
            var dh = this._dh | 0
            var eh = this._eh | 0
            var fh = this._fh | 0
            var gh = this._gh | 0
            var hh = this._hh | 0

            var al = this._al | 0
            var bl = this._bl | 0
            var cl = this._cl | 0
            var dl = this._dl | 0
            var el = this._el | 0
            var fl = this._fl | 0
            var gl = this._gl | 0
            var hl = this._hl | 0

            for (var i = 0; i < 32; i += 2) {
                W[i] = M.readInt32BE(i * 4)
                W[i + 1] = M.readInt32BE(i * 4 + 4)
            }
            for (; i < 160; i += 2) {
                var xh = W[i - 15 * 2]
                var xl = W[i - 15 * 2 + 1]
                var gamma0 = Gamma0(xh, xl)
                var gamma0l = Gamma0l(xl, xh)

                xh = W[i - 2 * 2]
                xl = W[i - 2 * 2 + 1]
                var gamma1 = Gamma1(xh, xl)
                var gamma1l = Gamma1l(xl, xh)

                // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
                var Wi7h = W[i - 7 * 2]
                var Wi7l = W[i - 7 * 2 + 1]

                var Wi16h = W[i - 16 * 2]
                var Wi16l = W[i - 16 * 2 + 1]

                var Wil = (gamma0l + Wi7l) | 0
                var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
                Wil = (Wil + gamma1l) | 0
                Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
                Wil = (Wil + Wi16l) | 0
                Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

                W[i] = Wih
                W[i + 1] = Wil
            }

            for (var j = 0; j < 160; j += 2) {
                Wih = W[j]
                Wil = W[j + 1]

                var majh = maj(ah, bh, ch)
                var majl = maj(al, bl, cl)

                var sigma0h = sigma0(ah, al)
                var sigma0l = sigma0(al, ah)
                var sigma1h = sigma1(eh, el)
                var sigma1l = sigma1(el, eh)

                // t1 = h + sigma1 + ch + K[j] + W[j]
                var Kih = K[j]
                var Kil = K[j + 1]

                var chh = Ch(eh, fh, gh)
                var chl = Ch(el, fl, gl)

                var t1l = (hl + sigma1l) | 0
                var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
                t1l = (t1l + chl) | 0
                t1h = (t1h + chh + getCarry(t1l, chl)) | 0
                t1l = (t1l + Kil) | 0
                t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
                t1l = (t1l + Wil) | 0
                t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

                // t2 = sigma0 + maj
                var t2l = (sigma0l + majl) | 0
                var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

                hh = gh
                hl = gl
                gh = fh
                gl = fl
                fh = eh
                fl = el
                el = (dl + t1l) | 0
                eh = (dh + t1h + getCarry(el, dl)) | 0
                dh = ch
                dl = cl
                ch = bh
                cl = bl
                bh = ah
                bl = al
                al = (t1l + t2l) | 0
                ah = (t1h + t2h + getCarry(al, t1l)) | 0
            }

            this._al = (this._al + al) | 0
            this._bl = (this._bl + bl) | 0
            this._cl = (this._cl + cl) | 0
            this._dl = (this._dl + dl) | 0
            this._el = (this._el + el) | 0
            this._fl = (this._fl + fl) | 0
            this._gl = (this._gl + gl) | 0
            this._hl = (this._hl + hl) | 0

            this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
            this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
            this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
            this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
            this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
            this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
            this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
            this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
        }

        Sha512.prototype._hash = function() {
            var H = Buffer.allocUnsafe(64)

            function writeInt64BE(h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)
            writeInt64BE(this._gh, this._gl, 48)
            writeInt64BE(this._hh, this._hl, 56)

            return H
        }

        module.exports = Sha512

        /***/
    }
    ), /* 384 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var inherits = __webpack_require__(16)
        var Legacy = __webpack_require__(610)
        var Base = __webpack_require__(71)
        var Buffer = __webpack_require__(15).Buffer
        var md5 = __webpack_require__(385)
        var RIPEMD160 = __webpack_require__(239)

        var sha = __webpack_require__(240)

        var ZEROS = Buffer.alloc(128)

        function Hmac(alg, key) {
            Base.call(this, 'digest')
            if (typeof key === 'string') {
                key = Buffer.from(key)
            }

            var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

            this._alg = alg
            this._key = key
            if (key.length > blocksize) {
                var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
                key = hash.update(key).digest()
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
            var opad = this._opad = Buffer.allocUnsafe(blocksize)

            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }
            this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
            this._hash.update(ipad)
        }

        inherits(Hmac, Base)

        Hmac.prototype._update = function(data) {
            this._hash.update(data)
        }

        Hmac.prototype._final = function() {
            var h = this._hash.digest()
            var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
            return hash.update(this._opad).update(h).digest()
        }

        module.exports = function createHmac(alg, key) {
            alg = alg.toLowerCase()
            if (alg === 'rmd160' || alg === 'ripemd160') {
                return new Hmac('rmd160',key)
            }
            if (alg === 'md5') {
                return new Legacy(md5,key)
            }
            return new Hmac(alg,key)
        }

        /***/
    }
    ), /* 385 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MD5 = __webpack_require__(238)

        module.exports = function(buffer) {
            return new MD5().update(buffer).digest()
        }

        /***/
    }
    ), /* 386 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}}");

        /***/
    }
    ), /* 387 */
    /***/
    (function(module, exports, __webpack_require__) {

        exports.pbkdf2 = __webpack_require__(612)
        exports.pbkdf2Sync = __webpack_require__(390)

        /***/
    }
    ), /* 388 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var MAX_ALLOC = Math.pow(2, 30) - 1
            // default in iojs

            function checkBuffer(buf, name) {
                if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
                    throw new TypeError(name + ' must be a buffer or string')
                }
            }

            module.exports = function(password, salt, iterations, keylen) {
                checkBuffer(password, 'Password')
                checkBuffer(salt, 'Salt')

                if (typeof iterations !== 'number') {
                    throw new TypeError('Iterations not a number')
                }

                if (iterations < 0) {
                    throw new TypeError('Bad iterations')
                }

                if (typeof keylen !== 'number') {
                    throw new TypeError('Key length not a number')
                }

                if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
                    /* eslint no-self-compare: 0 */
                    throw new TypeError('Bad key length')
                }
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 389 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(process) {
            var defaultEncoding
            /* istanbul ignore next */
            if (process.browser) {
                defaultEncoding = 'utf-8'
            } else {
                var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

                defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
            }
            module.exports = defaultEncoding

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 390 */
    /***/
    (function(module, exports, __webpack_require__) {

        var md5 = __webpack_require__(385)
        var RIPEMD160 = __webpack_require__(239)
        var sha = __webpack_require__(240)

        var checkParameters = __webpack_require__(388)
        var defaultEncoding = __webpack_require__(389)
        var Buffer = __webpack_require__(15).Buffer
        var ZEROS = Buffer.alloc(128)
        var sizes = {
            md5: 16,
            sha1: 20,
            sha224: 28,
            sha256: 32,
            sha384: 48,
            sha512: 64,
            rmd160: 20,
            ripemd160: 20
        }

        function Hmac(alg, key, saltLen) {
            var hash = getDigest(alg)
            var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

            if (key.length > blocksize) {
                key = hash(key)
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
            var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }

            var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
            ipad.copy(ipad1, 0, 0, blocksize)
            this.ipad1 = ipad1
            this.ipad2 = ipad
            this.opad = opad
            this.alg = alg
            this.blocksize = blocksize
            this.hash = hash
            this.size = sizes[alg]
        }

        Hmac.prototype.run = function(data, ipad) {
            data.copy(ipad, this.blocksize)
            var h = this.hash(ipad)
            h.copy(this.opad, this.blocksize)
            return this.hash(this.opad)
        }

        function getDigest(alg) {
            function shaFunc(data) {
                return sha(alg).update(data).digest()
            }
            function rmd160Func(data) {
                return new RIPEMD160().update(data).digest()
            }

            if (alg === 'rmd160' || alg === 'ripemd160')
                return rmd160Func
            if (alg === 'md5')
                return md5
            return shaFunc
        }

        function pbkdf2(password, salt, iterations, keylen, digest) {
            checkParameters(password, salt, iterations, keylen)

            if (!Buffer.isBuffer(password))
                password = Buffer.from(password, defaultEncoding)
            if (!Buffer.isBuffer(salt))
                salt = Buffer.from(salt, defaultEncoding)

            digest = digest || 'sha1'

            var hmac = new Hmac(digest,password,salt.length)

            var DK = Buffer.allocUnsafe(keylen)
            var block1 = Buffer.allocUnsafe(salt.length + 4)
            salt.copy(block1, 0, 0, salt.length)

            var destPos = 0
            var hLen = sizes[digest]
            var l = Math.ceil(keylen / hLen)

            for (var i = 1; i <= l; i++) {
                block1.writeUInt32BE(i, salt.length)

                var T = hmac.run(block1, hmac.ipad1)
                var U = T

                for (var j = 1; j < iterations; j++) {
                    U = hmac.run(U, hmac.ipad2)
                    for (var k = 0; k < hLen; k++)
                        T[k] ^= U[k]
                }

                T.copy(DK, destPos)
                destPos += hLen
            }

            return DK
        }

        module.exports = pbkdf2

        /***/
    }
    ), /* 391 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.readUInt32BE = function readUInt32BE(bytes, off) {
            var res = (bytes[0 + off] << 24) | (bytes[1 + off] << 16) | (bytes[2 + off] << 8) | bytes[3 + off];
            return res >>> 0;
        }
        ;

        exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
            bytes[0 + off] = value >>> 24;
            bytes[1 + off] = (value >>> 16) & 0xff;
            bytes[2 + off] = (value >>> 8) & 0xff;
            bytes[3 + off] = value & 0xff;
        }
        ;

        exports.ip = function ip(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            for (var i = 6; i >= 0; i -= 2) {
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inR >>> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inL >>> (j + i)) & 1;
                }
            }

            for (var i = 6; i >= 0; i -= 2) {
                for (var j = 1; j <= 25; j += 8) {
                    outR <<= 1;
                    outR |= (inR >>> (j + i)) & 1;
                }
                for (var j = 1; j <= 25; j += 8) {
                    outR <<= 1;
                    outR |= (inL >>> (j + i)) & 1;
                }
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        }
        ;

        exports.rip = function rip(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            for (var i = 0; i < 4; i++) {
                for (var j = 24; j >= 0; j -= 8) {
                    outL <<= 1;
                    outL |= (inR >>> (j + i)) & 1;
                    outL <<= 1;
                    outL |= (inL >>> (j + i)) & 1;
                }
            }
            for (var i = 4; i < 8; i++) {
                for (var j = 24; j >= 0; j -= 8) {
                    outR <<= 1;
                    outR |= (inR >>> (j + i)) & 1;
                    outR <<= 1;
                    outR |= (inL >>> (j + i)) & 1;
                }
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        }
        ;

        exports.pc1 = function pc1(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            // 7, 15, 23, 31, 39, 47, 55, 63
            // 6, 14, 22, 30, 39, 47, 55, 63
            // 5, 13, 21, 29, 39, 47, 55, 63
            // 4, 12, 20, 28
            for (var i = 7; i >= 5; i--) {
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inR >> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inL >> (j + i)) & 1;
                }
            }
            for (var j = 0; j <= 24; j += 8) {
                outL <<= 1;
                outL |= (inR >> (j + i)) & 1;
            }

            // 1, 9, 17, 25, 33, 41, 49, 57
            // 2, 10, 18, 26, 34, 42, 50, 58
            // 3, 11, 19, 27, 35, 43, 51, 59
            // 36, 44, 52, 60
            for (var i = 1; i <= 3; i++) {
                for (var j = 0; j <= 24; j += 8) {
                    outR <<= 1;
                    outR |= (inR >> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outR <<= 1;
                    outR |= (inL >> (j + i)) & 1;
                }
            }
            for (var j = 0; j <= 24; j += 8) {
                outR <<= 1;
                outR |= (inL >> (j + i)) & 1;
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        }
        ;

        exports.r28shl = function r28shl(num, shift) {
            return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
        }
        ;

        var pc2table = [// inL => outL
        14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26,
        // inR => outR
        15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];

        exports.pc2 = function pc2(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            var len = pc2table.length >>> 1;
            for (var i = 0; i < len; i++) {
                outL <<= 1;
                outL |= (inL >>> pc2table[i]) & 0x1;
            }
            for (var i = len; i < pc2table.length; i++) {
                outR <<= 1;
                outR |= (inR >>> pc2table[i]) & 0x1;
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        }
        ;

        exports.expand = function expand(r, out, off) {
            var outL = 0;
            var outR = 0;

            outL = ((r & 1) << 5) | (r >>> 27);
            for (var i = 23; i >= 15; i -= 4) {
                outL <<= 6;
                outL |= (r >>> i) & 0x3f;
            }
            for (var i = 11; i >= 3; i -= 4) {
                outR |= (r >>> i) & 0x3f;
                outR <<= 6;
            }
            outR |= ((r & 0x1f) << 1) | (r >>> 31);

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        }
        ;

        var sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,
        15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,
        10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,
        7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,
        2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,
        12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,
        4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,
        13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];

        exports.substitute = function substitute(inL, inR) {
            var out = 0;
            for (var i = 0; i < 4; i++) {
                var b = (inL >>> (18 - i * 6)) & 0x3f;
                var sb = sTable[i * 0x40 + b];

                out <<= 4;
                out |= sb;
            }
            for (var i = 0; i < 4; i++) {
                var b = (inR >>> (18 - i * 6)) & 0x3f;
                var sb = sTable[4 * 0x40 + i * 0x40 + b];

                out <<= 4;
                out |= sb;
            }
            return out >>> 0;
        }
        ;

        var permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];

        exports.permute = function permute(num) {
            var out = 0;
            for (var i = 0; i < permuteTable.length; i++) {
                out <<= 1;
                out |= (num >>> permuteTable[i]) & 0x1;
            }
            return out >>> 0;
        }
        ;

        exports.padSplit = function padSplit(num, size, group) {
            var str = num.toString(2);
            while (str.length < size)
                str = '0' + str;

            var out = [];
            for (var i = 0; i < size; i += group)
                out.push(str.slice(i, i + group));
            return out.join(' ');
        }
        ;

        /***/
    }
    ), /* 392 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var assert = __webpack_require__(49);
        var inherits = __webpack_require__(16);

        var utils = __webpack_require__(391);
        var Cipher = __webpack_require__(241);

        function DESState() {
            this.tmp = new Array(2);
            this.keys = null;
        }

        function DES(options) {
            Cipher.call(this, options);

            var state = new DESState();
            this._desState = state;

            this.deriveKeys(state, options.key);
        }
        inherits(DES, Cipher);
        module.exports = DES;

        DES.create = function create(options) {
            return new DES(options);
        }
        ;

        var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];

        DES.prototype.deriveKeys = function deriveKeys(state, key) {
            state.keys = new Array(16 * 2);

            assert.equal(key.length, this.blockSize, 'Invalid key length');

            var kL = utils.readUInt32BE(key, 0);
            var kR = utils.readUInt32BE(key, 4);

            utils.pc1(kL, kR, state.tmp, 0);
            kL = state.tmp[0];
            kR = state.tmp[1];
            for (var i = 0; i < state.keys.length; i += 2) {
                var shift = shiftTable[i >>> 1];
                kL = utils.r28shl(kL, shift);
                kR = utils.r28shl(kR, shift);
                utils.pc2(kL, kR, state.keys, i);
            }
        }
        ;

        DES.prototype._update = function _update(inp, inOff, out, outOff) {
            var state = this._desState;

            var l = utils.readUInt32BE(inp, inOff);
            var r = utils.readUInt32BE(inp, inOff + 4);

            // Initial Permutation
            utils.ip(l, r, state.tmp, 0);
            l = state.tmp[0];
            r = state.tmp[1];

            if (this.type === 'encrypt')
                this._encrypt(state, l, r, state.tmp, 0);
            else
                this._decrypt(state, l, r, state.tmp, 0);

            l = state.tmp[0];
            r = state.tmp[1];

            utils.writeUInt32BE(out, l, outOff);
            utils.writeUInt32BE(out, r, outOff + 4);
        }
        ;

        DES.prototype._pad = function _pad(buffer, off) {
            var value = buffer.length - off;
            for (var i = off; i < buffer.length; i++)
                buffer[i] = value;

            return true;
        }
        ;

        DES.prototype._unpad = function _unpad(buffer) {
            var pad = buffer[buffer.length - 1];
            for (var i = buffer.length - pad; i < buffer.length; i++)
                assert.equal(buffer[i], pad);

            return buffer.slice(0, buffer.length - pad);
        }
        ;

        DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
            var l = lStart;
            var r = rStart;

            // Apply f() x16 times
            for (var i = 0; i < state.keys.length; i += 2) {
                var keyL = state.keys[i];
                var keyR = state.keys[i + 1];

                // f(r, k)
                utils.expand(r, state.tmp, 0);

                keyL ^= state.tmp[0];
                keyR ^= state.tmp[1];
                var s = utils.substitute(keyL, keyR);
                var f = utils.permute(s);

                var t = r;
                r = (l ^ f) >>> 0;
                l = t;
            }

            // Reverse Initial Permutation
            utils.rip(r, l, out, off);
        }
        ;

        DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
            var l = rStart;
            var r = lStart;

            // Apply f() x16 times
            for (var i = state.keys.length - 2; i >= 0; i -= 2) {
                var keyL = state.keys[i];
                var keyR = state.keys[i + 1];

                // f(r, k)
                utils.expand(l, state.tmp, 0);

                keyL ^= state.tmp[0];
                keyR ^= state.tmp[1];
                var s = utils.substitute(keyL, keyR);
                var f = utils.permute(s);

                var t = l;
                l = (r ^ f) >>> 0;
                r = t;
            }

            // Reverse Initial Permutation
            utils.rip(l, r, out, off);
        }
        ;

        /***/
    }
    ), /* 393 */
    /***/
    (function(module, exports, __webpack_require__) {

        var xor = __webpack_require__(123)
        var Buffer = __webpack_require__(15).Buffer
        var incr32 = __webpack_require__(394)

        function getBlock(self) {
            var out = self._cipher.encryptBlockRaw(self._prev)
            incr32(self._prev)
            return out
        }

        var blockSize = 16
        exports.encrypt = function(self, chunk) {
            var chunkNum = Math.ceil(chunk.length / blockSize)
            var start = self._cache.length
            self._cache = Buffer.concat([self._cache, Buffer.allocUnsafe(chunkNum * blockSize)])
            for (var i = 0; i < chunkNum; i++) {
                var out = getBlock(self)
                var offset = start + i * blockSize
                self._cache.writeUInt32BE(out[0], offset + 0)
                self._cache.writeUInt32BE(out[1], offset + 4)
                self._cache.writeUInt32BE(out[2], offset + 8)
                self._cache.writeUInt32BE(out[3], offset + 12)
            }
            var pad = self._cache.slice(0, chunk.length)
            self._cache = self._cache.slice(chunk.length)
            return xor(chunk, pad)
        }

        /***/
    }
    ), /* 394 */
    /***/
    (function(module, exports) {

        function incr32(iv) {
            var len = iv.length
            var item
            while (len--) {
                item = iv.readUInt8(len)
                if (item === 255) {
                    iv.writeUInt8(0, len)
                } else {
                    item++
                    iv.writeUInt8(item, len)
                    break
                }
            }
        }
        module.exports = incr32

        /***/
    }
    ), /* 395 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}}");

        /***/
    }
    ), /* 396 */
    /***/
    (function(module, exports, __webpack_require__) {

        var aes = __webpack_require__(160)
        var Buffer = __webpack_require__(15).Buffer
        var Transform = __webpack_require__(71)
        var inherits = __webpack_require__(16)
        var GHASH = __webpack_require__(625)
        var xor = __webpack_require__(123)
        var incr32 = __webpack_require__(394)

        function xorTest(a, b) {
            var out = 0
            if (a.length !== b.length)
                out++

            var len = Math.min(a.length, b.length)
            for (var i = 0; i < len; ++i) {
                out += (a[i] ^ b[i])
            }

            return out
        }

        function calcIv(self, iv, ck) {
            if (iv.length === 12) {
                self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
                return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
            }
            var ghash = new GHASH(ck)
            var len = iv.length
            var toPad = len % 16
            ghash.update(iv)
            if (toPad) {
                toPad = 16 - toPad
                ghash.update(Buffer.alloc(toPad, 0))
            }
            ghash.update(Buffer.alloc(8, 0))
            var ivBits = len * 8
            var tail = Buffer.alloc(8)
            tail.writeUIntBE(ivBits, 0, 8)
            ghash.update(tail)
            self._finID = ghash.state
            var out = Buffer.from(self._finID)
            incr32(out)
            return out
        }
        function StreamCipher(mode, key, iv, decrypt) {
            Transform.call(this)

            var h = Buffer.alloc(4, 0)

            this._cipher = new aes.AES(key)
            var ck = this._cipher.encryptBlock(h)
            this._ghash = new GHASH(ck)
            iv = calcIv(this, iv, ck)

            this._prev = Buffer.from(iv)
            this._cache = Buffer.allocUnsafe(0)
            this._secCache = Buffer.allocUnsafe(0)
            this._decrypt = decrypt
            this._alen = 0
            this._len = 0
            this._mode = mode

            this._authTag = null
            this._called = false
        }

        inherits(StreamCipher, Transform)

        StreamCipher.prototype._update = function(chunk) {
            if (!this._called && this._alen) {
                var rump = 16 - (this._alen % 16)
                if (rump < 16) {
                    rump = Buffer.alloc(rump, 0)
                    this._ghash.update(rump)
                }
            }

            this._called = true
            var out = this._mode.encrypt(this, chunk)
            if (this._decrypt) {
                this._ghash.update(chunk)
            } else {
                this._ghash.update(out)
            }
            this._len += chunk.length
            return out
        }

        StreamCipher.prototype._final = function() {
            if (this._decrypt && !this._authTag)
                throw new Error('Unsupported state or unable to authenticate data')

            var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
            if (this._decrypt && xorTest(tag, this._authTag))
                throw new Error('Unsupported state or unable to authenticate data')

            this._authTag = tag
            this._cipher.scrub()
        }

        StreamCipher.prototype.getAuthTag = function getAuthTag() {
            if (this._decrypt || !Buffer.isBuffer(this._authTag))
                throw new Error('Attempting to get auth tag in unsupported state')

            return this._authTag
        }

        StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
            if (!this._decrypt)
                throw new Error('Attempting to set auth tag in unsupported state')

            this._authTag = tag
        }

        StreamCipher.prototype.setAAD = function setAAD(buf) {
            if (this._called)
                throw new Error('Attempting to set AAD in unsupported state')

            this._ghash.update(buf)
            this._alen += buf.length
        }

        module.exports = StreamCipher

        /***/
    }
    ), /* 397 */
    /***/
    (function(module, exports, __webpack_require__) {

        var aes = __webpack_require__(160)
        var Buffer = __webpack_require__(15).Buffer
        var Transform = __webpack_require__(71)
        var inherits = __webpack_require__(16)

        function StreamCipher(mode, key, iv, decrypt) {
            Transform.call(this)

            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._cache = Buffer.allocUnsafe(0)
            this._secCache = Buffer.allocUnsafe(0)
            this._decrypt = decrypt
            this._mode = mode
        }

        inherits(StreamCipher, Transform)

        StreamCipher.prototype._update = function(chunk) {
            return this._mode.encrypt(this, chunk, this._decrypt)
        }

        StreamCipher.prototype._final = function() {
            this._cipher.scrub()
        }

        module.exports = StreamCipher

        /***/
    }
    ), /* 398 */
    /***/
    (function(module, exports, __webpack_require__) {

        var randomBytes = __webpack_require__(94);
        module.exports = findPrime;
        findPrime.simpleSieve = simpleSieve;
        findPrime.fermatTest = fermatTest;
        var BN = __webpack_require__(30);
        var TWENTYFOUR = new BN(24);
        var MillerRabin = __webpack_require__(399);
        var millerRabin = new MillerRabin();
        var ONE = new BN(1);
        var TWO = new BN(2);
        var FIVE = new BN(5);
        var SIXTEEN = new BN(16);
        var EIGHT = new BN(8);
        var TEN = new BN(10);
        var THREE = new BN(3);
        var SEVEN = new BN(7);
        var ELEVEN = new BN(11);
        var FOUR = new BN(4);
        var TWELVE = new BN(12);
        var primes = null;

        function _getPrimes() {
            if (primes !== null)
                return primes;

            var limit = 0x100000;
            var res = [];
            res[0] = 2;
            for (var i = 1, k = 3; k < limit; k += 2) {
                var sqrt = Math.ceil(Math.sqrt(k));
                for (var j = 0; j < i && res[j] <= sqrt; j++)
                    if (k % res[j] === 0)
                        break;

                if (i !== j && res[j] <= sqrt)
                    continue;

                res[i++] = k;
            }
            primes = res;
            return res;
        }

        function simpleSieve(p) {
            var primes = _getPrimes();

            for (var i = 0; i < primes.length; i++)
                if (p.modn(primes[i]) === 0) {
                    if (p.cmpn(primes[i]) === 0) {
                        return true;
                    } else {
                        return false;
                    }
                }

            return true;
        }

        function fermatTest(p) {
            var red = BN.mont(p);
            return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
        }

        function findPrime(bits, gen) {
            if (bits < 16) {
                // this is what openssl does
                if (gen === 2 || gen === 5) {
                    return new BN([0x8c, 0x7b]);
                } else {
                    return new BN([0x8c, 0x27]);
                }
            }
            gen = new BN(gen);

            var num, n2;

            while (true) {
                num = new BN(randomBytes(Math.ceil(bits / 8)));
                while (num.bitLength() > bits) {
                    num.ishrn(1);
                }
                if (num.isEven()) {
                    num.iadd(ONE);
                }
                if (!num.testn(1)) {
                    num.iadd(TWO);
                }
                if (!gen.cmp(TWO)) {
                    while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
                        num.iadd(FOUR);
                    }
                } else if (!gen.cmp(FIVE)) {
                    while (num.mod(TEN).cmp(THREE)) {
                        num.iadd(FOUR);
                    }
                }
                n2 = num.shrn(1);
                if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {
                    return num;
                }
            }

        }

        /***/
    }
    ), /* 399 */
    /***/
    (function(module, exports, __webpack_require__) {

        var bn = __webpack_require__(30);
        var brorand = __webpack_require__(244);

        function MillerRabin(rand) {
            this.rand = rand || new brorand.Rand();
        }
        module.exports = MillerRabin;

        MillerRabin.create = function create(rand) {
            return new MillerRabin(rand);
        }
        ;

        MillerRabin.prototype._randbelow = function _randbelow(n) {
            var len = n.bitLength();
            var min_bytes = Math.ceil(len / 8);

            // Generage random bytes until a number less than n is found.
            // This ensures that 0..n-1 have an equal probability of being selected.
            do
                var a = new bn(this.rand.generate(min_bytes));
            while (a.cmp(n) >= 0);
            return a;
        }
        ;

        MillerRabin.prototype._randrange = function _randrange(start, stop) {
            // Generate a random number greater than or equal to start and less than stop.
            var size = stop.sub(start);
            return start.add(this._randbelow(size));
        }
        ;

        MillerRabin.prototype.test = function test(n, k, cb) {
            var len = n.bitLength();
            var red = bn.mont(n);
            var rone = new bn(1).toRed(red);

            if (!k)
                k = Math.max(1, (len / 48) | 0);

            // Find d and s, (n - 1) = (2 ^ s) * d;
            var n1 = n.subn(1);
            for (var s = 0; !n1.testn(s); s++) {}
            var d = n.shrn(s);

            var rn1 = n1.toRed(red);

            var prime = true;
            for (; k > 0; k--) {
                var a = this._randrange(new bn(2), n1);
                if (cb)
                    cb(a);

                var x = a.toRed(red).redPow(d);
                if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
                    continue;

                for (var i = 1; i < s; i++) {
                    x = x.redSqr();

                    if (x.cmp(rone) === 0)
                        return false;
                    if (x.cmp(rn1) === 0)
                        break;
                }

                if (i === s)
                    return false;
            }

            return prime;
        }
        ;

        MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
            var len = n.bitLength();
            var red = bn.mont(n);
            var rone = new bn(1).toRed(red);

            if (!k)
                k = Math.max(1, (len / 48) | 0);

            // Find d and s, (n - 1) = (2 ^ s) * d;
            var n1 = n.subn(1);
            for (var s = 0; !n1.testn(s); s++) {}
            var d = n.shrn(s);

            var rn1 = n1.toRed(red);

            for (; k > 0; k--) {
                var a = this._randrange(new bn(2), n1);

                var g = n.gcd(a);
                if (g.cmpn(1) !== 0)
                    return g;

                var x = a.toRed(red).redPow(d);
                if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
                    continue;

                for (var i = 1; i < s; i++) {
                    x = x.redSqr();

                    if (x.cmp(rone) === 0)
                        return x.fromRed().subn(1).gcd(n);
                    if (x.cmp(rn1) === 0)
                        break;
                }

                if (i === s) {
                    x = x.redSqr();
                    return x.fromRed().subn(1).gcd(n);
                }
            }

            return false;
        }
        ;

        /***/
    }
    ), /* 400 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = exports;

        function toArray(msg, enc) {
            if (Array.isArray(msg))
                return msg.slice();
            if (!msg)
                return [];
            var res = [];
            if (typeof msg !== 'string') {
                for (var i = 0; i < msg.length; i++)
                    res[i] = msg[i] | 0;
                return res;
            }
            if (enc === 'hex') {
                msg = msg.replace(/[^a-z0-9]+/ig, '');
                if (msg.length % 2 !== 0)
                    msg = '0' + msg;
                for (var i = 0; i < msg.length; i += 2)
                    res.push(parseInt(msg[i] + msg[i + 1], 16));
            } else {
                for (var i = 0; i < msg.length; i++) {
                    var c = msg.charCodeAt(i);
                    var hi = c >> 8;
                    var lo = c & 0xff;
                    if (hi)
                        res.push(hi, lo);
                    else
                        res.push(lo);
                }
            }
            return res;
        }
        utils.toArray = toArray;

        function zero2(word) {
            if (word.length === 1)
                return '0' + word;
            else
                return word;
        }
        utils.zero2 = zero2;

        function toHex(msg) {
            var res = '';
            for (var i = 0; i < msg.length; i++)
                res += zero2(msg[i].toString(16));
            return res;
        }
        utils.toHex = toHex;

        utils.encode = function encode(arr, enc) {
            if (enc === 'hex')
                return toHex(arr);
            else
                return arr;
        }
        ;

        /***/
    }
    ), /* 401 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var curve = exports;

        curve.base = __webpack_require__(162);
        curve.short = __webpack_require__(636);
        curve.mont = __webpack_require__(637);
        curve.edwards = __webpack_require__(638);

        /***/
    }
    ), /* 402 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var rotr32 = utils.rotr32;

        function ft_1(s, x, y, z) {
            if (s === 0)
                return ch32(x, y, z);
            if (s === 1 || s === 3)
                return p32(x, y, z);
            if (s === 2)
                return maj32(x, y, z);
        }
        exports.ft_1 = ft_1;

        function ch32(x, y, z) {
            return (x & y) ^ ((~x) & z);
        }
        exports.ch32 = ch32;

        function maj32(x, y, z) {
            return (x & y) ^ (x & z) ^ (y & z);
        }
        exports.maj32 = maj32;

        function p32(x, y, z) {
            return x ^ y ^ z;
        }
        exports.p32 = p32;

        function s0_256(x) {
            return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
        }
        exports.s0_256 = s0_256;

        function s1_256(x) {
            return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
        }
        exports.s1_256 = s1_256;

        function g0_256(x) {
            return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
        }
        exports.g0_256 = g0_256;

        function g1_256(x) {
            return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
        }
        exports.g1_256 = g1_256;

        /***/
    }
    ), /* 403 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var common = __webpack_require__(124);
        var shaCommon = __webpack_require__(402);
        var assert = __webpack_require__(49);

        var sum32 = utils.sum32;
        var sum32_4 = utils.sum32_4;
        var sum32_5 = utils.sum32_5;
        var ch32 = shaCommon.ch32;
        var maj32 = shaCommon.maj32;
        var s0_256 = shaCommon.s0_256;
        var s1_256 = shaCommon.s1_256;
        var g0_256 = shaCommon.g0_256;
        var g1_256 = shaCommon.g1_256;

        var BlockHash = common.BlockHash;

        var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];

        function SHA256() {
            if (!(this instanceof SHA256))
                return new SHA256();

            BlockHash.call(this);
            this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
            this.k = sha256_K;
            this.W = new Array(64);
        }
        utils.inherits(SHA256, BlockHash);
        module.exports = SHA256;

        SHA256.blockSize = 512;
        SHA256.outSize = 256;
        SHA256.hmacStrength = 192;
        SHA256.padLength = 64;

        SHA256.prototype._update = function _update(msg, start) {
            var W = this.W;

            for (var i = 0; i < 16; i++)
                W[i] = msg[start + i];
            for (; i < W.length; i++)
                W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

            var a = this.h[0];
            var b = this.h[1];
            var c = this.h[2];
            var d = this.h[3];
            var e = this.h[4];
            var f = this.h[5];
            var g = this.h[6];
            var h = this.h[7];

            assert(this.k.length === W.length);
            for (i = 0; i < W.length; i++) {
                var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
                var T2 = sum32(s0_256(a), maj32(a, b, c));
                h = g;
                g = f;
                f = e;
                e = sum32(d, T1);
                d = c;
                c = b;
                b = a;
                a = sum32(T1, T2);
            }

            this.h[0] = sum32(this.h[0], a);
            this.h[1] = sum32(this.h[1], b);
            this.h[2] = sum32(this.h[2], c);
            this.h[3] = sum32(this.h[3], d);
            this.h[4] = sum32(this.h[4], e);
            this.h[5] = sum32(this.h[5], f);
            this.h[6] = sum32(this.h[6], g);
            this.h[7] = sum32(this.h[7], h);
        }
        ;

        SHA256.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        }
        ;

        /***/
    }
    ), /* 404 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var common = __webpack_require__(124);
        var assert = __webpack_require__(49);

        var rotr64_hi = utils.rotr64_hi;
        var rotr64_lo = utils.rotr64_lo;
        var shr64_hi = utils.shr64_hi;
        var shr64_lo = utils.shr64_lo;
        var sum64 = utils.sum64;
        var sum64_hi = utils.sum64_hi;
        var sum64_lo = utils.sum64_lo;
        var sum64_4_hi = utils.sum64_4_hi;
        var sum64_4_lo = utils.sum64_4_lo;
        var sum64_5_hi = utils.sum64_5_hi;
        var sum64_5_lo = utils.sum64_5_lo;

        var BlockHash = common.BlockHash;

        var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];

        function SHA512() {
            if (!(this instanceof SHA512))
                return new SHA512();

            BlockHash.call(this);
            this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];
            this.k = sha512_K;
            this.W = new Array(160);
        }
        utils.inherits(SHA512, BlockHash);
        module.exports = SHA512;

        SHA512.blockSize = 1024;
        SHA512.outSize = 512;
        SHA512.hmacStrength = 192;
        SHA512.padLength = 128;

        SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
            var W = this.W;

            // 32 x 32bit words
            for (var i = 0; i < 32; i++)
                W[i] = msg[start + i];
            for (; i < W.length; i += 2) {
                var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
                // i - 2
                var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
                var c1_hi = W[i - 14];
                // i - 7
                var c1_lo = W[i - 13];
                var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
                // i - 15
                var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
                var c3_hi = W[i - 32];
                // i - 16
                var c3_lo = W[i - 31];

                W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
                W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
            }
        }
        ;

        SHA512.prototype._update = function _update(msg, start) {
            this._prepareBlock(msg, start);

            var W = this.W;

            var ah = this.h[0];
            var al = this.h[1];
            var bh = this.h[2];
            var bl = this.h[3];
            var ch = this.h[4];
            var cl = this.h[5];
            var dh = this.h[6];
            var dl = this.h[7];
            var eh = this.h[8];
            var el = this.h[9];
            var fh = this.h[10];
            var fl = this.h[11];
            var gh = this.h[12];
            var gl = this.h[13];
            var hh = this.h[14];
            var hl = this.h[15];

            assert(this.k.length === W.length);
            for (var i = 0; i < W.length; i += 2) {
                var c0_hi = hh;
                var c0_lo = hl;
                var c1_hi = s1_512_hi(eh, el);
                var c1_lo = s1_512_lo(eh, el);
                var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
                var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
                var c3_hi = this.k[i];
                var c3_lo = this.k[i + 1];
                var c4_hi = W[i];
                var c4_lo = W[i + 1];

                var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
                var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);

                c0_hi = s0_512_hi(ah, al);
                c0_lo = s0_512_lo(ah, al);
                c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
                c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

                var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
                var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

                hh = gh;
                hl = gl;

                gh = fh;
                gl = fl;

                fh = eh;
                fl = el;

                eh = sum64_hi(dh, dl, T1_hi, T1_lo);
                el = sum64_lo(dl, dl, T1_hi, T1_lo);

                dh = ch;
                dl = cl;

                ch = bh;
                cl = bl;

                bh = ah;
                bl = al;

                ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
                al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
            }

            sum64(this.h, 0, ah, al);
            sum64(this.h, 2, bh, bl);
            sum64(this.h, 4, ch, cl);
            sum64(this.h, 6, dh, dl);
            sum64(this.h, 8, eh, el);
            sum64(this.h, 10, fh, fl);
            sum64(this.h, 12, gh, gl);
            sum64(this.h, 14, hh, hl);
        }
        ;

        SHA512.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        }
        ;

        function ch64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ ((~xh) & zh);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function ch64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ ((~xl) & zl);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function maj64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function maj64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s0_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 28);
            var c1_hi = rotr64_hi(xl, xh, 2);
            // 34
            var c2_hi = rotr64_hi(xl, xh, 7);
            // 39

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s0_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 28);
            var c1_lo = rotr64_lo(xl, xh, 2);
            // 34
            var c2_lo = rotr64_lo(xl, xh, 7);
            // 39

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s1_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 14);
            var c1_hi = rotr64_hi(xh, xl, 18);
            var c2_hi = rotr64_hi(xl, xh, 9);
            // 41

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s1_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 14);
            var c1_lo = rotr64_lo(xh, xl, 18);
            var c2_lo = rotr64_lo(xl, xh, 9);
            // 41

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g0_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 1);
            var c1_hi = rotr64_hi(xh, xl, 8);
            var c2_hi = shr64_hi(xh, xl, 7);

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g0_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 1);
            var c1_lo = rotr64_lo(xh, xl, 8);
            var c2_lo = shr64_lo(xh, xl, 7);

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g1_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 19);
            var c1_hi = rotr64_hi(xl, xh, 29);
            // 61
            var c2_hi = shr64_hi(xh, xl, 6);

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g1_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 19);
            var c1_lo = rotr64_lo(xl, xh, 29);
            // 61
            var c2_lo = shr64_lo(xh, xl, 6);

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        /***/
    }
    ), /* 405 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);
        var Reporter = __webpack_require__(126).Reporter;
        var Buffer = __webpack_require__(25).Buffer;

        function DecoderBuffer(base, options) {
            Reporter.call(this, options);
            if (!Buffer.isBuffer(base)) {
                this.error('Input not Buffer');
                return;
            }

            this.base = base;
            this.offset = 0;
            this.length = base.length;
        }
        inherits(DecoderBuffer, Reporter);
        exports.DecoderBuffer = DecoderBuffer;

        DecoderBuffer.prototype.save = function save() {
            return {
                offset: this.offset,
                reporter: Reporter.prototype.save.call(this)
            };
        }
        ;

        DecoderBuffer.prototype.restore = function restore(save) {
            // Return skipped data
            var res = new DecoderBuffer(this.base);
            res.offset = save.offset;
            res.length = this.offset;

            this.offset = save.offset;
            Reporter.prototype.restore.call(this, save.reporter);

            return res;
        }
        ;

        DecoderBuffer.prototype.isEmpty = function isEmpty() {
            return this.offset === this.length;
        }
        ;

        DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
            if (this.offset + 1 <= this.length)
                return this.base.readUInt8(this.offset++, true);
            else
                return this.error(fail || 'DecoderBuffer overrun');
        }

        DecoderBuffer.prototype.skip = function skip(bytes, fail) {
            if (!(this.offset + bytes <= this.length))
                return this.error(fail || 'DecoderBuffer overrun');

            var res = new DecoderBuffer(this.base);

            // Share reporter state
            res._reporterState = this._reporterState;

            res.offset = this.offset;
            res.length = this.offset + bytes;
            this.offset += bytes;
            return res;
        }

        DecoderBuffer.prototype.raw = function raw(save) {
            return this.base.slice(save ? save.offset : this.offset, this.length);
        }

        function EncoderBuffer(value, reporter) {
            if (Array.isArray(value)) {
                this.length = 0;
                this.value = value.map(function(item) {
                    if (!(item instanceof EncoderBuffer))
                        item = new EncoderBuffer(item,reporter);
                    this.length += item.length;
                    return item;
                }, this);
            } else if (typeof value === 'number') {
                if (!(0 <= value && value <= 0xff))
                    return reporter.error('non-byte EncoderBuffer value');
                this.value = value;
                this.length = 1;
            } else if (typeof value === 'string') {
                this.value = value;
                this.length = Buffer.byteLength(value);
            } else if (Buffer.isBuffer(value)) {
                this.value = value;
                this.length = value.length;
            } else {
                return reporter.error('Unsupported type: ' + typeof value);
            }
        }
        exports.EncoderBuffer = EncoderBuffer;

        EncoderBuffer.prototype.join = function join(out, offset) {
            if (!out)
                out = new Buffer(this.length);
            if (!offset)
                offset = 0;

            if (this.length === 0)
                return out;

            if (Array.isArray(this.value)) {
                this.value.forEach(function(item) {
                    item.join(out, offset);
                    offset += item.length;
                });
            } else {
                if (typeof this.value === 'number')
                    out[offset] = this.value;
                else if (typeof this.value === 'string')
                    out.write(this.value, offset);
                else if (Buffer.isBuffer(this.value))
                    this.value.copy(out, offset);
                offset += this.length;
            }

            return out;
        }
        ;

        /***/
    }
    ), /* 406 */
    /***/
    (function(module, exports, __webpack_require__) {

        var constants = exports;

        // Helper
        constants._reverse = function reverse(map) {
            var res = {};

            Object.keys(map).forEach(function(key) {
                // Convert key to integer if it is stringified
                if ((key | 0) == key)
                    key = key | 0;

                var value = map[key];
                res[value] = key;
            });

            return res;
        }
        ;

        constants.der = __webpack_require__(658);

        /***/
    }
    ), /* 407 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);

        var asn1 = __webpack_require__(125);
        var base = asn1.base;
        var bignum = asn1.bignum;

        // Import DER constants
        var der = asn1.constants.der;

        function DERDecoder(entity) {
            this.enc = 'der';
            this.name = entity.name;
            this.entity = entity;

            // Construct base tree
            this.tree = new DERNode();
            this.tree._init(entity.body);
        }
        ;module.exports = DERDecoder;

        DERDecoder.prototype.decode = function decode(data, options) {
            if (!(data instanceof base.DecoderBuffer))
                data = new base.DecoderBuffer(data,options);

            return this.tree._decode(data, options);
        }
        ;

        // Tree methods

        function DERNode(parent) {
            base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
            if (buffer.isEmpty())
                return false;

            var state = buffer.save();
            var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
            if (buffer.isError(decodedTag))
                return decodedTag;

            buffer.restore(state);

            return decodedTag.tag === tag || decodedTag.tagStr === tag || (decodedTag.tagStr + 'of') === tag || any;
        }
        ;

        DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
            var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
            if (buffer.isError(decodedTag))
                return decodedTag;

            var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');

            // Failure
            if (buffer.isError(len))
                return len;

            if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {
                return buffer.error('Failed to match tag: "' + tag + '"');
            }

            if (decodedTag.primitive || len !== null)
                return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

            // Indefinite length... find END tag
            var state = buffer.save();
            var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
            if (buffer.isError(res))
                return res;

            len = buffer.offset - state.offset;
            buffer.restore(state);
            return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
        }
        ;

        DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
            while (true) {
                var tag = derDecodeTag(buffer, fail);
                if (buffer.isError(tag))
                    return tag;
                var len = derDecodeLen(buffer, tag.primitive, fail);
                if (buffer.isError(len))
                    return len;

                var res;
                if (tag.primitive || len !== null)
                    res = buffer.skip(len)
                else
                    res = this._skipUntilEnd(buffer, fail);

                // Failure
                if (buffer.isError(res))
                    return res;

                if (tag.tagStr === 'end')
                    break;
            }
        }
        ;

        DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
            var result = [];
            while (!buffer.isEmpty()) {
                var possibleEnd = this._peekTag(buffer, 'end');
                if (buffer.isError(possibleEnd))
                    return possibleEnd;

                var res = decoder.decode(buffer, 'der', options);
                if (buffer.isError(res) && possibleEnd)
                    break;
                result.push(res);
            }
            return result;
        }
        ;

        DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
            if (tag === 'bitstr') {
                var unused = buffer.readUInt8();
                if (buffer.isError(unused))
                    return unused;
                return {
                    unused: unused,
                    data: buffer.raw()
                };
            } else if (tag === 'bmpstr') {
                var raw = buffer.raw();
                if (raw.length % 2 === 1)
                    return buffer.error('Decoding of string type: bmpstr length mismatch');

                var str = '';
                for (var i = 0; i < raw.length / 2; i++) {
                    str += String.fromCharCode(raw.readUInt16BE(i * 2));
                }
                return str;
            } else if (tag === 'numstr') {
                var numstr = buffer.raw().toString('ascii');
                if (!this._isNumstr(numstr)) {
                    return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');
                }
                return numstr;
            } else if (tag === 'octstr') {
                return buffer.raw();
            } else if (tag === 'objDesc') {
                return buffer.raw();
            } else if (tag === 'printstr') {
                var printstr = buffer.raw().toString('ascii');
                if (!this._isPrintstr(printstr)) {
                    return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');
                }
                return printstr;
            } else if (/str$/.test(tag)) {
                return buffer.raw().toString();
            } else {
                return buffer.error('Decoding of string type: ' + tag + ' unsupported');
            }
        }
        ;

        DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
            var result;
            var identifiers = [];
            var ident = 0;
            while (!buffer.isEmpty()) {
                var subident = buffer.readUInt8();
                ident <<= 7;
                ident |= subident & 0x7f;
                if ((subident & 0x80) === 0) {
                    identifiers.push(ident);
                    ident = 0;
                }
            }
            if (subident & 0x80)
                identifiers.push(ident);

            var first = (identifiers[0] / 40) | 0;
            var second = identifiers[0] % 40;

            if (relative)
                result = identifiers;
            else
                result = [first, second].concat(identifiers.slice(1));

            if (values) {
                var tmp = values[result.join(' ')];
                if (tmp === undefined)
                    tmp = values[result.join('.')];
                if (tmp !== undefined)
                    result = tmp;
            }

            return result;
        }
        ;

        DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
            var str = buffer.raw().toString();
            if (tag === 'gentime') {
                var year = str.slice(0, 4) | 0;
                var mon = str.slice(4, 6) | 0;
                var day = str.slice(6, 8) | 0;
                var hour = str.slice(8, 10) | 0;
                var min = str.slice(10, 12) | 0;
                var sec = str.slice(12, 14) | 0;
            } else if (tag === 'utctime') {
                var year = str.slice(0, 2) | 0;
                var mon = str.slice(2, 4) | 0;
                var day = str.slice(4, 6) | 0;
                var hour = str.slice(6, 8) | 0;
                var min = str.slice(8, 10) | 0;
                var sec = str.slice(10, 12) | 0;
                if (year < 70)
                    year = 2000 + year;
                else
                    year = 1900 + year;
            } else {
                return buffer.error('Decoding ' + tag + ' time is not supported yet');
            }

            return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
        }
        ;

        DERNode.prototype._decodeNull = function decodeNull(buffer) {
            return null;
        }
        ;

        DERNode.prototype._decodeBool = function decodeBool(buffer) {
            var res = buffer.readUInt8();
            if (buffer.isError(res))
                return res;
            else
                return res !== 0;
        }
        ;

        DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
            // Bigint, return as it is (assume big endian)
            var raw = buffer.raw();
            var res = new bignum(raw);

            if (values)
                res = values[res.toString(10)] || res;

            return res;
        }
        ;

        DERNode.prototype._use = function use(entity, obj) {
            if (typeof entity === 'function')
                entity = entity(obj);
            return entity._getDecoder('der').tree;
        }
        ;

        // Utility methods

        function derDecodeTag(buf, fail) {
            var tag = buf.readUInt8(fail);
            if (buf.isError(tag))
                return tag;

            var cls = der.tagClass[tag >> 6];
            var primitive = (tag & 0x20) === 0;

            // Multi-octet tag - load
            if ((tag & 0x1f) === 0x1f) {
                var oct = tag;
                tag = 0;
                while ((oct & 0x80) === 0x80) {
                    oct = buf.readUInt8(fail);
                    if (buf.isError(oct))
                        return oct;

                    tag <<= 7;
                    tag |= oct & 0x7f;
                }
            } else {
                tag &= 0x1f;
            }
            var tagStr = der.tag[tag];

            return {
                cls: cls,
                primitive: primitive,
                tag: tag,
                tagStr: tagStr
            };
        }

        function derDecodeLen(buf, primitive, fail) {
            var len = buf.readUInt8(fail);
            if (buf.isError(len))
                return len;

            // Indefinite form
            if (!primitive && len === 0x80)
                return null;

            // Definite form
            if ((len & 0x80) === 0) {
                // Short form
                return len;
            }

            // Long form
            var num = len & 0x7f;
            if (num > 4)
                return buf.error('length octect is too long');

            len = 0;
            for (var i = 0; i < num; i++) {
                len <<= 8;
                var j = buf.readUInt8(fail);
                if (buf.isError(j))
                    return j;
                len |= j;
            }

            return len;
        }

        /***/
    }
    ), /* 408 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);
        var Buffer = __webpack_require__(25).Buffer;

        var asn1 = __webpack_require__(125);
        var base = asn1.base;

        // Import DER constants
        var der = asn1.constants.der;

        function DEREncoder(entity) {
            this.enc = 'der';
            this.name = entity.name;
            this.entity = entity;

            // Construct base tree
            this.tree = new DERNode();
            this.tree._init(entity.body);
        }
        ;module.exports = DEREncoder;

        DEREncoder.prototype.encode = function encode(data, reporter) {
            return this.tree._encode(data, reporter).join();
        }
        ;

        // Tree methods

        function DERNode(parent) {
            base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
            var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

            // Short form
            if (content.length < 0x80) {
                var header = new Buffer(2);
                header[0] = encodedTag;
                header[1] = content.length;
                return this._createEncoderBuffer([header, content]);
            }

            // Long form
            // Count octets required to store length
            var lenOctets = 1;
            for (var i = content.length; i >= 0x100; i >>= 8)
                lenOctets++;

            var header = new Buffer(1 + 1 + lenOctets);
            header[0] = encodedTag;
            header[1] = 0x80 | lenOctets;

            for (var i = 1 + lenOctets, j = content.length; j > 0; i--,
            j >>= 8)
                header[i] = j & 0xff;

            return this._createEncoderBuffer([header, content]);
        }
        ;

        DERNode.prototype._encodeStr = function encodeStr(str, tag) {
            if (tag === 'bitstr') {
                return this._createEncoderBuffer([str.unused | 0, str.data]);
            } else if (tag === 'bmpstr') {
                var buf = new Buffer(str.length * 2);
                for (var i = 0; i < str.length; i++) {
                    buf.writeUInt16BE(str.charCodeAt(i), i * 2);
                }
                return this._createEncoderBuffer(buf);
            } else if (tag === 'numstr') {
                if (!this._isNumstr(str)) {
                    return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');
                }
                return this._createEncoderBuffer(str);
            } else if (tag === 'printstr') {
                if (!this._isPrintstr(str)) {
                    return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');
                }
                return this._createEncoderBuffer(str);
            } else if (/str$/.test(tag)) {
                return this._createEncoderBuffer(str);
            } else if (tag === 'objDesc') {
                return this._createEncoderBuffer(str);
            } else {
                return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');
            }
        }
        ;

        DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
            if (typeof id === 'string') {
                if (!values)
                    return this.reporter.error('string objid given, but no values map found');
                if (!values.hasOwnProperty(id))
                    return this.reporter.error('objid not found in values map');
                id = values[id].split(/[\s\.]+/g);
                for (var i = 0; i < id.length; i++)
                    id[i] |= 0;
            } else if (Array.isArray(id)) {
                id = id.slice();
                for (var i = 0; i < id.length; i++)
                    id[i] |= 0;
            }

            if (!Array.isArray(id)) {
                return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));
            }

            if (!relative) {
                if (id[1] >= 40)
                    return this.reporter.error('Second objid identifier OOB');
                id.splice(0, 2, id[0] * 40 + id[1]);
            }

            // Count number of octets
            var size = 0;
            for (var i = 0; i < id.length; i++) {
                var ident = id[i];
                for (size++; ident >= 0x80; ident >>= 7)
                    size++;
            }

            var objid = new Buffer(size);
            var offset = objid.length - 1;
            for (var i = id.length - 1; i >= 0; i--) {
                var ident = id[i];
                objid[offset--] = ident & 0x7f;
                while ((ident >>= 7) > 0)
                    objid[offset--] = 0x80 | (ident & 0x7f);
            }

            return this._createEncoderBuffer(objid);
        }
        ;

        function two(num) {
            if (num < 10)
                return '0' + num;
            else
                return num;
        }

        DERNode.prototype._encodeTime = function encodeTime(time, tag) {
            var str;
            var date = new Date(time);

            if (tag === 'gentime') {
                str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');
            } else if (tag === 'utctime') {
                str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');
            } else {
                this.reporter.error('Encoding ' + tag + ' time is not supported yet');
            }

            return this._encodeStr(str, 'octstr');
        }
        ;

        DERNode.prototype._encodeNull = function encodeNull() {
            return this._createEncoderBuffer('');
        }
        ;

        DERNode.prototype._encodeInt = function encodeInt(num, values) {
            if (typeof num === 'string') {
                if (!values)
                    return this.reporter.error('String int or enum given, but no values map');
                if (!values.hasOwnProperty(num)) {
                    return this.reporter.error('Values map doesn\'t contain: ' + JSON.stringify(num));
                }
                num = values[num];
            }

            // Bignum, assume big endian
            if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
                var numArray = num.toArray();
                if (!num.sign && numArray[0] & 0x80) {
                    numArray.unshift(0);
                }
                num = new Buffer(numArray);
            }

            if (Buffer.isBuffer(num)) {
                var size = num.length;
                if (num.length === 0)
                    size++;

                var out = new Buffer(size);
                num.copy(out);
                if (num.length === 0)
                    out[0] = 0
                return this._createEncoderBuffer(out);
            }

            if (num < 0x80)
                return this._createEncoderBuffer(num);

            if (num < 0x100)
                return this._createEncoderBuffer([0, num]);

            var size = 1;
            for (var i = num; i >= 0x100; i >>= 8)
                size++;

            var out = new Array(size);
            for (var i = out.length - 1; i >= 0; i--) {
                out[i] = num & 0xff;
                num >>= 8;
            }
            if (out[0] & 0x80) {
                out.unshift(0);
            }

            return this._createEncoderBuffer(new Buffer(out));
        }
        ;

        DERNode.prototype._encodeBool = function encodeBool(value) {
            return this._createEncoderBuffer(value ? 0xff : 0);
        }
        ;

        DERNode.prototype._use = function use(entity, obj) {
            if (typeof entity === 'function')
                entity = entity(obj);
            return entity._getEncoder('der').tree;
        }
        ;

        DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
            var state = this._baseState;
            var i;
            if (state['default'] === null)
                return false;

            var data = dataBuffer.join();
            if (state.defaultBuffer === undefined)
                state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

            if (data.length !== state.defaultBuffer.length)
                return false;

            for (i = 0; i < data.length; i++)
                if (data[i] !== state.defaultBuffer[i])
                    return false;

            return true;
        }
        ;

        // Utility methods

        function encodeTag(tag, primitive, cls, reporter) {
            var res;

            if (tag === 'seqof')
                tag = 'seq';
            else if (tag === 'setof')
                tag = 'set';

            if (der.tagByName.hasOwnProperty(tag))
                res = der.tagByName[tag];
            else if (typeof tag === 'number' && (tag | 0) === tag)
                res = tag;
            else
                return reporter.error('Unknown tag: ' + tag);

            if (res >= 0x1f)
                return reporter.error('Multi-octet tag encoding unsupported');

            if (!primitive)
                res |= 0x20;

            res |= (der.tagClassByName[cls || 'universal'] << 6);

            return res;
        }

        /***/
    }
    ), /* 409 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"}");

        /***/
    }
    ), /* 410 */
    /***/
    (function(module, exports, __webpack_require__) {

        var createHash = __webpack_require__(122)
        var Buffer = __webpack_require__(15).Buffer

        module.exports = function(seed, len) {
            var t = Buffer.alloc(0)
            var i = 0
            var c
            while (t.length < len) {
                c = i2ops(i++)
                t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
            }
            return t.slice(0, len)
        }

        function i2ops(c) {
            var out = Buffer.allocUnsafe(4)
            out.writeUInt32BE(c, 0)
            return out
        }

        /***/
    }
    ), /* 411 */
    /***/
    (function(module, exports) {

        module.exports = function xor(a, b) {
            var len = a.length
            var i = -1
            while (++i < len) {
                a[i] ^= b[i]
            }
            return a
        }

        /***/
    }
    ), /* 412 */
    /***/
    (function(module, exports, __webpack_require__) {

        var BN = __webpack_require__(30)
        var Buffer = __webpack_require__(15).Buffer

        function withPublic(paddedMsg, key) {
            return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray())
        }

        module.exports = withPublic

        /***/
    }
    ), /* 413 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*global module*/
        var Buffer = __webpack_require__(25).Buffer;

        module.exports = function toString(obj) {
            if (typeof obj === 'string')
                return obj;
            if (typeof obj === 'number' || Buffer.isBuffer(obj))
                return obj.toString();
            return JSON.stringify(obj);
        }
        ;

        /***/
    }
    ), /* 414 */
    /***/
    (function(module, exports, __webpack_require__) {

        var JsonWebTokenError = __webpack_require__(164);

        var NotBeforeError = function(message, date) {
            JsonWebTokenError.call(this, message);
            this.name = 'NotBeforeError';
            this.date = date;
        };

        NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);

        NotBeforeError.prototype.constructor = NotBeforeError;

        module.exports = NotBeforeError;

        /***/
    }
    ), /* 415 */
    /***/
    (function(module, exports, __webpack_require__) {

        var JsonWebTokenError = __webpack_require__(164);

        var TokenExpiredError = function(message, expiredAt) {
            JsonWebTokenError.call(this, message);
            this.name = 'TokenExpiredError';
            this.expiredAt = expiredAt;
        };

        TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);

        TokenExpiredError.prototype.constructor = TokenExpiredError;

        module.exports = TokenExpiredError;

        /***/
    }
    ), /* 416 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ms = __webpack_require__(676);

        module.exports = function(time, iat) {
            var timestamp = iat || Math.floor(Date.now() / 1000);

            if (typeof time === 'string') {
                var milliseconds = ms(time);
                if (typeof milliseconds === 'undefined') {
                    return;
                }
                return Math.floor(timestamp + milliseconds / 1000);
            } else if (typeof time === 'number') {
                return timestamp + time;
            } else {
                return;
            }

        }
        ;

        /***/
    }
    ), /* 417 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(process) {
            var semver = __webpack_require__(677);

            module.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 418 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */
        (function(global) {
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "dissableDeprecationWarnings", function() {
                return dissableDeprecationWarnings;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Kefir", function() {
                return Kefir;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Observable", function() {
                return Observable;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Stream", function() {
                return Stream;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Property", function() {
                return Property;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "never", function() {
                return never;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "later", function() {
                return later;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "interval", function() {
                return interval;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "sequentially", function() {
                return sequentially;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromPoll", function() {
                return fromPoll;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "withInterval", function() {
                return withInterval;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromCallback", function() {
                return fromCallback;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromNodeCallback", function() {
                return fromNodeCallback;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromEvents", function() {
                return fromEvents;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "stream", function() {
                return stream;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "constant", function() {
                return constant;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "constantError", function() {
                return constantError;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromPromise", function() {
                return fromPromise;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "fromESObservable", function() {
                return fromESObservable;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "combine", function() {
                return combine;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "zip", function() {
                return zip;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "merge", function() {
                return merge;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "concat", function() {
                return concat$1;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Pool", function() {
                return Pool;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "pool", function() {
                return pool;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "repeat", function() {
                return repeat;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "staticLand", function() {
                return staticLand;
            });
            /*! Kefir.js v3.8.6
 *  https://github.com/kefirjs/kefir
 */

            function createObj(proto) {
                var F = function() {};
                F.prototype = proto;
                return new F();
            }

            function extend(target /*, mixin1, mixin2...*/
            ) {
                var length = arguments.length
                  , i = void 0
                  , prop = void 0;
                for (i = 1; i < length; i++) {
                    for (prop in arguments[i]) {
                        target[prop] = arguments[i][prop];
                    }
                }
                return target;
            }

            function inherit(Child, Parent /*, mixin1, mixin2...*/
            ) {
                var length = arguments.length
                  , i = void 0;
                Child.prototype = createObj(Parent.prototype);
                Child.prototype.constructor = Child;
                for (i = 2; i < length; i++) {
                    extend(Child.prototype, arguments[i]);
                }
                return Child;
            }

            var NOTHING = ['<nothing>'];
            var END = 'end';
            var VALUE = 'value';
            var ERROR = 'error';
            var ANY = 'any';

            function concat(a, b) {
                var result = void 0
                  , length = void 0
                  , i = void 0
                  , j = void 0;
                if (a.length === 0) {
                    return b;
                }
                if (b.length === 0) {
                    return a;
                }
                j = 0;
                result = new Array(a.length + b.length);
                length = a.length;
                for (i = 0; i < length; i++,
                j++) {
                    result[j] = a[i];
                }
                length = b.length;
                for (i = 0; i < length; i++,
                j++) {
                    result[j] = b[i];
                }
                return result;
            }

            function find(arr, value) {
                var length = arr.length
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    if (arr[i] === value) {
                        return i;
                    }
                }
                return -1;
            }

            function findByPred(arr, pred) {
                var length = arr.length
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    if (pred(arr[i])) {
                        return i;
                    }
                }
                return -1;
            }

            function cloneArray(input) {
                var length = input.length
                  , result = new Array(length)
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    result[i] = input[i];
                }
                return result;
            }

            function remove(input, index) {
                var length = input.length
                  , result = void 0
                  , i = void 0
                  , j = void 0;
                if (index >= 0 && index < length) {
                    if (length === 1) {
                        return [];
                    } else {
                        result = new Array(length - 1);
                        for (i = 0,
                        j = 0; i < length; i++) {
                            if (i !== index) {
                                result[j] = input[i];
                                j++;
                            }
                        }
                        return result;
                    }
                } else {
                    return input;
                }
            }

            function map(input, fn) {
                var length = input.length
                  , result = new Array(length)
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    result[i] = fn(input[i]);
                }
                return result;
            }

            function forEach(arr, fn) {
                var length = arr.length
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    fn(arr[i]);
                }
            }

            function fillArray(arr, value) {
                var length = arr.length
                  , i = void 0;
                for (i = 0; i < length; i++) {
                    arr[i] = value;
                }
            }

            function contains(arr, value) {
                return find(arr, value) !== -1;
            }

            function slide(cur, next, max) {
                var length = Math.min(max, cur.length + 1)
                  , offset = cur.length - length + 1
                  , result = new Array(length)
                  , i = void 0;
                for (i = offset; i < length; i++) {
                    result[i - offset] = cur[i];
                }
                result[length - 1] = next;
                return result;
            }

            function callSubscriber(type, fn, event) {
                if (type === ANY) {
                    fn(event);
                } else if (type === event.type) {
                    if (type === VALUE || type === ERROR) {
                        fn(event.value);
                    } else {
                        fn();
                    }
                }
            }

            function Dispatcher() {
                this._items = [];
                this._spies = [];
                this._inLoop = 0;
                this._removedItems = null;
            }

            extend(Dispatcher.prototype, {
                add: function(type, fn) {
                    this._items = concat(this._items, [{
                        type: type,
                        fn: fn
                    }]);
                    return this._items.length;
                },
                remove: function(type, fn) {
                    var index = findByPred(this._items, function(x) {
                        return x.type === type && x.fn === fn;
                    });

                    // if we're currently in a notification loop,
                    // remember this subscriber was removed
                    if (this._inLoop !== 0 && index !== -1) {
                        if (this._removedItems === null) {
                            this._removedItems = [];
                        }
                        this._removedItems.push(this._items[index]);
                    }

                    this._items = remove(this._items, index);
                    return this._items.length;
                },
                addSpy: function(fn) {
                    this._spies = concat(this._spies, [fn]);
                    return this._spies.length;
                },

                // Because spies are only ever a function that perform logging as
                // their only side effect, we don't need the same complicated
                // removal logic like in remove()
                removeSpy: function(fn) {
                    this._spies = remove(this._spies, this._spies.indexOf(fn));
                    return this._spies.length;
                },
                dispatch: function(event) {
                    this._inLoop++;
                    for (var i = 0, spies = this._spies; this._spies !== null && i < spies.length; i++) {
                        spies[i](event);
                    }

                    for (var _i = 0, items = this._items; _i < items.length; _i++) {
                        // cleanup was called
                        if (this._items === null) {
                            break;
                        }

                        // this subscriber was removed
                        if (this._removedItems !== null && contains(this._removedItems, items[_i])) {
                            continue;
                        }

                        callSubscriber(items[_i].type, items[_i].fn, event);
                    }
                    this._inLoop--;
                    if (this._inLoop === 0) {
                        this._removedItems = null;
                    }
                },
                cleanup: function() {
                    this._items = null;
                    this._spies = null;
                }
            });

            function Observable() {
                this._dispatcher = new Dispatcher();
                this._active = false;
                this._alive = true;
                this._activating = false;
                this._logHandlers = null;
                this._spyHandlers = null;
            }

            extend(Observable.prototype, {
                _name: 'observable',

                _onActivation: function() {},
                _onDeactivation: function() {},
                _setActive: function(active) {
                    if (this._active !== active) {
                        this._active = active;
                        if (active) {
                            this._activating = true;
                            this._onActivation();
                            this._activating = false;
                        } else {
                            this._onDeactivation();
                        }
                    }
                },
                _clear: function() {
                    this._setActive(false);
                    this._dispatcher.cleanup();
                    this._dispatcher = null;
                    this._logHandlers = null;
                },
                _emit: function(type, x) {
                    switch (type) {
                    case VALUE:
                        return this._emitValue(x);
                    case ERROR:
                        return this._emitError(x);
                    case END:
                        return this._emitEnd();
                    }
                },
                _emitValue: function(value) {
                    if (this._alive) {
                        this._dispatcher.dispatch({
                            type: VALUE,
                            value: value
                        });
                    }
                },
                _emitError: function(value) {
                    if (this._alive) {
                        this._dispatcher.dispatch({
                            type: ERROR,
                            value: value
                        });
                    }
                },
                _emitEnd: function() {
                    if (this._alive) {
                        this._alive = false;
                        this._dispatcher.dispatch({
                            type: END
                        });
                        this._clear();
                    }
                },
                _on: function(type, fn) {
                    if (this._alive) {
                        this._dispatcher.add(type, fn);
                        this._setActive(true);
                    } else {
                        callSubscriber(type, fn, {
                            type: END
                        });
                    }
                    return this;
                },
                _off: function(type, fn) {
                    if (this._alive) {
                        var count = this._dispatcher.remove(type, fn);
                        if (count === 0) {
                            this._setActive(false);
                        }
                    }
                    return this;
                },
                onValue: function(fn) {
                    return this._on(VALUE, fn);
                },
                onError: function(fn) {
                    return this._on(ERROR, fn);
                },
                onEnd: function(fn) {
                    return this._on(END, fn);
                },
                onAny: function(fn) {
                    return this._on(ANY, fn);
                },
                offValue: function(fn) {
                    return this._off(VALUE, fn);
                },
                offError: function(fn) {
                    return this._off(ERROR, fn);
                },
                offEnd: function(fn) {
                    return this._off(END, fn);
                },
                offAny: function(fn) {
                    return this._off(ANY, fn);
                },
                observe: function(observerOrOnValue, onError, onEnd) {
                    var _this = this;
                    var closed = false;

                    var observer = !observerOrOnValue || typeof observerOrOnValue === 'function' ? {
                        value: observerOrOnValue,
                        error: onError,
                        end: onEnd
                    } : observerOrOnValue;

                    var handler = function(event) {
                        if (event.type === END) {
                            closed = true;
                        }
                        if (event.type === VALUE && observer.value) {
                            observer.value(event.value);
                        } else if (event.type === ERROR && observer.error) {
                            observer.error(event.value);
                        } else if (event.type === END && observer.end) {
                            observer.end(event.value);
                        }
                    };

                    this.onAny(handler);

                    return {
                        unsubscribe: function() {
                            if (!closed) {
                                _this.offAny(handler);
                                closed = true;
                            }
                        },

                        get closed() {
                            return closed;
                        }
                    };
                },

                // A and B must be subclasses of Stream and Property (order doesn't matter)
                _ofSameType: function(A, B) {
                    return A.prototype.getType() === this.getType() ? A : B;
                },
                setName: function(sourceObs /* optional */
                , selfName) {
                    this._name = selfName ? sourceObs._name + '.' + selfName : sourceObs;
                    return this;
                },
                log: function() {
                    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toString();

                    var isCurrent = void 0;
                    var handler = function(event) {
                        var type = '<' + event.type + (isCurrent ? ':current' : '') + '>';
                        if (event.type === END) {
                            console.log(name, type);
                        } else {
                            console.log(name, type, event.value);
                        }
                    };

                    if (this._alive) {
                        if (!this._logHandlers) {
                            this._logHandlers = [];
                        }
                        this._logHandlers.push({
                            name: name,
                            handler: handler
                        });
                    }

                    isCurrent = true;
                    this.onAny(handler);
                    isCurrent = false;

                    return this;
                },
                offLog: function() {
                    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toString();

                    if (this._logHandlers) {
                        var handlerIndex = findByPred(this._logHandlers, function(obj) {
                            return obj.name === name;
                        });
                        if (handlerIndex !== -1) {
                            this.offAny(this._logHandlers[handlerIndex].handler);
                            this._logHandlers.splice(handlerIndex, 1);
                        }
                    }

                    return this;
                },
                spy: function() {
                    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toString();

                    var handler = function(event) {
                        var type = '<' + event.type + '>';
                        if (event.type === END) {
                            console.log(name, type);
                        } else {
                            console.log(name, type, event.value);
                        }
                    };
                    if (this._alive) {
                        if (!this._spyHandlers) {
                            this._spyHandlers = [];
                        }
                        this._spyHandlers.push({
                            name: name,
                            handler: handler
                        });
                        this._dispatcher.addSpy(handler);
                    }
                    return this;
                },
                offSpy: function() {
                    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toString();

                    if (this._spyHandlers) {
                        var handlerIndex = findByPred(this._spyHandlers, function(obj) {
                            return obj.name === name;
                        });
                        if (handlerIndex !== -1) {
                            this._dispatcher.removeSpy(this._spyHandlers[handlerIndex].handler);
                            this._spyHandlers.splice(handlerIndex, 1);
                        }
                    }
                    return this;
                }
            });

            // extend() can't handle `toString` in IE8
            Observable.prototype.toString = function() {
                return '[' + this._name + ']';
            }
            ;

            function Stream() {
                Observable.call(this);
            }

            inherit(Stream, Observable, {
                _name: 'stream',

                getType: function() {
                    return 'stream';
                }
            });

            function Property() {
                Observable.call(this);
                this._currentEvent = null;
            }

            inherit(Property, Observable, {
                _name: 'property',

                _emitValue: function(value) {
                    if (this._alive) {
                        this._currentEvent = {
                            type: VALUE,
                            value: value
                        };
                        if (!this._activating) {
                            this._dispatcher.dispatch({
                                type: VALUE,
                                value: value
                            });
                        }
                    }
                },
                _emitError: function(value) {
                    if (this._alive) {
                        this._currentEvent = {
                            type: ERROR,
                            value: value
                        };
                        if (!this._activating) {
                            this._dispatcher.dispatch({
                                type: ERROR,
                                value: value
                            });
                        }
                    }
                },
                _emitEnd: function() {
                    if (this._alive) {
                        this._alive = false;
                        if (!this._activating) {
                            this._dispatcher.dispatch({
                                type: END
                            });
                        }
                        this._clear();
                    }
                },
                _on: function(type, fn) {
                    if (this._alive) {
                        this._dispatcher.add(type, fn);
                        this._setActive(true);
                    }
                    if (this._currentEvent !== null) {
                        callSubscriber(type, fn, this._currentEvent);
                    }
                    if (!this._alive) {
                        callSubscriber(type, fn, {
                            type: END
                        });
                    }
                    return this;
                },
                getType: function() {
                    return 'property';
                }
            });

            var neverS = new Stream();
            neverS._emitEnd();
            neverS._name = 'never';

            function never() {
                return neverS;
            }

            function timeBased(mixin) {
                function AnonymousStream(wait, options) {
                    var _this = this;

                    Stream.call(this);
                    this._wait = wait;
                    this._intervalId = null;
                    this._$onTick = function() {
                        return _this._onTick();
                    }
                    ;
                    this._init(options);
                }

                inherit(AnonymousStream, Stream, {
                    _init: function() {},
                    _free: function() {},
                    _onTick: function() {},
                    _onActivation: function() {
                        this._intervalId = setInterval(this._$onTick, this._wait);
                    },
                    _onDeactivation: function() {
                        if (this._intervalId !== null) {
                            clearInterval(this._intervalId);
                            this._intervalId = null;
                        }
                    },
                    _clear: function() {
                        Stream.prototype._clear.call(this);
                        this._$onTick = null;
                        this._free();
                    }
                }, mixin);

                return AnonymousStream;
            }

            var S = timeBased({
                _name: 'later',

                _init: function(_ref) {
                    var x = _ref.x;

                    this._x = x;
                },
                _free: function() {
                    this._x = null;
                },
                _onTick: function() {
                    this._emitValue(this._x);
                    this._emitEnd();
                }
            });

            function later(wait, x) {
                return new S(wait,{
                    x: x
                });
            }

            var S$1 = timeBased({
                _name: 'interval',

                _init: function(_ref) {
                    var x = _ref.x;

                    this._x = x;
                },
                _free: function() {
                    this._x = null;
                },
                _onTick: function() {
                    this._emitValue(this._x);
                }
            });

            function interval(wait, x) {
                return new S$1(wait,{
                    x: x
                });
            }

            var S$2 = timeBased({
                _name: 'sequentially',

                _init: function(_ref) {
                    var xs = _ref.xs;

                    this._xs = cloneArray(xs);
                },
                _free: function() {
                    this._xs = null;
                },
                _onTick: function() {
                    if (this._xs.length === 1) {
                        this._emitValue(this._xs[0]);
                        this._emitEnd();
                    } else {
                        this._emitValue(this._xs.shift());
                    }
                }
            });

            function sequentially(wait, xs) {
                return xs.length === 0 ? never() : new S$2(wait,{
                    xs: xs
                });
            }

            var S$3 = timeBased({
                _name: 'fromPoll',

                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _onTick: function() {
                    var fn = this._fn;
                    this._emitValue(fn());
                }
            });

            function fromPoll(wait, fn) {
                return new S$3(wait,{
                    fn: fn
                });
            }

            function emitter(obs) {
                function value(x) {
                    obs._emitValue(x);
                    return obs._active;
                }

                function error(x) {
                    obs._emitError(x);
                    return obs._active;
                }

                function end() {
                    obs._emitEnd();
                    return obs._active;
                }

                function event(e) {
                    obs._emit(e.type, e.value);
                    return obs._active;
                }

                return {
                    value: value,
                    error: error,
                    end: end,
                    event: event,

                    // legacy
                    emit: value,
                    emitEvent: event
                };
            }

            var S$4 = timeBased({
                _name: 'withInterval',

                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                    this._emitter = emitter(this);
                },
                _free: function() {
                    this._fn = null;
                    this._emitter = null;
                },
                _onTick: function() {
                    var fn = this._fn;
                    fn(this._emitter);
                }
            });

            function withInterval(wait, fn) {
                return new S$4(wait,{
                    fn: fn
                });
            }

            function S$5(fn) {
                Stream.call(this);
                this._fn = fn;
                this._unsubscribe = null;
            }

            inherit(S$5, Stream, {
                _name: 'stream',

                _onActivation: function() {
                    var fn = this._fn;
                    var unsubscribe = fn(emitter(this));
                    this._unsubscribe = typeof unsubscribe === 'function' ? unsubscribe : null;

                    // fix https://github.com/kefirjs/kefir/issues/35
                    if (!this._active) {
                        this._callUnsubscribe();
                    }
                },
                _callUnsubscribe: function() {
                    if (this._unsubscribe !== null) {
                        this._unsubscribe();
                        this._unsubscribe = null;
                    }
                },
                _onDeactivation: function() {
                    this._callUnsubscribe();
                },
                _clear: function() {
                    Stream.prototype._clear.call(this);
                    this._fn = null;
                }
            });

            function stream(fn) {
                return new S$5(fn);
            }

            function fromCallback(callbackConsumer) {
                var called = false;

                return stream(function(emitter) {
                    if (!called) {
                        callbackConsumer(function(x) {
                            emitter.emit(x);
                            emitter.end();
                        });
                        called = true;
                    }
                }).setName('fromCallback');
            }

            function fromNodeCallback(callbackConsumer) {
                var called = false;

                return stream(function(emitter) {
                    if (!called) {
                        callbackConsumer(function(error, x) {
                            if (error) {
                                emitter.error(error);
                            } else {
                                emitter.emit(x);
                            }
                            emitter.end();
                        });
                        called = true;
                    }
                }).setName('fromNodeCallback');
            }

            function spread(fn, length) {
                switch (length) {
                case 0:
                    return function() {
                        return fn();
                    }
                    ;
                case 1:
                    return function(a) {
                        return fn(a[0]);
                    }
                    ;
                case 2:
                    return function(a) {
                        return fn(a[0], a[1]);
                    }
                    ;
                case 3:
                    return function(a) {
                        return fn(a[0], a[1], a[2]);
                    }
                    ;
                case 4:
                    return function(a) {
                        return fn(a[0], a[1], a[2], a[3]);
                    }
                    ;
                default:
                    return function(a) {
                        return fn.apply(null, a);
                    }
                    ;
                }
            }

            function apply(fn, c, a) {
                var aLength = a ? a.length : 0;
                if (c == null) {
                    switch (aLength) {
                    case 0:
                        return fn();
                    case 1:
                        return fn(a[0]);
                    case 2:
                        return fn(a[0], a[1]);
                    case 3:
                        return fn(a[0], a[1], a[2]);
                    case 4:
                        return fn(a[0], a[1], a[2], a[3]);
                    default:
                        return fn.apply(null, a);
                    }
                } else {
                    switch (aLength) {
                    case 0:
                        return fn.call(c);
                    default:
                        return fn.apply(c, a);
                    }
                }
            }

            function fromSubUnsub(sub, unsub, transformer /* Function | falsey */
            ) {
                return stream(function(emitter) {
                    var handler = transformer ? function() {
                        emitter.emit(apply(transformer, this, arguments));
                    }
                    : function(x) {
                        emitter.emit(x);
                    }
                    ;

                    sub(handler);
                    return function() {
                        return unsub(handler);
                    }
                    ;
                }).setName('fromSubUnsub');
            }

            var pairs = [['addEventListener', 'removeEventListener'], ['addListener', 'removeListener'], ['on', 'off']];

            function fromEvents(target, eventName, transformer) {
                var sub = void 0
                  , unsub = void 0;

                for (var i = 0; i < pairs.length; i++) {
                    if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {
                        sub = pairs[i][0];
                        unsub = pairs[i][1];
                        break;
                    }
                }

                if (sub === undefined) {
                    throw new Error("target don't support any of " + 'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');
                }

                return fromSubUnsub(function(handler) {
                    return target[sub](eventName, handler);
                }, function(handler) {
                    return target[unsub](eventName, handler);
                }, transformer).setName('fromEvents');
            }

            // HACK:
            //   We don't call parent Class constructor, but instead putting all necessary
            //   properties into prototype to simulate ended Property
            //   (see Propperty and Observable classes).

            function P(value) {
                this._currentEvent = {
                    type: 'value',
                    value: value,
                    current: true
                };
            }

            inherit(P, Property, {
                _name: 'constant',
                _active: false,
                _activating: false,
                _alive: false,
                _dispatcher: null,
                _logHandlers: null
            });

            function constant(x) {
                return new P(x);
            }

            // HACK:
            //   We don't call parent Class constructor, but instead putting all necessary
            //   properties into prototype to simulate ended Property
            //   (see Propperty and Observable classes).

            function P$1(value) {
                this._currentEvent = {
                    type: 'error',
                    value: value,
                    current: true
                };
            }

            inherit(P$1, Property, {
                _name: 'constantError',
                _active: false,
                _activating: false,
                _alive: false,
                _dispatcher: null,
                _logHandlers: null
            });

            function constantError(x) {
                return new P$1(x);
            }

            function createConstructor(BaseClass, name) {
                return function AnonymousObservable(source, options) {
                    var _this = this;

                    BaseClass.call(this);
                    this._source = source;
                    this._name = source._name + '.' + name;
                    this._init(options);
                    this._$handleAny = function(event) {
                        return _this._handleAny(event);
                    }
                    ;
                }
                ;
            }

            function createClassMethods(BaseClass) {
                return {
                    _init: function() {},
                    _free: function() {},
                    _handleValue: function(x) {
                        this._emitValue(x);
                    },
                    _handleError: function(x) {
                        this._emitError(x);
                    },
                    _handleEnd: function() {
                        this._emitEnd();
                    },
                    _handleAny: function(event) {
                        switch (event.type) {
                        case VALUE:
                            return this._handleValue(event.value);
                        case ERROR:
                            return this._handleError(event.value);
                        case END:
                            return this._handleEnd();
                        }
                    },
                    _onActivation: function() {
                        this._source.onAny(this._$handleAny);
                    },
                    _onDeactivation: function() {
                        this._source.offAny(this._$handleAny);
                    },
                    _clear: function() {
                        BaseClass.prototype._clear.call(this);
                        this._source = null;
                        this._$handleAny = null;
                        this._free();
                    }
                };
            }

            function createStream(name, mixin) {
                var S = createConstructor(Stream, name);
                inherit(S, Stream, createClassMethods(Stream), mixin);
                return S;
            }

            function createProperty(name, mixin) {
                var P = createConstructor(Property, name);
                inherit(P, Property, createClassMethods(Property), mixin);
                return P;
            }

            var P$2 = createProperty('toProperty', {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._getInitialCurrent = fn;
                },
                _onActivation: function() {
                    if (this._getInitialCurrent !== null) {
                        var getInitial = this._getInitialCurrent;
                        this._emitValue(getInitial());
                    }
                    this._source.onAny(this._$handleAny);
                    // copied from patterns/one-source
                }
            });

            function toProperty(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

                if (fn !== null && typeof fn !== 'function') {
                    throw new Error('You should call toProperty() with a function or no arguments.');
                }
                return new P$2(obs,{
                    fn: fn
                });
            }

            var S$6 = createStream('changes', {
                _handleValue: function(x) {
                    if (!this._activating) {
                        this._emitValue(x);
                    }
                },
                _handleError: function(x) {
                    if (!this._activating) {
                        this._emitError(x);
                    }
                }
            });

            function changes(obs) {
                return new S$6(obs);
            }

            function fromPromise(promise) {
                var called = false;

                var result = stream(function(emitter) {
                    if (!called) {
                        var onValue = function(x) {
                            emitter.emit(x);
                            emitter.end();
                        };
                        var onError = function(x) {
                            emitter.error(x);
                            emitter.end();
                        };
                        var _promise = promise.then(onValue, onError);

                        // prevent libraries like 'Q' or 'when' from swallowing exceptions
                        if (_promise && typeof _promise.done === 'function') {
                            _promise.done();
                        }

                        called = true;
                    }
                });

                return toProperty(result, null).setName('fromPromise');
            }

            function getGlodalPromise() {
                if (typeof Promise === 'function') {
                    return Promise;
                } else {
                    throw new Error("There isn't default Promise, use shim or parameter");
                }
            }

            var toPromise = function(obs) {
                var Promise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getGlodalPromise();

                var last = null;
                return new Promise(function(resolve, reject) {
                    obs.onAny(function(event) {
                        if (event.type === END && last !== null) {
                            (last.type === VALUE ? resolve : reject)(last.value);
                            last = null;
                        } else {
                            last = event;
                        }
                    });
                }
                );
            };

            var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

            function createCommonjsModule(fn, module) {
                return module = {
                    exports: {}
                },
                fn(module, module.exports),
                module.exports;
            }

            var ponyfill = createCommonjsModule(function(module, exports) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports['default'] = symbolObservablePonyfill;
                function symbolObservablePonyfill(root) {
                    var result;
                    var _Symbol = root.Symbol;

                    if (typeof _Symbol === 'function') {
                        if (_Symbol.observable) {
                            result = _Symbol.observable;
                        } else {
                            result = _Symbol('observable');
                            _Symbol.observable = result;
                        }
                    } else {
                        result = '@@observable';
                    }

                    return result;
                }
            });

            var index$1 = createCommonjsModule(function(module, exports) {
                'use strict';

                Object.defineProperty(exports, "__esModule", {
                    value: true
                });

                var _ponyfill2 = _interopRequireDefault(ponyfill);

                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : {
                        'default': obj
                    };
                }

                var root;
                /* global window */

                if (typeof self !== 'undefined') {
                    root = self;
                } else if (typeof window !== 'undefined') {
                    root = window;
                } else if (typeof commonjsGlobal !== 'undefined') {
                    root = commonjsGlobal;
                } else {
                    root = module;
                }

                var result = (0,
                _ponyfill2['default'])(root);
                exports['default'] = result;
            });

            var index = index$1;

            // this file contains some hot JS modules systems stuff

            var $$observable = index.default ? index.default : index;

            function fromESObservable(_observable) {
                var observable = _observable[$$observable] ? _observable[$$observable]() : _observable;
                return stream(function(emitter) {
                    var unsub = observable.subscribe({
                        error: function(error) {
                            emitter.error(error);
                            emitter.end();
                        },
                        next: function(value) {
                            emitter.emit(value);
                        },
                        complete: function() {
                            emitter.end();
                        }
                    });

                    if (unsub.unsubscribe) {
                        return function() {
                            unsub.unsubscribe();
                        }
                        ;
                    } else {
                        return unsub;
                    }
                }).setName('fromESObservable');
            }

            function ESObservable(observable) {
                this._observable = observable.takeErrors(1);
            }

            extend(ESObservable.prototype, {
                subscribe: function(observerOrOnNext, onError, onComplete) {
                    var _this = this;

                    var observer = typeof observerOrOnNext === 'function' ? {
                        next: observerOrOnNext,
                        error: onError,
                        complete: onComplete
                    } : observerOrOnNext;

                    var fn = function(event) {
                        if (event.type === END) {
                            closed = true;
                        }

                        if (event.type === VALUE && observer.next) {
                            observer.next(event.value);
                        } else if (event.type === ERROR && observer.error) {
                            observer.error(event.value);
                        } else if (event.type === END && observer.complete) {
                            observer.complete(event.value);
                        }
                    };

                    this._observable.onAny(fn);
                    var closed = false;

                    var subscription = {
                        unsubscribe: function() {
                            closed = true;
                            _this._observable.offAny(fn);
                        },
                        get closed() {
                            return closed;
                        }
                    };
                    return subscription;
                }
            });

            // Need to assign directly b/c Symbols aren't enumerable.
            ESObservable.prototype[$$observable] = function() {
                return this;
            }
            ;

            function toESObservable() {
                return new ESObservable(this);
            }

            function collect(source, keys, values) {
                for (var prop in source) {
                    if (source.hasOwnProperty(prop)) {
                        keys.push(prop);
                        values.push(source[prop]);
                    }
                }
            }

            function defaultErrorsCombinator(errors) {
                var latestError = void 0;
                for (var i = 0; i < errors.length; i++) {
                    if (errors[i] !== undefined) {
                        if (latestError === undefined || latestError.index < errors[i].index) {
                            latestError = errors[i];
                        }
                    }
                }
                return latestError.error;
            }

            function Combine(active, passive, combinator) {
                var _this = this;

                Stream.call(this);
                this._activeCount = active.length;
                this._sources = concat(active, passive);
                this._combinator = combinator;
                this._aliveCount = 0;
                this._latestValues = new Array(this._sources.length);
                this._latestErrors = new Array(this._sources.length);
                fillArray(this._latestValues, NOTHING);
                this._emitAfterActivation = false;
                this._endAfterActivation = false;
                this._latestErrorIndex = 0;

                this._$handlers = [];

                var _loop = function(i) {
                    _this._$handlers.push(function(event) {
                        return _this._handleAny(i, event);
                    });
                };

                for (var i = 0; i < this._sources.length; i++) {
                    _loop(i);
                }
            }

            inherit(Combine, Stream, {
                _name: 'combine',

                _onActivation: function() {
                    this._aliveCount = this._activeCount;

                    // we need to suscribe to _passive_ sources before _active_
                    // (see https://github.com/kefirjs/kefir/issues/98)
                    for (var i = this._activeCount; i < this._sources.length; i++) {
                        this._sources[i].onAny(this._$handlers[i]);
                    }
                    for (var _i = 0; _i < this._activeCount; _i++) {
                        this._sources[_i].onAny(this._$handlers[_i]);
                    }

                    if (this._emitAfterActivation) {
                        this._emitAfterActivation = false;
                        this._emitIfFull();
                    }
                    if (this._endAfterActivation) {
                        this._emitEnd();
                    }
                },
                _onDeactivation: function() {
                    var length = this._sources.length
                      , i = void 0;
                    for (i = 0; i < length; i++) {
                        this._sources[i].offAny(this._$handlers[i]);
                    }
                },
                _emitIfFull: function() {
                    var hasAllValues = true;
                    var hasErrors = false;
                    var length = this._latestValues.length;
                    var valuesCopy = new Array(length);
                    var errorsCopy = new Array(length);

                    for (var i = 0; i < length; i++) {
                        valuesCopy[i] = this._latestValues[i];
                        errorsCopy[i] = this._latestErrors[i];

                        if (valuesCopy[i] === NOTHING) {
                            hasAllValues = false;
                        }

                        if (errorsCopy[i] !== undefined) {
                            hasErrors = true;
                        }
                    }

                    if (hasAllValues) {
                        var combinator = this._combinator;
                        this._emitValue(combinator(valuesCopy));
                    }
                    if (hasErrors) {
                        this._emitError(defaultErrorsCombinator(errorsCopy));
                    }
                },
                _handleAny: function(i, event) {
                    if (event.type === VALUE || event.type === ERROR) {
                        if (event.type === VALUE) {
                            this._latestValues[i] = event.value;
                            this._latestErrors[i] = undefined;
                        }
                        if (event.type === ERROR) {
                            this._latestValues[i] = NOTHING;
                            this._latestErrors[i] = {
                                index: this._latestErrorIndex++,
                                error: event.value
                            };
                        }

                        if (i < this._activeCount) {
                            if (this._activating) {
                                this._emitAfterActivation = true;
                            } else {
                                this._emitIfFull();
                            }
                        }
                    } else {
                        // END

                        if (i < this._activeCount) {
                            this._aliveCount--;
                            if (this._aliveCount === 0) {
                                if (this._activating) {
                                    this._endAfterActivation = true;
                                } else {
                                    this._emitEnd();
                                }
                            }
                        }
                    }
                },
                _clear: function() {
                    Stream.prototype._clear.call(this);
                    this._sources = null;
                    this._latestValues = null;
                    this._latestErrors = null;
                    this._combinator = null;
                    this._$handlers = null;
                }
            });

            function combineAsArray(active) {
                var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
                var combinator = arguments[2];

                if (!Array.isArray(passive)) {
                    throw new Error('Combine can only combine active and passive collections of the same type.');
                }

                combinator = combinator ? spread(combinator, active.length + passive.length) : function(x) {
                    return x;
                }
                ;
                return active.length === 0 ? never() : new Combine(active,passive,combinator);
            }

            function combineAsObject(active) {
                var passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var combinator = arguments[2];

                if (typeof passive !== 'object' || Array.isArray(passive)) {
                    throw new Error('Combine can only combine active and passive collections of the same type.');
                }

                var keys = []
                  , activeObservables = []
                  , passiveObservables = [];

                collect(active, keys, activeObservables);
                collect(passive, keys, passiveObservables);

                var objectify = function(values) {
                    var event = {};
                    for (var i = values.length - 1; 0 <= i; i--) {
                        event[keys[i]] = values[i];
                    }
                    return combinator ? combinator(event) : event;
                };

                return activeObservables.length === 0 ? never() : new Combine(activeObservables,passiveObservables,objectify);
            }

            function combine(active, passive, combinator) {
                if (typeof passive === 'function') {
                    combinator = passive;
                    passive = undefined;
                }

                return Array.isArray(active) ? combineAsArray(active, passive, combinator) : combineAsObject(active, passive, combinator);
            }

            var Observable$2 = {
                empty: function() {
                    return never();
                },

                // Monoid based on merge() seems more useful than one based on concat().
                concat: function(a, b) {
                    return a.merge(b);
                },
                of: function(x) {
                    return constant(x);
                },
                map: function(fn, obs) {
                    return obs.map(fn);
                },
                bimap: function(fnErr, fnVal, obs) {
                    return obs.mapErrors(fnErr).map(fnVal);
                },

                // This ap strictly speaking incompatible with chain. If we derive ap from chain we get
                // different (not very useful) behavior. But spec requires that if method can be derived
                // it must have the same behavior as hand-written method. We intentionally violate the spec
                // in hope that it won't cause many troubles in practice. And in return we have more useful type.
                ap: function(obsFn, obsVal) {
                    return combine([obsFn, obsVal], function(fn, val) {
                        return fn(val);
                    });
                },
                chain: function(fn, obs) {
                    return obs.flatMap(fn);
                }
            };

            var staticLand = Object.freeze({
                Observable: Observable$2
            });

            var mixin = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    this._emitValue(fn(x));
                }
            };

            var S$7 = createStream('map', mixin);
            var P$3 = createProperty('map', mixin);

            var id = function(x) {
                return x;
            };

            function map$1(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id;

                return new (obs._ofSameType(S$7, P$3))(obs,{
                    fn: fn
                });
            }

            var mixin$1 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    if (fn(x)) {
                        this._emitValue(x);
                    }
                }
            };

            var S$8 = createStream('filter', mixin$1);
            var P$4 = createProperty('filter', mixin$1);

            var id$1 = function(x) {
                return x;
            };

            function filter(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$1;

                return new (obs._ofSameType(S$8, P$4))(obs,{
                    fn: fn
                });
            }

            var mixin$2 = {
                _init: function(_ref) {
                    var n = _ref.n;

                    this._n = n;
                    if (n <= 0) {
                        this._emitEnd();
                    }
                },
                _handleValue: function(x) {
                    if (this._n === 0) {
                        return;
                    }
                    this._n--;
                    this._emitValue(x);
                    if (this._n === 0) {
                        this._emitEnd();
                    }
                }
            };

            var S$9 = createStream('take', mixin$2);
            var P$5 = createProperty('take', mixin$2);

            function take(obs, n) {
                return new (obs._ofSameType(S$9, P$5))(obs,{
                    n: n
                });
            }

            var mixin$3 = {
                _init: function(_ref) {
                    var n = _ref.n;

                    this._n = n;
                    if (n <= 0) {
                        this._emitEnd();
                    }
                },
                _handleError: function(x) {
                    if (this._n === 0) {
                        return;
                    }
                    this._n--;
                    this._emitError(x);
                    if (this._n === 0) {
                        this._emitEnd();
                    }
                }
            };

            var S$10 = createStream('takeErrors', mixin$3);
            var P$6 = createProperty('takeErrors', mixin$3);

            function takeErrors(obs, n) {
                return new (obs._ofSameType(S$10, P$6))(obs,{
                    n: n
                });
            }

            var mixin$4 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    if (fn(x)) {
                        this._emitValue(x);
                    } else {
                        this._emitEnd();
                    }
                }
            };

            var S$11 = createStream('takeWhile', mixin$4);
            var P$7 = createProperty('takeWhile', mixin$4);

            var id$2 = function(x) {
                return x;
            };

            function takeWhile(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$2;

                return new (obs._ofSameType(S$11, P$7))(obs,{
                    fn: fn
                });
            }

            var mixin$5 = {
                _init: function() {
                    this._lastValue = NOTHING;
                },
                _free: function() {
                    this._lastValue = null;
                },
                _handleValue: function(x) {
                    this._lastValue = x;
                },
                _handleEnd: function() {
                    if (this._lastValue !== NOTHING) {
                        this._emitValue(this._lastValue);
                    }
                    this._emitEnd();
                }
            };

            var S$12 = createStream('last', mixin$5);
            var P$8 = createProperty('last', mixin$5);

            function last(obs) {
                return new (obs._ofSameType(S$12, P$8))(obs);
            }

            var mixin$6 = {
                _init: function(_ref) {
                    var n = _ref.n;

                    this._n = Math.max(0, n);
                },
                _handleValue: function(x) {
                    if (this._n === 0) {
                        this._emitValue(x);
                    } else {
                        this._n--;
                    }
                }
            };

            var S$13 = createStream('skip', mixin$6);
            var P$9 = createProperty('skip', mixin$6);

            function skip(obs, n) {
                return new (obs._ofSameType(S$13, P$9))(obs,{
                    n: n
                });
            }

            var mixin$7 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    if (this._fn !== null && !fn(x)) {
                        this._fn = null;
                    }
                    if (this._fn === null) {
                        this._emitValue(x);
                    }
                }
            };

            var S$14 = createStream('skipWhile', mixin$7);
            var P$10 = createProperty('skipWhile', mixin$7);

            var id$3 = function(x) {
                return x;
            };

            function skipWhile(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$3;

                return new (obs._ofSameType(S$14, P$10))(obs,{
                    fn: fn
                });
            }

            var mixin$8 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                    this._prev = NOTHING;
                },
                _free: function() {
                    this._fn = null;
                    this._prev = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    if (this._prev === NOTHING || !fn(this._prev, x)) {
                        this._prev = x;
                        this._emitValue(x);
                    }
                }
            };

            var S$15 = createStream('skipDuplicates', mixin$8);
            var P$11 = createProperty('skipDuplicates', mixin$8);

            var eq = function(a, b) {
                return a === b;
            };

            function skipDuplicates(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : eq;

                return new (obs._ofSameType(S$15, P$11))(obs,{
                    fn: fn
                });
            }

            var mixin$9 = {
                _init: function(_ref) {
                    var fn = _ref.fn
                      , seed = _ref.seed;

                    this._fn = fn;
                    this._prev = seed;
                },
                _free: function() {
                    this._prev = null;
                    this._fn = null;
                },
                _handleValue: function(x) {
                    if (this._prev !== NOTHING) {
                        var fn = this._fn;
                        this._emitValue(fn(this._prev, x));
                    }
                    this._prev = x;
                }
            };

            var S$16 = createStream('diff', mixin$9);
            var P$12 = createProperty('diff', mixin$9);

            function defaultFn(a, b) {
                return [a, b];
            }

            function diff(obs, fn) {
                var seed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NOTHING;

                return new (obs._ofSameType(S$16, P$12))(obs,{
                    fn: fn || defaultFn,
                    seed: seed
                });
            }

            var P$13 = createProperty('scan', {
                _init: function(_ref) {
                    var fn = _ref.fn
                      , seed = _ref.seed;

                    this._fn = fn;
                    this._seed = seed;
                    if (seed !== NOTHING) {
                        this._emitValue(seed);
                    }
                },
                _free: function() {
                    this._fn = null;
                    this._seed = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    if (this._currentEvent === null || this._currentEvent.type === ERROR) {
                        this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));
                    } else {
                        this._emitValue(fn(this._currentEvent.value, x));
                    }
                }
            });

            function scan(obs, fn) {
                var seed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NOTHING;

                return new P$13(obs,{
                    fn: fn,
                    seed: seed
                });
            }

            var mixin$10 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    var xs = fn(x);
                    for (var i = 0; i < xs.length; i++) {
                        this._emitValue(xs[i]);
                    }
                }
            };

            var S$17 = createStream('flatten', mixin$10);

            var id$4 = function(x) {
                return x;
            };

            function flatten(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$4;

                return new S$17(obs,{
                    fn: fn
                });
            }

            var END_MARKER = {};

            var mixin$11 = {
                _init: function(_ref) {
                    var _this = this;

                    var wait = _ref.wait;

                    this._wait = Math.max(0, wait);
                    this._buff = [];
                    this._$shiftBuff = function() {
                        var value = _this._buff.shift();
                        if (value === END_MARKER) {
                            _this._emitEnd();
                        } else {
                            _this._emitValue(value);
                        }
                    }
                    ;
                },
                _free: function() {
                    this._buff = null;
                    this._$shiftBuff = null;
                },
                _handleValue: function(x) {
                    if (this._activating) {
                        this._emitValue(x);
                    } else {
                        this._buff.push(x);
                        setTimeout(this._$shiftBuff, this._wait);
                    }
                },
                _handleEnd: function() {
                    if (this._activating) {
                        this._emitEnd();
                    } else {
                        this._buff.push(END_MARKER);
                        setTimeout(this._$shiftBuff, this._wait);
                    }
                }
            };

            var S$18 = createStream('delay', mixin$11);
            var P$14 = createProperty('delay', mixin$11);

            function delay(obs, wait) {
                return new (obs._ofSameType(S$18, P$14))(obs,{
                    wait: wait
                });
            }

            var now = Date.now ? function() {
                return Date.now();
            }
            : function() {
                return new Date().getTime();
            }
            ;

            var mixin$12 = {
                _init: function(_ref) {
                    var _this = this;

                    var wait = _ref.wait
                      , leading = _ref.leading
                      , trailing = _ref.trailing;

                    this._wait = Math.max(0, wait);
                    this._leading = leading;
                    this._trailing = trailing;
                    this._trailingValue = null;
                    this._timeoutId = null;
                    this._endLater = false;
                    this._lastCallTime = 0;
                    this._$trailingCall = function() {
                        return _this._trailingCall();
                    }
                    ;
                },
                _free: function() {
                    this._trailingValue = null;
                    this._$trailingCall = null;
                },
                _handleValue: function(x) {
                    if (this._activating) {
                        this._emitValue(x);
                    } else {
                        var curTime = now();
                        if (this._lastCallTime === 0 && !this._leading) {
                            this._lastCallTime = curTime;
                        }
                        var remaining = this._wait - (curTime - this._lastCallTime);
                        if (remaining <= 0) {
                            this._cancelTrailing();
                            this._lastCallTime = curTime;
                            this._emitValue(x);
                        } else if (this._trailing) {
                            this._cancelTrailing();
                            this._trailingValue = x;
                            this._timeoutId = setTimeout(this._$trailingCall, remaining);
                        }
                    }
                },
                _handleEnd: function() {
                    if (this._activating) {
                        this._emitEnd();
                    } else {
                        if (this._timeoutId) {
                            this._endLater = true;
                        } else {
                            this._emitEnd();
                        }
                    }
                },
                _cancelTrailing: function() {
                    if (this._timeoutId !== null) {
                        clearTimeout(this._timeoutId);
                        this._timeoutId = null;
                    }
                },
                _trailingCall: function() {
                    this._emitValue(this._trailingValue);
                    this._timeoutId = null;
                    this._trailingValue = null;
                    this._lastCallTime = !this._leading ? 0 : now();
                    if (this._endLater) {
                        this._emitEnd();
                    }
                }
            };

            var S$19 = createStream('throttle', mixin$12);
            var P$15 = createProperty('throttle', mixin$12);

            function throttle(obs, wait) {
                var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
                  , _ref2$leading = _ref2.leading
                  , leading = _ref2$leading === undefined ? true : _ref2$leading
                  , _ref2$trailing = _ref2.trailing
                  , trailing = _ref2$trailing === undefined ? true : _ref2$trailing;

                return new (obs._ofSameType(S$19, P$15))(obs,{
                    wait: wait,
                    leading: leading,
                    trailing: trailing
                });
            }

            var mixin$13 = {
                _init: function(_ref) {
                    var _this = this;

                    var wait = _ref.wait
                      , immediate = _ref.immediate;

                    this._wait = Math.max(0, wait);
                    this._immediate = immediate;
                    this._lastAttempt = 0;
                    this._timeoutId = null;
                    this._laterValue = null;
                    this._endLater = false;
                    this._$later = function() {
                        return _this._later();
                    }
                    ;
                },
                _free: function() {
                    this._laterValue = null;
                    this._$later = null;
                },
                _handleValue: function(x) {
                    if (this._activating) {
                        this._emitValue(x);
                    } else {
                        this._lastAttempt = now();
                        if (this._immediate && !this._timeoutId) {
                            this._emitValue(x);
                        }
                        if (!this._timeoutId) {
                            this._timeoutId = setTimeout(this._$later, this._wait);
                        }
                        if (!this._immediate) {
                            this._laterValue = x;
                        }
                    }
                },
                _handleEnd: function() {
                    if (this._activating) {
                        this._emitEnd();
                    } else {
                        if (this._timeoutId && !this._immediate) {
                            this._endLater = true;
                        } else {
                            this._emitEnd();
                        }
                    }
                },
                _later: function() {
                    var last = now() - this._lastAttempt;
                    if (last < this._wait && last >= 0) {
                        this._timeoutId = setTimeout(this._$later, this._wait - last);
                    } else {
                        this._timeoutId = null;
                        if (!this._immediate) {
                            this._emitValue(this._laterValue);
                            this._laterValue = null;
                        }
                        if (this._endLater) {
                            this._emitEnd();
                        }
                    }
                }
            };

            var S$20 = createStream('debounce', mixin$13);
            var P$16 = createProperty('debounce', mixin$13);

            function debounce(obs, wait) {
                var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
                  , _ref2$immediate = _ref2.immediate
                  , immediate = _ref2$immediate === undefined ? false : _ref2$immediate;

                return new (obs._ofSameType(S$20, P$16))(obs,{
                    wait: wait,
                    immediate: immediate
                });
            }

            var mixin$14 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleError: function(x) {
                    var fn = this._fn;
                    this._emitError(fn(x));
                }
            };

            var S$21 = createStream('mapErrors', mixin$14);
            var P$17 = createProperty('mapErrors', mixin$14);

            var id$5 = function(x) {
                return x;
            };

            function mapErrors(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$5;

                return new (obs._ofSameType(S$21, P$17))(obs,{
                    fn: fn
                });
            }

            var mixin$15 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleError: function(x) {
                    var fn = this._fn;
                    if (fn(x)) {
                        this._emitError(x);
                    }
                }
            };

            var S$22 = createStream('filterErrors', mixin$15);
            var P$18 = createProperty('filterErrors', mixin$15);

            var id$6 = function(x) {
                return x;
            };

            function filterErrors(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : id$6;

                return new (obs._ofSameType(S$22, P$18))(obs,{
                    fn: fn
                });
            }

            var mixin$16 = {
                _handleValue: function() {}
            };

            var S$23 = createStream('ignoreValues', mixin$16);
            var P$19 = createProperty('ignoreValues', mixin$16);

            function ignoreValues(obs) {
                return new (obs._ofSameType(S$23, P$19))(obs);
            }

            var mixin$17 = {
                _handleError: function() {}
            };

            var S$24 = createStream('ignoreErrors', mixin$17);
            var P$20 = createProperty('ignoreErrors', mixin$17);

            function ignoreErrors(obs) {
                return new (obs._ofSameType(S$24, P$20))(obs);
            }

            var mixin$18 = {
                _handleEnd: function() {}
            };

            var S$25 = createStream('ignoreEnd', mixin$18);
            var P$21 = createProperty('ignoreEnd', mixin$18);

            function ignoreEnd(obs) {
                return new (obs._ofSameType(S$25, P$21))(obs);
            }

            var mixin$19 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleEnd: function() {
                    var fn = this._fn;
                    this._emitValue(fn());
                    this._emitEnd();
                }
            };

            var S$26 = createStream('beforeEnd', mixin$19);
            var P$22 = createProperty('beforeEnd', mixin$19);

            function beforeEnd(obs, fn) {
                return new (obs._ofSameType(S$26, P$22))(obs,{
                    fn: fn
                });
            }

            var mixin$20 = {
                _init: function(_ref) {
                    var min = _ref.min
                      , max = _ref.max;

                    this._max = max;
                    this._min = min;
                    this._buff = [];
                },
                _free: function() {
                    this._buff = null;
                },
                _handleValue: function(x) {
                    this._buff = slide(this._buff, x, this._max);
                    if (this._buff.length >= this._min) {
                        this._emitValue(this._buff);
                    }
                }
            };

            var S$27 = createStream('slidingWindow', mixin$20);
            var P$23 = createProperty('slidingWindow', mixin$20);

            function slidingWindow(obs, max) {
                var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

                return new (obs._ofSameType(S$27, P$23))(obs,{
                    min: min,
                    max: max
                });
            }

            var mixin$21 = {
                _init: function(_ref) {
                    var fn = _ref.fn
                      , flushOnEnd = _ref.flushOnEnd;

                    this._fn = fn;
                    this._flushOnEnd = flushOnEnd;
                    this._buff = [];
                },
                _free: function() {
                    this._buff = null;
                },
                _flush: function() {
                    if (this._buff !== null && this._buff.length !== 0) {
                        this._emitValue(this._buff);
                        this._buff = [];
                    }
                },
                _handleValue: function(x) {
                    this._buff.push(x);
                    var fn = this._fn;
                    if (!fn(x)) {
                        this._flush();
                    }
                },
                _handleEnd: function() {
                    if (this._flushOnEnd) {
                        this._flush();
                    }
                    this._emitEnd();
                }
            };

            var S$28 = createStream('bufferWhile', mixin$21);
            var P$24 = createProperty('bufferWhile', mixin$21);

            var id$7 = function(x) {
                return x;
            };

            function bufferWhile(obs, fn) {
                var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
                  , _ref2$flushOnEnd = _ref2.flushOnEnd
                  , flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

                return new (obs._ofSameType(S$28, P$24))(obs,{
                    fn: fn || id$7,
                    flushOnEnd: flushOnEnd
                });
            }

            var mixin$22 = {
                _init: function(_ref) {
                    var count = _ref.count
                      , flushOnEnd = _ref.flushOnEnd;

                    this._count = count;
                    this._flushOnEnd = flushOnEnd;
                    this._buff = [];
                },
                _free: function() {
                    this._buff = null;
                },
                _flush: function() {
                    if (this._buff !== null && this._buff.length !== 0) {
                        this._emitValue(this._buff);
                        this._buff = [];
                    }
                },
                _handleValue: function(x) {
                    this._buff.push(x);
                    if (this._buff.length >= this._count) {
                        this._flush();
                    }
                },
                _handleEnd: function() {
                    if (this._flushOnEnd) {
                        this._flush();
                    }
                    this._emitEnd();
                }
            };

            var S$29 = createStream('bufferWithCount', mixin$22);
            var P$25 = createProperty('bufferWithCount', mixin$22);

            function bufferWhile$1(obs, count) {
                var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
                  , _ref2$flushOnEnd = _ref2.flushOnEnd
                  , flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

                return new (obs._ofSameType(S$29, P$25))(obs,{
                    count: count,
                    flushOnEnd: flushOnEnd
                });
            }

            var mixin$23 = {
                _init: function(_ref) {
                    var _this = this;

                    var wait = _ref.wait
                      , count = _ref.count
                      , flushOnEnd = _ref.flushOnEnd;

                    this._wait = wait;
                    this._count = count;
                    this._flushOnEnd = flushOnEnd;
                    this._intervalId = null;
                    this._$onTick = function() {
                        return _this._flush();
                    }
                    ;
                    this._buff = [];
                },
                _free: function() {
                    this._$onTick = null;
                    this._buff = null;
                },
                _flush: function() {
                    if (this._buff !== null) {
                        this._emitValue(this._buff);
                        this._buff = [];
                    }
                },
                _handleValue: function(x) {
                    this._buff.push(x);
                    if (this._buff.length >= this._count) {
                        clearInterval(this._intervalId);
                        this._flush();
                        this._intervalId = setInterval(this._$onTick, this._wait);
                    }
                },
                _handleEnd: function() {
                    if (this._flushOnEnd && this._buff.length !== 0) {
                        this._flush();
                    }
                    this._emitEnd();
                },
                _onActivation: function() {
                    this._intervalId = setInterval(this._$onTick, this._wait);
                    this._source.onAny(this._$handleAny);
                    // copied from patterns/one-source
                },
                _onDeactivation: function() {
                    if (this._intervalId !== null) {
                        clearInterval(this._intervalId);
                        this._intervalId = null;
                    }
                    this._source.offAny(this._$handleAny);
                    // copied from patterns/one-source
                }
            };

            var S$30 = createStream('bufferWithTimeOrCount', mixin$23);
            var P$26 = createProperty('bufferWithTimeOrCount', mixin$23);

            function bufferWithTimeOrCount(obs, wait, count) {
                var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {}
                  , _ref2$flushOnEnd = _ref2.flushOnEnd
                  , flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

                return new (obs._ofSameType(S$30, P$26))(obs,{
                    wait: wait,
                    count: count,
                    flushOnEnd: flushOnEnd
                });
            }

            function xformForObs(obs) {
                return {
                    '@@transducer/step': function(res, input) {
                        obs._emitValue(input);
                        return null;
                    },
                    '@@transducer/result': function() {
                        obs._emitEnd();
                        return null;
                    }
                };
            }

            var mixin$24 = {
                _init: function(_ref) {
                    var transducer = _ref.transducer;

                    this._xform = transducer(xformForObs(this));
                },
                _free: function() {
                    this._xform = null;
                },
                _handleValue: function(x) {
                    if (this._xform['@@transducer/step'](null, x) !== null) {
                        this._xform['@@transducer/result'](null);
                    }
                },
                _handleEnd: function() {
                    this._xform['@@transducer/result'](null);
                }
            };

            var S$31 = createStream('transduce', mixin$24);
            var P$27 = createProperty('transduce', mixin$24);

            function transduce(obs, transducer) {
                return new (obs._ofSameType(S$31, P$27))(obs,{
                    transducer: transducer
                });
            }

            var mixin$25 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._handler = fn;
                    this._emitter = emitter(this);
                },
                _free: function() {
                    this._handler = null;
                    this._emitter = null;
                },
                _handleAny: function(event) {
                    this._handler(this._emitter, event);
                }
            };

            var S$32 = createStream('withHandler', mixin$25);
            var P$28 = createProperty('withHandler', mixin$25);

            function withHandler(obs, fn) {
                return new (obs._ofSameType(S$32, P$28))(obs,{
                    fn: fn
                });
            }

            var isArray = Array.isArray || function(xs) {
                return Object.prototype.toString.call(xs) === '[object Array]';
            }
            ;

            function Zip(sources, combinator) {
                var _this = this;

                Stream.call(this);

                this._buffers = map(sources, function(source) {
                    return isArray(source) ? cloneArray(source) : [];
                });
                this._sources = map(sources, function(source) {
                    return isArray(source) ? never() : source;
                });

                this._combinator = combinator ? spread(combinator, this._sources.length) : function(x) {
                    return x;
                }
                ;
                this._aliveCount = 0;

                this._$handlers = [];

                var _loop = function(i) {
                    _this._$handlers.push(function(event) {
                        return _this._handleAny(i, event);
                    });
                };

                for (var i = 0; i < this._sources.length; i++) {
                    _loop(i);
                }
            }

            inherit(Zip, Stream, {
                _name: 'zip',

                _onActivation: function() {
                    // if all sources are arrays
                    while (this._isFull()) {
                        this._emit();
                    }

                    var length = this._sources.length;
                    this._aliveCount = length;
                    for (var i = 0; i < length && this._active; i++) {
                        this._sources[i].onAny(this._$handlers[i]);
                    }
                },
                _onDeactivation: function() {
                    for (var i = 0; i < this._sources.length; i++) {
                        this._sources[i].offAny(this._$handlers[i]);
                    }
                },
                _emit: function() {
                    var values = new Array(this._buffers.length);
                    for (var i = 0; i < this._buffers.length; i++) {
                        values[i] = this._buffers[i].shift();
                    }
                    var combinator = this._combinator;
                    this._emitValue(combinator(values));
                },
                _isFull: function() {
                    for (var i = 0; i < this._buffers.length; i++) {
                        if (this._buffers[i].length === 0) {
                            return false;
                        }
                    }
                    return true;
                },
                _handleAny: function(i, event) {
                    if (event.type === VALUE) {
                        this._buffers[i].push(event.value);
                        if (this._isFull()) {
                            this._emit();
                        }
                    }
                    if (event.type === ERROR) {
                        this._emitError(event.value);
                    }
                    if (event.type === END) {
                        this._aliveCount--;
                        if (this._aliveCount === 0) {
                            this._emitEnd();
                        }
                    }
                },
                _clear: function() {
                    Stream.prototype._clear.call(this);
                    this._sources = null;
                    this._buffers = null;
                    this._combinator = null;
                    this._$handlers = null;
                }
            });

            function zip(observables, combinator /* Function | falsey */
            ) {
                return observables.length === 0 ? never() : new Zip(observables,combinator);
            }

            var id$8 = function(x) {
                return x;
            };

            function AbstractPool() {
                var _this = this;

                var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
                  , _ref$queueLim = _ref.queueLim
                  , queueLim = _ref$queueLim === undefined ? 0 : _ref$queueLim
                  , _ref$concurLim = _ref.concurLim
                  , concurLim = _ref$concurLim === undefined ? -1 : _ref$concurLim
                  , _ref$drop = _ref.drop
                  , drop = _ref$drop === undefined ? 'new' : _ref$drop;

                Stream.call(this);

                this._queueLim = queueLim < 0 ? -1 : queueLim;
                this._concurLim = concurLim < 0 ? -1 : concurLim;
                this._drop = drop;
                this._queue = [];
                this._curSources = [];
                this._$handleSubAny = function(event) {
                    return _this._handleSubAny(event);
                }
                ;
                this._$endHandlers = [];
                this._currentlyAdding = null;

                if (this._concurLim === 0) {
                    this._emitEnd();
                }
            }

            inherit(AbstractPool, Stream, {
                _name: 'abstractPool',

                _add: function(obj, toObs /* Function | falsey */
                ) {
                    toObs = toObs || id$8;
                    if (this._concurLim === -1 || this._curSources.length < this._concurLim) {
                        this._addToCur(toObs(obj));
                    } else {
                        if (this._queueLim === -1 || this._queue.length < this._queueLim) {
                            this._addToQueue(toObs(obj));
                        } else if (this._drop === 'old') {
                            this._removeOldest();
                            this._add(obj, toObs);
                        }
                    }
                },
                _addAll: function(obss) {
                    var _this2 = this;

                    forEach(obss, function(obs) {
                        return _this2._add(obs);
                    });
                },
                _remove: function(obs) {
                    if (this._removeCur(obs) === -1) {
                        this._removeQueue(obs);
                    }
                },
                _addToQueue: function(obs) {
                    this._queue = concat(this._queue, [obs]);
                },
                _addToCur: function(obs) {
                    if (this._active) {
                        // HACK:
                        //
                        // We have two optimizations for cases when `obs` is ended. We don't want
                        // to add such observable to the list, but only want to emit events
                        // from it (if it has some).
                        //
                        // Instead of this hacks, we could just did following,
                        // but it would be 5-8 times slower:
                        //
                        //     this._curSources = concat(this._curSources, [obs]);
                        //     this._subscribe(obs);
                        //

                        // #1
                        // This one for cases when `obs` already ended
                        // e.g., Kefir.constant() or Kefir.never()
                        if (!obs._alive) {
                            if (obs._currentEvent) {
                                this._emit(obs._currentEvent.type, obs._currentEvent.value);
                            }
                            // The _emit above could have caused this stream to end.
                            if (this._active) {
                                if (this._queue.length !== 0) {
                                    this._pullQueue();
                                } else if (this._curSources.length === 0) {
                                    this._onEmpty();
                                }
                            }
                            return;
                        }

                        // #2
                        // This one is for cases when `obs` going to end synchronously on
                        // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})
                        this._currentlyAdding = obs;
                        obs.onAny(this._$handleSubAny);
                        this._currentlyAdding = null;
                        if (obs._alive) {
                            this._curSources = concat(this._curSources, [obs]);
                            if (this._active) {
                                this._subToEnd(obs);
                            }
                        }
                    } else {
                        this._curSources = concat(this._curSources, [obs]);
                    }
                },
                _subToEnd: function(obs) {
                    var _this3 = this;

                    var onEnd = function() {
                        return _this3._removeCur(obs);
                    };
                    this._$endHandlers.push({
                        obs: obs,
                        handler: onEnd
                    });
                    obs.onEnd(onEnd);
                },
                _subscribe: function(obs) {
                    obs.onAny(this._$handleSubAny);

                    // it can become inactive in responce of subscribing to `obs.onAny` above
                    if (this._active) {
                        this._subToEnd(obs);
                    }
                },
                _unsubscribe: function(obs) {
                    obs.offAny(this._$handleSubAny);

                    var onEndI = findByPred(this._$endHandlers, function(obj) {
                        return obj.obs === obs;
                    });
                    if (onEndI !== -1) {
                        obs.offEnd(this._$endHandlers[onEndI].handler);
                        this._$endHandlers.splice(onEndI, 1);
                    }
                },
                _handleSubAny: function(event) {
                    if (event.type === VALUE) {
                        this._emitValue(event.value);
                    } else if (event.type === ERROR) {
                        this._emitError(event.value);
                    }
                },
                _removeQueue: function(obs) {
                    var index = find(this._queue, obs);
                    this._queue = remove(this._queue, index);
                    return index;
                },
                _removeCur: function(obs) {
                    if (this._active) {
                        this._unsubscribe(obs);
                    }
                    var index = find(this._curSources, obs);
                    this._curSources = remove(this._curSources, index);
                    if (index !== -1) {
                        if (this._queue.length !== 0) {
                            this._pullQueue();
                        } else if (this._curSources.length === 0) {
                            this._onEmpty();
                        }
                    }
                    return index;
                },
                _removeOldest: function() {
                    this._removeCur(this._curSources[0]);
                },
                _pullQueue: function() {
                    if (this._queue.length !== 0) {
                        this._queue = cloneArray(this._queue);
                        this._addToCur(this._queue.shift());
                    }
                },
                _onActivation: function() {
                    for (var i = 0, sources = this._curSources; i < sources.length && this._active; i++) {
                        this._subscribe(sources[i]);
                    }
                },
                _onDeactivation: function() {
                    for (var i = 0, sources = this._curSources; i < sources.length; i++) {
                        this._unsubscribe(sources[i]);
                    }
                    if (this._currentlyAdding !== null) {
                        this._unsubscribe(this._currentlyAdding);
                    }
                },
                _isEmpty: function() {
                    return this._curSources.length === 0;
                },
                _onEmpty: function() {},
                _clear: function() {
                    Stream.prototype._clear.call(this);
                    this._queue = null;
                    this._curSources = null;
                    this._$handleSubAny = null;
                    this._$endHandlers = null;
                }
            });

            function Merge(sources) {
                AbstractPool.call(this);
                this._addAll(sources);
                this._initialised = true;
            }

            inherit(Merge, AbstractPool, {
                _name: 'merge',

                _onEmpty: function() {
                    if (this._initialised) {
                        this._emitEnd();
                    }
                }
            });

            function merge(observables) {
                return observables.length === 0 ? never() : new Merge(observables);
            }

            function S$33(generator) {
                var _this = this;

                Stream.call(this);
                this._generator = generator;
                this._source = null;
                this._inLoop = false;
                this._iteration = 0;
                this._$handleAny = function(event) {
                    return _this._handleAny(event);
                }
                ;
            }

            inherit(S$33, Stream, {
                _name: 'repeat',

                _handleAny: function(event) {
                    if (event.type === END) {
                        this._source = null;
                        this._getSource();
                    } else {
                        this._emit(event.type, event.value);
                    }
                },
                _getSource: function() {
                    if (!this._inLoop) {
                        this._inLoop = true;
                        var generator = this._generator;
                        while (this._source === null && this._alive && this._active) {
                            this._source = generator(this._iteration++);
                            if (this._source) {
                                this._source.onAny(this._$handleAny);
                            } else {
                                this._emitEnd();
                            }
                        }
                        this._inLoop = false;
                    }
                },
                _onActivation: function() {
                    if (this._source) {
                        this._source.onAny(this._$handleAny);
                    } else {
                        this._getSource();
                    }
                },
                _onDeactivation: function() {
                    if (this._source) {
                        this._source.offAny(this._$handleAny);
                    }
                },
                _clear: function() {
                    Stream.prototype._clear.call(this);
                    this._generator = null;
                    this._source = null;
                    this._$handleAny = null;
                }
            });

            var repeat = function(generator) {
                return new S$33(generator);
            };

            function concat$1(observables) {
                return repeat(function(index) {
                    return observables.length > index ? observables[index] : false;
                }).setName('concat');
            }

            function Pool() {
                AbstractPool.call(this);
            }

            inherit(Pool, AbstractPool, {
                _name: 'pool',

                plug: function(obs) {
                    this._add(obs);
                    return this;
                },
                unplug: function(obs) {
                    this._remove(obs);
                    return this;
                }
            });

            function FlatMap(source, fn, options) {
                var _this = this;

                AbstractPool.call(this, options);
                this._source = source;
                this._fn = fn;
                this._mainEnded = false;
                this._lastCurrent = null;
                this._$handleMain = function(event) {
                    return _this._handleMain(event);
                }
                ;
            }

            inherit(FlatMap, AbstractPool, {
                _onActivation: function() {
                    AbstractPool.prototype._onActivation.call(this);
                    if (this._active) {
                        this._source.onAny(this._$handleMain);
                    }
                },
                _onDeactivation: function() {
                    AbstractPool.prototype._onDeactivation.call(this);
                    this._source.offAny(this._$handleMain);
                    this._hadNoEvSinceDeact = true;
                },
                _handleMain: function(event) {
                    if (event.type === VALUE) {
                        // Is latest value before deactivation survived, and now is 'current' on this activation?
                        // We don't want to handle such values, to prevent to constantly add
                        // same observale on each activation/deactivation when our main source
                        // is a `Kefir.conatant()` for example.
                        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;
                        if (!sameCurr) {
                            this._add(event.value, this._fn);
                        }
                        this._lastCurrent = event.value;
                        this._hadNoEvSinceDeact = false;
                    }

                    if (event.type === ERROR) {
                        this._emitError(event.value);
                    }

                    if (event.type === END) {
                        if (this._isEmpty()) {
                            this._emitEnd();
                        } else {
                            this._mainEnded = true;
                        }
                    }
                },
                _onEmpty: function() {
                    if (this._mainEnded) {
                        this._emitEnd();
                    }
                },
                _clear: function() {
                    AbstractPool.prototype._clear.call(this);
                    this._source = null;
                    this._lastCurrent = null;
                    this._$handleMain = null;
                }
            });

            function FlatMapErrors(source, fn) {
                FlatMap.call(this, source, fn);
            }

            inherit(FlatMapErrors, FlatMap, {
                // Same as in FlatMap, only VALUE/ERROR flipped
                _handleMain: function(event) {
                    if (event.type === ERROR) {
                        var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;
                        if (!sameCurr) {
                            this._add(event.value, this._fn);
                        }
                        this._lastCurrent = event.value;
                        this._hadNoEvSinceDeact = false;
                    }

                    if (event.type === VALUE) {
                        this._emitValue(event.value);
                    }

                    if (event.type === END) {
                        if (this._isEmpty()) {
                            this._emitEnd();
                        } else {
                            this._mainEnded = true;
                        }
                    }
                }
            });

            function createConstructor$1(BaseClass, name) {
                return function AnonymousObservable(primary, secondary, options) {
                    var _this = this;

                    BaseClass.call(this);
                    this._primary = primary;
                    this._secondary = secondary;
                    this._name = primary._name + '.' + name;
                    this._lastSecondary = NOTHING;
                    this._$handleSecondaryAny = function(event) {
                        return _this._handleSecondaryAny(event);
                    }
                    ;
                    this._$handlePrimaryAny = function(event) {
                        return _this._handlePrimaryAny(event);
                    }
                    ;
                    this._init(options);
                }
                ;
            }

            function createClassMethods$1(BaseClass) {
                return {
                    _init: function() {},
                    _free: function() {},
                    _handlePrimaryValue: function(x) {
                        this._emitValue(x);
                    },
                    _handlePrimaryError: function(x) {
                        this._emitError(x);
                    },
                    _handlePrimaryEnd: function() {
                        this._emitEnd();
                    },
                    _handleSecondaryValue: function(x) {
                        this._lastSecondary = x;
                    },
                    _handleSecondaryError: function(x) {
                        this._emitError(x);
                    },
                    _handleSecondaryEnd: function() {},
                    _handlePrimaryAny: function(event) {
                        switch (event.type) {
                        case VALUE:
                            return this._handlePrimaryValue(event.value);
                        case ERROR:
                            return this._handlePrimaryError(event.value);
                        case END:
                            return this._handlePrimaryEnd(event.value);
                        }
                    },
                    _handleSecondaryAny: function(event) {
                        switch (event.type) {
                        case VALUE:
                            return this._handleSecondaryValue(event.value);
                        case ERROR:
                            return this._handleSecondaryError(event.value);
                        case END:
                            this._handleSecondaryEnd(event.value);
                            this._removeSecondary();
                        }
                    },
                    _removeSecondary: function() {
                        if (this._secondary !== null) {
                            this._secondary.offAny(this._$handleSecondaryAny);
                            this._$handleSecondaryAny = null;
                            this._secondary = null;
                        }
                    },
                    _onActivation: function() {
                        if (this._secondary !== null) {
                            this._secondary.onAny(this._$handleSecondaryAny);
                        }
                        if (this._active) {
                            this._primary.onAny(this._$handlePrimaryAny);
                        }
                    },
                    _onDeactivation: function() {
                        if (this._secondary !== null) {
                            this._secondary.offAny(this._$handleSecondaryAny);
                        }
                        this._primary.offAny(this._$handlePrimaryAny);
                    },
                    _clear: function() {
                        BaseClass.prototype._clear.call(this);
                        this._primary = null;
                        this._secondary = null;
                        this._lastSecondary = null;
                        this._$handleSecondaryAny = null;
                        this._$handlePrimaryAny = null;
                        this._free();
                    }
                };
            }

            function createStream$1(name, mixin) {
                var S = createConstructor$1(Stream, name);
                inherit(S, Stream, createClassMethods$1(Stream), mixin);
                return S;
            }

            function createProperty$1(name, mixin) {
                var P = createConstructor$1(Property, name);
                inherit(P, Property, createClassMethods$1(Property), mixin);
                return P;
            }

            var mixin$26 = {
                _handlePrimaryValue: function(x) {
                    if (this._lastSecondary !== NOTHING && this._lastSecondary) {
                        this._emitValue(x);
                    }
                },
                _handleSecondaryEnd: function() {
                    if (this._lastSecondary === NOTHING || !this._lastSecondary) {
                        this._emitEnd();
                    }
                }
            };

            var S$34 = createStream$1('filterBy', mixin$26);
            var P$29 = createProperty$1('filterBy', mixin$26);

            function filterBy(primary, secondary) {
                return new (primary._ofSameType(S$34, P$29))(primary,secondary);
            }

            var id2 = function(_, x) {
                return x;
            };

            function sampledBy(passive, active, combinator) {
                var _combinator = combinator ? function(a, b) {
                    return combinator(b, a);
                }
                : id2;
                return combine([active], [passive], _combinator).setName(passive, 'sampledBy');
            }

            var mixin$27 = {
                _handlePrimaryValue: function(x) {
                    if (this._lastSecondary !== NOTHING) {
                        this._emitValue(x);
                    }
                },
                _handleSecondaryEnd: function() {
                    if (this._lastSecondary === NOTHING) {
                        this._emitEnd();
                    }
                }
            };

            var S$35 = createStream$1('skipUntilBy', mixin$27);
            var P$30 = createProperty$1('skipUntilBy', mixin$27);

            function skipUntilBy(primary, secondary) {
                return new (primary._ofSameType(S$35, P$30))(primary,secondary);
            }

            var mixin$28 = {
                _handleSecondaryValue: function() {
                    this._emitEnd();
                }
            };

            var S$36 = createStream$1('takeUntilBy', mixin$28);
            var P$31 = createProperty$1('takeUntilBy', mixin$28);

            function takeUntilBy(primary, secondary) {
                return new (primary._ofSameType(S$36, P$31))(primary,secondary);
            }

            var mixin$29 = {
                _init: function() {
                    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
                      , _ref$flushOnEnd = _ref.flushOnEnd
                      , flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;

                    this._buff = [];
                    this._flushOnEnd = flushOnEnd;
                },
                _free: function() {
                    this._buff = null;
                },
                _flush: function() {
                    if (this._buff !== null) {
                        this._emitValue(this._buff);
                        this._buff = [];
                    }
                },
                _handlePrimaryEnd: function() {
                    if (this._flushOnEnd) {
                        this._flush();
                    }
                    this._emitEnd();
                },
                _onActivation: function() {
                    this._primary.onAny(this._$handlePrimaryAny);
                    if (this._alive && this._secondary !== null) {
                        this._secondary.onAny(this._$handleSecondaryAny);
                    }
                },
                _handlePrimaryValue: function(x) {
                    this._buff.push(x);
                },
                _handleSecondaryValue: function() {
                    this._flush();
                },
                _handleSecondaryEnd: function() {
                    if (!this._flushOnEnd) {
                        this._emitEnd();
                    }
                }
            };

            var S$37 = createStream$1('bufferBy', mixin$29);
            var P$32 = createProperty$1('bufferBy', mixin$29);

            function bufferBy(primary, secondary, options /* optional */
            ) {
                return new (primary._ofSameType(S$37, P$32))(primary,secondary,options);
            }

            var mixin$30 = {
                _init: function() {
                    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
                      , _ref$flushOnEnd = _ref.flushOnEnd
                      , flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd
                      , _ref$flushOnChange = _ref.flushOnChange
                      , flushOnChange = _ref$flushOnChange === undefined ? false : _ref$flushOnChange;

                    this._buff = [];
                    this._flushOnEnd = flushOnEnd;
                    this._flushOnChange = flushOnChange;
                },
                _free: function() {
                    this._buff = null;
                },
                _flush: function() {
                    if (this._buff !== null) {
                        this._emitValue(this._buff);
                        this._buff = [];
                    }
                },
                _handlePrimaryEnd: function() {
                    if (this._flushOnEnd) {
                        this._flush();
                    }
                    this._emitEnd();
                },
                _handlePrimaryValue: function(x) {
                    this._buff.push(x);
                    if (this._lastSecondary !== NOTHING && !this._lastSecondary) {
                        this._flush();
                    }
                },
                _handleSecondaryEnd: function() {
                    if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {
                        this._emitEnd();
                    }
                },
                _handleSecondaryValue: function(x) {
                    if (this._flushOnChange && !x) {
                        this._flush();
                    }

                    // from default _handleSecondaryValue
                    this._lastSecondary = x;
                }
            };

            var S$38 = createStream$1('bufferWhileBy', mixin$30);
            var P$33 = createProperty$1('bufferWhileBy', mixin$30);

            function bufferWhileBy(primary, secondary, options /* optional */
            ) {
                return new (primary._ofSameType(S$38, P$33))(primary,secondary,options);
            }

            var f = function() {
                return false;
            };
            var t = function() {
                return true;
            };

            function awaiting(a, b) {
                var result = merge([map$1(a, t), map$1(b, f)]);
                result = skipDuplicates(result);
                result = toProperty(result, f);
                return result.setName(a, 'awaiting');
            }

            var mixin$31 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleValue: function(x) {
                    var fn = this._fn;
                    var result = fn(x);
                    if (result.convert) {
                        this._emitError(result.error);
                    } else {
                        this._emitValue(x);
                    }
                }
            };

            var S$39 = createStream('valuesToErrors', mixin$31);
            var P$34 = createProperty('valuesToErrors', mixin$31);

            var defFn = function(x) {
                return {
                    convert: true,
                    error: x
                };
            };

            function valuesToErrors(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defFn;

                return new (obs._ofSameType(S$39, P$34))(obs,{
                    fn: fn
                });
            }

            var mixin$32 = {
                _init: function(_ref) {
                    var fn = _ref.fn;

                    this._fn = fn;
                },
                _free: function() {
                    this._fn = null;
                },
                _handleError: function(x) {
                    var fn = this._fn;
                    var result = fn(x);
                    if (result.convert) {
                        this._emitValue(result.value);
                    } else {
                        this._emitError(x);
                    }
                }
            };

            var S$40 = createStream('errorsToValues', mixin$32);
            var P$35 = createProperty('errorsToValues', mixin$32);

            var defFn$1 = function(x) {
                return {
                    convert: true,
                    value: x
                };
            };

            function errorsToValues(obs) {
                var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defFn$1;

                return new (obs._ofSameType(S$40, P$35))(obs,{
                    fn: fn
                });
            }

            var mixin$33 = {
                _handleError: function(x) {
                    this._emitError(x);
                    this._emitEnd();
                }
            };

            var S$41 = createStream('endOnError', mixin$33);
            var P$36 = createProperty('endOnError', mixin$33);

            function endOnError(obs) {
                return new (obs._ofSameType(S$41, P$36))(obs);
            }

            // Create a stream
            // -----------------------------------------------------------------------------

            // () -> Stream
            // (number, any) -> Stream
            // (number, any) -> Stream
            // (number, Array<any>) -> Stream
            // (number, Function) -> Stream
            // (number, Function) -> Stream
            // (Function) -> Stream
            // (Function) -> Stream
            // Target = {addEventListener, removeEventListener}|{addListener, removeListener}|{on, off}
            // (Target, string, Function|undefined) -> Stream
            // (Function) -> Stream
            // Create a property
            // -----------------------------------------------------------------------------

            // (any) -> Property
            // (any) -> Property
            // Convert observables
            // -----------------------------------------------------------------------------

            // (Stream|Property, Function|undefined) -> Property
            Observable.prototype.toProperty = function(fn) {
                return toProperty(this, fn);
            }
            ;

            // (Stream|Property) -> Stream
            Observable.prototype.changes = function() {
                return changes(this);
            }
            ;

            // Interoperation with other implimentations
            // -----------------------------------------------------------------------------

            // (Promise) -> Property
            // (Stream|Property, Function|undefined) -> Promise
            Observable.prototype.toPromise = function(Promise) {
                return toPromise(this, Promise);
            }
            ;

            // (ESObservable) -> Stream
            // (Stream|Property) -> ES7 Observable
            Observable.prototype.toESObservable = toESObservable;
            Observable.prototype[$$observable] = toESObservable;

            // Modify an observable
            // -----------------------------------------------------------------------------

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.map = function(fn) {
                return map$1(this, fn);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.filter = function(fn) {
                return filter(this, fn);
            }
            ;

            // (Stream, number) -> Stream
            // (Property, number) -> Property
            Observable.prototype.take = function(n) {
                return take(this, n);
            }
            ;

            // (Stream, number) -> Stream
            // (Property, number) -> Property
            Observable.prototype.takeErrors = function(n) {
                return takeErrors(this, n);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.takeWhile = function(fn) {
                return takeWhile(this, fn);
            }
            ;

            // (Stream) -> Stream
            // (Property) -> Property
            Observable.prototype.last = function() {
                return last(this);
            }
            ;

            // (Stream, number) -> Stream
            // (Property, number) -> Property
            Observable.prototype.skip = function(n) {
                return skip(this, n);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.skipWhile = function(fn) {
                return skipWhile(this, fn);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.skipDuplicates = function(fn) {
                return skipDuplicates(this, fn);
            }
            ;

            // (Stream, Function|falsey, any|undefined) -> Stream
            // (Property, Function|falsey, any|undefined) -> Property
            Observable.prototype.diff = function(fn, seed) {
                return diff(this, fn, seed);
            }
            ;

            // (Stream|Property, Function, any|undefined) -> Property
            Observable.prototype.scan = function(fn, seed) {
                return scan(this, fn, seed);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.flatten = function(fn) {
                return flatten(this, fn);
            }
            ;

            // (Stream, number) -> Stream
            // (Property, number) -> Property
            Observable.prototype.delay = function(wait) {
                return delay(this, wait);
            }
            ;

            // Options = {leading: boolean|undefined, trailing: boolean|undefined}
            // (Stream, number, Options|undefined) -> Stream
            // (Property, number, Options|undefined) -> Property
            Observable.prototype.throttle = function(wait, options) {
                return throttle(this, wait, options);
            }
            ;

            // Options = {immediate: boolean|undefined}
            // (Stream, number, Options|undefined) -> Stream
            // (Property, number, Options|undefined) -> Property
            Observable.prototype.debounce = function(wait, options) {
                return debounce(this, wait, options);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.mapErrors = function(fn) {
                return mapErrors(this, fn);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.filterErrors = function(fn) {
                return filterErrors(this, fn);
            }
            ;

            // (Stream) -> Stream
            // (Property) -> Property
            Observable.prototype.ignoreValues = function() {
                return ignoreValues(this);
            }
            ;

            // (Stream) -> Stream
            // (Property) -> Property
            Observable.prototype.ignoreErrors = function() {
                return ignoreErrors(this);
            }
            ;

            // (Stream) -> Stream
            // (Property) -> Property
            Observable.prototype.ignoreEnd = function() {
                return ignoreEnd(this);
            }
            ;

            // (Stream, Function) -> Stream
            // (Property, Function) -> Property
            Observable.prototype.beforeEnd = function(fn) {
                return beforeEnd(this, fn);
            }
            ;

            // (Stream, number, number|undefined) -> Stream
            // (Property, number, number|undefined) -> Property
            Observable.prototype.slidingWindow = function(max, min) {
                return slidingWindow(this, max, min);
            }
            ;

            // Options = {flushOnEnd: boolean|undefined}
            // (Stream, Function|falsey, Options|undefined) -> Stream
            // (Property, Function|falsey, Options|undefined) -> Property
            Observable.prototype.bufferWhile = function(fn, options) {
                return bufferWhile(this, fn, options);
            }
            ;

            // (Stream, number) -> Stream
            // (Property, number) -> Property
            Observable.prototype.bufferWithCount = function(count, options) {
                return bufferWhile$1(this, count, options);
            }
            ;

            // Options = {flushOnEnd: boolean|undefined}
            // (Stream, number, number, Options|undefined) -> Stream
            // (Property, number, number, Options|undefined) -> Property
            Observable.prototype.bufferWithTimeOrCount = function(wait, count, options) {
                return bufferWithTimeOrCount(this, wait, count, options);
            }
            ;

            // (Stream, Function) -> Stream
            // (Property, Function) -> Property
            Observable.prototype.transduce = function(transducer) {
                return transduce(this, transducer);
            }
            ;

            // (Stream, Function) -> Stream
            // (Property, Function) -> Property
            Observable.prototype.withHandler = function(fn) {
                return withHandler(this, fn);
            }
            ;

            // (Stream, Stream -> a) -> a
            // (Property, Property -> a) -> a
            Observable.prototype.thru = function(fn) {
                return fn(this);
            }
            ;

            // Combine observables
            // -----------------------------------------------------------------------------

            // (Array<Stream|Property>, Function|undefiend) -> Stream
            // (Array<Stream|Property>, Array<Stream|Property>, Function|undefiend) -> Stream
            Observable.prototype.combine = function(other, combinator) {
                return combine([this, other], combinator);
            }
            ;

            // (Array<Stream|Property>, Function|undefiend) -> Stream
            Observable.prototype.zip = function(other, combinator) {
                return zip([this, other], combinator);
            }
            ;

            // (Array<Stream|Property>) -> Stream
            Observable.prototype.merge = function(other) {
                return merge([this, other]);
            }
            ;

            // (Array<Stream|Property>) -> Stream
            Observable.prototype.concat = function(other) {
                return concat$1([this, other]);
            }
            ;

            // () -> Pool
            var pool = function() {
                return new Pool();
            };

            // (Function) -> Stream
            // Options = {concurLim: number|undefined, queueLim: number|undefined, drop: 'old'|'new'|undefiend}
            // (Stream|Property, Function|falsey, Options|undefined) -> Stream
            Observable.prototype.flatMap = function(fn) {
                return new FlatMap(this,fn).setName(this, 'flatMap');
            }
            ;
            Observable.prototype.flatMapLatest = function(fn) {
                return new FlatMap(this,fn,{
                    concurLim: 1,
                    drop: 'old'
                }).setName(this, 'flatMapLatest');
            }
            ;
            Observable.prototype.flatMapFirst = function(fn) {
                return new FlatMap(this,fn,{
                    concurLim: 1
                }).setName(this, 'flatMapFirst');
            }
            ;
            Observable.prototype.flatMapConcat = function(fn) {
                return new FlatMap(this,fn,{
                    queueLim: -1,
                    concurLim: 1
                }).setName(this, 'flatMapConcat');
            }
            ;
            Observable.prototype.flatMapConcurLimit = function(fn, limit) {
                return new FlatMap(this,fn,{
                    queueLim: -1,
                    concurLim: limit
                }).setName(this, 'flatMapConcurLimit');
            }
            ;

            // (Stream|Property, Function|falsey) -> Stream
            Observable.prototype.flatMapErrors = function(fn) {
                return new FlatMapErrors(this,fn).setName(this, 'flatMapErrors');
            }
            ;

            // Combine two observables
            // -----------------------------------------------------------------------------

            // (Stream, Stream|Property) -> Stream
            // (Property, Stream|Property) -> Property
            Observable.prototype.filterBy = function(other) {
                return filterBy(this, other);
            }
            ;

            // (Stream, Stream|Property, Function|undefiend) -> Stream
            // (Property, Stream|Property, Function|undefiend) -> Property
            Observable.prototype.sampledBy = function(other, combinator) {
                return sampledBy(this, other, combinator);
            }
            ;

            // (Stream, Stream|Property) -> Stream
            // (Property, Stream|Property) -> Property
            Observable.prototype.skipUntilBy = function(other) {
                return skipUntilBy(this, other);
            }
            ;

            // (Stream, Stream|Property) -> Stream
            // (Property, Stream|Property) -> Property
            Observable.prototype.takeUntilBy = function(other) {
                return takeUntilBy(this, other);
            }
            ;

            // Options = {flushOnEnd: boolean|undefined}
            // (Stream, Stream|Property, Options|undefined) -> Stream
            // (Property, Stream|Property, Options|undefined) -> Property
            Observable.prototype.bufferBy = function(other, options) {
                return bufferBy(this, other, options);
            }
            ;

            // Options = {flushOnEnd: boolean|undefined}
            // (Stream, Stream|Property, Options|undefined) -> Stream
            // (Property, Stream|Property, Options|undefined) -> Property
            Observable.prototype.bufferWhileBy = function(other, options) {
                return bufferWhileBy(this, other, options);
            }
            ;

            // Deprecated
            // -----------------------------------------------------------------------------

            var DEPRECATION_WARNINGS = true;
            function dissableDeprecationWarnings() {
                DEPRECATION_WARNINGS = false;
            }

            function warn(msg) {
                if (DEPRECATION_WARNINGS && console && typeof console.warn === 'function') {
                    var msg2 = '\nHere is an Error object for you containing the call stack:';
                    console.warn(msg, msg2, new Error());
                }
            }

            // (Stream|Property, Stream|Property) -> Property
            Observable.prototype.awaiting = function(other) {
                warn('You are using deprecated .awaiting() method, see https://github.com/kefirjs/kefir/issues/145');
                return awaiting(this, other);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.valuesToErrors = function(fn) {
                warn('You are using deprecated .valuesToErrors() method, see https://github.com/kefirjs/kefir/issues/149');
                return valuesToErrors(this, fn);
            }
            ;

            // (Stream, Function|undefined) -> Stream
            // (Property, Function|undefined) -> Property
            Observable.prototype.errorsToValues = function(fn) {
                warn('You are using deprecated .errorsToValues() method, see https://github.com/kefirjs/kefir/issues/149');
                return errorsToValues(this, fn);
            }
            ;

            // (Stream) -> Stream
            // (Property) -> Property
            Observable.prototype.endOnError = function() {
                warn('You are using deprecated .endOnError() method, see https://github.com/kefirjs/kefir/issues/150');
                return endOnError(this);
            }
            ;

            // Exports
            // --------------------------------------------------------------------------

            var Kefir = {
                Observable: Observable,
                Stream: Stream,
                Property: Property,
                never: never,
                later: later,
                interval: interval,
                sequentially: sequentially,
                fromPoll: fromPoll,
                withInterval: withInterval,
                fromCallback: fromCallback,
                fromNodeCallback: fromNodeCallback,
                fromEvents: fromEvents,
                stream: stream,
                constant: constant,
                constantError: constantError,
                fromPromise: fromPromise,
                fromESObservable: fromESObservable,
                combine: combine,
                zip: zip,
                merge: merge,
                concat: concat$1,
                Pool: Pool,
                pool: pool,
                repeat: repeat,
                staticLand: staticLand
            };

            Kefir.Kefir = Kefir;

            /* harmony default export */
            __webpack_exports__["default"] = (Kefir);

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 419 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const aria_1 = __webpack_require__(154);

        const css_1 = tslib_1.__importDefault(__webpack_require__(87));

        const find_1 = tslib_1.__importDefault(__webpack_require__(689));

        const findIndex_1 = tslib_1.__importDefault(__webpack_require__(120));

        const findLastIndex_1 = tslib_1.__importDefault(__webpack_require__(366));

        const data_1 = __webpack_require__(24);

        const effects_1 = __webpack_require__(62);

        const selectors_1 = __webpack_require__(41);
        /**
 * Categorizations based on client description and functionality.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element
 */

        const table = ['TABLE'];
        const image = ['IMAGE', 'IMG'];
        const listAndMenu = ['UL', 'OL', 'DL', 'MENU'];
        const listAndMenuItems = ['LI', 'DT', 'DD'];
        const menuItems = ['MENUITEM'];
        const elements = ['ADDRESS', 'ARTICLE', 'ASIDE', 'FOOTER', 'HEADER', 'HGROUP', 'MAIN', 'NAV', 'SECTION'];
        const headings = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];
        const tags = [...table, ...image, ...listAndMenu, ...listAndMenuItems, ...menuItems, ...elements, ...headings];
        const queryString = tags.join(', ');
        var KeyCodes;

        (function(KeyCodes) {
            KeyCodes[KeyCodes["T"] = 84] = "T";
            KeyCodes[KeyCodes["G"] = 71] = "G";
            KeyCodes[KeyCodes["L"] = 76] = "L";
            KeyCodes[KeyCodes["I"] = 73] = "I";
            KeyCodes[KeyCodes["F"] = 70] = "F";
            KeyCodes[KeyCodes["H"] = 72] = "H";
        }
        )(KeyCodes = exports.KeyCodes || (exports.KeyCodes = {}));

        const findMatchingIndexReverse = (nodeList,searchTags,focusedNodeIndex)=>{
            let matchIndex = findLastIndex_1.default(nodeList, node=>searchTags.includes(node.tagName), // Decrement search start by 1 to avoid matching same element
            focusedNodeIndex ? focusedNodeIndex - 1 : undefined);
            // If no match and current focus exists, search from beginning

            if (matchIndex === -1 && focusedNodeIndex) {
                matchIndex = findLastIndex_1.default(nodeList, node=>searchTags.includes(node.tagName));
            }

            return matchIndex;
        }
        ;

        const findMatchingIndex = (nodeList,searchTags,focusedNodeIndex)=>{
            let matchIndex = findIndex_1.default(nodeList, node=>searchTags.includes(node.tagName), // Increment search start by 1 to avoid matching same element
            focusedNodeIndex ? focusedNodeIndex + 1 : undefined);
            // If no match and current focus exists, search from beginning

            if (matchIndex === -1 && focusedNodeIndex) {
                matchIndex = findIndex_1.default(nodeList, node=>searchTags.includes(node.tagName));
            }

            return matchIndex;
        }
        ;

        function *changeFocus({searchTags, isReverse=false, focusedNode}) {
            // Current focus
            const currentlyFocusedNode = focusedNode ? focusedNode : aria_1.Aria.findFocusedNode();
            let currentlyFocusedNodeIndex = 0;
            const nodeList = document.querySelectorAll(queryString);

            if (!nodeList) {
                return;
            }
            // If exists, get index in full node list

            if (currentlyFocusedNode) {
                currentlyFocusedNodeIndex = findIndex_1.default(nodeList, node=>node === currentlyFocusedNode);
            }

            const matchIndex = isReverse ? findMatchingIndexReverse(nodeList, searchTags, currentlyFocusedNodeIndex) : findMatchingIndex(nodeList, searchTags, currentlyFocusedNodeIndex);
            // Either no match or only match already focused.

            if (matchIndex === -1 || matchIndex === currentlyFocusedNodeIndex) {
                // No match, do nothing
                return;
            }
            // Match found

            if (currentlyFocusedNode) {
                // Blur existing node
                aria_1.Aria.blurNode({
                    node: currentlyFocusedNode
                });
            }
            // Clear all leftover focused classes

            css_1.default.clearAllFocused();
            // Focus new node

            aria_1.Aria.focusNode({
                node: nodeList[matchIndex]
            });
            // Return for processing

            return nodeList[matchIndex];
        }

        exports.mapKeysToParams = [{
            key: 't',
            searchTags: table,
            isReverse: false
        }, {
            key: 'T',
            searchTags: table,
            isReverse: true
        }, {
            key: 'g',
            searchTags: image,
            isReverse: false
        }, {
            key: 'G',
            searchTags: image,
            isReverse: true
        }, {
            key: 'l',
            searchTags: listAndMenu,
            isReverse: false
        }, {
            key: 'L',
            searchTags: listAndMenu,
            isReverse: true
        }, {
            key: 'i',
            searchTags: listAndMenuItems,
            isReverse: false
        }, {
            key: 'I',
            searchTags: listAndMenuItems,
            isReverse: true
        }, {
            key: 'f',
            searchTags: elements,
            isReverse: false
        }, {
            key: 'F',
            searchTags: elements,
            isReverse: true
        }, {
            key: 'h',
            searchTags: headings,
            isReverse: false
        }, {
            key: 'H',
            searchTags: headings,
            isReverse: true
        }];

        function *handleKeyboardNavigation(e) {
            const state = yield effects_1.select();
            const selectors = new selectors_1.Selectors(state);
            const statePlugin = selectors.getPlugin(exports.pluginObject.id);
            const currentFocusedNode = selectors.getFocusedNode();

            if (!statePlugin.enabled) {
                return;
            }
            // Ensure no unexpected modifiers

            if (e.ctrlKey || e.altKey) {
                return;
            }

            const match = find_1.default(exports.mapKeysToParams, ['key', e.key]);

            if (!match) {
                return;
            }

            return yield changeFocus({
                focusedNode: currentFocusedNode,
                searchTags: match.searchTags,
                isReverse: match.isReverse
            });
        }

        exports.handleKeyboardNavigation = handleKeyboardNavigation;
        /**
 * Provides keyboard navigation capabilities for critical tags/sections of the DOM.
 *
 * Keystrokes
 * T – jump between tables
 * G – jump between images
 * L – jump between lists
 * I – jump through list & menu items
 * F – jump between elements (header, body, sections, etc)
 * H – jump between titles (headings)
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets
 * @type {PluginElementToggleable}
 */

        exports.pluginObject = {
            id: data_1.Ids.KeyboardNavigation,
            title: 'Keyboard Navigation',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: []
            }, {
                on: enum_1.PluginActionTypes.disable,
                // Remove all focus class assignments.
                func: [()=>css_1.default.clearAllFocused()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 420 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const forEach_1 = tslib_1.__importDefault(__webpack_require__(360));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        var DOMValueType;

        (function(DOMValueType) {
            DOMValueType["Attribute"] = "attribute";
            DOMValueType["Style"] = "style";
            DOMValueType["Property"] = "property";
        }
        )(DOMValueType || (DOMValueType = {}));

        exports.Data = {
            /**
   * Add data attributes to Nodes using original property value.
   */
            createOriginalDataAttribute: ({node, name, type})=>{
                if (node instanceof NodeList) {
                    forEach_1.default(node, nodeValue=>exports.Data.createOriginalDataAttribute({
                        node: nodeValue,
                        name,
                        type
                    }));
                    return;
                }

                if (Array.isArray(name)) {
                    forEach_1.default(name, nameValue=>exports.Data.createOriginalDataAttribute({
                        node,
                        name: nameValue,
                        type
                    }));
                    return;
                }

                const dataAttributeName = exports.Data.generateDataAttributeName({
                    name,
                    type
                });
                // Get value

                const value = utility_1.default.getNodeValue({
                    node,
                    name,
                    type
                });
                // Explicitly setting data attribute

                utility_1.default.setNodeValue({
                    node,
                    value,
                    type: DOMValueType.Attribute,
                    name: dataAttributeName
                });
            }
            ,

            /**
   * Get custom data attribute name for property.
   * @returns {string}
   */
            generateDataAttributeName({name, type}) {
                return `data-${config_1.default.widgetId}-original-${type.toString()}-${name}`;
            }

        };
        exports.default = exports.Data;

        /***/
    }
    ), /* 421 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const _1 = tslib_1.__importDefault(__webpack_require__(710));

        class TextNodeType extends _1.default {
            constructor() {
                super(...arguments);
                this.id = 'text-node-type';
                this.types = ['p', 'li', 'label', 'input', 'select', 'textarea', 'legend', 'code', 'pre', 'dd', 'dt', 'span', 'blockquote', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
            }

        }

        exports.default = TextNodeType;

        /***/
    }
    ), /* 422 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);
        var prop_types_default = /*#__PURE__*/
        __webpack_require__.n(prop_types);

        // CONCATENATED MODULE: ../node_modules/react-redux/es/components/Context.js

        var ReactReduxContext = compat_module["default"].createContext(null);
        /* harmony default export */
        var components_Context = (ReactReduxContext);
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/batch.js
        // Default to a dummy "batch" implementation that just runs the callback
        function defaultNoopBatch(callback) {
            callback();
        }

        var batch_batch = defaultNoopBatch;
        // Allow injecting another batching function later

        var setBatch = function setBatch(newBatch) {
            return batch_batch = newBatch;
        };
        // Supply a getter just to skip dealing with ESM bindings

        var getBatch = function getBatch() {
            return batch_batch;
        };
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/Subscription.js
        // encapsulates the subscription logic for connecting a component to the redux store, as
        // well as nesting subscriptions of descendant components, so that we can ensure the
        // ancestor components re-render before descendants

        var CLEARED = null;
        var nullListeners = {
            notify: function notify() {}
        };

        function createListenerCollection() {
            var batch = getBatch();
            // the current/next pattern is copied from redux's createStore code.
            // TODO: refactor+expose that code to be reusable here?

            var current = [];
            var next = [];
            return {
                clear: function clear() {
                    next = CLEARED;
                    current = CLEARED;
                },
                notify: function notify() {
                    var listeners = current = next;
                    batch(function() {
                        for (var i = 0; i < listeners.length; i++) {
                            listeners[i]();
                        }
                    });
                },
                get: function get() {
                    return next;
                },
                subscribe: function subscribe(listener) {
                    var isSubscribed = true;
                    if (next === current)
                        next = current.slice();
                    next.push(listener);
                    return function unsubscribe() {
                        if (!isSubscribed || current === CLEARED)
                            return;
                        isSubscribed = false;
                        if (next === current)
                            next = current.slice();
                        next.splice(next.indexOf(listener), 1);
                    }
                    ;
                }
            };
        }

        var Subscription = /*#__PURE__*/
        function() {
            function Subscription(store, parentSub) {
                this.store = store;
                this.parentSub = parentSub;
                this.unsubscribe = null;
                this.listeners = nullListeners;
                this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
            }

            var _proto = Subscription.prototype;

            _proto.addNestedSub = function addNestedSub(listener) {
                this.trySubscribe();
                return this.listeners.subscribe(listener);
            }
            ;

            _proto.notifyNestedSubs = function notifyNestedSubs() {
                this.listeners.notify();
            }
            ;

            _proto.handleChangeWrapper = function handleChangeWrapper() {
                if (this.onStateChange) {
                    this.onStateChange();
                }
            }
            ;

            _proto.isSubscribed = function isSubscribed() {
                return Boolean(this.unsubscribe);
            }
            ;

            _proto.trySubscribe = function trySubscribe() {
                if (!this.unsubscribe) {
                    this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
                    this.listeners = createListenerCollection();
                }
            }
            ;

            _proto.tryUnsubscribe = function tryUnsubscribe() {
                if (this.unsubscribe) {
                    this.unsubscribe();
                    this.unsubscribe = null;
                    this.listeners.clear();
                    this.listeners = nullListeners;
                }
            }
            ;

            return Subscription;
        }();

        // CONCATENATED MODULE: ../node_modules/react-redux/es/components/Provider.js

        function Provider(_ref) {
            var store = _ref.store
              , context = _ref.context
              , children = _ref.children;
            var contextValue = Object(compat_module["useMemo"])(function() {
                var subscription = new Subscription(store);
                subscription.onStateChange = subscription.notifyNestedSubs;
                return {
                    store: store,
                    subscription: subscription
                };
            }, [store]);
            var previousState = Object(compat_module["useMemo"])(function() {
                return store.getState();
            }, [store]);
            Object(compat_module["useEffect"])(function() {
                var subscription = contextValue.subscription;
                subscription.trySubscribe();

                if (previousState !== store.getState()) {
                    subscription.notifyNestedSubs();
                }

                return function() {
                    subscription.tryUnsubscribe();
                    subscription.onStateChange = null;
                }
                ;
            }, [contextValue, previousState]);
            var Context = context || ReactReduxContext;
            return compat_module["default"].createElement(Context.Provider, {
                value: contextValue
            }, children);
        }

        Provider.propTypes = {
            store: prop_types_default.a.shape({
                subscribe: prop_types_default.a.func.isRequired,
                dispatch: prop_types_default.a.func.isRequired,
                getState: prop_types_default.a.func.isRequired
            }),
            context: prop_types_default.a.object,
            children: prop_types_default.a.any
        };
        /* harmony default export */
        var components_Provider = (Provider);
        // CONCATENATED MODULE: ../node_modules/react-redux/node_modules/@babel/runtime/helpers/esm/extends.js
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            return _extends.apply(this, arguments);
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null)
                return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
                key = sourceKeys[i];
                if (excluded.indexOf(key) >= 0)
                    continue;
                target[key] = source[key];
            }

            return target;
        }
        // EXTERNAL MODULE: ../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(256);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/
        __webpack_require__.n(hoist_non_react_statics_cjs);

        // EXTERNAL MODULE: ../node_modules/invariant/browser.js
        var browser = __webpack_require__(70);
        var browser_default = /*#__PURE__*/
        __webpack_require__.n(browser);

        // EXTERNAL MODULE: ../node_modules/react-is/index.js
        var react_is = __webpack_require__(37);

        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js
        // React currently throws a warning when using useLayoutEffect on the server.
        // To get around it, we can conditionally useEffect on the server (no-op) and
        // useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
        // subscription callback always has the selector from the latest render commit
        // available, otherwise a store update may happen between render and the effect,
        // which may cause missed updates; we also must ensure the store subscription
        // is created synchronously, otherwise a store update may occur before the
        // subscription is created and an inconsistent state may be observed

        var isHopefullyDomEnvironment = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';
        var useIsomorphicLayoutEffect = isHopefullyDomEnvironment ? compat_module["useLayoutEffect"] : compat_module["useEffect"];
        // CONCATENATED MODULE: ../node_modules/react-redux/es/components/connectAdvanced.js

        // Define some constant arrays just to avoid re-creating these

        var EMPTY_ARRAY = [];
        var NO_SUBSCRIPTION_ARRAY = [null, null];

        var stringifyComponent = function stringifyComponent(Comp) {
            try {
                return JSON.stringify(Comp);
            } catch (err) {
                return String(Comp);
            }
        };

        function storeStateUpdatesReducer(state, action) {
            var updateCount = state[1];
            return [action.payload, updateCount + 1];
        }

        var initStateUpdates = function initStateUpdates() {
            return [null, 0];
        };

        function connectAdvanced(/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
        selectorFactory, // options object:
        _ref) {
            if (_ref === void 0) {
                _ref = {};
            }

            var _ref2 = _ref
              , _ref2$getDisplayName = _ref2.getDisplayName
              , getDisplayName = _ref2$getDisplayName === void 0 ? function(name) {
                return "ConnectAdvanced(" + name + ")";
            }
            : _ref2$getDisplayName
              , _ref2$methodName = _ref2.methodName
              , methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName
              , _ref2$renderCountProp = _ref2.renderCountProp
              , renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp
              , _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges
              , shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta
              , _ref2$storeKey = _ref2.storeKey
              , storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey
              , _ref2$withRef = _ref2.withRef
              , withRef = _ref2$withRef === void 0 ? false : _ref2$withRef
              , _ref2$forwardRef = _ref2.forwardRef
              , forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef
              , _ref2$context = _ref2.context
              , context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context
              , connectOptions = _objectWithoutPropertiesLoose(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);

            browser_default()(renderCountProp === undefined, "renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
            browser_default()(!withRef, 'withRef is removed. To access the wrapped instance, use a ref on the connected component');
            var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';
            browser_default()(storeKey === 'store', 'storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
            var Context = context;
            return function wrapWithConnect(WrappedComponent) {
                if (false) {}

                var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
                var displayName = getDisplayName(wrappedComponentName);

                var selectorFactoryOptions = _extends({}, connectOptions, {
                    getDisplayName: getDisplayName,
                    methodName: methodName,
                    renderCountProp: renderCountProp,
                    shouldHandleStateChanges: shouldHandleStateChanges,
                    storeKey: storeKey,
                    displayName: displayName,
                    wrappedComponentName: wrappedComponentName,
                    WrappedComponent: WrappedComponent
                });

                var pure = connectOptions.pure;

                function createChildSelector(store) {
                    return selectorFactory(store.dispatch, selectorFactoryOptions);
                }
                // If we aren't running in "pure" mode, we don't want to memoize values.
                // To avoid conditionally calling hooks, we fall back to a tiny wrapper
                // that just executes the given callback immediately.

                var usePureOnlyMemo = pure ? compat_module["useMemo"] : function(callback) {
                    return callback();
                }
                ;

                function ConnectFunction(props) {
                    var _useMemo = Object(compat_module["useMemo"])(function() {
                        // Distinguish between actual "data" props that were passed to the wrapper component,
                        // and values needed to control behavior (forwarded refs, alternate context instances).
                        // To maintain the wrapperProps object reference, memoize this destructuring.
                        var forwardedRef = props.forwardedRef
                          , wrapperProps = _objectWithoutPropertiesLoose(props, ["forwardedRef"]);

                        return [props.context, forwardedRef, wrapperProps];
                    }, [props])
                      , propsContext = _useMemo[0]
                      , forwardedRef = _useMemo[1]
                      , wrapperProps = _useMemo[2];

                    var ContextToUse = Object(compat_module["useMemo"])(function() {
                        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
                        // Memoize the check that determines which context instance we should use.
                        return propsContext && propsContext.Consumer && Object(react_is["isContextConsumer"])(compat_module["default"].createElement(propsContext.Consumer, null)) ? propsContext : Context;
                    }, [propsContext, Context]);
                    // Retrieve the store and ancestor subscription via context, if available

                    var contextValue = Object(compat_module["useContext"])(ContextToUse);
                    // The store _must_ exist as either a prop or in context.
                    // We'll check to see if it _looks_ like a Redux store first.
                    // This allows us to pass through a `store` prop that is just a plain value.

                    var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
                    var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);
                    browser_default()(didStoreComeFromProps || didStoreComeFromContext, "Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
                    // Based on the previous check, one of these must be true

                    var store = didStoreComeFromProps ? props.store : contextValue.store;
                    var childPropsSelector = Object(compat_module["useMemo"])(function() {
                        // The child props selector needs the store reference as an input.
                        // Re-create this selector whenever the store changes.
                        return createChildSelector(store);
                    }, [store]);

                    var _useMemo2 = Object(compat_module["useMemo"])(function() {
                        if (!shouldHandleStateChanges)
                            return NO_SUBSCRIPTION_ARRAY;
                        // This Subscription's source should match where store came from: props vs. context. A component
                        // connected to the store via props shouldn't use subscription from context, or vice versa.

                        var subscription = new Subscription(store,didStoreComeFromProps ? null : contextValue.subscription);
                        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
                        // the middle of the notification loop, where `subscription` will then be null. This can
                        // probably be avoided if Subscription's listeners logic is changed to not call listeners
                        // that have been unsubscribed in the  middle of the notification loop.

                        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
                        return [subscription, notifyNestedSubs];
                    }, [store, didStoreComeFromProps, contextValue])
                      , subscription = _useMemo2[0]
                      , notifyNestedSubs = _useMemo2[1];
                    // Determine what {store, subscription} value should be put into nested context, if necessary,
                    // and memoize that value to avoid unnecessary context updates.

                    var overriddenContextValue = Object(compat_module["useMemo"])(function() {
                        if (didStoreComeFromProps) {
                            // This component is directly subscribed to a store from props.
                            // We don't want descendants reading from this store - pass down whatever
                            // the existing context value is from the nearest connected ancestor.
                            return contextValue;
                        }
                        // Otherwise, put this component's subscription instance into context, so that
                        // connected descendants won't update until after this component is done

                        return _extends({}, contextValue, {
                            subscription: subscription
                        });
                    }, [didStoreComeFromProps, contextValue, subscription]);
                    // We need to force this wrapper component to re-render whenever a Redux store update
                    // causes a change to the calculated child component props (or we caught an error in mapState)

                    var _useReducer = Object(compat_module["useReducer"])(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates)
                      , _useReducer$ = _useReducer[0]
                      , previousStateUpdateResult = _useReducer$[0]
                      , forceComponentUpdateDispatch = _useReducer[1];
                    // Propagate any mapState/mapDispatch errors upwards

                    if (previousStateUpdateResult && previousStateUpdateResult.error) {
                        throw previousStateUpdateResult.error;
                    }
                    // Set up refs to coordinate values between the subscription effect and the render logic

                    var lastChildProps = Object(compat_module["useRef"])();
                    var lastWrapperProps = Object(compat_module["useRef"])(wrapperProps);
                    var childPropsFromStoreUpdate = Object(compat_module["useRef"])();
                    var renderIsScheduled = Object(compat_module["useRef"])(false);
                    var actualChildProps = usePureOnlyMemo(function() {
                        // Tricky logic here:
                        // - This render may have been triggered by a Redux store update that produced new child props
                        // - However, we may have gotten new wrapper props after that
                        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
                        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
                        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
                        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
                            return childPropsFromStoreUpdate.current;
                        }
                        // TODO We're reading the store directly in render() here. Bad idea?
                        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
                        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
                        // to determine what the child props should be.

                        return childPropsSelector(store.getState(), wrapperProps);
                    }, [store, previousStateUpdateResult, wrapperProps]);
                    // We need this to execute synchronously every time we re-render. However, React warns
                    // about useLayoutEffect in SSR, so we try to detect environment and fall back to
                    // just useEffect instead to avoid the warning, since neither will run anyway.

                    useIsomorphicLayoutEffect(function() {
                        // We want to capture the wrapper props and child props we used for later comparisons
                        lastWrapperProps.current = wrapperProps;
                        lastChildProps.current = actualChildProps;
                        renderIsScheduled.current = false;
                        // If the render was from a store update, clear out that reference and cascade the subscriber update

                        if (childPropsFromStoreUpdate.current) {
                            childPropsFromStoreUpdate.current = null;
                            notifyNestedSubs();
                        }
                    });
                    // Our re-subscribe logic only runs when the store/subscription setup changes

                    useIsomorphicLayoutEffect(function() {
                        // If we're not subscribed to the store, nothing to do here
                        if (!shouldHandleStateChanges)
                            return;
                        // Capture values for checking if and when this component unmounts

                        var didUnsubscribe = false;
                        var lastThrownError = null;
                        // We'll run this callback every time a store subscription update propagates to this component

                        var checkForUpdates = function checkForUpdates() {
                            if (didUnsubscribe) {
                                // Don't run stale listeners.
                                // Redux doesn't guarantee unsubscriptions happen until next dispatch.
                                return;
                            }

                            var latestStoreState = store.getState();
                            var newChildProps, error;

                            try {
                                // Actually run the selector with the most recent store state and wrapper props
                                // to determine what the child props should be
                                newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
                            } catch (e) {
                                error = e;
                                lastThrownError = e;
                            }

                            if (!error) {
                                lastThrownError = null;
                            }
                            // If the child props haven't changed, nothing to do here - cascade the subscription update

                            if (newChildProps === lastChildProps.current) {
                                if (!renderIsScheduled.current) {
                                    notifyNestedSubs();
                                }
                            } else {
                                // Save references to the new child props.  Note that we track the "child props from store update"
                                // as a ref instead of a useState/useReducer because we need a way to determine if that value has
                                // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
                                // forcing another re-render, which we don't want.
                                lastChildProps.current = newChildProps;
                                childPropsFromStoreUpdate.current = newChildProps;
                                renderIsScheduled.current = true;
                                // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

                                forceComponentUpdateDispatch({
                                    type: 'STORE_UPDATED',
                                    payload: {
                                        error: error
                                    }
                                });
                            }
                        };
                        // Actually subscribe to the nearest connected ancestor (or store)

                        subscription.onStateChange = checkForUpdates;
                        subscription.trySubscribe();
                        // Pull data from the store after first render in case the store has
                        // changed since we began.

                        checkForUpdates();

                        var unsubscribeWrapper = function unsubscribeWrapper() {
                            didUnsubscribe = true;
                            subscription.tryUnsubscribe();
                            subscription.onStateChange = null;

                            if (lastThrownError) {
                                // It's possible that we caught an error due to a bad mapState function, but the
                                // parent re-rendered without this component and we're about to unmount.
                                // This shouldn't happen as long as we do top-down subscriptions correctly, but
                                // if we ever do those wrong, this throw will surface the error in our tests.
                                // In that case, throw the error from here so it doesn't get lost.
                                throw lastThrownError;
                            }
                        };

                        return unsubscribeWrapper;
                    }, [store, subscription, childPropsSelector]);
                    // Now that all that's done, we can finally try to actually render the child component.
                    // We memoize the elements for the rendered child component as an optimization.

                    var renderedWrappedComponent = Object(compat_module["useMemo"])(function() {
                        return compat_module["default"].createElement(WrappedComponent, _extends({}, actualChildProps, {
                            ref: forwardedRef
                        }));
                    }, [forwardedRef, WrappedComponent, actualChildProps]);
                    // If React sees the exact same element reference as last time, it bails out of re-rendering
                    // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

                    var renderedChild = Object(compat_module["useMemo"])(function() {
                        if (shouldHandleStateChanges) {
                            // If this component is subscribed to store updates, we need to pass its own
                            // subscription instance down to our descendants. That means rendering the same
                            // Context instance, and putting a different value into the context.
                            return compat_module["default"].createElement(ContextToUse.Provider, {
                                value: overriddenContextValue
                            }, renderedWrappedComponent);
                        }

                        return renderedWrappedComponent;
                    }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
                    return renderedChild;
                }
                // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.

                var Connect = pure ? compat_module["default"].memo(ConnectFunction) : ConnectFunction;
                Connect.WrappedComponent = WrappedComponent;
                Connect.displayName = displayName;

                if (forwardRef) {
                    var forwarded = compat_module["default"].forwardRef(function forwardConnectRef(props, ref) {
                        return compat_module["default"].createElement(Connect, _extends({}, props, {
                            forwardedRef: ref
                        }));
                    });
                    forwarded.displayName = displayName;
                    forwarded.WrappedComponent = WrappedComponent;
                    return hoist_non_react_statics_cjs_default()(forwarded, WrappedComponent);
                }

                return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);
            }
            ;
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/shallowEqual.js
        var hasOwn = Object.prototype.hasOwnProperty;

        function is(x, y) {
            if (x === y) {
                return x !== 0 || y !== 0 || 1 / x === 1 / y;
            } else {
                return x !== x && y !== y;
            }
        }

        function shallowEqual(objA, objB) {
            if (is(objA, objB))
                return true;

            if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
                return false;
            }

            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA.length !== keysB.length)
                return false;

            for (var i = 0; i < keysA.length; i++) {
                if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
                    return false;
                }
            }

            return true;
        }
        // EXTERNAL MODULE: ../node_modules/redux/es/redux.js
        var redux = __webpack_require__(128);

        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/isPlainObject.js
        /**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
        function isPlainObject(obj) {
            if (typeof obj !== 'object' || obj === null)
                return false;
            var proto = Object.getPrototypeOf(obj);
            if (proto === null)
                return true;
            var baseProto = proto;

            while (Object.getPrototypeOf(baseProto) !== null) {
                baseProto = Object.getPrototypeOf(baseProto);
            }

            return proto === baseProto;
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/warning.js
        /**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
        function warning(message) {
            /* eslint-disable no-console */
            if (typeof console !== 'undefined' && typeof console.error === 'function') {
                console.error(message);
            }
            /* eslint-enable no-console */

            try {
                // This error was thrown as a convenience so that if you enable
                // "break on all exceptions" in your console,
                // it would pause the execution at this line.
                throw new Error(message);
                /* eslint-disable no-empty */
            } catch (e) {}
            /* eslint-enable no-empty */

        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/verifyPlainObject.js

        function verifyPlainObject(value, displayName, methodName) {
            if (!isPlainObject(value)) {
                warning(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
            }
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/wrapMapToProps.js

        function wrapMapToPropsConstant(getConstant) {
            return function initConstantSelector(dispatch, options) {
                var constant = getConstant(dispatch, options);

                function constantSelector() {
                    return constant;
                }

                constantSelector.dependsOnOwnProps = false;
                return constantSelector;
            }
            ;
        }
        // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
        // to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
        // whether mapToProps needs to be invoked when props have changed.
        //
        // A length of one signals that mapToProps does not depend on props from the parent component.
        // A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
        // therefore not reporting its length accurately..

        function getDependsOnOwnProps(mapToProps) {
            return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
        }
        // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
        // this function wraps mapToProps in a proxy function which does several things:
        //
        //  * Detects whether the mapToProps function being called depends on props, which
        //    is used by selectorFactory to decide if it should reinvoke on props changes.
        //
        //  * On first call, handles mapToProps if returns another function, and treats that
        //    new function as the true mapToProps for subsequent calls.
        //
        //  * On first call, verifies the first result is a plain object, in order to warn
        //    the developer that their mapToProps function is not returning a valid result.
        //

        function wrapMapToPropsFunc(mapToProps, methodName) {
            return function initProxySelector(dispatch, _ref) {
                var displayName = _ref.displayName;

                var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
                    return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
                };
                // allow detectFactoryAndVerify to get ownProps

                proxy.dependsOnOwnProps = true;

                proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
                    proxy.mapToProps = mapToProps;
                    proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
                    var props = proxy(stateOrDispatch, ownProps);

                    if (typeof props === 'function') {
                        proxy.mapToProps = props;
                        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
                        props = proxy(stateOrDispatch, ownProps);
                    }

                    if (false) {}
                    return props;
                }
                ;

                return proxy;
            }
            ;
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/mapDispatchToProps.js

        function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
            return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;
        }
        function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
            return !mapDispatchToProps ? wrapMapToPropsConstant(function(dispatch) {
                return {
                    dispatch: dispatch
                };
            }) : undefined;
        }
        function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
            return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function(dispatch) {
                return Object(redux["bindActionCreators"])(mapDispatchToProps, dispatch);
            }) : undefined;
        }
        /* harmony default export */
        var connect_mapDispatchToProps = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/mapStateToProps.js

        function whenMapStateToPropsIsFunction(mapStateToProps) {
            return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;
        }
        function whenMapStateToPropsIsMissing(mapStateToProps) {
            return !mapStateToProps ? wrapMapToPropsConstant(function() {
                return {};
            }) : undefined;
        }
        /* harmony default export */
        var connect_mapStateToProps = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/mergeProps.js

        function defaultMergeProps(stateProps, dispatchProps, ownProps) {
            return _extends({}, ownProps, {}, stateProps, {}, dispatchProps);
        }
        function wrapMergePropsFunc(mergeProps) {
            return function initMergePropsProxy(dispatch, _ref) {
                var displayName = _ref.displayName
                  , pure = _ref.pure
                  , areMergedPropsEqual = _ref.areMergedPropsEqual;
                var hasRunOnce = false;
                var mergedProps;
                return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
                    var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

                    if (hasRunOnce) {
                        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))
                            mergedProps = nextMergedProps;
                    } else {
                        hasRunOnce = true;
                        mergedProps = nextMergedProps;
                        if (false) {}
                    }

                    return mergedProps;
                }
                ;
            }
            ;
        }
        function whenMergePropsIsFunction(mergeProps) {
            return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
        }
        function whenMergePropsIsOmitted(mergeProps) {
            return !mergeProps ? function() {
                return defaultMergeProps;
            }
            : undefined;
        }
        /* harmony default export */
        var connect_mergeProps = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/verifySubselectors.js

        function verify(selector, methodName, displayName) {
            if (!selector) {
                throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
            } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
                if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
                    warning("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
                }
            }
        }

        function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
            verify(mapStateToProps, 'mapStateToProps', displayName);
            verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
            verify(mergeProps, 'mergeProps', displayName);
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/selectorFactory.js

        function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
            return function impureFinalPropsSelector(state, ownProps) {
                return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
            }
            ;
        }
        function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
            var areStatesEqual = _ref.areStatesEqual
              , areOwnPropsEqual = _ref.areOwnPropsEqual
              , areStatePropsEqual = _ref.areStatePropsEqual;
            var hasRunAtLeastOnce = false;
            var state;
            var ownProps;
            var stateProps;
            var dispatchProps;
            var mergedProps;

            function handleFirstCall(firstState, firstOwnProps) {
                state = firstState;
                ownProps = firstOwnProps;
                stateProps = mapStateToProps(state, ownProps);
                dispatchProps = mapDispatchToProps(dispatch, ownProps);
                mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
                hasRunAtLeastOnce = true;
                return mergedProps;
            }

            function handleNewPropsAndNewState() {
                stateProps = mapStateToProps(state, ownProps);
                if (mapDispatchToProps.dependsOnOwnProps)
                    dispatchProps = mapDispatchToProps(dispatch, ownProps);
                mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
                return mergedProps;
            }

            function handleNewProps() {
                if (mapStateToProps.dependsOnOwnProps)
                    stateProps = mapStateToProps(state, ownProps);
                if (mapDispatchToProps.dependsOnOwnProps)
                    dispatchProps = mapDispatchToProps(dispatch, ownProps);
                mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
                return mergedProps;
            }

            function handleNewState() {
                var nextStateProps = mapStateToProps(state, ownProps);
                var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
                stateProps = nextStateProps;
                if (statePropsChanged)
                    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
                return mergedProps;
            }

            function handleSubsequentCalls(nextState, nextOwnProps) {
                var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
                var stateChanged = !areStatesEqual(nextState, state);
                state = nextState;
                ownProps = nextOwnProps;
                if (propsChanged && stateChanged)
                    return handleNewPropsAndNewState();
                if (propsChanged)
                    return handleNewProps();
                if (stateChanged)
                    return handleNewState();
                return mergedProps;
            }

            return function pureFinalPropsSelector(nextState, nextOwnProps) {
                return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
            }
            ;
        }
        // TODO: Add more comments
        // If pure is true, the selector returned by selectorFactory will memoize its results,
        // allowing connectAdvanced's shouldComponentUpdate to return false if final
        // props have not changed. If false, the selector will always return a new
        // object and shouldComponentUpdate will always return true.

        function finalPropsSelectorFactory(dispatch, _ref2) {
            var initMapStateToProps = _ref2.initMapStateToProps
              , initMapDispatchToProps = _ref2.initMapDispatchToProps
              , initMergeProps = _ref2.initMergeProps
              , options = _objectWithoutPropertiesLoose(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

            var mapStateToProps = initMapStateToProps(dispatch, options);
            var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
            var mergeProps = initMergeProps(dispatch, options);

            if (false) {}

            var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
            return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/connect/connect.js

        /*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

        function match(arg, factories, name) {
            for (var i = factories.length - 1; i >= 0; i--) {
                var result = factories[i](arg);
                if (result)
                    return result;
            }

            return function(dispatch, options) {
                throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
            }
            ;
        }

        function strictEqual(a, b) {
            return a === b;
        }
        // createConnect with default args builds the 'official' connect behavior. Calling it with
        // different options opens up some testing and extensibility scenarios

        function createConnect(_temp) {
            var _ref = _temp === void 0 ? {} : _temp
              , _ref$connectHOC = _ref.connectHOC
              , connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC
              , _ref$mapStateToPropsF = _ref.mapStateToPropsFactories
              , mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? connect_mapStateToProps : _ref$mapStateToPropsF
              , _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories
              , mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? connect_mapDispatchToProps : _ref$mapDispatchToPro
              , _ref$mergePropsFactor = _ref.mergePropsFactories
              , mergePropsFactories = _ref$mergePropsFactor === void 0 ? connect_mergeProps : _ref$mergePropsFactor
              , _ref$selectorFactory = _ref.selectorFactory
              , selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;

            return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
                if (_ref2 === void 0) {
                    _ref2 = {};
                }

                var _ref3 = _ref2
                  , _ref3$pure = _ref3.pure
                  , pure = _ref3$pure === void 0 ? true : _ref3$pure
                  , _ref3$areStatesEqual = _ref3.areStatesEqual
                  , areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual
                  , _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual
                  , areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua
                  , _ref3$areStatePropsEq = _ref3.areStatePropsEqual
                  , areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq
                  , _ref3$areMergedPropsE = _ref3.areMergedPropsEqual
                  , areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE
                  , extraOptions = _objectWithoutPropertiesLoose(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

                var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
                var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
                var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
                return connectHOC(selectorFactory, _extends({
                    // used in error messages
                    methodName: 'connect',
                    // used to compute Connect's displayName from the wrapped component's displayName.
                    getDisplayName: function getDisplayName(name) {
                        return "Connect(" + name + ")";
                    },
                    // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
                    shouldHandleStateChanges: Boolean(mapStateToProps),
                    // passed through to selectorFactory
                    initMapStateToProps: initMapStateToProps,
                    initMapDispatchToProps: initMapDispatchToProps,
                    initMergeProps: initMergeProps,
                    pure: pure,
                    areStatesEqual: areStatesEqual,
                    areOwnPropsEqual: areOwnPropsEqual,
                    areStatePropsEqual: areStatePropsEqual,
                    areMergedPropsEqual: areMergedPropsEqual
                }, extraOptions));
            }
            ;
        }
        /* harmony default export */
        var connect_connect = (createConnect());
        // CONCATENATED MODULE: ../node_modules/react-redux/es/hooks/useReduxContext.js

        /**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

        function useReduxContext_useReduxContext() {
            var contextValue = Object(compat_module["useContext"])(ReactReduxContext);
            browser_default()(contextValue, 'could not find react-redux context value; please ensure the component is wrapped in a <Provider>');
            return contextValue;
        }
        // CONCATENATED MODULE: ../node_modules/react-redux/es/hooks/useStore.js

        /**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

        function createStoreHook(context) {
            if (context === void 0) {
                context = ReactReduxContext;
            }

            var useReduxContext = context === ReactReduxContext ? useReduxContext_useReduxContext : function() {
                return Object(compat_module["useContext"])(context);
            }
            ;
            return function useStore() {
                var _useReduxContext = useReduxContext()
                  , store = _useReduxContext.store;

                return store;
            }
            ;
        }
        /**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

        var useStore_useStore = createStoreHook();
        // CONCATENATED MODULE: ../node_modules/react-redux/es/hooks/useDispatch.js

        /**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

        function createDispatchHook(context) {
            if (context === void 0) {
                context = ReactReduxContext;
            }

            var useStore = context === ReactReduxContext ? useStore_useStore : createStoreHook(context);
            return function useDispatch() {
                var store = useStore();
                return store.dispatch;
            }
            ;
        }
        /**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

        var useDispatch = createDispatchHook();
        // CONCATENATED MODULE: ../node_modules/react-redux/es/hooks/useSelector.js

        var refEquality = function refEquality(a, b) {
            return a === b;
        };

        function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
            var _useReducer = Object(compat_module["useReducer"])(function(s) {
                return s + 1;
            }, 0)
              , forceRender = _useReducer[1];

            var subscription = Object(compat_module["useMemo"])(function() {
                return new Subscription(store,contextSub);
            }, [store, contextSub]);
            var latestSubscriptionCallbackError = Object(compat_module["useRef"])();
            var latestSelector = Object(compat_module["useRef"])();
            var latestSelectedState = Object(compat_module["useRef"])();
            var selectedState;

            try {
                if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {
                    selectedState = selector(store.getState());
                } else {
                    selectedState = latestSelectedState.current;
                }
            } catch (err) {
                var errorMessage = "An error occurred while selecting the store state: " + err.message + ".";

                if (latestSubscriptionCallbackError.current) {
                    errorMessage += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\nOriginal stack trace:";
                }

                throw new Error(errorMessage);
            }

            useIsomorphicLayoutEffect(function() {
                latestSelector.current = selector;
                latestSelectedState.current = selectedState;
                latestSubscriptionCallbackError.current = undefined;
            });
            useIsomorphicLayoutEffect(function() {
                function checkForUpdates() {
                    try {
                        var newSelectedState = latestSelector.current(store.getState());

                        if (equalityFn(newSelectedState, latestSelectedState.current)) {
                            return;
                        }

                        latestSelectedState.current = newSelectedState;
                    } catch (err) {
                        // we ignore all errors here, since when the component
                        // is re-rendered, the selectors are called again, and
                        // will throw again, if neither props nor store state
                        // changed
                        latestSubscriptionCallbackError.current = err;
                    }

                    forceRender({});
                }

                subscription.onStateChange = checkForUpdates;
                subscription.trySubscribe();
                checkForUpdates();
                return function() {
                    return subscription.tryUnsubscribe();
                }
                ;
            }, [store, subscription]);
            return selectedState;
        }
        /**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {Function} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */

        function createSelectorHook(context) {
            if (context === void 0) {
                context = ReactReduxContext;
            }

            var useReduxContext = context === ReactReduxContext ? useReduxContext_useReduxContext : function() {
                return Object(compat_module["useContext"])(context);
            }
            ;
            return function useSelector(selector, equalityFn) {
                if (equalityFn === void 0) {
                    equalityFn = refEquality;
                }

                browser_default()(selector, "You must pass a selector to useSelectors");

                var _useReduxContext = useReduxContext()
                  , store = _useReduxContext.store
                  , contextSub = _useReduxContext.subscription;

                return useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
            }
            ;
        }
        /**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

        var useSelector_useSelector = createSelectorHook();
        // CONCATENATED MODULE: ../node_modules/react-redux/es/utils/reactBatchedUpdates.js
        /* eslint-disable import/no-unresolved */

        // CONCATENATED MODULE: ../node_modules/react-redux/es/index.js
        /* concated harmony reexport Provider */
        __webpack_require__.d(__webpack_exports__, "Provider", function() {
            return components_Provider;
        });
        /* concated harmony reexport connectAdvanced */
        __webpack_require__.d(__webpack_exports__, "connectAdvanced", function() {
            return connectAdvanced;
        });
        /* concated harmony reexport ReactReduxContext */
        __webpack_require__.d(__webpack_exports__, "ReactReduxContext", function() {
            return ReactReduxContext;
        });
        /* concated harmony reexport connect */
        __webpack_require__.d(__webpack_exports__, "connect", function() {
            return connect_connect;
        });
        /* concated harmony reexport batch */
        __webpack_require__.d(__webpack_exports__, "batch", function() {
            return compat_module["unstable_batchedUpdates"];
        });
        /* concated harmony reexport useDispatch */
        __webpack_require__.d(__webpack_exports__, "useDispatch", function() {
            return useDispatch;
        });
        /* concated harmony reexport createDispatchHook */
        __webpack_require__.d(__webpack_exports__, "createDispatchHook", function() {
            return createDispatchHook;
        });
        /* concated harmony reexport useSelector */
        __webpack_require__.d(__webpack_exports__, "useSelector", function() {
            return useSelector_useSelector;
        });
        /* concated harmony reexport createSelectorHook */
        __webpack_require__.d(__webpack_exports__, "createSelectorHook", function() {
            return createSelectorHook;
        });
        /* concated harmony reexport useStore */
        __webpack_require__.d(__webpack_exports__, "useStore", function() {
            return useStore_useStore;
        });
        /* concated harmony reexport createStoreHook */
        __webpack_require__.d(__webpack_exports__, "createStoreHook", function() {
            return createStoreHook;
        });
        /* concated harmony reexport shallowEqual */
        __webpack_require__.d(__webpack_exports__, "shallowEqual", function() {
            return shallowEqual;
        });

        setBatch(compat_module["unstable_batchedUpdates"]);

        /***/
    }
    ), /* 423 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js
        var redux_saga_symbols_esm = __webpack_require__(18);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/core/node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(107);

        // CONCATENATED MODULE: ../node_modules/@redux-saga/core/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null)
                return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
                key = sourceKeys[i];
                if (excluded.indexOf(key) >= 0)
                    continue;
                target[key] = source[key];
            }

            return target;
        }
        // EXTERNAL MODULE: ../node_modules/@redux-saga/is/dist/redux-saga-is.esm.js
        var redux_saga_is_esm = __webpack_require__(12);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/core/dist/io-6de156f3.js
        var io_6de156f3 = __webpack_require__(6);

        // EXTERNAL MODULE: ../node_modules/redux/es/redux.js
        var redux = __webpack_require__(128);

        // CONCATENATED MODULE: ../node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js
        function deferred() {
            var def = {};
            def.promise = new Promise(function(resolve, reject) {
                def.resolve = resolve;
                def.reject = reject;
            }
            );
            return def;
        }
        function arrayOfDeferred(length) {
            var arr = [];

            for (var i = 0; i < length; i++) {
                arr.push(deferred());
            }

            return arr;
        }

        /* harmony default export */
        var redux_saga_deferred_esm = (deferred);

        // EXTERNAL MODULE: ../node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js
        var redux_saga_delay_p_esm = __webpack_require__(167);

        // CONCATENATED MODULE: ../node_modules/@redux-saga/core/dist/redux-saga-core.esm.js

        var redux_saga_core_esm_queue = [];
        /**
  Variable to hold a counting semaphore
  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not
    already suspended)
  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This
    triggers flushing the queued tasks.
**/

        var semaphore = 0;
        /**
  Executes a task 'atomically'. Tasks scheduled during this execution will be queued
  and flushed after this task has finished (assuming the scheduler endup in a released
  state).
**/

        function exec(task) {
            try {
                suspend();
                task();
            } finally {
                release();
            }
        }
        /**
  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)
**/

        function asap(task) {
            redux_saga_core_esm_queue.push(task);

            if (!semaphore) {
                suspend();
                redux_saga_core_esm_flush();
            }
        }
        /**
 * Puts the scheduler in a `suspended` state and executes a task immediately.
 */

        function immediately(task) {
            try {
                suspend();
                return task();
            } finally {
                redux_saga_core_esm_flush();
            }
        }
        /**
  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the
  scheduler is released.
**/

        function suspend() {
            semaphore++;
        }
        /**
  Puts the scheduler in a `released` state.
**/

        function release() {
            semaphore--;
        }
        /**
  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.
**/

        function redux_saga_core_esm_flush() {
            release();
            var task;

            while (!semaphore && (task = redux_saga_core_esm_queue.shift()) !== undefined) {
                exec(task);
            }
        }

        var array = function array(patterns) {
            return function(input) {
                return patterns.some(function(p) {
                    return redux_saga_core_esm_matcher(p)(input);
                });
            }
            ;
        };
        var predicate = function predicate(_predicate) {
            return function(input) {
                return _predicate(input);
            }
            ;
        };
        var string = function string(pattern) {
            return function(input) {
                return input.type === String(pattern);
            }
            ;
        };
        var symbol = function symbol(pattern) {
            return function(input) {
                return input.type === pattern;
            }
            ;
        };
        var redux_saga_core_esm_wildcard = function wildcard() {
            return io_6de156f3["U"/* k */
            ];
        };
        function redux_saga_core_esm_matcher(pattern) {
            // prettier-ignore
            var matcherCreator = pattern === '*' ? redux_saga_core_esm_wildcard : Object(redux_saga_is_esm["k"/* string */
            ])(pattern) ? string : Object(redux_saga_is_esm["a"/* array */
            ])(pattern) ? array : Object(redux_saga_is_esm["l"/* stringableFunc */
            ])(pattern) ? string : Object(redux_saga_is_esm["d"/* func */
            ])(pattern) ? predicate : Object(redux_saga_is_esm["m"/* symbol */
            ])(pattern) ? symbol : null;

            if (matcherCreator === null) {
                throw new Error("invalid pattern: " + pattern);
            }

            return matcherCreator(pattern);
        }

        var END = {
            type: redux_saga_symbols_esm["b"/* CHANNEL_END_TYPE */
            ]
        };
        var redux_saga_core_esm_isEnd = function isEnd(a) {
            return a && a.type === redux_saga_symbols_esm["b"/* CHANNEL_END_TYPE */
            ];
        };
        var CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';
        var INVALID_BUFFER = 'invalid buffer passed to channel factory function';
        var UNDEFINED_INPUT_ERROR = "Saga or channel was provided with an undefined action\nHints:\n  - check that your Action Creator returns a non-undefined value\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners";
        function redux_saga_core_esm_channel(buffer$1) {
            if (buffer$1 === void 0) {
                buffer$1 = Object(io_6de156f3["O"/* e */
                ])();
            }

            var closed = false;
            var takers = [];

            if (false) {}

            function checkForbiddenStates() {
                if (closed && takers.length) {
                    throw Object(io_6de156f3["S"/* i */
                    ])(CLOSED_CHANNEL_WITH_TAKERS);
                }

                if (takers.length && !buffer$1.isEmpty()) {
                    throw Object(io_6de156f3["S"/* i */
                    ])('Cannot have pending takers with non empty buffer');
                }
            }

            function put(input) {
                if (false) {}

                if (closed) {
                    return;
                }

                if (takers.length === 0) {
                    return buffer$1.put(input);
                }

                var cb = takers.shift();
                cb(input);
            }

            function take(cb) {
                if (false) {}

                if (closed && buffer$1.isEmpty()) {
                    cb(END);
                } else if (!buffer$1.isEmpty()) {
                    cb(buffer$1.take());
                } else {
                    takers.push(cb);

                    cb.cancel = function() {
                        Object(io_6de156f3["bb"/* r */
                        ])(takers, cb);
                    }
                    ;
                }
            }

            function flush(cb) {
                if (false) {}

                if (closed && buffer$1.isEmpty()) {
                    cb(END);
                    return;
                }

                cb(buffer$1.flush());
            }

            function close() {
                if (false) {}

                if (closed) {
                    return;
                }

                closed = true;
                var arr = takers;
                takers = [];

                for (var i = 0, len = arr.length; i < len; i++) {
                    var taker = arr[i];
                    taker(END);
                }
            }

            return {
                take: take,
                put: put,
                flush: flush,
                close: close
            };
        }
        function eventChannel(subscribe, buffer) {
            if (buffer === void 0) {
                buffer = Object(io_6de156f3["X"/* n */
                ])();
            }

            var closed = false;
            var unsubscribe;
            var chan = redux_saga_core_esm_channel(buffer);

            var close = function close() {
                if (closed) {
                    return;
                }

                closed = true;

                if (Object(redux_saga_is_esm["d"/* func */
                ])(unsubscribe)) {
                    unsubscribe();
                }

                chan.close();
            };

            unsubscribe = subscribe(function(input) {
                if (redux_saga_core_esm_isEnd(input)) {
                    close();
                    return;
                }

                chan.put(input);
            });

            if (false) {}

            unsubscribe = Object(io_6de156f3["Y"/* o */
            ])(unsubscribe);

            if (closed) {
                unsubscribe();
            }

            return {
                take: chan.take,
                flush: chan.flush,
                close: close
            };
        }
        function multicastChannel() {
            var _ref;

            var closed = false;
            var currentTakers = [];
            var nextTakers = currentTakers;

            function checkForbiddenStates() {
                if (closed && nextTakers.length) {
                    throw Object(io_6de156f3["S"/* i */
                    ])(CLOSED_CHANNEL_WITH_TAKERS);
                }
            }

            var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {
                if (nextTakers !== currentTakers) {
                    return;
                }

                nextTakers = currentTakers.slice();
            };

            var close = function close() {
                if (false) {}

                closed = true;
                var takers = currentTakers = nextTakers;
                nextTakers = [];
                takers.forEach(function(taker) {
                    taker(END);
                });
            };

            return _ref = {},
            _ref[redux_saga_symbols_esm["e"/* MULTICAST */
            ]] = true,
            _ref.put = function put(input) {
                if (false) {}

                if (closed) {
                    return;
                }

                if (redux_saga_core_esm_isEnd(input)) {
                    close();
                    return;
                }

                var takers = currentTakers = nextTakers;

                for (var i = 0, len = takers.length; i < len; i++) {
                    var taker = takers[i];

                    if (taker[redux_saga_symbols_esm["d"/* MATCH */
                    ]](input)) {
                        taker.cancel();
                        taker(input);
                    }
                }
            }
            ,
            _ref.take = function take(cb, matcher) {
                if (matcher === void 0) {
                    matcher = redux_saga_core_esm_wildcard;
                }

                if (false) {}

                if (closed) {
                    cb(END);
                    return;
                }

                cb[redux_saga_symbols_esm["d"/* MATCH */
                ]] = matcher;
                ensureCanMutateNextTakers();
                nextTakers.push(cb);
                cb.cancel = Object(io_6de156f3["Y"/* o */
                ])(function() {
                    ensureCanMutateNextTakers();
                    Object(io_6de156f3["bb"/* r */
                    ])(nextTakers, cb);
                });
            }
            ,
            _ref.close = close,
            _ref;
        }
        function stdChannel() {
            var chan = multicastChannel();
            var put = chan.put;

            chan.put = function(input) {
                if (input[redux_saga_symbols_esm["f"/* SAGA_ACTION */
                ]]) {
                    put(input);
                    return;
                }

                asap(function() {
                    put(input);
                });
            }
            ;

            return chan;
        }

        var RUNNING = 0;
        var CANCELLED = 1;
        var ABORTED = 2;
        var DONE = 3;

        function resolvePromise(promise, cb) {
            var cancelPromise = promise[redux_saga_symbols_esm["a"/* CANCEL */
            ]];

            if (Object(redux_saga_is_esm["d"/* func */
            ])(cancelPromise)) {
                cb.cancel = cancelPromise;
            }

            promise.then(cb, function(error) {
                cb(error, true);
            });
        }

        var current = 0;
        var nextSagaId = (function() {
            return ++current;
        }
        );

        var _effectRunnerMap;

        function getIteratorMetaInfo(iterator, fn) {
            if (iterator.isSagaIterator) {
                return {
                    name: iterator.meta.name
                };
            }

            return Object(io_6de156f3["T"/* j */
            ])(fn);
        }

        function createTaskIterator(_ref) {
            var context = _ref.context
              , fn = _ref.fn
              , args = _ref.args;

            // catch synchronous failures; see #152 and #441
            try {
                var result = fn.apply(context, args);
                // i.e. a generator function returns an iterator

                if (Object(redux_saga_is_esm["e"/* iterator */
                ])(result)) {
                    return result;
                }

                var resolved = false;

                var next = function next(arg) {
                    if (!resolved) {
                        resolved = true;
                        // Only promises returned from fork will be interpreted. See #1573

                        return {
                            value: result,
                            done: !Object(redux_saga_is_esm["j"/* promise */
                            ])(result)
                        };
                    } else {
                        return {
                            value: arg,
                            done: true
                        };
                    }
                };

                return Object(io_6de156f3["ab"/* q */
                ])(next);
            } catch (err) {
                // do not bubble up synchronous failures for detached forks
                // instead create a failed task. See #152 and #441
                return Object(io_6de156f3["ab"/* q */
                ])(function() {
                    throw err;
                });
            }
        }

        function runPutEffect(env, _ref2, cb) {
            var channel = _ref2.channel
              , action = _ref2.action
              , resolve = _ref2.resolve;

            /**
   Schedule the put in case another saga is holding a lock.
   The put will be executed atomically. ie nested puts will execute after
   this put has terminated.
   **/
            asap(function() {
                var result;

                try {
                    result = (channel ? channel.put : env.dispatch)(action);
                } catch (error) {
                    cb(error, true);
                    return;
                }

                if (resolve && Object(redux_saga_is_esm["j"/* promise */
                ])(result)) {
                    resolvePromise(result, cb);
                } else {
                    cb(result);
                }
            });
            // Put effects are non cancellables
        }

        function runTakeEffect(env, _ref3, cb) {
            var _ref3$channel = _ref3.channel
              , channel = _ref3$channel === void 0 ? env.channel : _ref3$channel
              , pattern = _ref3.pattern
              , maybe = _ref3.maybe;

            var takeCb = function takeCb(input) {
                if (input instanceof Error) {
                    cb(input, true);
                    return;
                }

                if (redux_saga_core_esm_isEnd(input) && !maybe) {
                    cb(redux_saga_symbols_esm["k"/* TERMINATE */
                    ]);
                    return;
                }

                cb(input);
            };

            try {
                channel.take(takeCb, Object(redux_saga_is_esm["g"/* notUndef */
                ])(pattern) ? redux_saga_core_esm_matcher(pattern) : null);
            } catch (err) {
                cb(err, true);
                return;
            }

            cb.cancel = takeCb.cancel;
        }

        function runCallEffect(env, _ref4, cb, _ref5) {
            var context = _ref4.context
              , fn = _ref4.fn
              , args = _ref4.args;
            var task = _ref5.task;

            // catch synchronous failures; see #152
            try {
                var result = fn.apply(context, args);

                if (Object(redux_saga_is_esm["j"/* promise */
                ])(result)) {
                    resolvePromise(result, cb);
                    return;
                }

                if (Object(redux_saga_is_esm["e"/* iterator */
                ])(result)) {
                    // resolve iterator
                    proc(env, result, task.context, current, Object(io_6de156f3["T"/* j */
                    ])(fn), /* isRoot */
                    false, cb);
                    return;
                }

                cb(result);
            } catch (error) {
                cb(error, true);
            }
        }

        function runCPSEffect(env, _ref6, cb) {
            var context = _ref6.context
              , fn = _ref6.fn
              , args = _ref6.args;

            // CPS (ie node style functions) can define their own cancellation logic
            // by setting cancel field on the cb
            // catch synchronous failures; see #152
            try {
                var cpsCb = function cpsCb(err, res) {
                    if (Object(redux_saga_is_esm["n"/* undef */
                    ])(err)) {
                        cb(res);
                    } else {
                        cb(err, true);
                    }
                };

                fn.apply(context, args.concat(cpsCb));

                if (cpsCb.cancel) {
                    cb.cancel = cpsCb.cancel;
                }
            } catch (error) {
                cb(error, true);
            }
        }

        function runForkEffect(env, _ref7, cb, _ref8) {
            var context = _ref7.context
              , fn = _ref7.fn
              , args = _ref7.args
              , detached = _ref7.detached;
            var parent = _ref8.task;
            var taskIterator = createTaskIterator({
                context: context,
                fn: fn,
                args: args
            });
            var meta = getIteratorMetaInfo(taskIterator, fn);
            immediately(function() {
                var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);

                if (detached) {
                    cb(child);
                } else {
                    if (child.isRunning()) {
                        parent.queue.addTask(child);
                        cb(child);
                    } else if (child.isAborted()) {
                        parent.queue.abort(child.error());
                    } else {
                        cb(child);
                    }
                }
            });
            // Fork effects are non cancellables
        }

        function runJoinEffect(env, taskOrTasks, cb, _ref9) {
            var task = _ref9.task;

            var joinSingleTask = function joinSingleTask(taskToJoin, cb) {
                if (taskToJoin.isRunning()) {
                    var joiner = {
                        task: task,
                        cb: cb
                    };

                    cb.cancel = function() {
                        if (taskToJoin.isRunning())
                            Object(io_6de156f3["bb"/* r */
                            ])(taskToJoin.joiners, joiner);
                    }
                    ;

                    taskToJoin.joiners.push(joiner);
                } else {
                    if (taskToJoin.isAborted()) {
                        cb(taskToJoin.error(), true);
                    } else {
                        cb(taskToJoin.result());
                    }
                }
            };

            if (Object(redux_saga_is_esm["a"/* array */
            ])(taskOrTasks)) {
                if (taskOrTasks.length === 0) {
                    cb([]);
                    return;
                }

                var childCallbacks = Object(io_6de156f3["V"/* l */
                ])(taskOrTasks, cb);
                taskOrTasks.forEach(function(t, i) {
                    joinSingleTask(t, childCallbacks[i]);
                });
            } else {
                joinSingleTask(taskOrTasks, cb);
            }
        }

        function cancelSingleTask(taskToCancel) {
            if (taskToCancel.isRunning()) {
                taskToCancel.cancel();
            }
        }

        function runCancelEffect(env, taskOrTasks, cb, _ref10) {
            var task = _ref10.task;

            if (taskOrTasks === redux_saga_symbols_esm["h"/* SELF_CANCELLATION */
            ]) {
                cancelSingleTask(task);
            } else if (Object(redux_saga_is_esm["a"/* array */
            ])(taskOrTasks)) {
                taskOrTasks.forEach(cancelSingleTask);
            } else {
                cancelSingleTask(taskOrTasks);
            }

            cb();
            // cancel effects are non cancellables
        }

        function runAllEffect(env, effects, cb, _ref11) {
            var digestEffect = _ref11.digestEffect;
            var effectId = current;
            var keys = Object.keys(effects);

            if (keys.length === 0) {
                cb(Object(redux_saga_is_esm["a"/* array */
                ])(effects) ? [] : {});
                return;
            }

            var childCallbacks = Object(io_6de156f3["V"/* l */
            ])(effects, cb);
            keys.forEach(function(key) {
                digestEffect(effects[key], effectId, childCallbacks[key], key);
            });
        }

        function runRaceEffect(env, effects, cb, _ref12) {
            var digestEffect = _ref12.digestEffect;
            var effectId = current;
            var keys = Object.keys(effects);
            var response = Object(redux_saga_is_esm["a"/* array */
            ])(effects) ? Object(io_6de156f3["W"/* m */
            ])(keys.length) : {};
            var childCbs = {};
            var completed = false;
            keys.forEach(function(key) {
                var chCbAtKey = function chCbAtKey(res, isErr) {
                    if (completed) {
                        return;
                    }

                    if (isErr || Object(io_6de156f3["cb"/* s */
                    ])(res)) {
                        // Race Auto cancellation
                        cb.cancel();
                        cb(res, isErr);
                    } else {
                        cb.cancel();
                        completed = true;
                        response[key] = res;
                        cb(response);
                    }
                };

                chCbAtKey.cancel = io_6de156f3["db"/* t */
                ];
                childCbs[key] = chCbAtKey;
            });

            cb.cancel = function() {
                // prevents unnecessary cancellation
                if (!completed) {
                    completed = true;
                    keys.forEach(function(key) {
                        return childCbs[key].cancel();
                    });
                }
            }
            ;

            keys.forEach(function(key) {
                if (completed) {
                    return;
                }

                digestEffect(effects[key], effectId, childCbs[key], key);
            });
        }

        function runSelectEffect(env, _ref13, cb) {
            var selector = _ref13.selector
              , args = _ref13.args;

            try {
                var state = selector.apply(void 0, [env.getState()].concat(args));
                cb(state);
            } catch (error) {
                cb(error, true);
            }
        }

        function runChannelEffect(env, _ref14, cb) {
            var pattern = _ref14.pattern
              , buffer = _ref14.buffer;
            var chan = redux_saga_core_esm_channel(buffer);
            var match = redux_saga_core_esm_matcher(pattern);

            var taker = function taker(action) {
                if (!redux_saga_core_esm_isEnd(action)) {
                    env.channel.take(taker, match);
                }

                chan.put(action);
            };

            var close = chan.close;

            chan.close = function() {
                taker.cancel();
                close();
            }
            ;

            env.channel.take(taker, match);
            cb(chan);
        }

        function runCancelledEffect(env, data, cb, _ref15) {
            var task = _ref15.task;
            cb(task.isCancelled());
        }

        function runFlushEffect(env, channel, cb) {
            channel.flush(cb);
        }

        function runGetContextEffect(env, prop, cb, _ref16) {
            var task = _ref16.task;
            cb(task.context[prop]);
        }

        function runSetContextEffect(env, props, cb, _ref17) {
            var task = _ref17.task;
            Object(io_6de156f3["Z"/* p */
            ])(task.context, props);
            cb();
        }

        var effectRunnerMap = (_effectRunnerMap = {},
        _effectRunnerMap[io_6de156f3["u"/* T */
        ]] = runTakeEffect,
        _effectRunnerMap[io_6de156f3["q"/* P */
        ]] = runPutEffect,
        _effectRunnerMap[io_6de156f3["b"/* A */
        ]] = runAllEffect,
        _effectRunnerMap[io_6de156f3["s"/* R */
        ]] = runRaceEffect,
        _effectRunnerMap[io_6de156f3["d"/* C */
        ]] = runCallEffect,
        _effectRunnerMap[io_6de156f3["C"/* a */
        ]] = runCPSEffect,
        _effectRunnerMap[io_6de156f3["g"/* F */
        ]] = runForkEffect,
        _effectRunnerMap[io_6de156f3["k"/* J */
        ]] = runJoinEffect,
        _effectRunnerMap[io_6de156f3["L"/* b */
        ]] = runCancelEffect,
        _effectRunnerMap[io_6de156f3["t"/* S */
        ]] = runSelectEffect,
        _effectRunnerMap[io_6de156f3["N"/* d */
        ]] = runChannelEffect,
        _effectRunnerMap[io_6de156f3["P"/* f */
        ]] = runCancelledEffect,
        _effectRunnerMap[io_6de156f3["Q"/* g */
        ]] = runFlushEffect,
        _effectRunnerMap[io_6de156f3["h"/* G */
        ]] = runGetContextEffect,
        _effectRunnerMap[io_6de156f3["R"/* h */
        ]] = runSetContextEffect,
        _effectRunnerMap);

        /**
 Used to track a parent task and its forks
 In the fork model, forked tasks are attached by default to their parent
 We model this using the concept of Parent task && main Task
 main task is the main flow of the current Generator, the parent tasks is the
 aggregation of the main tasks + all its forked tasks.
 Thus the whole model represents an execution tree with multiple branches (vs the
 linear execution tree in sequential (non parallel) programming)

 A parent tasks has the following semantics
 - It completes if all its forks either complete or all cancelled
 - If it's cancelled, all forks are cancelled as well
 - It aborts if any uncaught error bubbles up from forks
 - If it completes, the return value is the one returned by the main task
 **/

        function forkQueue(mainTask, onAbort, cont) {
            var tasks = [];
            var result;
            var completed = false;
            addTask(mainTask);

            var getTasks = function getTasks() {
                return tasks;
            };

            function abort(err) {
                onAbort();
                cancelAll();
                cont(err, true);
            }

            function addTask(task) {
                tasks.push(task);

                task.cont = function(res, isErr) {
                    if (completed) {
                        return;
                    }

                    Object(io_6de156f3["bb"/* r */
                    ])(tasks, task);
                    task.cont = io_6de156f3["db"/* t */
                    ];

                    if (isErr) {
                        abort(res);
                    } else {
                        if (task === mainTask) {
                            result = res;
                        }

                        if (!tasks.length) {
                            completed = true;
                            cont(result);
                        }
                    }
                }
                ;
            }

            function cancelAll() {
                if (completed) {
                    return;
                }

                completed = true;
                tasks.forEach(function(t) {
                    t.cont = io_6de156f3["db"/* t */
                    ];
                    t.cancel();
                });
                tasks = [];
            }

            return {
                addTask: addTask,
                cancelAll: cancelAll,
                abort: abort,
                getTasks: getTasks
            };
        }

        // there can be only a single saga error created at any given moment

        function formatLocation(fileName, lineNumber) {
            return fileName + "?" + lineNumber;
        }

        function effectLocationAsString(effect) {
            var location = Object(io_6de156f3["fb"/* v */
            ])(effect);

            if (location) {
                var code = location.code
                  , fileName = location.fileName
                  , lineNumber = location.lineNumber;
                var source = code + "  " + formatLocation(fileName, lineNumber);
                return source;
            }

            return '';
        }

        function sagaLocationAsString(sagaMeta) {
            var name = sagaMeta.name
              , location = sagaMeta.location;

            if (location) {
                return name + "  " + formatLocation(location.fileName, location.lineNumber);
            }

            return name;
        }

        function cancelledTasksAsString(sagaStack) {
            var cancelledTasks = Object(io_6de156f3["eb"/* u */
            ])(function(i) {
                return i.cancelledTasks;
            }, sagaStack);

            if (!cancelledTasks.length) {
                return '';
            }

            return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\n');
        }

        var crashedEffect = null;
        var redux_saga_core_esm_sagaStack = [];
        var addSagaFrame = function addSagaFrame(frame) {
            frame.crashedEffect = crashedEffect;
            redux_saga_core_esm_sagaStack.push(frame);
        };
        var clear = function clear() {
            crashedEffect = null;
            redux_saga_core_esm_sagaStack.length = 0;
        };
        // this sets crashed effect for the soon-to-be-reported saga frame
        // this slightly streatches the singleton nature of this module into wrong direction
        // as it's even less obvious what's the data flow here, but it is what it is for now

        var setCrashedEffect = function setCrashedEffect(effect) {
            crashedEffect = effect;
        };
        /**
  @returns {string}

  @example
  The above error occurred in task errorInPutSaga {pathToFile}
  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}
      created by fetchSaga {pathToFile}
      created by rootSaga {pathToFile}
*/

        var redux_saga_core_esm_toString = function toString() {
            var firstSaga = redux_saga_core_esm_sagaStack[0]
              , otherSagas = redux_saga_core_esm_sagaStack.slice(1);
            var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;
            var errorMessage = "The above error occurred in task " + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? " \n when executing effect " + crashedEffectLocation : '');
            return [errorMessage].concat(otherSagas.map(function(s) {
                return "    created by " + sagaLocationAsString(s.meta);
            }), [cancelledTasksAsString(redux_saga_core_esm_sagaStack)]).join('\n');
        };

        function newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {
            var _task;

            if (cont === void 0) {
                cont = io_6de156f3["db"/* t */
                ];
            }

            var status = RUNNING;
            var taskResult;
            var taskError;
            var deferredEnd = null;
            var cancelledDueToErrorTasks = [];
            var context = Object.create(parentContext);
            var queue = forkQueue(mainTask, function onAbort() {
                cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function(t) {
                    return t.meta.name;
                }));
            }, end);
            /**
   This may be called by a parent generator to trigger/propagate cancellation
   cancel all pending tasks (including the main task), then end the current task.
    Cancellation propagates down to the whole execution tree held by this Parent task
   It's also propagated to all joiners of this task and their execution tree/joiners
    Cancellation is noop for terminated/Cancelled tasks tasks
   **/

            function cancel() {
                if (status === RUNNING) {
                    // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped
                    // effects in the iterator's finally block will still be executed
                    status = CANCELLED;
                    queue.cancelAll();
                    // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners

                    end(redux_saga_symbols_esm["j"/* TASK_CANCEL */
                    ], false);
                }
            }

            function end(result, isErr) {
                if (!isErr) {
                    // The status here may be RUNNING or CANCELLED
                    // If the status is CANCELLED, then we do not need to change it here
                    if (result === redux_saga_symbols_esm["j"/* TASK_CANCEL */
                    ]) {
                        status = CANCELLED;
                    } else if (status !== CANCELLED) {
                        status = DONE;
                    }

                    taskResult = result;
                    deferredEnd && deferredEnd.resolve(result);
                } else {
                    status = ABORTED;
                    addSagaFrame({
                        meta: meta,
                        cancelledTasks: cancelledDueToErrorTasks
                    });

                    if (task.isRoot) {
                        var sagaStack = redux_saga_core_esm_toString();
                        // we've dumped the saga stack to string and are passing it to user's code
                        // we know that it won't be needed anymore and we need to clear it

                        clear();
                        env.onError(result, {
                            sagaStack: sagaStack
                        });
                    }

                    taskError = result;
                    deferredEnd && deferredEnd.reject(result);
                }

                task.cont(result, isErr);
                task.joiners.forEach(function(joiner) {
                    joiner.cb(result, isErr);
                });
                task.joiners = null;
            }

            function setContext(props) {
                if (false) {}

                Object(io_6de156f3["Z"/* p */
                ])(context, props);
            }

            function toPromise() {
                if (deferredEnd) {
                    return deferredEnd.promise;
                }

                deferredEnd = redux_saga_deferred_esm();

                if (status === ABORTED) {
                    deferredEnd.reject(taskError);
                } else if (status !== RUNNING) {
                    deferredEnd.resolve(taskResult);
                }

                return deferredEnd.promise;
            }

            var task = (_task = {},
            _task[redux_saga_symbols_esm["i"/* TASK */
            ]] = true,
            _task.id = parentEffectId,
            _task.meta = meta,
            _task.isRoot = isRoot,
            _task.context = context,
            _task.joiners = [],
            _task.queue = queue,
            _task.cancel = cancel,
            _task.cont = cont,
            _task.end = end,
            _task.setContext = setContext,
            _task.toPromise = toPromise,
            _task.isRunning = function isRunning() {
                return status === RUNNING;
            }
            ,
            _task.isCancelled = function isCancelled() {
                return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;
            }
            ,
            _task.isAborted = function isAborted() {
                return status === ABORTED;
            }
            ,
            _task.result = function result() {
                return taskResult;
            }
            ,
            _task.error = function error() {
                return taskError;
            }
            ,
            _task);
            return task;
        }

        function proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {
            if (false) {}

            var finalRunEffect = env.finalizeRunEffect(runEffect);
            /**
    Tracks the current effect cancellation
    Each time the generator progresses. calling runEffect will set a new value
    on it. It allows propagating cancellation to child effects
  **/

            next.cancel = io_6de156f3["db"/* t */
            ];
            /** Creates a main task to track the main flow */

            var mainTask = {
                meta: meta,
                cancel: cancelMain,
                status: RUNNING
            };
            /**
   Creates a new task descriptor for this generator.
   A task is the aggregation of it's mainTask and all it's forked tasks.
   **/

            var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);
            var executingContext = {
                task: task,
                digestEffect: digestEffect
            };
            /**
    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL
  **/

            function cancelMain() {
                if (mainTask.status === RUNNING) {
                    mainTask.status = CANCELLED;
                    next(redux_saga_symbols_esm["j"/* TASK_CANCEL */
                    ]);
                }
            }
            /**
    attaches cancellation logic to this task's continuation
    this will permit cancellation to propagate down the call chain
  **/

            if (cont) {
                cont.cancel = task.cancel;
            }
            // kicks up the generator

            next();
            // then return the task descriptor to the caller

            return task;
            /**
   * This is the generator driver
   * It's a recursive async/continuation function which calls itself
   * until the generator terminates or throws
   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.
   * @param {boolean} isErr - the flag shows if effect finished with an error
   *
   * receives either (command | effect result, false) or (any thrown thing, true)
   */

            function next(arg, isErr) {
                try {
                    var result;

                    if (isErr) {
                        result = iterator$1.throw(arg);
                        // user handled the error, we can clear bookkept values

                        clear();
                    } else if (Object(io_6de156f3["gb"/* y */
                    ])(arg)) {
                        /**
          getting TASK_CANCEL automatically cancels the main task
          We can get this value here
           - By cancelling the parent task manually
          - By joining a Cancelled task
        **/
                        mainTask.status = CANCELLED;
                        /**
          Cancels the current effect; this will propagate the cancellation down to any called tasks
        **/

                        next.cancel();
                        /**
          If this Generator has a `return` method then invokes it
          This will jump to the finally block
        **/

                        result = Object(redux_saga_is_esm["d"/* func */
                        ])(iterator$1.return) ? iterator$1.return(redux_saga_symbols_esm["j"/* TASK_CANCEL */
                        ]) : {
                            done: true,
                            value: redux_saga_symbols_esm["j"/* TASK_CANCEL */
                            ]
                        };
                    } else if (Object(io_6de156f3["hb"/* z */
                    ])(arg)) {
                        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)
                        result = Object(redux_saga_is_esm["d"/* func */
                        ])(iterator$1.return) ? iterator$1.return() : {
                            done: true
                        };
                    } else {
                        result = iterator$1.next(arg);
                    }

                    if (!result.done) {
                        digestEffect(result.value, parentEffectId, next);
                    } else {
                        /**
          This Generator has ended, terminate the main task and notify the fork queue
        **/
                        if (mainTask.status !== CANCELLED) {
                            mainTask.status = DONE;
                        }

                        mainTask.cont(result.value);
                    }
                } catch (error) {
                    if (mainTask.status === CANCELLED) {
                        throw error;
                    }

                    mainTask.status = ABORTED;
                    mainTask.cont(error, true);
                }
            }

            function runEffect(effect, effectId, currCb) {
                /**
      each effect runner must attach its own logic of cancellation to the provided callback
      it allows this generator to propagate cancellation downward.
       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]
      And the setup must occur before calling the callback
       This is a sort of inversion of control: called async functions are responsible
      of completing the flow by calling the provided continuation; while caller functions
      are responsible for aborting the current flow by calling the attached cancel function
       Library users can attach their own cancellation logic to promises by defining a
      promise[CANCEL] method in their returned promises
      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect
    **/
                if (Object(redux_saga_is_esm["j"/* promise */
                ])(effect)) {
                    resolvePromise(effect, currCb);
                } else if (Object(redux_saga_is_esm["e"/* iterator */
                ])(effect)) {
                    // resolve iterator
                    proc(env, effect, task.context, effectId, meta, /* isRoot */
                    false, currCb);
                } else if (effect && effect[redux_saga_symbols_esm["c"/* IO */
                ]]) {
                    var effectRunner = effectRunnerMap[effect.type];
                    effectRunner(env, effect.payload, currCb, executingContext);
                } else {
                    // anything else returned as is
                    currCb(effect);
                }
            }

            function digestEffect(effect, parentEffectId, cb, label) {
                if (label === void 0) {
                    label = '';
                }

                var effectId = nextSagaId();
                env.sagaMonitor && env.sagaMonitor.effectTriggered({
                    effectId: effectId,
                    parentEffectId: parentEffectId,
                    label: label,
                    effect: effect
                });
                /**
      completion callback and cancel callback are mutually exclusive
      We can't cancel an already completed effect
      And We can't complete an already cancelled effectId
    **/

                var effectSettled;
                // Completion callback passed to the appropriate effect runner

                function currCb(res, isErr) {
                    if (effectSettled) {
                        return;
                    }

                    effectSettled = true;
                    cb.cancel = io_6de156f3["db"/* t */
                    ];
                    // defensive measure

                    if (env.sagaMonitor) {
                        if (isErr) {
                            env.sagaMonitor.effectRejected(effectId, res);
                        } else {
                            env.sagaMonitor.effectResolved(effectId, res);
                        }
                    }

                    if (isErr) {
                        setCrashedEffect(effect);
                    }

                    cb(res, isErr);
                }
                // tracks down the current cancel

                currCb.cancel = io_6de156f3["db"/* t */
                ];
                // setup cancellation logic on the parent cb

                cb.cancel = function() {
                    // prevents cancelling an already completed effect
                    if (effectSettled) {
                        return;
                    }

                    effectSettled = true;
                    currCb.cancel();
                    // propagates cancel downward

                    currCb.cancel = io_6de156f3["db"/* t */
                    ];
                    // defensive measure

                    env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);
                }
                ;

                finalRunEffect(effect, effectId, currCb);
            }
        }

        var RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';
        var NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ": saga argument must be a Generator function!";
        function runSaga(_ref, saga) {
            var _ref$channel = _ref.channel
              , channel = _ref$channel === void 0 ? stdChannel() : _ref$channel
              , dispatch = _ref.dispatch
              , getState = _ref.getState
              , _ref$context = _ref.context
              , context = _ref$context === void 0 ? {} : _ref$context
              , sagaMonitor = _ref.sagaMonitor
              , effectMiddlewares = _ref.effectMiddlewares
              , _ref$onError = _ref.onError
              , onError = _ref$onError === void 0 ? io_6de156f3["c"/* B */
            ] : _ref$onError;

            if (false) {}

            for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                args[_key - 2] = arguments[_key];
            }

            var iterator$1 = saga.apply(void 0, args);

            if (false) {}

            var effectId = nextSagaId();

            if (sagaMonitor) {
                // monitors are expected to have a certain interface, let's fill-in any missing ones
                sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || io_6de156f3["db"/* t */
                ];
                sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || io_6de156f3["db"/* t */
                ];
                sagaMonitor.effectResolved = sagaMonitor.effectResolved || io_6de156f3["db"/* t */
                ];
                sagaMonitor.effectRejected = sagaMonitor.effectRejected || io_6de156f3["db"/* t */
                ];
                sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || io_6de156f3["db"/* t */
                ];
                sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || io_6de156f3["db"/* t */
                ];
                sagaMonitor.rootSagaStarted({
                    effectId: effectId,
                    saga: saga,
                    args: args
                });
            }

            if (false) {
                var MIDDLEWARE_TYPE_ERROR;
            }

            var finalizeRunEffect;

            if (effectMiddlewares) {
                var middleware = redux["compose"].apply(void 0, effectMiddlewares);

                finalizeRunEffect = function finalizeRunEffect(runEffect) {
                    return function(effect, effectId, currCb) {
                        var plainRunEffect = function plainRunEffect(eff) {
                            return runEffect(eff, effectId, currCb);
                        };

                        return middleware(plainRunEffect)(effect);
                    }
                    ;
                }
                ;
            } else {
                finalizeRunEffect = io_6de156f3["f"/* E */
                ];
            }

            var env = {
                channel: channel,
                dispatch: Object(io_6de156f3["e"/* D */
                ])(dispatch),
                getState: getState,
                sagaMonitor: sagaMonitor,
                onError: onError,
                finalizeRunEffect: finalizeRunEffect
            };
            return immediately(function() {
                var task = proc(env, iterator$1, context, effectId, Object(io_6de156f3["T"/* j */
                ])(saga), /* isRoot */
                true, undefined);

                if (sagaMonitor) {
                    sagaMonitor.effectResolved(effectId, task);
                }

                return task;
            });
        }

        function sagaMiddlewareFactory(_temp) {
            var _ref = _temp === void 0 ? {} : _temp
              , _ref$context = _ref.context
              , context = _ref$context === void 0 ? {} : _ref$context
              , _ref$channel = _ref.channel
              , channel = _ref$channel === void 0 ? stdChannel() : _ref$channel
              , sagaMonitor = _ref.sagaMonitor
              , options = _objectWithoutPropertiesLoose(_ref, ["context", "channel", "sagaMonitor"]);

            var boundRunSaga;

            if (false) {}

            function sagaMiddleware(_ref2) {
                var getState = _ref2.getState
                  , dispatch = _ref2.dispatch;
                boundRunSaga = runSaga.bind(null, Object(esm_extends["a"/* default */
                ])({}, options, {
                    context: context,
                    channel: channel,
                    dispatch: dispatch,
                    getState: getState,
                    sagaMonitor: sagaMonitor
                }));
                return function(next) {
                    return function(action) {
                        if (sagaMonitor && sagaMonitor.actionDispatched) {
                            sagaMonitor.actionDispatched(action);
                        }

                        var result = next(action);
                        // hit reducers

                        channel.put(action);
                        return result;
                    }
                    ;
                }
                ;
            }

            sagaMiddleware.run = function() {
                if (false) {}

                return boundRunSaga.apply(void 0, arguments);
            }
            ;

            sagaMiddleware.setContext = function(props) {
                if (false) {}

                Object(io_6de156f3["Z"/* p */
                ])(context, props);
            }
            ;

            return sagaMiddleware;
        }

        /* harmony default export */
        var redux_saga_core_esm = (sagaMiddlewareFactory);

        // CONCATENATED MODULE: ../node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js
        /* concated harmony reexport CANCEL */
        __webpack_require__.d(__webpack_exports__, "CANCEL", function() {
            return redux_saga_symbols_esm["a"/* CANCEL */
            ];
        });
        /* concated harmony reexport SAGA_LOCATION */
        __webpack_require__.d(__webpack_exports__, "SAGA_LOCATION", function() {
            return redux_saga_symbols_esm["g"/* SAGA_LOCATION */
            ];
        });
        /* concated harmony reexport buffers */
        __webpack_require__.d(__webpack_exports__, "buffers", function() {
            return io_6de156f3["i"/* H */
            ];
        });
        /* concated harmony reexport detach */
        __webpack_require__.d(__webpack_exports__, "detach", function() {
            return io_6de156f3["j"/* I */
            ];
        });
        /* concated harmony reexport END */
        __webpack_require__.d(__webpack_exports__, "END", function() {
            return END;
        });
        /* concated harmony reexport channel */
        __webpack_require__.d(__webpack_exports__, "channel", function() {
            return redux_saga_core_esm_channel;
        });
        /* concated harmony reexport eventChannel */
        __webpack_require__.d(__webpack_exports__, "eventChannel", function() {
            return eventChannel;
        });
        /* concated harmony reexport isEnd */
        __webpack_require__.d(__webpack_exports__, "isEnd", function() {
            return redux_saga_core_esm_isEnd;
        });
        /* concated harmony reexport multicastChannel */
        __webpack_require__.d(__webpack_exports__, "multicastChannel", function() {
            return multicastChannel;
        });
        /* concated harmony reexport runSaga */
        __webpack_require__.d(__webpack_exports__, "runSaga", function() {
            return runSaga;
        });
        /* concated harmony reexport stdChannel */
        __webpack_require__.d(__webpack_exports__, "stdChannel", function() {
            return stdChannel;
        });

        /* harmony default export */
        var redux_saga_core_npm_proxy_esm = __webpack_exports__["default"] = (redux_saga_core_esm);

        /***/
    }
    ), /* 424 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/internal/SwitchBase.js
        var SwitchBase = __webpack_require__(105);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js
        var createSvgIcon = __webpack_require__(20);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var RadioButtonUnchecked = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
        }), 'RadioButtonUnchecked'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var RadioButtonChecked = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
        }), 'RadioButtonChecked'));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js

        var RadioButtonIcon_styles = function styles(theme) {
            return {
                root: {
                    position: 'relative',
                    display: 'flex',
                    '&$checked $layer': {
                        transform: 'scale(1)',
                        transition: theme.transitions.create('transform', {
                            easing: theme.transitions.easing.easeOut,
                            duration: theme.transitions.duration.shortest
                        })
                    }
                },
                layer: {
                    left: 0,
                    position: 'absolute',
                    transform: 'scale(0)',
                    transition: theme.transitions.create('transform', {
                        easing: theme.transitions.easing.easeIn,
                        duration: theme.transitions.duration.shortest
                    })
                },
                checked: {}
            };
        };
        /**
 * @ignore - internal component.
 */

        function RadioButtonIcon(props) {
            var checked = props.checked
              , classes = props.classes
              , fontSize = props.fontSize;
            return compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.root, checked && classes.checked)
            }, compat_module["default"].createElement(RadioButtonUnchecked, {
                fontSize: fontSize
            }), compat_module["default"].createElement(RadioButtonChecked, {
                fontSize: fontSize,
                className: classes.layer
            }));
        }

        false ? undefined : void 0;
        /* harmony default export */
        var Radio_RadioButtonIcon = (Object(withStyles["a"/* default */
        ])(RadioButtonIcon_styles, {
            name: 'PrivateRadioButtonIcon'
        })(RadioButtonIcon));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/colorManipulator.js
        var colorManipulator = __webpack_require__(9);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/capitalize.js
        var capitalize = __webpack_require__(7);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/createChainedFunction.js
        var createChainedFunction = __webpack_require__(47);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js
        var useRadioGroup = __webpack_require__(165);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Radio/Radio.js
        /* unused harmony export styles */

        var Radio_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    color: theme.palette.text.secondary
                },

                /* Pseudo-class applied to the root element if `checked={true}`. */
                checked: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    '&$checked': {
                        color: theme.palette.primary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                            // Reset on touch devices, it doesn't add specificity
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled
                    }
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    '&$checked': {
                        color: theme.palette.secondary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                            // Reset on touch devices, it doesn't add specificity
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled
                    }
                }
            };
        };
        var defaultCheckedIcon = compat_module["default"].createElement(Radio_RadioButtonIcon, {
            checked: true
        });
        var defaultIcon = compat_module["default"].createElement(Radio_RadioButtonIcon, null);
        var Radio_Radio = compat_module["default"].forwardRef(function Radio(props, ref) {
            var checkedProp = props.checked
              , classes = props.classes
              , _props$color = props.color
              , color = _props$color === void 0 ? 'secondary' : _props$color
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , nameProp = props.name
              , onChangeProp = props.onChange
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["checked", "classes", "color", "disabled", "name", "onChange", "size"]);

            var radioGroup = Object(useRadioGroup["a"/* default */
            ])();
            var checked = checkedProp;
            var onChange = Object(createChainedFunction["a"/* default */
            ])(onChangeProp, radioGroup && radioGroup.onChange);
            var name = nameProp;

            if (radioGroup) {
                if (typeof checked === 'undefined') {
                    checked = radioGroup.value === props.value;
                }

                if (typeof name === 'undefined') {
                    name = radioGroup.name;
                }
            }

            return compat_module["default"].createElement(SwitchBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                color: color,
                type: "radio",
                icon: compat_module["default"].cloneElement(defaultIcon, {
                    fontSize: size === 'small' ? 'small' : 'default'
                }),
                checkedIcon: compat_module["default"].cloneElement(defaultCheckedIcon, {
                    fontSize: size === 'small' ? 'small' : 'default'
                }),
                classes: {
                    root: Object(clsx_m["a"/* default */
                    ])(classes.root, classes["color".concat(Object(capitalize["a"/* default */
                    ])(color))]),
                    checked: classes.checked,
                    disabled: classes.disabled
                },
                name: name,
                checked: checked,
                onChange: onChange,
                ref: ref,
                disabled: disabled
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Radio_Radio = __webpack_exports__["a"] = (Object(withStyles["a"/* default */
        ])(Radio_styles, {
            name: 'MuiRadio'
        })(Radio_Radio));

        /***/
    }
    ), /* 425 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
        var slicedToArray = __webpack_require__(42);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
        var toConsumableArray = __webpack_require__(21);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/useTheme.js
        var useTheme = __webpack_require__(17);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/colorManipulator.js
        var colorManipulator = __webpack_require__(9);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/focusVisible.js
        var utils_focusVisible = __webpack_require__(72);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/ownerDocument.js
        var ownerDocument = __webpack_require__(23);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useEventCallback.js
        var useEventCallback = __webpack_require__(19);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useForkRef.js
        var useForkRef = __webpack_require__(13);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/capitalize.js
        var capitalize = __webpack_require__(7);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useControlled.js
        var useControlled = __webpack_require__(52);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Slider/ValueLabel.js

        var ValueLabel_styles = function styles(theme) {
            return {
                thumb: {
                    '&$open': {
                        '& $offset': {
                            transform: 'scale(1) translateY(-10px)'
                        }
                    }
                },
                open: {},
                offset: Object(esm_extends["a"/* default */
                ])({
                    zIndex: 1
                }, theme.typography.body2, {
                    fontSize: theme.typography.pxToRem(12),
                    lineHeight: 1.2,
                    transition: theme.transitions.create(['transform'], {
                        duration: theme.transitions.duration.shortest
                    }),
                    top: -34,
                    transformOrigin: 'bottom center',
                    transform: 'scale(0)',
                    position: 'absolute'
                }),
                circle: {
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: 32,
                    height: 32,
                    borderRadius: '50% 50% 50% 0',
                    backgroundColor: 'currentColor',
                    transform: 'rotate(-45deg)'
                },
                label: {
                    color: theme.palette.primary.contrastText,
                    transform: 'rotate(45deg)'
                }
            };
        };
        /**
 * @ignore - internal component.
 */

        function ValueLabel(props) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , open = props.open
              , value = props.value
              , valueLabelDisplay = props.valueLabelDisplay;

            if (valueLabelDisplay === 'off') {
                return children;
            }

            return compat_module["default"].cloneElement(children, {
                className: Object(clsx_m["a"/* default */
                ])(children.props.className, (open || valueLabelDisplay === 'on') && classes.open, classes.thumb)
            }, compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.offset, className)
            }, compat_module["default"].createElement("span", {
                className: classes.circle
            }, compat_module["default"].createElement("span", {
                className: classes.label
            }, value))));
        }

        /* harmony default export */
        var Slider_ValueLabel = (Object(withStyles["a"/* default */
        ])(ValueLabel_styles, {
            name: 'PrivateValueLabel'
        })(ValueLabel));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Slider/Slider.js
        /* unused harmony export styles */

        function asc(a, b) {
            return a - b;
        }

        function clamp(value, min, max) {
            return Math.min(Math.max(min, value), max);
        }

        function findClosest(values, currentValue) {
            var _values$reduce = values.reduce(function(acc, value, index) {
                var distance = Math.abs(currentValue - value);

                if (acc === null || distance < acc.distance || distance === acc.distance) {
                    return {
                        distance: distance,
                        index: index
                    };
                }

                return acc;
            }, null)
              , closestIndex = _values$reduce.index;

            return closestIndex;
        }

        function trackFinger(event, touchId) {
            if (touchId.current !== undefined && event.changedTouches) {
                for (var i = 0; i < event.changedTouches.length; i += 1) {
                    var touch = event.changedTouches[i];

                    if (touch.identifier === touchId.current) {
                        return {
                            x: touch.clientX,
                            y: touch.clientY
                        };
                    }
                }

                return false;
            }

            return {
                x: event.clientX,
                y: event.clientY
            };
        }

        function valueToPercent(value, min, max) {
            return (value - min) * 100 / (max - min);
        }

        function percentToValue(percent, min, max) {
            return (max - min) * percent + min;
        }

        function getDecimalPrecision(num) {
            // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.
            // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.
            if (Math.abs(num) < 1) {
                var parts = num.toExponential().split('e-');
                var matissaDecimalPart = parts[0].split('.')[1];
                return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
            }

            var decimalPart = num.toString().split('.')[1];
            return decimalPart ? decimalPart.length : 0;
        }

        function roundValueToStep(value, step, min) {
            var nearest = Math.round((value - min) / step) * step + min;
            return Number(nearest.toFixed(getDecimalPrecision(step)));
        }

        function setValueIndex(_ref) {
            var values = _ref.values
              , source = _ref.source
              , newValue = _ref.newValue
              , index = _ref.index;

            // Performance shortcut
            if (values[index] === newValue) {
                return source;
            }

            var output = Object(toConsumableArray["a"/* default */
            ])(values);

            output[index] = newValue;
            return output;
        }

        function focusThumb(_ref2) {
            var sliderRef = _ref2.sliderRef
              , activeIndex = _ref2.activeIndex
              , setActive = _ref2.setActive;

            if (!sliderRef.current.contains(document.activeElement) || Number(document.activeElement.getAttribute('data-index')) !== activeIndex) {
                sliderRef.current.querySelector("[data-index=\"".concat(activeIndex, "\"]")).focus();
            }

            if (setActive) {
                setActive(activeIndex);
            }
        }

        var axisProps = {
            horizontal: {
                offset: function offset(percent) {
                    return {
                        left: "".concat(percent, "%")
                    };
                },
                leap: function leap(percent) {
                    return {
                        width: "".concat(percent, "%")
                    };
                }
            },
            'horizontal-reverse': {
                offset: function offset(percent) {
                    return {
                        right: "".concat(percent, "%")
                    };
                },
                leap: function leap(percent) {
                    return {
                        width: "".concat(percent, "%")
                    };
                }
            },
            vertical: {
                offset: function offset(percent) {
                    return {
                        bottom: "".concat(percent, "%")
                    };
                },
                leap: function leap(percent) {
                    return {
                        height: "".concat(percent, "%")
                    };
                }
            }
        };
        var defaultMarks = [];

        var Identity = function Identity(x) {
            return x;
        };

        var Slider_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    height: 2,
                    width: '100%',
                    boxSizing: 'content-box',
                    padding: '13px 0',
                    display: 'inline-block',
                    position: 'relative',
                    cursor: 'pointer',
                    touchAction: 'none',
                    color: theme.palette.primary.main,
                    WebkitTapHighlightColor: 'transparent',
                    '&$disabled': {
                        pointerEvents: 'none',
                        cursor: 'default',
                        color: theme.palette.grey[400]
                    },
                    '&$vertical': {
                        width: 2,
                        height: '100%',
                        padding: '0 13px'
                    },
                    // The primary input mechanism of the device includes a pointing device of limited accuracy.
                    '@media (pointer: coarse)': {
                        // Reach 42px touch target, about ~8mm on screen.
                        padding: '20px 0',
                        '&$vertical': {
                            padding: '0 20px'
                        }
                    }
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {// TODO v5, move the style here
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main
                },

                /* Styles applied to the root element if `marks` is provided with at least one label. */
                marked: {
                    marginBottom: 20,
                    '&$vertical': {
                        marginBottom: 'auto',
                        marginRight: 20
                    }
                },

                /* Pseudo-class applied to the root element if `orientation="vertical"`. */
                vertical: {},

                /* Pseudo-class applied to the root and thumb element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the rail element. */
                rail: {
                    display: 'block',
                    position: 'absolute',
                    width: '100%',
                    height: 2,
                    borderRadius: 1,
                    backgroundColor: 'currentColor',
                    opacity: 0.38,
                    '$vertical &': {
                        height: '100%',
                        width: 2
                    }
                },

                /* Styles applied to the track element. */
                track: {
                    display: 'block',
                    position: 'absolute',
                    height: 2,
                    borderRadius: 1,
                    backgroundColor: 'currentColor',
                    '$vertical &': {
                        width: 2
                    }
                },

                /* Styles applied to the track element if `track={false}`. */
                trackFalse: {
                    '& $track': {
                        display: 'none'
                    }
                },

                /* Styles applied to the track element if `track="inverted"`. */
                trackInverted: {
                    '& $track': {
                        backgroundColor: // Same logic as the LinearProgress track color
                        theme.palette.type === 'light' ? Object(colorManipulator["i"/* lighten */
                        ])(theme.palette.primary.main, 0.62) : Object(colorManipulator["a"/* darken */
                        ])(theme.palette.primary.main, 0.5)
                    },
                    '& $rail': {
                        opacity: 1
                    }
                },

                /* Styles applied to the thumb element. */
                thumb: {
                    position: 'absolute',
                    width: 12,
                    height: 12,
                    marginLeft: -6,
                    marginTop: -5,
                    boxSizing: 'border-box',
                    borderRadius: '50%',
                    outline: 0,
                    backgroundColor: 'currentColor',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    transition: theme.transitions.create(['box-shadow'], {
                        duration: theme.transitions.duration.shortest
                    }),
                    '&::after': {
                        position: 'absolute',
                        content: '""',
                        borderRadius: '50%',
                        // reach 42px hit target (2 * 15 + thumb diameter)
                        left: -15,
                        top: -15,
                        right: -15,
                        bottom: -15
                    },
                    '&$focusVisible,&:hover': {
                        boxShadow: "0px 0px 0px 8px ".concat(Object(colorManipulator["d"/* fade */
                        ])(theme.palette.primary.main, 0.16)),
                        '@media (hover: none)': {
                            boxShadow: 'none'
                        }
                    },
                    '&$active': {
                        boxShadow: "0px 0px 0px 14px ".concat(Object(colorManipulator["d"/* fade */
                        ])(theme.palette.primary.main, 0.16))
                    },
                    '&$disabled': {
                        width: 8,
                        height: 8,
                        marginLeft: -4,
                        marginTop: -3,
                        '&:hover': {
                            boxShadow: 'none'
                        }
                    },
                    '$vertical &': {
                        marginLeft: -5,
                        marginBottom: -6
                    },
                    '$vertical &$disabled': {
                        marginLeft: -3,
                        marginBottom: -4
                    }
                },

                /* Styles applied to the thumb element if `color="primary"`. */
                thumbColorPrimary: {// TODO v5, move the style here
                },

                /* Styles applied to the thumb element if `color="secondary"`. */
                thumbColorSecondary: {
                    '&$focusVisible,&:hover': {
                        boxShadow: "0px 0px 0px 8px ".concat(Object(colorManipulator["d"/* fade */
                        ])(theme.palette.secondary.main, 0.16))
                    },
                    '&$active': {
                        boxShadow: "0px 0px 0px 14px ".concat(Object(colorManipulator["d"/* fade */
                        ])(theme.palette.secondary.main, 0.16))
                    }
                },

                /* Pseudo-class applied to the thumb element if it's active. */
                active: {},

                /* Pseudo-class applied to the thumb element if keyboard focused. */
                focusVisible: {},

                /* Styles applied to the thumb label element. */
                valueLabel: {},

                /* Styles applied to the mark element. */
                mark: {
                    position: 'absolute',
                    width: 2,
                    height: 2,
                    borderRadius: 1,
                    backgroundColor: 'currentColor'
                },

                /* Styles applied to the mark element if active (depending on the value). */
                markActive: {
                    backgroundColor: theme.palette.background.paper,
                    opacity: 0.8
                },

                /* Styles applied to the mark label element. */
                markLabel: Object(esm_extends["a"/* default */
                ])({}, theme.typography.body2, {
                    color: theme.palette.text.secondary,
                    position: 'absolute',
                    top: 26,
                    transform: 'translateX(-50%)',
                    whiteSpace: 'nowrap',
                    '$vertical &': {
                        top: 'auto',
                        left: 26,
                        transform: 'translateY(50%)'
                    },
                    '@media (pointer: coarse)': {
                        top: 40,
                        '$vertical &': {
                            left: 31
                        }
                    }
                }),

                /* Styles applied to the mark label element if active (depending on the value). */
                markLabelActive: {
                    color: theme.palette.text.primary
                }
            };
        };
        var Slider_Slider = compat_module["default"].forwardRef(function Slider(props, ref) {
            var ariaLabel = props['aria-label']
              , ariaLabelledby = props['aria-labelledby']
              , ariaValuetext = props['aria-valuetext']
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'span' : _props$component
              , defaultValue = props.defaultValue
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , getAriaLabel = props.getAriaLabel
              , getAriaValueText = props.getAriaValueText
              , _props$marks = props.marks
              , marksProp = _props$marks === void 0 ? defaultMarks : _props$marks
              , _props$max = props.max
              , max = _props$max === void 0 ? 100 : _props$max
              , _props$min = props.min
              , min = _props$min === void 0 ? 0 : _props$min
              , name = props.name
              , onChange = props.onChange
              , onChangeCommitted = props.onChangeCommitted
              , onMouseDown = props.onMouseDown
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , _props$scale = props.scale
              , scale = _props$scale === void 0 ? Identity : _props$scale
              , _props$step = props.step
              , step = _props$step === void 0 ? 1 : _props$step
              , _props$ThumbComponent = props.ThumbComponent
              , ThumbComponent = _props$ThumbComponent === void 0 ? 'span' : _props$ThumbComponent
              , _props$track = props.track
              , track = _props$track === void 0 ? 'normal' : _props$track
              , valueProp = props.value
              , _props$ValueLabelComp = props.ValueLabelComponent
              , ValueLabelComponent = _props$ValueLabelComp === void 0 ? Slider_ValueLabel : _props$ValueLabelComp
              , _props$valueLabelDisp = props.valueLabelDisplay
              , valueLabelDisplay = _props$valueLabelDisp === void 0 ? 'off' : _props$valueLabelDisp
              , _props$valueLabelForm = props.valueLabelFormat
              , valueLabelFormat = _props$valueLabelForm === void 0 ? Identity : _props$valueLabelForm
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["aria-label", "aria-labelledby", "aria-valuetext", "classes", "className", "color", "component", "defaultValue", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "ThumbComponent", "track", "value", "ValueLabelComponent", "valueLabelDisplay", "valueLabelFormat"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var touchId = compat_module["default"].useRef();
            // We can't use the :active browser pseudo-classes.
            // - The active state isn't triggered when clicking on the rail.
            // - The active state isn't transfered when inversing a range slider.

            var _React$useState = compat_module["default"].useState(-1)
              , active = _React$useState[0]
              , setActive = _React$useState[1];

            var _React$useState2 = compat_module["default"].useState(-1)
              , open = _React$useState2[0]
              , setOpen = _React$useState2[1];

            var _useControlled = Object(useControlled["a"/* default */
            ])({
                controlled: valueProp,
                default: defaultValue,
                name: 'Slider'
            })
              , _useControlled2 = Object(slicedToArray["a"/* default */
            ])(_useControlled, 2)
              , valueDerived = _useControlled2[0]
              , setValueState = _useControlled2[1];

            var range = Array.isArray(valueDerived);
            var instanceRef = compat_module["default"].useRef();
            var values = range ? Object(toConsumableArray["a"/* default */
            ])(valueDerived).sort(asc) : [valueDerived];
            values = values.map(function(value) {
                return clamp(value, min, max);
            });
            var marks = marksProp === true && step !== null ? Object(toConsumableArray["a"/* default */
            ])(Array(Math.floor((max - min) / step) + 1)).map(function(_, index) {
                return {
                    value: min + step * index
                };
            }) : marksProp;
            instanceRef.current = {
                source: valueDerived // Keep track of the input value to leverage immutable state comparison.

            };

            var _useIsFocusVisible = Object(utils_focusVisible["a"/* useIsFocusVisible */
            ])()
              , isFocusVisible = _useIsFocusVisible.isFocusVisible
              , onBlurVisible = _useIsFocusVisible.onBlurVisible
              , focusVisibleRef = _useIsFocusVisible.ref;

            var _React$useState3 = compat_module["default"].useState(-1)
              , focusVisible = _React$useState3[0]
              , setFocusVisible = _React$useState3[1];

            var sliderRef = compat_module["default"].useRef();
            var handleFocusRef = Object(useForkRef["a"/* default */
            ])(focusVisibleRef, sliderRef);
            var handleRef = Object(useForkRef["a"/* default */
            ])(ref, handleFocusRef);
            var handleFocus = Object(useEventCallback["a"/* default */
            ])(function(event) {
                var index = Number(event.currentTarget.getAttribute('data-index'));

                if (isFocusVisible(event)) {
                    setFocusVisible(index);
                }

                setOpen(index);
            });
            var handleBlur = Object(useEventCallback["a"/* default */
            ])(function() {
                if (focusVisible !== -1) {
                    setFocusVisible(-1);
                    onBlurVisible();
                }

                setOpen(-1);
            });
            var handleMouseOver = Object(useEventCallback["a"/* default */
            ])(function(event) {
                var index = Number(event.currentTarget.getAttribute('data-index'));
                setOpen(index);
            });
            var handleMouseLeave = Object(useEventCallback["a"/* default */
            ])(function() {
                setOpen(-1);
            });
            var handleKeyDown = Object(useEventCallback["a"/* default */
            ])(function(event) {
                var index = Number(event.currentTarget.getAttribute('data-index'));
                var value = values[index];
                var tenPercents = (max - min) / 10;
                var marksValues = marks.map(function(mark) {
                    return mark.value;
                });
                var marksIndex = marksValues.indexOf(value);
                var newValue;

                switch (event.key) {
                case 'Home':
                    newValue = min;
                    break;

                case 'End':
                    newValue = max;
                    break;

                case 'PageUp':
                    if (step) {
                        newValue = value + tenPercents;
                    }

                    break;

                case 'PageDown':
                    if (step) {
                        newValue = value - tenPercents;
                    }

                    break;

                case 'ArrowRight':
                case 'ArrowUp':
                    if (step) {
                        newValue = value + step;
                    } else {
                        newValue = marksValues[marksIndex + 1] || marksValues[marksValues.length - 1];
                    }

                    break;

                case 'ArrowLeft':
                case 'ArrowDown':
                    if (step) {
                        newValue = value - step;
                    } else {
                        newValue = marksValues[marksIndex - 1] || marksValues[0];
                    }

                    break;

                default:
                    return;
                }
                // Prevent scroll of the page

                event.preventDefault();

                if (step) {
                    newValue = roundValueToStep(newValue, step, min);
                }

                newValue = clamp(newValue, min, max);

                if (range) {
                    var previousValue = newValue;
                    newValue = setValueIndex({
                        values: values,
                        source: valueDerived,
                        newValue: newValue,
                        index: index
                    }).sort(asc);
                    focusThumb({
                        sliderRef: sliderRef,
                        activeIndex: newValue.indexOf(previousValue)
                    });
                }

                setValueState(newValue);
                setFocusVisible(index);

                if (onChange) {
                    onChange(event, newValue);
                }

                if (onChangeCommitted) {
                    onChangeCommitted(event, newValue);
                }
            });
            var previousIndex = compat_module["default"].useRef();
            var axis = orientation;

            if (theme.direction === 'rtl' && orientation !== "vertical") {
                axis += '-reverse';
            }

            var getFingerNewValue = compat_module["default"].useCallback(function(_ref3) {
                var finger = _ref3.finger
                  , _ref3$move = _ref3.move
                  , move = _ref3$move === void 0 ? false : _ref3$move
                  , values2 = _ref3.values
                  , source = _ref3.source;
                var slider = sliderRef.current;

                var _slider$getBoundingCl = slider.getBoundingClientRect()
                  , width = _slider$getBoundingCl.width
                  , height = _slider$getBoundingCl.height
                  , bottom = _slider$getBoundingCl.bottom
                  , left = _slider$getBoundingCl.left;

                var percent;

                if (axis.indexOf('vertical') === 0) {
                    percent = (bottom - finger.y) / height;
                } else {
                    percent = (finger.x - left) / width;
                }

                if (axis.indexOf('-reverse') !== -1) {
                    percent = 1 - percent;
                }

                var newValue;
                newValue = percentToValue(percent, min, max);

                if (step) {
                    newValue = roundValueToStep(newValue, step, min);
                } else {
                    var marksValues = marks.map(function(mark) {
                        return mark.value;
                    });
                    var closestIndex = findClosest(marksValues, newValue);
                    newValue = marksValues[closestIndex];
                }

                newValue = clamp(newValue, min, max);
                var activeIndex = 0;

                if (range) {
                    if (!move) {
                        activeIndex = findClosest(values2, newValue);
                    } else {
                        activeIndex = previousIndex.current;
                    }

                    var previousValue = newValue;
                    newValue = setValueIndex({
                        values: values2,
                        source: source,
                        newValue: newValue,
                        index: activeIndex
                    }).sort(asc);
                    activeIndex = newValue.indexOf(previousValue);
                    previousIndex.current = activeIndex;
                }

                return {
                    newValue: newValue,
                    activeIndex: activeIndex
                };
            }, [max, min, axis, range, step, marks]);
            var handleTouchMove = Object(useEventCallback["a"/* default */
            ])(function(event) {
                var finger = trackFinger(event, touchId);

                if (!finger) {
                    return;
                }

                var _getFingerNewValue = getFingerNewValue({
                    finger: finger,
                    move: true,
                    values: values,
                    source: valueDerived
                })
                  , newValue = _getFingerNewValue.newValue
                  , activeIndex = _getFingerNewValue.activeIndex;

                focusThumb({
                    sliderRef: sliderRef,
                    activeIndex: activeIndex,
                    setActive: setActive
                });
                setValueState(newValue);

                if (onChange) {
                    onChange(event, newValue);
                }
            });
            var handleTouchEnd = Object(useEventCallback["a"/* default */
            ])(function(event) {
                var finger = trackFinger(event, touchId);

                if (!finger) {
                    return;
                }

                var _getFingerNewValue2 = getFingerNewValue({
                    finger: finger,
                    values: values,
                    source: valueDerived
                })
                  , newValue = _getFingerNewValue2.newValue;

                setActive(-1);

                if (event.type === 'touchend') {
                    setOpen(-1);
                }

                if (onChangeCommitted) {
                    onChangeCommitted(event, newValue);
                }

                touchId.current = undefined;
                var doc = Object(ownerDocument["a"/* default */
                ])(sliderRef.current);
                doc.removeEventListener('mousemove', handleTouchMove);
                doc.removeEventListener('mouseup', handleTouchEnd);
                doc.removeEventListener('touchmove', handleTouchMove);
                doc.removeEventListener('touchend', handleTouchEnd);
            });
            var handleTouchStart = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // Workaround as Safari has partial support for touchAction: 'none'.
                event.preventDefault();
                var touch = event.changedTouches[0];

                if (touch != null) {
                    // A number that uniquely identifies the current finger in the touch session.
                    touchId.current = touch.identifier;
                }

                var finger = trackFinger(event, touchId);

                var _getFingerNewValue3 = getFingerNewValue({
                    finger: finger,
                    values: values,
                    source: valueDerived
                })
                  , newValue = _getFingerNewValue3.newValue
                  , activeIndex = _getFingerNewValue3.activeIndex;

                focusThumb({
                    sliderRef: sliderRef,
                    activeIndex: activeIndex,
                    setActive: setActive
                });
                setValueState(newValue);

                if (onChange) {
                    onChange(event, newValue);
                }

                var doc = Object(ownerDocument["a"/* default */
                ])(sliderRef.current);
                doc.addEventListener('touchmove', handleTouchMove);
                doc.addEventListener('touchend', handleTouchEnd);
            });
            compat_module["default"].useEffect(function() {
                var slider = sliderRef.current;
                slider.addEventListener('touchstart', handleTouchStart);
                var doc = Object(ownerDocument["a"/* default */
                ])(slider);
                return function() {
                    slider.removeEventListener('touchstart', handleTouchStart);
                    doc.removeEventListener('mousemove', handleTouchMove);
                    doc.removeEventListener('mouseup', handleTouchEnd);
                    doc.removeEventListener('touchmove', handleTouchMove);
                    doc.removeEventListener('touchend', handleTouchEnd);
                }
                ;
            }, [handleTouchEnd, handleTouchMove, handleTouchStart]);
            var handleMouseDown = Object(useEventCallback["a"/* default */
            ])(function(event) {
                if (onMouseDown) {
                    onMouseDown(event);
                }

                event.preventDefault();
                var finger = trackFinger(event, touchId);

                var _getFingerNewValue4 = getFingerNewValue({
                    finger: finger,
                    values: values,
                    source: valueDerived
                })
                  , newValue = _getFingerNewValue4.newValue
                  , activeIndex = _getFingerNewValue4.activeIndex;

                focusThumb({
                    sliderRef: sliderRef,
                    activeIndex: activeIndex,
                    setActive: setActive
                });
                setValueState(newValue);

                if (onChange) {
                    onChange(event, newValue);
                }

                var doc = Object(ownerDocument["a"/* default */
                ])(sliderRef.current);
                doc.addEventListener('mousemove', handleTouchMove);
                doc.addEventListener('mouseup', handleTouchEnd);
            });
            var trackOffset = valueToPercent(range ? values[0] : min, min, max);
            var trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;

            var trackStyle = Object(esm_extends["a"/* default */
            ])({}, axisProps[axis].offset(trackOffset), {}, axisProps[axis].leap(trackLeap));

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                ref: handleRef,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], className, disabled && classes.disabled, marks.length > 0 && marks.some(function(mark) {
                    return mark.label;
                }) && classes.marked, track === false && classes.trackFalse, {
                    vertical: classes.vertical
                }[orientation], {
                    inverted: classes.trackInverted
                }[track]),
                onMouseDown: handleMouseDown
            }, other), compat_module["default"].createElement("span", {
                className: classes.rail
            }), compat_module["default"].createElement("span", {
                className: classes.track,
                style: trackStyle
            }), compat_module["default"].createElement("input", {
                value: values.join(','),
                name: name,
                type: "hidden"
            }), marks.map(function(mark) {
                var percent = valueToPercent(mark.value, min, max);
                var style = axisProps[axis].offset(percent);
                var markActive;

                if (track === false) {
                    markActive = values.indexOf(mark.value) !== -1;
                } else {
                    markActive = track === 'normal' && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === 'inverted' && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
                }

                return compat_module["default"].createElement(compat_module["default"].Fragment, {
                    key: mark.value
                }, compat_module["default"].createElement("span", {
                    style: style,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.mark, markActive && classes.markActive)
                }), compat_module["default"].createElement("span", {
                    "aria-hidden": true,
                    style: style,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.markLabel, markActive && classes.markLabelActive)
                }, mark.label));
            }), values.map(function(value, index) {
                var percent = valueToPercent(value, min, max);
                var style = axisProps[axis].offset(percent);
                return compat_module["default"].createElement(ValueLabelComponent, {
                    key: index,
                    valueLabelFormat: valueLabelFormat,
                    valueLabelDisplay: valueLabelDisplay,
                    className: classes.valueLabel,
                    value: typeof valueLabelFormat === 'function' ? valueLabelFormat(scale(value), index) : valueLabelFormat,
                    index: index,
                    open: open === index || active === index || valueLabelDisplay === 'on',
                    disabled: disabled
                }, compat_module["default"].createElement(ThumbComponent, {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.thumb, classes["thumbColor".concat(Object(capitalize["a"/* default */
                    ])(color))], active === index && classes.active, disabled && classes.disabled, focusVisible === index && classes.focusVisible),
                    tabIndex: disabled ? null : 0,
                    role: "slider",
                    style: style,
                    "data-index": index,
                    "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
                    "aria-labelledby": ariaLabelledby,
                    "aria-orientation": orientation,
                    "aria-valuemax": scale(max),
                    "aria-valuemin": scale(min),
                    "aria-valuenow": scale(value),
                    "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
                    onKeyDown: handleKeyDown,
                    onFocus: handleFocus,
                    onBlur: handleBlur,
                    onMouseOver: handleMouseOver,
                    onMouseLeave: handleMouseLeave
                }));
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Slider_Slider = __webpack_exports__["a"] = (Object(withStyles["a"/* default */
        ])(Slider_styles, {
            name: 'MuiSlider'
        })(Slider_Slider));

        /***/
    }
    ), /* 426 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js
        var mergeClasses = __webpack_require__(774);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
        var toConsumableArray = __webpack_require__(21);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
        var slicedToArray = __webpack_require__(42);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
        var esm_typeof = __webpack_require__(58);

        // EXTERNAL MODULE: ../node_modules/react-is/index.js
        var react_is = __webpack_require__(37);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/capitalize.js
        var capitalize = __webpack_require__(7);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Menu/Menu.js
        var Menu = __webpack_require__(428);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/InputBase/utils.js
        var utils = __webpack_require__(80);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useForkRef.js
        var useForkRef = __webpack_require__(13);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useControlled.js
        var useControlled = __webpack_require__(52);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Select/SelectInput.js

        function areEqualValues(a, b) {
            if (Object(esm_typeof["a"/* default */
            ])(b) === 'object' && b !== null) {
                return a === b;
            }

            return String(a) === String(b);
        }

        function isEmpty(display) {
            return display == null || typeof display === 'string' && !display.trim();
        }
        /**
 * @ignore - internal component.
 */

        var SelectInput_SelectInput = compat_module["default"].forwardRef(function SelectInput(props, ref) {
            var autoFocus = props.autoFocus
              , autoWidth = props.autoWidth
              , children = props.children
              , classes = props.classes
              , className = props.className
              , defaultValue = props.defaultValue
              , disabled = props.disabled
              , displayEmpty = props.displayEmpty
              , IconComponent = props.IconComponent
              , inputRefProp = props.inputRef
              , labelId = props.labelId
              , _props$MenuProps = props.MenuProps
              , MenuProps = _props$MenuProps === void 0 ? {} : _props$MenuProps
              , multiple = props.multiple
              , name = props.name
              , onBlur = props.onBlur
              , onChange = props.onChange
              , onClose = props.onClose
              , onFocus = props.onFocus
              , onOpen = props.onOpen
              , openProp = props.open
              , readOnly = props.readOnly
              , renderValue = props.renderValue
              , required = props.required
              , _props$SelectDisplayP = props.SelectDisplayProps
              , SelectDisplayProps = _props$SelectDisplayP === void 0 ? {} : _props$SelectDisplayP
              , tabIndexProp = props.tabIndex
              , type = props.type
              , valueProp = props.value
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["autoFocus", "autoWidth", "children", "classes", "className", "defaultValue", "disabled", "displayEmpty", "IconComponent", "inputRef", "labelId", "MenuProps", "multiple", "name", "onBlur", "onChange", "onClose", "onFocus", "onOpen", "open", "readOnly", "renderValue", "required", "SelectDisplayProps", "tabIndex", "type", "value", "variant"]);

            var _useControlled = Object(useControlled["a"/* default */
            ])({
                controlled: valueProp,
                default: defaultValue,
                name: 'SelectInput'
            })
              , _useControlled2 = Object(slicedToArray["a"/* default */
            ])(_useControlled, 2)
              , value = _useControlled2[0]
              , setValue = _useControlled2[1];

            var inputRef = compat_module["default"].useRef(null);

            var _React$useState = compat_module["default"].useState(null)
              , displayNode = _React$useState[0]
              , setDisplayNode = _React$useState[1];

            var _React$useRef = compat_module["default"].useRef(openProp != null)
              , isOpenControlled = _React$useRef.current;

            var _React$useState2 = compat_module["default"].useState()
              , menuMinWidthState = _React$useState2[0]
              , setMenuMinWidthState = _React$useState2[1];

            var _React$useState3 = compat_module["default"].useState(false)
              , openState = _React$useState3[0]
              , setOpenState = _React$useState3[1];

            var handleRef = Object(useForkRef["a"/* default */
            ])(ref, inputRefProp);
            compat_module["default"].useImperativeHandle(handleRef, function() {
                return {
                    focus: function focus() {
                        displayNode.focus();
                    },
                    node: inputRef.current,
                    value: value
                };
            }, [displayNode, value]);
            compat_module["default"].useEffect(function() {
                if (autoFocus && displayNode) {
                    displayNode.focus();
                }
            }, [autoFocus, displayNode]);

            var update = function update(open, event) {
                if (open) {
                    if (onOpen) {
                        onOpen(event);
                    }
                } else if (onClose) {
                    onClose(event);
                }

                if (!isOpenControlled) {
                    setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);
                    setOpenState(open);
                }
            };

            var handleMouseDown = function handleMouseDown(event) {
                // Hijack the default focus behavior.
                event.preventDefault();
                displayNode.focus();
                update(true, event);
            };

            var handleClose = function handleClose(event) {
                update(false, event);
            };

            var handleItemClick = function handleItemClick(child) {
                return function(event) {
                    if (!multiple) {
                        update(false, event);
                    }

                    var newValue;

                    if (multiple) {
                        newValue = Array.isArray(value) ? Object(toConsumableArray["a"/* default */
                        ])(value) : [];
                        var itemIndex = value.indexOf(child.props.value);

                        if (itemIndex === -1) {
                            newValue.push(child.props.value);
                        } else {
                            newValue.splice(itemIndex, 1);
                        }
                    } else {
                        newValue = child.props.value;
                    }

                    setValue(newValue);

                    if (onChange) {
                        event.persist();
                        // Preact support, target is read only property on a native event.

                        Object.defineProperty(event, 'target', {
                            writable: true,
                            value: {
                                value: newValue,
                                name: name
                            }
                        });
                        onChange(event, child);
                    }
                }
                ;
            };

            var handleKeyDown = function handleKeyDown(event) {
                if (!readOnly) {
                    var validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by
                    // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html
                    'Enter'];

                    if (validKeys.indexOf(event.key) !== -1) {
                        event.preventDefault();
                        update(true, event);
                    }
                }
            };

            var open = displayNode !== null && (isOpenControlled ? openProp : openState);

            var handleBlur = function handleBlur(event) {
                // if open event.stopImmediatePropagation
                if (!open && onBlur) {
                    event.persist();
                    // Preact support, target is read only property on a native event.

                    Object.defineProperty(event, 'target', {
                        writable: true,
                        value: {
                            value: value,
                            name: name
                        }
                    });
                    onBlur(event);
                }
            };

            delete other['aria-invalid'];
            var display;
            var displaySingle;
            var displayMultiple = [];
            var computeDisplay = false;
            var foundMatch = false;
            // No need to display any value if the field is empty.

            if (Object(utils["b"/* isFilled */
            ])({
                value: value
            }) || displayEmpty) {
                if (renderValue) {
                    display = renderValue(value);
                } else {
                    computeDisplay = true;
                }
            }

            var items = compat_module["default"].Children.map(children, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                var selected;

                if (multiple) {
                    if (!Array.isArray(value)) {
                        throw new Error('Material-UI: the `value` prop must be an array ' + 'when using the `Select` component with `multiple`.');
                    }

                    selected = value.some(function(v) {
                        return areEqualValues(v, child.props.value);
                    });

                    if (selected && computeDisplay) {
                        displayMultiple.push(child.props.children);
                    }
                } else {
                    selected = areEqualValues(value, child.props.value);

                    if (selected && computeDisplay) {
                        displaySingle = child.props.children;
                    }
                }

                if (selected) {
                    foundMatch = true;
                }

                return compat_module["default"].cloneElement(child, {
                    'aria-selected': selected ? 'true' : undefined,
                    onClick: handleItemClick(child),
                    onKeyUp: function onKeyUp(event) {
                        if (event.key === ' ') {
                            // otherwise our MenuItems dispatches a click event
                            // it's not behavior of the native <option> and causes
                            // the select to close immediately since we open on space keydown
                            event.preventDefault();
                        }

                        var onKeyUp = child.props.onKeyUp;

                        if (typeof onKeyUp === 'function') {
                            onKeyUp(event);
                        }
                    },
                    role: 'option',
                    selected: selected,
                    value: undefined,
                    // The value is most likely not a valid HTML attribute.
                    'data-value': child.props.value // Instead, we provide it as a data attribute.

                });
            });

            if (false) {}

            if (computeDisplay) {
                display = multiple ? displayMultiple.join(', ') : displaySingle;
            }
            // Avoid performing a layout computation in the render method.

            var menuMinWidth = menuMinWidthState;

            if (!autoWidth && isOpenControlled && displayNode) {
                menuMinWidth = displayNode.clientWidth;
            }

            var tabIndex;

            if (typeof tabIndexProp !== 'undefined') {
                tabIndex = tabIndexProp;
            } else {
                tabIndex = disabled ? null : 0;
            }

            var buttonId = SelectDisplayProps.id || (name ? "mui-component-select-".concat(name) : undefined);
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, // TODO v5: merge root and select
                classes.select, classes.selectMenu, classes[variant], className, disabled && classes.disabled),
                ref: setDisplayNode,
                tabIndex: tabIndex,
                role: "button",
                "aria-expanded": open ? 'true' : undefined,
                "aria-labelledby": "".concat(labelId || '', " ").concat(buttonId || ''),
                "aria-haspopup": "listbox",
                onKeyDown: handleKeyDown,
                onMouseDown: disabled || readOnly ? null : handleMouseDown,
                onBlur: handleBlur,
                onFocus: onFocus
            }, SelectDisplayProps, {
                // The id is required for proper a11y
                id: buttonId
            }), isEmpty(display) ? // eslint-disable-next-line react/no-danger
            compat_module["default"].createElement("span", {
                dangerouslySetInnerHTML: {
                    __html: '&#8203;'
                }
            }) : display), compat_module["default"].createElement("input", Object(esm_extends["a"/* default */
            ])({
                value: Array.isArray(value) ? value.join(',') : value,
                name: name,
                ref: inputRef,
                type: "hidden",
                autoFocus: autoFocus
            }, other)), compat_module["default"].createElement(IconComponent, {
                className: Object(clsx_m["a"/* default */
                ])(classes.icon, classes["icon".concat(Object(capitalize["a"/* default */
                ])(variant))], open && classes.iconOpen)
            }), compat_module["default"].createElement(Menu["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                id: "menu-".concat(name || ''),
                anchorEl: displayNode,
                open: open,
                onClose: handleClose
            }, MenuProps, {
                MenuListProps: Object(esm_extends["a"/* default */
                ])({
                    'aria-labelledby': labelId,
                    role: 'listbox',
                    disableListWrap: true
                }, MenuProps.MenuListProps),
                PaperProps: Object(esm_extends["a"/* default */
                ])({}, MenuProps.PaperProps, {
                    style: Object(esm_extends["a"/* default */
                    ])({
                        minWidth: menuMinWidth
                    }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)
                })
            }), items));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var Select_SelectInput = (SelectInput_SelectInput);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/formControlState.js
        var formControlState = __webpack_require__(51);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/useFormControl.js
        var useFormControl = __webpack_require__(39);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDropDown.js
        var ArrowDropDown = __webpack_require__(181);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Input/Input.js
        var Input = __webpack_require__(252);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js
        var NativeSelect = __webpack_require__(427);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/NativeSelect/NativeSelectInput.js
        var NativeSelectInput = __webpack_require__(182);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FilledInput/FilledInput.js
        var FilledInput = __webpack_require__(778);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js + 1 modules
        var OutlinedInput = __webpack_require__(780);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Select/Select.js
        /* unused harmony export styles */

        var styles = NativeSelect["b"/* styles */
        ];

        var _ref = compat_module["default"].createElement(Input["a"/* default */
        ], null);

        var _ref2 = compat_module["default"].createElement(FilledInput["a"/* default */
        ], null);

        var Select_Select = compat_module["default"].forwardRef(function Select(props, ref) {
            var _props$autoWidth = props.autoWidth
              , autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth
              , children = props.children
              , classes = props.classes
              , _props$displayEmpty = props.displayEmpty
              , displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty
              , _props$IconComponent = props.IconComponent
              , IconComponent = _props$IconComponent === void 0 ? ArrowDropDown["a"/* default */
            ] : _props$IconComponent
              , id = props.id
              , input = props.input
              , inputProps = props.inputProps
              , label = props.label
              , labelId = props.labelId
              , _props$labelWidth = props.labelWidth
              , labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth
              , MenuProps = props.MenuProps
              , _props$multiple = props.multiple
              , multiple = _props$multiple === void 0 ? false : _props$multiple
              , _props$native = props.native
              , native = _props$native === void 0 ? false : _props$native
              , onClose = props.onClose
              , onOpen = props.onOpen
              , open = props.open
              , renderValue = props.renderValue
              , SelectDisplayProps = props.SelectDisplayProps
              , _props$variant = props.variant
              , variantProps = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["autoWidth", "children", "classes", "displayEmpty", "IconComponent", "id", "input", "inputProps", "label", "labelId", "labelWidth", "MenuProps", "multiple", "native", "onClose", "onOpen", "open", "renderValue", "SelectDisplayProps", "variant"]);

            var inputComponent = native ? NativeSelectInput["a"/* default */
            ] : Select_SelectInput;
            var muiFormControl = Object(useFormControl["a"/* default */
            ])();
            var fcs = Object(formControlState["a"/* default */
            ])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['variant']
            });
            var variant = fcs.variant || variantProps;
            var InputComponent = input || {
                standard: _ref,
                outlined: compat_module["default"].createElement(OutlinedInput["a"/* default */
                ], {
                    label: label,
                    labelWidth: labelWidth
                }),
                filled: _ref2
            }[variant];
            return compat_module["default"].cloneElement(InputComponent, Object(esm_extends["a"/* default */
            ])({
                // Most of the logic is implemented in `SelectInput`.
                // The `Select` component is a simple API wrapper to expose something better to play with.
                inputComponent: inputComponent,
                inputProps: Object(esm_extends["a"/* default */
                ])({
                    children: children,
                    IconComponent: IconComponent,
                    variant: variant,
                    type: undefined,
                    // We render a select. We can ignore the type provided by the `Input`.
                    multiple: multiple
                }, native ? {
                    id: id
                } : {
                    autoWidth: autoWidth,
                    displayEmpty: displayEmpty,
                    labelId: labelId,
                    MenuProps: MenuProps,
                    onClose: onClose,
                    onOpen: onOpen,
                    open: open,
                    renderValue: renderValue,
                    SelectDisplayProps: Object(esm_extends["a"/* default */
                    ])({
                        id: id
                    }, SelectDisplayProps)
                }, {}, inputProps, {
                    classes: inputProps ? Object(mergeClasses["a"/* default */
                    ])({
                        baseClasses: classes,
                        newClasses: inputProps.classes,
                        Component: Select
                    }) : classes
                }, input ? input.props.inputProps : {}),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        Select_Select.muiName = 'Select';
        /* harmony default export */
        var esm_Select_Select = __webpack_exports__["a"] = (Object(withStyles["a"/* default */
        ])(styles, {
            name: 'MuiSelect'
        })(Select_Select));

        /***/
    }
    ), /* 427 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function() {
            return styles;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var _NativeSelectInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(182);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _FormControl_formControlState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51);
        /* harmony import */
        var _FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39);
        /* harmony import */
        var _internal_svg_icons_ArrowDropDown__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(181);
        /* harmony import */
        var _Input__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(252);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the select component `root` class. */
                root: {},

                /* Styles applied to the select component `select` class. */
                select: {
                    '-moz-appearance': 'none',
                    // Reset
                    '-webkit-appearance': 'none',
                    // Reset
                    // When interacting quickly, the text can end up selected.
                    // Native select can't be selected either.
                    userSelect: 'none',
                    borderRadius: 0,
                    // Reset
                    minWidth: 16,
                    // So it doesn't collapse.
                    cursor: 'pointer',
                    '&:focus': {
                        // Show that it's not an text input
                        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
                        borderRadius: 0 // Reset Chrome style

                    },
                    // Remove IE 11 arrow
                    '&::-ms-expand': {
                        display: 'none'
                    },
                    '&$disabled': {
                        cursor: 'default'
                    },
                    '&[multiple]': {
                        height: 'auto'
                    },
                    '&:not([multiple]) option, &:not([multiple]) optgroup': {
                        backgroundColor: theme.palette.background.paper
                    },
                    '&&': {
                        paddingRight: 24
                    }
                },

                /* Styles applied to the select component if `variant="filled"`. */
                filled: {
                    '&&': {
                        paddingRight: 32
                    }
                },

                /* Styles applied to the select component if `variant="outlined"`. */
                outlined: {
                    borderRadius: theme.shape.borderRadius,
                    '&&': {
                        paddingRight: 32
                    }
                },

                /* Styles applied to the select component `selectMenu` class. */
                selectMenu: {
                    height: 'auto',
                    // Reset
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap',
                    overflow: 'hidden'
                },

                /* Pseudo-class applied to the select component `disabled` class. */
                disabled: {},

                /* Styles applied to the icon component. */
                icon: {
                    // We use a position absolute over a flexbox in order to forward the pointer events
                    // to the input and to support wrapping tags..
                    position: 'absolute',
                    right: 0,
                    top: 'calc(50% - 12px)',
                    // Center vertically
                    color: theme.palette.action.active,
                    pointerEvents: 'none'// Don't block pointer events on the select under the icon.

                },

                /* Styles applied to the icon component if the popup is open. */
                iconOpen: {
                    transform: 'rotate(180deg)'
                },

                /* Styles applied to the icon component if `variant="filled"`. */
                iconFilled: {
                    right: 7
                },

                /* Styles applied to the icon component if `variant="outlined"`. */
                iconOutlined: {
                    right: 7
                }
            };
        };
        var defaultInput = react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_Input__WEBPACK_IMPORTED_MODULE_9__[/* default */
        "a"], null);
        /**
 * An alternative to `<Select native />` with a much smaller bundle size footprint.
 */

        var NativeSelect = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function NativeSelect(props, ref) {
            var children = props.children
              , classes = props.classes
              , _props$IconComponent = props.IconComponent
              , IconComponent = _props$IconComponent === void 0 ? _internal_svg_icons_ArrowDropDown__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"] : _props$IconComponent
              , _props$input = props.input
              , input = _props$input === void 0 ? defaultInput : _props$input
              , inputProps = props.inputProps
              , variant = props.variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "classes", "IconComponent", "input", "inputProps", "variant"]);

            var muiFormControl = Object(_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"])();
            var fcs = Object(_FormControl_formControlState__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['variant']
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].cloneElement(input, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                // Most of the logic is implemented in `NativeSelectInput`.
                // The `Select` component is a simple API wrapper to expose something better to play with.
                inputComponent: _NativeSelectInput__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"],
                inputProps: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    children: children,
                    classes: classes,
                    IconComponent: IconComponent,
                    variant: fcs.variant,
                    type: undefined
                }, inputProps, {}, input ? input.props.inputProps : {}),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        NativeSelect.muiName = 'Select';
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiNativeSelect'
        })(NativeSelect));

        /***/
    }
    ), /* 428 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37);
        /* harmony import */
        var react_is__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);
        /* harmony import */
        var _Popover__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(759);
        /* harmony import */
        var _MenuList__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(762);
        /* harmony import */
        var _utils_setRef__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(33);
        /* harmony import */
        var _styles_useTheme__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(17);

        var RTL_ORIGIN = {
            vertical: 'top',
            horizontal: 'right'
        };
        var LTR_ORIGIN = {
            vertical: 'top',
            horizontal: 'left'
        };
        var styles = {
            /* Styles applied to the `Paper` component. */
            paper: {
                // specZ: The maximum height of a simple menu should be one or more rows less than the view
                // height. This ensures a tapable area outside of the simple menu with which to dismiss
                // the menu.
                maxHeight: 'calc(100% - 96px)',
                // Add iOS momentum scrolling.
                WebkitOverflowScrolling: 'touch'
            },

            /* Styles applied to the `List` component via `MenuList`. */
            list: {
                // We disable the focus ring for mouse, touch and keyboard users.
                outline: 0
            }
        };
        var Menu = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Menu(props, ref) {
            var _props$autoFocus = props.autoFocus
              , autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus
              , children = props.children
              , classes = props.classes
              , _props$disableAutoFoc = props.disableAutoFocusItem
              , disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc
              , _props$MenuListProps = props.MenuListProps
              , MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps
              , onClose = props.onClose
              , onEntering = props.onEntering
              , open = props.open
              , _props$PaperProps = props.PaperProps
              , PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps
              , PopoverClasses = props.PopoverClasses
              , _props$transitionDura = props.transitionDuration
              , transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["autoFocus", "children", "classes", "disableAutoFocusItem", "MenuListProps", "onClose", "onEntering", "open", "PaperProps", "PopoverClasses", "transitionDuration", "variant"]);

            var theme = Object(_styles_useTheme__WEBPACK_IMPORTED_MODULE_10__[/* default */
            "a"])();
            var autoFocusItem = autoFocus && !disableAutoFocusItem && open;
            var menuListActionsRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);
            var contentAnchorRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);

            var getContentAnchorEl = function getContentAnchorEl() {
                return contentAnchorRef.current;
            };

            var handleEntering = function handleEntering(element, isAppearing) {
                if (menuListActionsRef.current) {
                    menuListActionsRef.current.adjustStyleForScrollbar(element, theme);
                }

                if (onEntering) {
                    onEntering(element, isAppearing);
                }
            };

            var handleListKeyDown = function handleListKeyDown(event) {
                if (event.key === 'Tab') {
                    event.preventDefault();

                    if (onClose) {
                        onClose(event, 'tabKeyDown');
                    }
                }
            };
            /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */

            var activeItemIndex = -1;
            // since we inject focus related props into children we have to do a lookahead
            // to check if there is a `selected` item. We're looking for the last `selected`
            // item and use the first valid item as a fallback

            react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.map(children, function(child, index) {
                if (!react__WEBPACK_IMPORTED_MODULE_2__["default"].isValidElement(child)) {
                    return;
                }

                if (false) {}

                if (!child.props.disabled) {
                    if (variant !== "menu" && child.props.selected) {
                        activeItemIndex = index;
                    } else if (activeItemIndex === -1) {
                        activeItemIndex = index;
                    }
                }
            });
            var items = react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.map(children, function(child, index) {
                if (index === activeItemIndex) {
                    return react__WEBPACK_IMPORTED_MODULE_2__["default"].cloneElement(child, {
                        ref: function ref(instance) {
                            // #StrictMode ready
                            contentAnchorRef.current = react__WEBPACK_IMPORTED_MODULE_2__["default"].findDOMNode(instance);
                            Object(_utils_setRef__WEBPACK_IMPORTED_MODULE_9__[/* default */
                            "a"])(child.ref, instance);
                        }
                    });
                }

                return child;
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_Popover__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                getContentAnchorEl: getContentAnchorEl,
                classes: PopoverClasses,
                onClose: onClose,
                onEntering: handleEntering,
                anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
                transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,
                PaperProps: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({}, PaperProps, {
                    classes: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                    "a"])({}, PaperProps.classes, {
                        root: classes.paper
                    })
                }),
                open: open,
                ref: ref,
                transitionDuration: transitionDuration
            }, other), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_MenuList__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                onKeyDown: handleListKeyDown,
                actions: menuListActionsRef,
                autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),
                autoFocusItem: autoFocusItem,
                variant: variant
            }, MenuListProps, {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(classes.list, MenuListProps.className)
            }), items));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiMenu'
        })(Menu));

        /***/
    }
    ), /* 429 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var reactIs = __webpack_require__(37);

        /**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
        var REACT_STATICS = {
            childContextTypes: true,
            contextType: true,
            contextTypes: true,
            defaultProps: true,
            displayName: true,
            getDefaultProps: true,
            getDerivedStateFromError: true,
            getDerivedStateFromProps: true,
            mixins: true,
            propTypes: true,
            type: true
        };
        var KNOWN_STATICS = {
            name: true,
            length: true,
            prototype: true,
            caller: true,
            callee: true,
            arguments: true,
            arity: true
        };
        var FORWARD_REF_STATICS = {
            '$$typeof': true,
            render: true,
            defaultProps: true,
            displayName: true,
            propTypes: true
        };
        var MEMO_STATICS = {
            '$$typeof': true,
            compare: true,
            defaultProps: true,
            displayName: true,
            propTypes: true,
            type: true
        };
        var TYPE_STATICS = {};
        TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
        TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

        function getStatics(component) {
            // React v16.11 and below
            if (reactIs.isMemo(component)) {
                return MEMO_STATICS;
            }
            // React v16.12 and above

            return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
        }

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = Object.prototype;
        function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
            if (typeof sourceComponent !== 'string') {
                // don't hoist over string (html) components
                if (objectPrototype) {
                    var inheritedComponent = getPrototypeOf(sourceComponent);

                    if (inheritedComponent && inheritedComponent !== objectPrototype) {
                        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
                    }
                }

                var keys = getOwnPropertyNames(sourceComponent);

                if (getOwnPropertySymbols) {
                    keys = keys.concat(getOwnPropertySymbols(sourceComponent));
                }

                var targetStatics = getStatics(targetComponent);
                var sourceStatics = getStatics(sourceComponent);

                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];

                    if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                        try {
                            // Avoid failures from read-only properties
                            defineProperty(targetComponent, key, descriptor);
                        } catch (e) {}
                    }
                }
            }

            return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
    }
    ), /* 430 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global) {
            /**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
            var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

            var timeoutDuration = function() {
                var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
                for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
                    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
                        return 1;
                    }
                }
                return 0;
            }();

            function microtaskDebounce(fn) {
                var called = false;
                return function() {
                    if (called) {
                        return;
                    }
                    called = true;
                    window.Promise.resolve().then(function() {
                        called = false;
                        fn();
                    });
                }
                ;
            }

            function taskDebounce(fn) {
                var scheduled = false;
                return function() {
                    if (!scheduled) {
                        scheduled = true;
                        setTimeout(function() {
                            scheduled = false;
                            fn();
                        }, timeoutDuration);
                    }
                }
                ;
            }

            var supportsMicroTasks = isBrowser && window.Promise;

            /**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
            var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

            /**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
            function isFunction(functionToCheck) {
                var getType = {};
                return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
            }

            /**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
            function getStyleComputedProperty(element, property) {
                if (element.nodeType !== 1) {
                    return [];
                }
                // NOTE: 1 DOM access here
                var window = element.ownerDocument.defaultView;
                var css = window.getComputedStyle(element, null);
                return property ? css[property] : css;
            }

            /**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
            function getParentNode(element) {
                if (element.nodeName === 'HTML') {
                    return element;
                }
                return element.parentNode || element.host;
            }

            /**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
            function getScrollParent(element) {
                // Return body, `getScroll` will take care to get the correct `scrollTop` from it
                if (!element) {
                    return document.body;
                }

                switch (element.nodeName) {
                case 'HTML':
                case 'BODY':
                    return element.ownerDocument.body;
                case '#document':
                    return element.body;
                }

                // Firefox want us to check `-x` and `-y` variations as well

                var _getStyleComputedProp = getStyleComputedProperty(element)
                  , overflow = _getStyleComputedProp.overflow
                  , overflowX = _getStyleComputedProp.overflowX
                  , overflowY = _getStyleComputedProp.overflowY;

                if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
                    return element;
                }

                return getScrollParent(getParentNode(element));
            }

            /**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
            function getReferenceNode(reference) {
                return reference && reference.referenceNode ? reference.referenceNode : reference;
            }

            var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
            var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

            /**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
            function isIE(version) {
                if (version === 11) {
                    return isIE11;
                }
                if (version === 10) {
                    return isIE10;
                }
                return isIE11 || isIE10;
            }

            /**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
            function getOffsetParent(element) {
                if (!element) {
                    return document.documentElement;
                }

                var noOffsetParent = isIE(10) ? document.body : null;

                // NOTE: 1 DOM access here
                var offsetParent = element.offsetParent || null;
                // Skip hidden elements which don't have an offsetParent
                while (offsetParent === noOffsetParent && element.nextElementSibling) {
                    offsetParent = (element = element.nextElementSibling).offsetParent;
                }

                var nodeName = offsetParent && offsetParent.nodeName;

                if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
                    return element ? element.ownerDocument.documentElement : document.documentElement;
                }

                // .offsetParent will return the closest TH, TD or TABLE in case
                // no offsetParent is present, I hate this job...
                if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
                    return getOffsetParent(offsetParent);
                }

                return offsetParent;
            }

            function isOffsetContainer(element) {
                var nodeName = element.nodeName;

                if (nodeName === 'BODY') {
                    return false;
                }
                return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
            }

            /**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
            function getRoot(node) {
                if (node.parentNode !== null) {
                    return getRoot(node.parentNode);
                }

                return node;
            }

            /**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
            function findCommonOffsetParent(element1, element2) {
                // This check is needed to avoid errors in case one of the elements isn't defined for any reason
                if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
                    return document.documentElement;
                }

                // Here we make sure to give as "start" the element that comes first in the DOM
                var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
                var start = order ? element1 : element2;
                var end = order ? element2 : element1;

                // Get common ancestor container
                var range = document.createRange();
                range.setStart(start, 0);
                range.setEnd(end, 0);
                var commonAncestorContainer = range.commonAncestorContainer;

                // Both nodes are inside #document

                if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
                    if (isOffsetContainer(commonAncestorContainer)) {
                        return commonAncestorContainer;
                    }

                    return getOffsetParent(commonAncestorContainer);
                }

                // one of the nodes is inside shadowDOM, find which one
                var element1root = getRoot(element1);
                if (element1root.host) {
                    return findCommonOffsetParent(element1root.host, element2);
                } else {
                    return findCommonOffsetParent(element1, getRoot(element2).host);
                }
            }

            /**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
            function getScroll(element) {
                var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

                var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
                var nodeName = element.nodeName;

                if (nodeName === 'BODY' || nodeName === 'HTML') {
                    var html = element.ownerDocument.documentElement;
                    var scrollingElement = element.ownerDocument.scrollingElement || html;
                    return scrollingElement[upperSide];
                }

                return element[upperSide];
            }

            /*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
            function includeScroll(rect, element) {
                var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

                var scrollTop = getScroll(element, 'top');
                var scrollLeft = getScroll(element, 'left');
                var modifier = subtract ? -1 : 1;
                rect.top += scrollTop * modifier;
                rect.bottom += scrollTop * modifier;
                rect.left += scrollLeft * modifier;
                rect.right += scrollLeft * modifier;
                return rect;
            }

            /*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

            function getBordersSize(styles, axis) {
                var sideA = axis === 'x' ? 'Left' : 'Top';
                var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

                return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
            }

            function getSize(axis, body, html, computedStyle) {
                return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
            }

            function getWindowSizes(document) {
                var body = document.body;
                var html = document.documentElement;
                var computedStyle = isIE(10) && getComputedStyle(html);

                return {
                    height: getSize('Height', body, html, computedStyle),
                    width: getSize('Width', body, html, computedStyle)
                };
            }

            var classCallCheck = function(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                    throw new TypeError("Cannot call a class as a function");
                }
            };

            var createClass = function() {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value"in descriptor)
                            descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function(Constructor, protoProps, staticProps) {
                    if (protoProps)
                        defineProperties(Constructor.prototype, protoProps);
                    if (staticProps)
                        defineProperties(Constructor, staticProps);
                    return Constructor;
                }
                ;
            }();

            var defineProperty = function(obj, key, value) {
                if (key in obj) {
                    Object.defineProperty(obj, key, {
                        value: value,
                        enumerable: true,
                        configurable: true,
                        writable: true
                    });
                } else {
                    obj[key] = value;
                }

                return obj;
            };

            var _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];

                    for (var key in source) {
                        if (Object.prototype.hasOwnProperty.call(source, key)) {
                            target[key] = source[key];
                        }
                    }
                }

                return target;
            }
            ;

            /**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
            function getClientRect(offsets) {
                return _extends({}, offsets, {
                    right: offsets.left + offsets.width,
                    bottom: offsets.top + offsets.height
                });
            }

            /**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
            function getBoundingClientRect(element) {
                var rect = {};

                // IE10 10 FIX: Please, don't ask, the element isn't
                // considered in DOM in some circumstances...
                // This isn't reproducible in IE10 compatibility mode of IE11
                try {
                    if (isIE(10)) {
                        rect = element.getBoundingClientRect();
                        var scrollTop = getScroll(element, 'top');
                        var scrollLeft = getScroll(element, 'left');
                        rect.top += scrollTop;
                        rect.left += scrollLeft;
                        rect.bottom += scrollTop;
                        rect.right += scrollLeft;
                    } else {
                        rect = element.getBoundingClientRect();
                    }
                } catch (e) {}

                var result = {
                    left: rect.left,
                    top: rect.top,
                    width: rect.right - rect.left,
                    height: rect.bottom - rect.top
                };

                // subtract scrollbar size from sizes
                var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
                var width = sizes.width || element.clientWidth || result.width;
                var height = sizes.height || element.clientHeight || result.height;

                var horizScrollbar = element.offsetWidth - width;
                var vertScrollbar = element.offsetHeight - height;

                // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
                // we make this check conditional for performance reasons
                if (horizScrollbar || vertScrollbar) {
                    var styles = getStyleComputedProperty(element);
                    horizScrollbar -= getBordersSize(styles, 'x');
                    vertScrollbar -= getBordersSize(styles, 'y');

                    result.width -= horizScrollbar;
                    result.height -= vertScrollbar;
                }

                return getClientRect(result);
            }

            function getOffsetRectRelativeToArbitraryNode(children, parent) {
                var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

                var isIE10 = isIE(10);
                var isHTML = parent.nodeName === 'HTML';
                var childrenRect = getBoundingClientRect(children);
                var parentRect = getBoundingClientRect(parent);
                var scrollParent = getScrollParent(children);

                var styles = getStyleComputedProperty(parent);
                var borderTopWidth = parseFloat(styles.borderTopWidth);
                var borderLeftWidth = parseFloat(styles.borderLeftWidth);

                // In cases where the parent is fixed, we must ignore negative scroll in offset calc
                if (fixedPosition && isHTML) {
                    parentRect.top = Math.max(parentRect.top, 0);
                    parentRect.left = Math.max(parentRect.left, 0);
                }
                var offsets = getClientRect({
                    top: childrenRect.top - parentRect.top - borderTopWidth,
                    left: childrenRect.left - parentRect.left - borderLeftWidth,
                    width: childrenRect.width,
                    height: childrenRect.height
                });
                offsets.marginTop = 0;
                offsets.marginLeft = 0;

                // Subtract margins of documentElement in case it's being used as parent
                // we do this only on HTML because it's the only element that behaves
                // differently when margins are applied to it. The margins are included in
                // the box of the documentElement, in the other cases not.
                if (!isIE10 && isHTML) {
                    var marginTop = parseFloat(styles.marginTop);
                    var marginLeft = parseFloat(styles.marginLeft);

                    offsets.top -= borderTopWidth - marginTop;
                    offsets.bottom -= borderTopWidth - marginTop;
                    offsets.left -= borderLeftWidth - marginLeft;
                    offsets.right -= borderLeftWidth - marginLeft;

                    // Attach marginTop and marginLeft because in some circumstances we may need them
                    offsets.marginTop = marginTop;
                    offsets.marginLeft = marginLeft;
                }

                if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
                    offsets = includeScroll(offsets, parent);
                }

                return offsets;
            }

            function getViewportOffsetRectRelativeToArtbitraryNode(element) {
                var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                var html = element.ownerDocument.documentElement;
                var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
                var width = Math.max(html.clientWidth, window.innerWidth || 0);
                var height = Math.max(html.clientHeight, window.innerHeight || 0);

                var scrollTop = !excludeScroll ? getScroll(html) : 0;
                var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

                var offset = {
                    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
                    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
                    width: width,
                    height: height
                };

                return getClientRect(offset);
            }

            /**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
            function isFixed(element) {
                var nodeName = element.nodeName;
                if (nodeName === 'BODY' || nodeName === 'HTML') {
                    return false;
                }
                if (getStyleComputedProperty(element, 'position') === 'fixed') {
                    return true;
                }
                var parentNode = getParentNode(element);
                if (!parentNode) {
                    return false;
                }
                return isFixed(parentNode);
            }

            /**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

            function getFixedPositionOffsetParent(element) {
                // This check is needed to avoid errors in case one of the elements isn't defined for any reason
                if (!element || !element.parentElement || isIE()) {
                    return document.documentElement;
                }
                var el = element.parentElement;
                while (el && getStyleComputedProperty(el, 'transform') === 'none') {
                    el = el.parentElement;
                }
                return el || document.documentElement;
            }

            /**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
            function getBoundaries(popper, reference, padding, boundariesElement) {
                var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

                // NOTE: 1 DOM access here

                var boundaries = {
                    top: 0,
                    left: 0
                };
                var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

                // Handle viewport case
                if (boundariesElement === 'viewport') {
                    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
                } else {
                    // Handle other cases based on DOM element used as boundaries
                    var boundariesNode = void 0;
                    if (boundariesElement === 'scrollParent') {
                        boundariesNode = getScrollParent(getParentNode(reference));
                        if (boundariesNode.nodeName === 'BODY') {
                            boundariesNode = popper.ownerDocument.documentElement;
                        }
                    } else if (boundariesElement === 'window') {
                        boundariesNode = popper.ownerDocument.documentElement;
                    } else {
                        boundariesNode = boundariesElement;
                    }

                    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

                    // In case of HTML, we need a different computation
                    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
                        var _getWindowSizes = getWindowSizes(popper.ownerDocument)
                          , height = _getWindowSizes.height
                          , width = _getWindowSizes.width;

                        boundaries.top += offsets.top - offsets.marginTop;
                        boundaries.bottom = height + offsets.top;
                        boundaries.left += offsets.left - offsets.marginLeft;
                        boundaries.right = width + offsets.left;
                    } else {
                        // for all the other DOM elements, this one is good
                        boundaries = offsets;
                    }
                }

                // Add paddings
                padding = padding || 0;
                var isPaddingNumber = typeof padding === 'number';
                boundaries.left += isPaddingNumber ? padding : padding.left || 0;
                boundaries.top += isPaddingNumber ? padding : padding.top || 0;
                boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
                boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

                return boundaries;
            }

            function getArea(_ref) {
                var width = _ref.width
                  , height = _ref.height;

                return width * height;
            }

            /**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
                var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

                if (placement.indexOf('auto') === -1) {
                    return placement;
                }

                var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

                var rects = {
                    top: {
                        width: boundaries.width,
                        height: refRect.top - boundaries.top
                    },
                    right: {
                        width: boundaries.right - refRect.right,
                        height: boundaries.height
                    },
                    bottom: {
                        width: boundaries.width,
                        height: boundaries.bottom - refRect.bottom
                    },
                    left: {
                        width: refRect.left - boundaries.left,
                        height: boundaries.height
                    }
                };

                var sortedAreas = Object.keys(rects).map(function(key) {
                    return _extends({
                        key: key
                    }, rects[key], {
                        area: getArea(rects[key])
                    });
                }).sort(function(a, b) {
                    return b.area - a.area;
                });

                var filteredAreas = sortedAreas.filter(function(_ref2) {
                    var width = _ref2.width
                      , height = _ref2.height;
                    return width >= popper.clientWidth && height >= popper.clientHeight;
                });

                var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

                var variation = placement.split('-')[1];

                return computedPlacement + (variation ? '-' + variation : '');
            }

            /**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
            function getReferenceOffsets(state, popper, reference) {
                var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

                var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
                return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
            }

            /**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
            function getOuterSizes(element) {
                var window = element.ownerDocument.defaultView;
                var styles = window.getComputedStyle(element);
                var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
                var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
                var result = {
                    width: element.offsetWidth + y,
                    height: element.offsetHeight + x
                };
                return result;
            }

            /**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
            function getOppositePlacement(placement) {
                var hash = {
                    left: 'right',
                    right: 'left',
                    bottom: 'top',
                    top: 'bottom'
                };
                return placement.replace(/left|right|bottom|top/g, function(matched) {
                    return hash[matched];
                });
            }

            /**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
            function getPopperOffsets(popper, referenceOffsets, placement) {
                placement = placement.split('-')[0];

                // Get popper node sizes
                var popperRect = getOuterSizes(popper);

                // Add position, width and height to our offsets object
                var popperOffsets = {
                    width: popperRect.width,
                    height: popperRect.height
                };

                // depending by the popper placement we have to compute its offsets slightly differently
                var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
                var mainSide = isHoriz ? 'top' : 'left';
                var secondarySide = isHoriz ? 'left' : 'top';
                var measurement = isHoriz ? 'height' : 'width';
                var secondaryMeasurement = !isHoriz ? 'height' : 'width';

                popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
                if (placement === secondarySide) {
                    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
                } else {
                    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
                }

                return popperOffsets;
            }

            /**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
            function find(arr, check) {
                // use native find if supported
                if (Array.prototype.find) {
                    return arr.find(check);
                }

                // use `filter` to obtain the same behavior of `find`
                return arr.filter(check)[0];
            }

            /**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
            function findIndex(arr, prop, value) {
                // use native findIndex if supported
                if (Array.prototype.findIndex) {
                    return arr.findIndex(function(cur) {
                        return cur[prop] === value;
                    });
                }

                // use `find` + `indexOf` if `findIndex` isn't supported
                var match = find(arr, function(obj) {
                    return obj[prop] === value;
                });
                return arr.indexOf(match);
            }

            /**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
            function runModifiers(modifiers, data, ends) {
                var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

                modifiersToRun.forEach(function(modifier) {
                    if (modifier['function']) {
                        // eslint-disable-line dot-notation
                        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
                    }
                    var fn = modifier['function'] || modifier.fn;
                    // eslint-disable-line dot-notation
                    if (modifier.enabled && isFunction(fn)) {
                        // Add properties to offsets to make them a complete clientRect object
                        // we do this before each modifier to make sure the previous one doesn't
                        // mess with these values
                        data.offsets.popper = getClientRect(data.offsets.popper);
                        data.offsets.reference = getClientRect(data.offsets.reference);

                        data = fn(data, modifier);
                    }
                });

                return data;
            }

            /**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
            function update() {
                // if popper is destroyed, don't perform any further update
                if (this.state.isDestroyed) {
                    return;
                }

                var data = {
                    instance: this,
                    styles: {},
                    arrowStyles: {},
                    attributes: {},
                    flipped: false,
                    offsets: {}
                };

                // compute reference element offsets
                data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

                // compute auto placement, store placement inside the data object,
                // modifiers will be able to edit `placement` if needed
                // and refer to originalPlacement to know the original value
                data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

                // store the computed placement inside `originalPlacement`
                data.originalPlacement = data.placement;

                data.positionFixed = this.options.positionFixed;

                // compute the popper offsets
                data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

                data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

                // run the modifiers
                data = runModifiers(this.modifiers, data);

                // the first `update` will call `onCreate` callback
                // the other ones will call `onUpdate` callback
                if (!this.state.isCreated) {
                    this.state.isCreated = true;
                    this.options.onCreate(data);
                } else {
                    this.options.onUpdate(data);
                }
            }

            /**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
            function isModifierEnabled(modifiers, modifierName) {
                return modifiers.some(function(_ref) {
                    var name = _ref.name
                      , enabled = _ref.enabled;
                    return enabled && name === modifierName;
                });
            }

            /**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
            function getSupportedPropertyName(property) {
                var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
                var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

                for (var i = 0; i < prefixes.length; i++) {
                    var prefix = prefixes[i];
                    var toCheck = prefix ? '' + prefix + upperProp : property;
                    if (typeof document.body.style[toCheck] !== 'undefined') {
                        return toCheck;
                    }
                }
                return null;
            }

            /**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
            function destroy() {
                this.state.isDestroyed = true;

                // touch DOM only if `applyStyle` modifier is enabled
                if (isModifierEnabled(this.modifiers, 'applyStyle')) {
                    this.popper.removeAttribute('x-placement');
                    this.popper.style.position = '';
                    this.popper.style.top = '';
                    this.popper.style.left = '';
                    this.popper.style.right = '';
                    this.popper.style.bottom = '';
                    this.popper.style.willChange = '';
                    this.popper.style[getSupportedPropertyName('transform')] = '';
                }

                this.disableEventListeners();

                // remove the popper if user explicitly asked for the deletion on destroy
                // do not use `remove` because IE11 doesn't support it
                if (this.options.removeOnDestroy) {
                    this.popper.parentNode.removeChild(this.popper);
                }
                return this;
            }

            /**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
            function getWindow(element) {
                var ownerDocument = element.ownerDocument;
                return ownerDocument ? ownerDocument.defaultView : window;
            }

            function attachToScrollParents(scrollParent, event, callback, scrollParents) {
                var isBody = scrollParent.nodeName === 'BODY';
                var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
                target.addEventListener(event, callback, {
                    passive: true
                });

                if (!isBody) {
                    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
                }
                scrollParents.push(target);
            }

            /**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
            function setupEventListeners(reference, options, state, updateBound) {
                // Resize event listener on window
                state.updateBound = updateBound;
                getWindow(reference).addEventListener('resize', state.updateBound, {
                    passive: true
                });

                // Scroll event listener on scroll parents
                var scrollElement = getScrollParent(reference);
                attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
                state.scrollElement = scrollElement;
                state.eventsEnabled = true;

                return state;
            }

            /**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
            function enableEventListeners() {
                if (!this.state.eventsEnabled) {
                    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
                }
            }

            /**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
            function removeEventListeners(reference, state) {
                // Remove resize event listener on window
                getWindow(reference).removeEventListener('resize', state.updateBound);

                // Remove scroll event listener on scroll parents
                state.scrollParents.forEach(function(target) {
                    target.removeEventListener('scroll', state.updateBound);
                });

                // Reset state
                state.updateBound = null;
                state.scrollParents = [];
                state.scrollElement = null;
                state.eventsEnabled = false;
                return state;
            }

            /**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
            function disableEventListeners() {
                if (this.state.eventsEnabled) {
                    cancelAnimationFrame(this.scheduleUpdate);
                    this.state = removeEventListeners(this.reference, this.state);
                }
            }

            /**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
            function isNumeric(n) {
                return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
            }

            /**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
            function setStyles(element, styles) {
                Object.keys(styles).forEach(function(prop) {
                    var unit = '';
                    // add unit if the value is numeric and is one of the following
                    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
                        unit = 'px';
                    }
                    element.style[prop] = styles[prop] + unit;
                });
            }

            /**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
            function setAttributes(element, attributes) {
                Object.keys(attributes).forEach(function(prop) {
                    var value = attributes[prop];
                    if (value !== false) {
                        element.setAttribute(prop, attributes[prop]);
                    } else {
                        element.removeAttribute(prop);
                    }
                });
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
            function applyStyle(data) {
                // any property present in `data.styles` will be applied to the popper,
                // in this way we can make the 3rd party modifiers add custom styles to it
                // Be aware, modifiers could override the properties defined in the previous
                // lines of this modifier!
                setStyles(data.instance.popper, data.styles);

                // any property present in `data.attributes` will be applied to the popper,
                // they will be set as HTML attributes of the element
                setAttributes(data.instance.popper, data.attributes);

                // if arrowElement is defined and arrowStyles has some properties
                if (data.arrowElement && Object.keys(data.arrowStyles).length) {
                    setStyles(data.arrowElement, data.arrowStyles);
                }

                return data;
            }

            /**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
            function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
                // compute reference element offsets
                var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

                // compute auto placement, store placement inside the data object,
                // modifiers will be able to edit `placement` if needed
                // and refer to originalPlacement to know the original value
                var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

                popper.setAttribute('x-placement', placement);

                // Apply `position` to popper before anything else because
                // without the position applied we can't guarantee correct computations
                setStyles(popper, {
                    position: options.positionFixed ? 'fixed' : 'absolute'
                });

                return options;
            }

            /**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
            function getRoundedOffsets(data, shouldRound) {
                var _data$offsets = data.offsets
                  , popper = _data$offsets.popper
                  , reference = _data$offsets.reference;
                var round = Math.round
                  , floor = Math.floor;

                var noRound = function noRound(v) {
                    return v;
                };

                var referenceWidth = round(reference.width);
                var popperWidth = round(popper.width);

                var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
                var isVariation = data.placement.indexOf('-') !== -1;
                var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
                var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

                var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
                var verticalToInteger = !shouldRound ? noRound : round;

                return {
                    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
                    top: verticalToInteger(popper.top),
                    bottom: verticalToInteger(popper.bottom),
                    right: horizontalToInteger(popper.right)
                };
            }

            var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function computeStyle(data, options) {
                var x = options.x
                  , y = options.y;
                var popper = data.offsets.popper;

                // Remove this legacy support in Popper.js v2

                var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
                    return modifier.name === 'applyStyle';
                }).gpuAcceleration;
                if (legacyGpuAccelerationOption !== undefined) {
                    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
                }
                var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

                var offsetParent = getOffsetParent(data.instance.popper);
                var offsetParentRect = getBoundingClientRect(offsetParent);

                // Styles
                var styles = {
                    position: popper.position
                };

                var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

                var sideA = x === 'bottom' ? 'top' : 'bottom';
                var sideB = y === 'right' ? 'left' : 'right';

                // if gpuAcceleration is set to `true` and transform is supported,
                //  we use `translate3d` to apply the position to the popper we
                // automatically use the supported prefixed version if needed
                var prefixedProperty = getSupportedPropertyName('transform');

                // now, let's make a step back and look at this code closely (wtf?)
                // If the content of the popper grows once it's been positioned, it
                // may happen that the popper gets misplaced because of the new content
                // overflowing its reference element
                // To avoid this problem, we provide two options (x and y), which allow
                // the consumer to define the offset origin.
                // If we position a popper on top of a reference element, we can set
                // `x` to `top` to make the popper grow towards its top instead of
                // its bottom.
                var left = void 0
                  , top = void 0;
                if (sideA === 'bottom') {
                    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
                    // and not the bottom of the html element
                    if (offsetParent.nodeName === 'HTML') {
                        top = -offsetParent.clientHeight + offsets.bottom;
                    } else {
                        top = -offsetParentRect.height + offsets.bottom;
                    }
                } else {
                    top = offsets.top;
                }
                if (sideB === 'right') {
                    if (offsetParent.nodeName === 'HTML') {
                        left = -offsetParent.clientWidth + offsets.right;
                    } else {
                        left = -offsetParentRect.width + offsets.right;
                    }
                } else {
                    left = offsets.left;
                }
                if (gpuAcceleration && prefixedProperty) {
                    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
                    styles[sideA] = 0;
                    styles[sideB] = 0;
                    styles.willChange = 'transform';
                } else {
                    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
                    var invertTop = sideA === 'bottom' ? -1 : 1;
                    var invertLeft = sideB === 'right' ? -1 : 1;
                    styles[sideA] = top * invertTop;
                    styles[sideB] = left * invertLeft;
                    styles.willChange = sideA + ', ' + sideB;
                }

                // Attributes
                var attributes = {
                    'x-placement': data.placement
                };

                // Update `data` attributes, styles and arrowStyles
                data.attributes = _extends({}, attributes, data.attributes);
                data.styles = _extends({}, styles, data.styles);
                data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

                return data;
            }

            /**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
            function isModifierRequired(modifiers, requestingName, requestedName) {
                var requesting = find(modifiers, function(_ref) {
                    var name = _ref.name;
                    return name === requestingName;
                });

                var isRequired = !!requesting && modifiers.some(function(modifier) {
                    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
                });

                if (!isRequired) {
                    var _requesting = '`' + requestingName + '`';
                    var requested = '`' + requestedName + '`';
                    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
                }
                return isRequired;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function arrow(data, options) {
                var _data$offsets$arrow;

                // arrow depends on keepTogether in order to work
                if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
                    return data;
                }

                var arrowElement = options.element;

                // if arrowElement is a string, suppose it's a CSS selector
                if (typeof arrowElement === 'string') {
                    arrowElement = data.instance.popper.querySelector(arrowElement);

                    // if arrowElement is not found, don't run the modifier
                    if (!arrowElement) {
                        return data;
                    }
                } else {
                    // if the arrowElement isn't a query selector we must check that the
                    // provided DOM node is child of its popper node
                    if (!data.instance.popper.contains(arrowElement)) {
                        console.warn('WARNING: `arrow.element` must be child of its popper element!');
                        return data;
                    }
                }

                var placement = data.placement.split('-')[0];
                var _data$offsets = data.offsets
                  , popper = _data$offsets.popper
                  , reference = _data$offsets.reference;

                var isVertical = ['left', 'right'].indexOf(placement) !== -1;

                var len = isVertical ? 'height' : 'width';
                var sideCapitalized = isVertical ? 'Top' : 'Left';
                var side = sideCapitalized.toLowerCase();
                var altSide = isVertical ? 'left' : 'top';
                var opSide = isVertical ? 'bottom' : 'right';
                var arrowElementSize = getOuterSizes(arrowElement)[len];

                //
                // extends keepTogether behavior making sure the popper and its
                // reference have enough pixels in conjunction
                //

                // top/left side
                if (reference[opSide] - arrowElementSize < popper[side]) {
                    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
                }
                // bottom/right side
                if (reference[side] + arrowElementSize > popper[opSide]) {
                    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
                }
                data.offsets.popper = getClientRect(data.offsets.popper);

                // compute center of the popper
                var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

                // Compute the sideValue using the updated popper offsets
                // take popper margin in account because we don't have this info available
                var css = getStyleComputedProperty(data.instance.popper);
                var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
                var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
                var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

                // prevent arrowElement from being placed not contiguously to its popper
                sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

                data.arrowElement = arrowElement;
                data.offsets.arrow = (_data$offsets$arrow = {},
                defineProperty(_data$offsets$arrow, side, Math.round(sideValue)),
                defineProperty(_data$offsets$arrow, altSide, ''),
                _data$offsets$arrow);

                return data;
            }

            /**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
            function getOppositeVariation(variation) {
                if (variation === 'end') {
                    return 'start';
                } else if (variation === 'start') {
                    return 'end';
                }
                return variation;
            }

            /**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
            var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

            // Get rid of `auto` `auto-start` and `auto-end`
            var validPlacements = placements.slice(3);

            /**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
            function clockwise(placement) {
                var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                var index = validPlacements.indexOf(placement);
                var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
                return counter ? arr.reverse() : arr;
            }

            var BEHAVIORS = {
                FLIP: 'flip',
                CLOCKWISE: 'clockwise',
                COUNTERCLOCKWISE: 'counterclockwise'
            };

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function flip(data, options) {
                // if `inner` modifier is enabled, we can't use the `flip` modifier
                if (isModifierEnabled(data.instance.modifiers, 'inner')) {
                    return data;
                }

                if (data.flipped && data.placement === data.originalPlacement) {
                    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
                    return data;
                }

                var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

                var placement = data.placement.split('-')[0];
                var placementOpposite = getOppositePlacement(placement);
                var variation = data.placement.split('-')[1] || '';

                var flipOrder = [];

                switch (options.behavior) {
                case BEHAVIORS.FLIP:
                    flipOrder = [placement, placementOpposite];
                    break;
                case BEHAVIORS.CLOCKWISE:
                    flipOrder = clockwise(placement);
                    break;
                case BEHAVIORS.COUNTERCLOCKWISE:
                    flipOrder = clockwise(placement, true);
                    break;
                default:
                    flipOrder = options.behavior;
                }

                flipOrder.forEach(function(step, index) {
                    if (placement !== step || flipOrder.length === index + 1) {
                        return data;
                    }

                    placement = data.placement.split('-')[0];
                    placementOpposite = getOppositePlacement(placement);

                    var popperOffsets = data.offsets.popper;
                    var refOffsets = data.offsets.reference;

                    // using floor because the reference offsets may contain decimals we are not going to consider here
                    var floor = Math.floor;
                    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

                    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
                    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
                    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
                    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

                    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

                    // flip the variation if required
                    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

                    // flips variation if reference element overflows boundaries
                    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

                    // flips variation if popper content overflows boundaries
                    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

                    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

                    if (overlapsRef || overflowsBoundaries || flippedVariation) {
                        // this boolean to detect any flip loop
                        data.flipped = true;

                        if (overlapsRef || overflowsBoundaries) {
                            placement = flipOrder[index + 1];
                        }

                        if (flippedVariation) {
                            variation = getOppositeVariation(variation);
                        }

                        data.placement = placement + (variation ? '-' + variation : '');

                        // this object contains `position`, we want to preserve it along with
                        // any additional property we may add in the future
                        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

                        data = runModifiers(data.instance.modifiers, data, 'flip');
                    }
                });
                return data;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function keepTogether(data) {
                var _data$offsets = data.offsets
                  , popper = _data$offsets.popper
                  , reference = _data$offsets.reference;

                var placement = data.placement.split('-')[0];
                var floor = Math.floor;
                var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
                var side = isVertical ? 'right' : 'bottom';
                var opSide = isVertical ? 'left' : 'top';
                var measurement = isVertical ? 'width' : 'height';

                if (popper[side] < floor(reference[opSide])) {
                    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
                }
                if (popper[opSide] > floor(reference[side])) {
                    data.offsets.popper[opSide] = floor(reference[side]);
                }

                return data;
            }

            /**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
            function toValue(str, measurement, popperOffsets, referenceOffsets) {
                // separate value from unit
                var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
                var value = +split[1];
                var unit = split[2];

                // If it's not a number it's an operator, I guess
                if (!value) {
                    return str;
                }

                if (unit.indexOf('%') === 0) {
                    var element = void 0;
                    switch (unit) {
                    case '%p':
                        element = popperOffsets;
                        break;
                    case '%':
                    case '%r':
                    default:
                        element = referenceOffsets;
                    }

                    var rect = getClientRect(element);
                    return rect[measurement] / 100 * value;
                } else if (unit === 'vh' || unit === 'vw') {
                    // if is a vh or vw, we calculate the size based on the viewport
                    var size = void 0;
                    if (unit === 'vh') {
                        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
                    } else {
                        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
                    }
                    return size / 100 * value;
                } else {
                    // if is an explicit pixel unit, we get rid of the unit and keep the value
                    // if is an implicit unit, it's px, and we return just the value
                    return value;
                }
            }

            /**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
            function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
                var offsets = [0, 0];

                // Use height if placement is left or right and index is 0 otherwise use width
                // in this way the first offset will use an axis and the second one
                // will use the other one
                var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

                // Split the offset string to obtain a list of values and operands
                // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
                var fragments = offset.split(/(\+|\-)/).map(function(frag) {
                    return frag.trim();
                });

                // Detect if the offset string contains a pair of values or a single one
                // they could be separated by comma or space
                var divider = fragments.indexOf(find(fragments, function(frag) {
                    return frag.search(/,|\s/) !== -1;
                }));

                if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
                    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
                }

                // If divider is found, we divide the list of values and operands to divide
                // them by ofset X and Y.
                var splitRegex = /\s*,\s*|\s+/;
                var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

                // Convert the values with units to absolute pixels to allow our computations
                ops = ops.map(function(op, index) {
                    // Most of the units rely on the orientation of the popper
                    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
                    var mergeWithPrevious = false;
                    return op // This aggregates any `+` or `-` sign that aren't considered operators
                    // e.g.: 10 + +5 => [10, +, +5]
                    .reduce(function(a, b) {
                        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
                            a[a.length - 1] = b;
                            mergeWithPrevious = true;
                            return a;
                        } else if (mergeWithPrevious) {
                            a[a.length - 1] += b;
                            mergeWithPrevious = false;
                            return a;
                        } else {
                            return a.concat(b);
                        }
                    }, [])// Here we convert the string values into number values (in px)
                    .map(function(str) {
                        return toValue(str, measurement, popperOffsets, referenceOffsets);
                    });
                });

                // Loop trough the offsets arrays and execute the operations
                ops.forEach(function(op, index) {
                    op.forEach(function(frag, index2) {
                        if (isNumeric(frag)) {
                            offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
                        }
                    });
                });
                return offsets;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
            function offset(data, _ref) {
                var offset = _ref.offset;
                var placement = data.placement
                  , _data$offsets = data.offsets
                  , popper = _data$offsets.popper
                  , reference = _data$offsets.reference;

                var basePlacement = placement.split('-')[0];

                var offsets = void 0;
                if (isNumeric(+offset)) {
                    offsets = [+offset, 0];
                } else {
                    offsets = parseOffset(offset, popper, reference, basePlacement);
                }

                if (basePlacement === 'left') {
                    popper.top += offsets[0];
                    popper.left -= offsets[1];
                } else if (basePlacement === 'right') {
                    popper.top += offsets[0];
                    popper.left += offsets[1];
                } else if (basePlacement === 'top') {
                    popper.left += offsets[0];
                    popper.top -= offsets[1];
                } else if (basePlacement === 'bottom') {
                    popper.left += offsets[0];
                    popper.top += offsets[1];
                }

                data.popper = popper;
                return data;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function preventOverflow(data, options) {
                var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

                // If offsetParent is the reference element, we really want to
                // go one step up and use the next offsetParent as reference to
                // avoid to make this modifier completely useless and look like broken
                if (data.instance.reference === boundariesElement) {
                    boundariesElement = getOffsetParent(boundariesElement);
                }

                // NOTE: DOM access here
                // resets the popper's position so that the document size can be calculated excluding
                // the size of the popper element itself
                var transformProp = getSupportedPropertyName('transform');
                var popperStyles = data.instance.popper.style;
                // assignment to help minification
                var top = popperStyles.top
                  , left = popperStyles.left
                  , transform = popperStyles[transformProp];

                popperStyles.top = '';
                popperStyles.left = '';
                popperStyles[transformProp] = '';

                var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

                // NOTE: DOM access here
                // restores the original style properties after the offsets have been computed
                popperStyles.top = top;
                popperStyles.left = left;
                popperStyles[transformProp] = transform;

                options.boundaries = boundaries;

                var order = options.priority;
                var popper = data.offsets.popper;

                var check = {
                    primary: function primary(placement) {
                        var value = popper[placement];
                        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
                            value = Math.max(popper[placement], boundaries[placement]);
                        }
                        return defineProperty({}, placement, value);
                    },
                    secondary: function secondary(placement) {
                        var mainSide = placement === 'right' ? 'left' : 'top';
                        var value = popper[mainSide];
                        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
                            value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
                        }
                        return defineProperty({}, mainSide, value);
                    }
                };

                order.forEach(function(placement) {
                    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
                    popper = _extends({}, popper, check[side](placement));
                });

                data.offsets.popper = popper;

                return data;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function shift(data) {
                var placement = data.placement;
                var basePlacement = placement.split('-')[0];
                var shiftvariation = placement.split('-')[1];

                // if shift shiftvariation is specified, run the modifier
                if (shiftvariation) {
                    var _data$offsets = data.offsets
                      , reference = _data$offsets.reference
                      , popper = _data$offsets.popper;

                    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
                    var side = isVertical ? 'left' : 'top';
                    var measurement = isVertical ? 'width' : 'height';

                    var shiftOffsets = {
                        start: defineProperty({}, side, reference[side]),
                        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
                    };

                    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
                }

                return data;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function hide(data) {
                if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
                    return data;
                }

                var refRect = data.offsets.reference;
                var bound = find(data.instance.modifiers, function(modifier) {
                    return modifier.name === 'preventOverflow';
                }).boundaries;

                if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
                    // Avoid unnecessary DOM access if visibility hasn't changed
                    if (data.hide === true) {
                        return data;
                    }

                    data.hide = true;
                    data.attributes['x-out-of-boundaries'] = '';
                } else {
                    // Avoid unnecessary DOM access if visibility hasn't changed
                    if (data.hide === false) {
                        return data;
                    }

                    data.hide = false;
                    data.attributes['x-out-of-boundaries'] = false;
                }

                return data;
            }

            /**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
            function inner(data) {
                var placement = data.placement;
                var basePlacement = placement.split('-')[0];
                var _data$offsets = data.offsets
                  , popper = _data$offsets.popper
                  , reference = _data$offsets.reference;

                var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

                var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

                popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

                data.placement = getOppositePlacement(placement);
                data.offsets.popper = getClientRect(popper);

                return data;
            }

            /**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

            /**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
            var modifiers = {
                /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
                shift: {
                    /** @prop {number} order=100 - Index used to define the order of execution */
                    order: 100,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: shift
                },

                /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
                offset: {
                    /** @prop {number} order=200 - Index used to define the order of execution */
                    order: 200,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: offset,
                    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
                    offset: 0
                },

                /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
                preventOverflow: {
                    /** @prop {number} order=300 - Index used to define the order of execution */
                    order: 300,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: preventOverflow,
                    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
                    priority: ['left', 'right', 'top', 'bottom'],
                    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
                    padding: 5,
                    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
                    boundariesElement: 'scrollParent'
                },

                /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
                keepTogether: {
                    /** @prop {number} order=400 - Index used to define the order of execution */
                    order: 400,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: keepTogether
                },

                /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
                arrow: {
                    /** @prop {number} order=500 - Index used to define the order of execution */
                    order: 500,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: arrow,
                    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
                    element: '[x-arrow]'
                },

                /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
                flip: {
                    /** @prop {number} order=600 - Index used to define the order of execution */
                    order: 600,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: flip,
                    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
                    behavior: 'flip',
                    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
                    padding: 5,
                    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
                    boundariesElement: 'viewport',
                    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
                    flipVariations: false,
                    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
                    flipVariationsByContent: false
                },

                /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
                inner: {
                    /** @prop {number} order=700 - Index used to define the order of execution */
                    order: 700,
                    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
                    enabled: false,
                    /** @prop {ModifierFn} */
                    fn: inner
                },

                /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
                hide: {
                    /** @prop {number} order=800 - Index used to define the order of execution */
                    order: 800,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: hide
                },

                /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
                computeStyle: {
                    /** @prop {number} order=850 - Index used to define the order of execution */
                    order: 850,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: computeStyle,
                    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
                    gpuAcceleration: true,
                    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
                    x: 'bottom',
                    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
                    y: 'right'
                },

                /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
                applyStyle: {
                    /** @prop {number} order=900 - Index used to define the order of execution */
                    order: 900,
                    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
                    enabled: true,
                    /** @prop {ModifierFn} */
                    fn: applyStyle,
                    /** @prop {Function} */
                    onLoad: applyStyleOnLoad,
                    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
                    gpuAcceleration: undefined
                }
            };

            /**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

            /**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
            var Defaults = {
                /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
                placement: 'bottom',

                /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
                positionFixed: false,

                /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
                eventsEnabled: true,

                /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
                removeOnDestroy: false,

                /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
                onCreate: function onCreate() {},

                /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
                onUpdate: function onUpdate() {},

                /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
                modifiers: modifiers
            };

            /**
 * @callback onCreate
 * @param {dataObject} data
 */

            /**
 * @callback onUpdate
 * @param {dataObject} data
 */

            // Utils
            // Methods
            var Popper = function() {
                /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
                function Popper(reference, popper) {
                    var _this = this;

                    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    classCallCheck(this, Popper);

                    this.scheduleUpdate = function() {
                        return requestAnimationFrame(_this.update);
                    }
                    ;

                    // make update() debounced, so that it only runs at most once-per-tick
                    this.update = debounce(this.update.bind(this));

                    // with {} we create a new object with the options inside it
                    this.options = _extends({}, Popper.Defaults, options);

                    // init state
                    this.state = {
                        isDestroyed: false,
                        isCreated: false,
                        scrollParents: []
                    };

                    // get reference and popper elements (allow jQuery wrappers)
                    this.reference = reference && reference.jquery ? reference[0] : reference;
                    this.popper = popper && popper.jquery ? popper[0] : popper;

                    // Deep merge modifiers options
                    this.options.modifiers = {};
                    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function(name) {
                        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
                    });

                    // Refactoring modifiers' list (Object => Array)
                    this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
                        return _extends({
                            name: name
                        }, _this.options.modifiers[name]);
                    })// sort the modifiers by order
                    .sort(function(a, b) {
                        return a.order - b.order;
                    });

                    // modifiers have the ability to execute arbitrary code when Popper.js get inited
                    // such code is executed in the same order of its modifier
                    // they could add new properties to their options configuration
                    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
                    this.modifiers.forEach(function(modifierOptions) {
                        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
                            modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
                        }
                    });

                    // fire the first update to position the popper in the right place
                    this.update();

                    var eventsEnabled = this.options.eventsEnabled;
                    if (eventsEnabled) {
                        // setup event listeners, they will take care of update the position in specific situations
                        this.enableEventListeners();
                    }

                    this.state.eventsEnabled = eventsEnabled;
                }

                // We can't use class properties because they don't get listed in the
                // class prototype and break stuff like Sinon stubs

                createClass(Popper, [{
                    key: 'update',
                    value: function update$$1() {
                        return update.call(this);
                    }
                }, {
                    key: 'destroy',
                    value: function destroy$$1() {
                        return destroy.call(this);
                    }
                }, {
                    key: 'enableEventListeners',
                    value: function enableEventListeners$$1() {
                        return enableEventListeners.call(this);
                    }
                }, {
                    key: 'disableEventListeners',
                    value: function disableEventListeners$$1() {
                        return disableEventListeners.call(this);
                    }
                    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

                    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

                }]);
                return Popper;
            }();

            /**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */

            Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
            Popper.placements = placements;
            Popper.Defaults = Defaults;

            /* harmony default export */
            __webpack_exports__["a"] = (Popper);
            //# sourceMappingURL=popper.js.map

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 431 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return symbolObservablePonyfill;
        });
        function symbolObservablePonyfill(root) {
            var result;
            var Symbol = root.Symbol;

            if (typeof Symbol === 'function') {
                if (Symbol.observable) {
                    result = Symbol.observable;
                } else {
                    result = Symbol('observable');
                    Symbol.observable = result;
                }
            } else {
                result = '@@observable';
            }

            return result;
        }
        ;
        /***/
    }
    ), /* 432 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return orderModifiers;
        });
        /* harmony import */
        var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
        // source: https://stackoverflow.com/questions/49875255

        function order(modifiers) {
            var map = new Map();
            var visited = new Set();
            var result = [];
            modifiers.forEach(function(modifier) {
                map.set(modifier.name, modifier);
            });
            // On visiting object, check for its dependencies and visit them recursively

            function sort(modifier) {
                visited.add(modifier.name);
                var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
                requires.forEach(function(dep) {
                    if (!visited.has(dep)) {
                        var depModifier = map.get(dep);

                        if (depModifier) {
                            sort(depModifier);
                        }
                    }
                });
                result.push(modifier);
            }

            modifiers.forEach(function(modifier) {
                if (!visited.has(modifier.name)) {
                    // check for visited object
                    sort(modifier);
                }
            });
            return result;
        }

        function orderModifiers(modifiers) {
            // order based on dependencies
            var orderedModifiers = order(modifiers);
            // order based on phase

            return _enums_js__WEBPACK_IMPORTED_MODULE_0__[/* modifierPhases */
            "g"].reduce(function(acc, phase) {
                return acc.concat(orderedModifiers.filter(function(modifier) {
                    return modifier.phase === phase;
                }));
            }, []);
        }

        /***/
    }
    ), /* 433 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return debounce;
        });
        function debounce(fn) {
            var pending;
            return function() {
                if (!pending) {
                    pending = new Promise(function(resolve) {
                        Promise.resolve().then(function() {
                            pending = undefined;
                            resolve(fn());
                        });
                    }
                    );
                }

                return pending;
            }
            ;
        }

        /***/
    }
    ), /* 434 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    userSelect: 'none',
                    width: '1em',
                    height: '1em',
                    display: 'inline-block',
                    fill: 'currentColor',
                    flexShrink: 0,
                    fontSize: theme.typography.pxToRem(24),
                    transition: theme.transitions.create('fill', {
                        duration: theme.transitions.duration.shorter
                    })
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main
                },

                /* Styles applied to the root element if `color="action"`. */
                colorAction: {
                    color: theme.palette.action.active
                },

                /* Styles applied to the root element if `color="error"`. */
                colorError: {
                    color: theme.palette.error.main
                },

                /* Styles applied to the root element if `color="disabled"`. */
                colorDisabled: {
                    color: theme.palette.action.disabled
                },

                /* Styles applied to the root element if `fontSize="inherit"`. */
                fontSizeInherit: {
                    fontSize: 'inherit'
                },

                /* Styles applied to the root element if `fontSize="small"`. */
                fontSizeSmall: {
                    fontSize: theme.typography.pxToRem(20)
                },

                /* Styles applied to the root element if `fontSize="large"`. */
                fontSizeLarge: {
                    fontSize: theme.typography.pxToRem(35)
                }
            };
        };
        var SvgIcon = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function SvgIcon(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'inherit' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'svg' : _props$component
              , _props$fontSize = props.fontSize
              , fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize
              , htmlColor = props.htmlColor
              , titleAccess = props.titleAccess
              , _props$viewBox = props.viewBox
              , viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "classes", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, color !== 'inherit' && classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(color))], fontSize !== 'default' && classes["fontSize".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(fontSize))]),
                focusable: "false",
                viewBox: viewBox,
                color: htmlColor,
                "aria-hidden": titleAccess ? null : 'true',
                role: titleAccess ? 'img' : 'presentation',
                ref: ref
            }, other), children, titleAccess ? react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("title", null, titleAccess) : null);
        });
        false ? undefined : void 0;
        SvgIcon.muiName = 'SvgIcon';
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiSvgIcon'
        })(SvgIcon));

        /***/
    }
    ), /* 435 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51);
        /* harmony import */
        var _FormControl_FormControlContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(66);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13);
        /* harmony import */
        var _TextareaAutosize__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(757);
        /* harmony import */
        var _utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(80);

        /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */

        var styles = function styles(theme) {
            var light = theme.palette.type === 'light';
            var placeholder = {
                color: 'currentColor',
                opacity: light ? 0.42 : 0.5,
                transition: theme.transitions.create('opacity', {
                    duration: theme.transitions.duration.shorter
                })
            };
            var placeholderHidden = {
                opacity: '0 !important'
            };
            var placeholderVisible = {
                opacity: light ? 0.42 : 0.5
            };
            return {
                /* Styles applied to the root element. */
                root: {
                    // Mimics the default input display property used by browsers for an input.
                    fontFamily: theme.typography.fontFamily,
                    color: theme.palette.text.primary,
                    fontSize: theme.typography.pxToRem(16),
                    lineHeight: '1.1875em',
                    // Reset (19px), match the native input line-height
                    boxSizing: 'border-box',
                    // Prevent padding issue with fullWidth.
                    position: 'relative',
                    cursor: 'text',
                    display: 'inline-flex',
                    alignItems: 'center',
                    '&$disabled': {
                        color: theme.palette.text.disabled,
                        cursor: 'default'
                    }
                },

                /* Styles applied to the root element if the component is a descendant of `FormControl`. */
                formControl: {},

                /* Styles applied to the root element if the component is focused. */
                focused: {},

                /* Styles applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `startAdornment` is provided. */
                adornedStart: {},

                /* Styles applied to the root element if `endAdornment` is provided. */
                adornedEnd: {},

                /* Styles applied to the root element if `error={true}`. */
                error: {},

                /* Styles applied to the `input` element if `margin="dense"`. */
                marginDense: {},

                /* Styles applied to the root element if `multiline={true}`. */
                multiline: {
                    padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
                    '&$marginDense': {
                        paddingTop: 4 - 1
                    }
                },

                /* Styles applied to the root element if the color is secondary. */
                colorSecondary: {},

                /* Styles applied to the root element if `fullWidth={true}`. */
                fullWidth: {
                    width: '100%'
                },

                /* Styles applied to the `input` element. */
                input: {
                    font: 'inherit',
                    color: 'currentColor',
                    padding: "".concat(8 - 2, "px 0 ").concat(8 - 1, "px"),
                    border: 0,
                    boxSizing: 'content-box',
                    background: 'none',
                    height: '1.1875em',
                    // Reset (19px), match the native input line-height
                    margin: 0,
                    // Reset for Safari
                    WebkitTapHighlightColor: 'transparent',
                    display: 'block',
                    // Make the flex item shrink with Firefox
                    minWidth: 0,
                    width: '100%',
                    // Fix IE 11 width issue
                    animationName: '$auto-fill-cancel',
                    '&::-webkit-input-placeholder': placeholder,
                    '&::-moz-placeholder': placeholder,
                    // Firefox 19+
                    '&:-ms-input-placeholder': placeholder,
                    // IE 11
                    '&::-ms-input-placeholder': placeholder,
                    // Edge
                    '&:focus': {
                        outline: 0
                    },
                    // Reset Firefox invalid required input style
                    '&:invalid': {
                        boxShadow: 'none'
                    },
                    '&::-webkit-search-decoration': {
                        // Remove the padding when type=search.
                        '-webkit-appearance': 'none'
                    },
                    // Show and hide the placeholder logic
                    'label[data-shrink=false] + $formControl &': {
                        '&::-webkit-input-placeholder': placeholderHidden,
                        '&::-moz-placeholder': placeholderHidden,
                        // Firefox 19+
                        '&:-ms-input-placeholder': placeholderHidden,
                        // IE 11
                        '&::-ms-input-placeholder': placeholderHidden,
                        // Edge
                        '&:focus::-webkit-input-placeholder': placeholderVisible,
                        '&:focus::-moz-placeholder': placeholderVisible,
                        // Firefox 19+
                        '&:focus:-ms-input-placeholder': placeholderVisible,
                        // IE 11
                        '&:focus::-ms-input-placeholder': placeholderVisible // Edge

                    },
                    '&$disabled': {
                        opacity: 1 // Reset iOS opacity

                    },
                    '&:-webkit-autofill': {
                        animationDuration: '5000s',
                        animationName: '$auto-fill'
                    }
                },
                '@keyframes auto-fill': {
                    from: {}
                },
                '@keyframes auto-fill-cancel': {
                    from: {}
                },

                /* Styles applied to the `input` element if `margin="dense"`. */
                inputMarginDense: {
                    paddingTop: 4 - 1
                },

                /* Styles applied to the `input` element if `multiline={true}`. */
                inputMultiline: {
                    height: 'auto',
                    resize: 'none',
                    padding: 0
                },

                /* Styles applied to the `input` element if `type="search"`. */
                inputTypeSearch: {
                    // Improve type search style.
                    '-moz-appearance': 'textfield',
                    '-webkit-appearance': 'textfield'
                },

                /* Styles applied to the `input` element if `startAdornment` is provided. */
                inputAdornedStart: {},

                /* Styles applied to the `input` element if `endAdornment` is provided. */
                inputAdornedEnd: {},

                /* Styles applied to the `input` element if `hiddenLabel={true}`. */
                inputHiddenLabel: {}
            };
        };
        var useEnhancedEffect = typeof window === 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect : react__WEBPACK_IMPORTED_MODULE_2__["default"].useLayoutEffect;
        /**
 * `InputBase` contains as few styles as possible.
 * It aims to be a simple building block for creating an input.
 * It contains a load of style reset and some state logic.
 */

        var InputBase = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function InputBase(props, ref) {
            var ariaDescribedby = props['aria-describedby']
              , autoComplete = props.autoComplete
              , autoFocus = props.autoFocus
              , classes = props.classes
              , className = props.className
              , color = props.color
              , defaultValue = props.defaultValue
              , disabled = props.disabled
              , endAdornment = props.endAdornment
              , error = props.error
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , id = props.id
              , _props$inputComponent = props.inputComponent
              , inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent
              , _props$inputProps = props.inputProps
              , inputPropsProp = _props$inputProps === void 0 ? {} : _props$inputProps
              , inputRefProp = props.inputRef
              , margin = props.margin
              , _props$multiline = props.multiline
              , multiline = _props$multiline === void 0 ? false : _props$multiline
              , name = props.name
              , onBlur = props.onBlur
              , onChange = props.onChange
              , onClick = props.onClick
              , onFocus = props.onFocus
              , onKeyDown = props.onKeyDown
              , onKeyUp = props.onKeyUp
              , placeholder = props.placeholder
              , readOnly = props.readOnly
              , renderSuffix = props.renderSuffix
              , rows = props.rows
              , rowsMax = props.rowsMax
              , rowsMin = props.rowsMin
              , startAdornment = props.startAdornment
              , _props$type = props.type
              , type = _props$type === void 0 ? 'text' : _props$type
              , valueProp = props.value
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["aria-describedby", "autoComplete", "autoFocus", "classes", "className", "color", "defaultValue", "disabled", "endAdornment", "error", "fullWidth", "id", "inputComponent", "inputProps", "inputRef", "margin", "multiline", "name", "onBlur", "onChange", "onClick", "onFocus", "onKeyDown", "onKeyUp", "placeholder", "readOnly", "renderSuffix", "rows", "rowsMax", "rowsMin", "startAdornment", "type", "value"]);

            var value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;

            var _React$useRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(value != null)
              , isControlled = _React$useRef.current;

            var inputRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef();
            var handleInputRefWarning = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(instance) {
                if (false) {}
            }, []);
            var handleInputPropsRefProp = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"])(inputPropsProp.ref, handleInputRefWarning);
            var handleInputRefProp = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"])(inputRefProp, handleInputPropsRefProp);
            var handleInputRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"])(inputRef, handleInputRefProp);

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_2__["default"].useState(false)
              , focused = _React$useState[0]
              , setFocused = _React$useState[1];

            var muiFormControl = Object(_FormControl_FormControlContext__WEBPACK_IMPORTED_MODULE_6__[/* useFormControl */
            "b"])();

            if (false) {}

            var fcs = Object(_FormControl_formControlState__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['color', 'disabled', 'error', 'hiddenLabel', 'margin', 'required', 'filled']
            });
            fcs.focused = muiFormControl ? muiFormControl.focused : focused;
            // The blur won't fire when the disabled state is set on a focused input.
            // We need to book keep the focused state manually.

            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                if (!muiFormControl && disabled && focused) {
                    setFocused(false);

                    if (onBlur) {
                        onBlur();
                    }
                }
            }, [muiFormControl, disabled, focused, onBlur]);
            var onFilled = muiFormControl && muiFormControl.onFilled;
            var onEmpty = muiFormControl && muiFormControl.onEmpty;
            var checkDirty = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(obj) {
                if (Object(_utils__WEBPACK_IMPORTED_MODULE_11__[/* isFilled */
                "b"])(obj)) {
                    if (onFilled) {
                        onFilled();
                    }
                } else if (onEmpty) {
                    onEmpty();
                }
            }, [onFilled, onEmpty]);
            useEnhancedEffect(function() {
                if (isControlled) {
                    checkDirty({
                        value: value
                    });
                }
            }, [value, checkDirty, isControlled]);

            var handleFocus = function handleFocus(event) {
                // Fix a bug with IE 11 where the focus/blur events are triggered
                // while the input is disabled.
                if (fcs.disabled) {
                    event.stopPropagation();
                    return;
                }

                if (onFocus) {
                    onFocus(event);
                }

                if (inputPropsProp.onFocus) {
                    inputPropsProp.onFocus(event);
                }

                if (muiFormControl && muiFormControl.onFocus) {
                    muiFormControl.onFocus(event);
                } else {
                    setFocused(true);
                }
            };

            var handleBlur = function handleBlur(event) {
                if (onBlur) {
                    onBlur(event);
                }

                if (inputPropsProp.onBlur) {
                    inputPropsProp.onBlur(event);
                }

                if (muiFormControl && muiFormControl.onBlur) {
                    muiFormControl.onBlur(event);
                } else {
                    setFocused(false);
                }
            };

            var handleChange = function handleChange(event) {
                if (!isControlled) {
                    var element = event.target || inputRef.current;

                    if (element == null) {
                        throw new TypeError('Material-UI: Expected valid input target. ' + 'Did you use a custom `inputComponent` and forget to forward refs? ' + 'See https://material-ui.com/r/input-component-ref-interface for more info.');
                    }

                    checkDirty({
                        value: element.value
                    });
                }

                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                }

                if (inputPropsProp.onChange) {
                    inputPropsProp.onChange.apply(inputPropsProp, [event].concat(args));
                }
                // Perform in the willUpdate

                if (onChange) {
                    onChange.apply(void 0, [event].concat(args));
                }
            };
            // Check the input state on mount, in case it was filled by the user
            // or auto filled by the browser before the hydration (for SSR).

            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                checkDirty(inputRef.current);
            }, []);
            // eslint-disable-line react-hooks/exhaustive-deps

            var handleClick = function handleClick(event) {
                if (inputRef.current && event.currentTarget === event.target) {
                    inputRef.current.focus();
                }

                if (onClick) {
                    onClick(event);
                }
            };

            var InputComponent = inputComponent;

            var inputProps = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({}, inputPropsProp, {
                ref: handleInputRef
            });

            if (typeof InputComponent !== 'string') {
                inputProps = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    // Rename ref to inputRef as we don't know the
                    // provided `inputComponent` structure.
                    inputRef: handleInputRef,
                    type: type
                }, inputProps, {
                    ref: null
                });
            } else if (multiline) {
                if (rows && !rowsMax && !rowsMin) {
                    InputComponent = 'textarea';
                } else {
                    inputProps = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                    "a"])({
                        rows: rows,
                        rowsMax: rowsMax
                    }, inputProps);
                    InputComponent = _TextareaAutosize__WEBPACK_IMPORTED_MODULE_10__[/* default */
                    "a"];
                }
            } else {
                inputProps = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    type: type
                }, inputProps);
            }

            var handleAutoFill = function handleAutoFill(event) {
                // Provide a fake value as Chrome might not let you access it for security reasons.
                checkDirty(event.animationName.indexOf('auto-fill-cancel') !== -1 ? inputRef.current : {
                    value: 'x'
                });
            };

            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                if (muiFormControl) {
                    muiFormControl.setAdornedStart(Boolean(startAdornment));
                }
            }, [muiFormControl, startAdornment]);
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("div", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fullWidth && classes.fullWidth, fcs.focused && classes.focused, muiFormControl && classes.formControl, multiline && classes.multiline, startAdornment && classes.adornedStart, endAdornment && classes.adornedEnd, {
                    dense: classes.marginDense
                }[fcs.margin]),
                onClick: handleClick,
                ref: ref
            }, other), startAdornment, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_FormControl_FormControlContext__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"].Provider, {
                value: null
            }, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(InputComponent, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                "aria-invalid": fcs.error,
                "aria-describedby": ariaDescribedby,
                autoComplete: autoComplete,
                autoFocus: autoFocus,
                defaultValue: defaultValue,
                disabled: fcs.disabled,
                id: id,
                onAnimationStart: handleAutoFill,
                name: name,
                placeholder: placeholder,
                readOnly: readOnly,
                required: fcs.required,
                rows: rows,
                value: value,
                onKeyDown: onKeyDown,
                onKeyUp: onKeyUp
            }, inputProps, {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.input, inputPropsProp.className, fcs.disabled && classes.disabled, multiline && classes.inputMultiline, fcs.hiddenLabel && classes.inputHiddenLabel, startAdornment && classes.inputAdornedStart, endAdornment && classes.inputAdornedEnd, {
                    search: classes.inputTypeSearch
                }[type], {
                    dense: classes.inputMarginDense
                }[fcs.margin]),
                onBlur: handleBlur,
                onChange: handleChange,
                onFocus: handleFocus
            }))), endAdornment, renderSuffix ? renderSuffix(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({}, fcs, {
                startAdornment: startAdornment
            })) : null);
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_7__[/* default */
        "a"])(styles, {
            name: 'MuiInputBase'
        })(InputBase));

        /***/
    }
    ), /* 436 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/jss/dist/jss.esm.js + 1 modules
        var jss_esm = __webpack_require__(35);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js

        var now = Date.now();
        var fnValuesNs = "fnValues" + now;
        var fnRuleNs = "fnStyle" + ++now;
        function functionPlugin() {
            return {
                onCreateRule: function onCreateRule(name, decl, options) {
                    if (typeof decl !== 'function')
                        return null;
                    var rule = Object(jss_esm["d"/* createRule */
                    ])(name, {}, options);
                    rule[fnRuleNs] = decl;
                    return rule;
                },
                onProcessStyle: function onProcessStyle(style, rule) {
                    // We need to extract function values from the declaration, so that we can keep core unaware of them.
                    // We need to do that only once.
                    // We don't need to extract functions on each style update, since this can happen only once.
                    // We don't support function values inside of function rules.
                    if (fnValuesNs in rule || fnRuleNs in rule)
                        return style;
                    var fnValues = {};

                    for (var prop in style) {
                        var value = style[prop];
                        if (typeof value !== 'function')
                            continue;
                        delete style[prop];
                        fnValues[prop] = value;
                    }
                    // $FlowFixMe

                    rule[fnValuesNs] = fnValues;
                    return style;
                },
                onUpdate: function onUpdate(data, rule, sheet, options) {
                    var styleRule = rule;
                    var fnRule = styleRule[fnRuleNs];
                    // If we have a style function, the entire rule is dynamic and style object
                    // will be returned from that function.

                    if (fnRule) {
                        // Empty object will remove all currently defined props
                        // in case function rule returns a falsy value.
                        styleRule.style = fnRule(data) || {};
                    }

                    var fnValues = styleRule[fnValuesNs];
                    // If we have a fn values map, it is a rule with function values.

                    if (fnValues) {
                        for (var prop in fnValues) {
                            styleRule.prop(prop, fnValues[prop](data), options);
                        }
                    }
                }
            };
        }

        /* harmony default export */
        var jss_plugin_rule_value_function_esm = (functionPlugin);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js

        var at = '@global';
        var atPrefix = '@global ';

        var jss_plugin_global_esm_GlobalContainerRule = /*#__PURE__*/
        function() {
            function GlobalContainerRule(key, styles, options) {
                this.type = 'global';
                this.at = at;
                this.rules = void 0;
                this.options = void 0;
                this.key = void 0;
                this.isProcessed = false;
                this.key = key;
                this.options = options;
                this.rules = new jss_esm["a"/* RuleList */
                ](Object(esm_extends["a"/* default */
                ])({}, options, {
                    parent: this
                }));

                for (var selector in styles) {
                    this.rules.add(selector, styles[selector]);
                }

                this.rules.process();
            }
            /**
   * Get a rule.
   */

            var _proto = GlobalContainerRule.prototype;

            _proto.getRule = function getRule(name) {
                return this.rules.get(name);
            }
            /**
   * Create and register rule, run plugins.
   */
            ;

            _proto.addRule = function addRule(name, style, options) {
                var rule = this.rules.add(name, style, options);
                this.options.jss.plugins.onProcessRule(rule);
                return rule;
            }
            /**
   * Get index of a rule.
   */
            ;

            _proto.indexOf = function indexOf(rule) {
                return this.rules.indexOf(rule);
            }
            /**
   * Generates a CSS string.
   */
            ;

            _proto.toString = function toString() {
                return this.rules.toString();
            }
            ;

            return GlobalContainerRule;
        }();

        var jss_plugin_global_esm_GlobalPrefixedRule = /*#__PURE__*/
        function() {
            function GlobalPrefixedRule(key, style, options) {
                this.type = 'global';
                this.at = at;
                this.options = void 0;
                this.rule = void 0;
                this.isProcessed = false;
                this.key = void 0;
                this.key = key;
                this.options = options;
                var selector = key.substr(atPrefix.length);
                this.rule = options.jss.createRule(selector, style, Object(esm_extends["a"/* default */
                ])({}, options, {
                    parent: this
                }));
            }

            var _proto2 = GlobalPrefixedRule.prototype;

            _proto2.toString = function toString(options) {
                return this.rule ? this.rule.toString(options) : '';
            }
            ;

            return GlobalPrefixedRule;
        }();

        var separatorRegExp = /\s*,\s*/g;

        function addScope(selector, scope) {
            var parts = selector.split(separatorRegExp);
            var scoped = '';

            for (var i = 0; i < parts.length; i++) {
                scoped += scope + " " + parts[i].trim();
                if (parts[i + 1])
                    scoped += ', ';
            }

            return scoped;
        }

        function handleNestedGlobalContainerRule(rule) {
            var options = rule.options
              , style = rule.style;
            var rules = style ? style[at] : null;
            if (!rules)
                return;

            for (var name in rules) {
                options.sheet.addRule(name, rules[name], Object(esm_extends["a"/* default */
                ])({}, options, {
                    selector: addScope(name, rule.selector)
                }));
            }

            delete style[at];
        }

        function handlePrefixedGlobalRule(rule) {
            var options = rule.options
              , style = rule.style;

            for (var prop in style) {
                if (prop[0] !== '@' || prop.substr(0, at.length) !== at)
                    continue;
                var selector = addScope(prop.substr(at.length), rule.selector);
                options.sheet.addRule(selector, style[prop], Object(esm_extends["a"/* default */
                ])({}, options, {
                    selector: selector
                }));
                delete style[prop];
            }
        }
        /**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */

        function jssGlobal() {
            function onCreateRule(name, styles, options) {
                if (!name)
                    return null;

                if (name === at) {
                    return new jss_plugin_global_esm_GlobalContainerRule(name,styles,options);
                }

                if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {
                    return new jss_plugin_global_esm_GlobalPrefixedRule(name,styles,options);
                }

                var parent = options.parent;

                if (parent) {
                    if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {
                        options.scoped = false;
                    }
                }

                if (options.scoped === false) {
                    options.selector = name;
                }

                return null;
            }

            function onProcessRule(rule) {
                if (rule.type !== 'style')
                    return;
                handleNestedGlobalContainerRule(rule);
                handlePrefixedGlobalRule(rule);
            }

            return {
                onCreateRule: onCreateRule,
                onProcessRule: onProcessRule
            };
        }

        /* harmony default export */
        var jss_plugin_global_esm = (jssGlobal);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js

        var jss_plugin_nested_esm_separatorRegExp = /\s*,\s*/g;
        var parentRegExp = /&/g;
        var refRegExp = /\$([\w-]+)/g;
        /**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */

        function jssNested() {
            // Get a function to be used for $ref replacement.
            function getReplaceRef(container, sheet) {
                return function(match, key) {
                    var rule = container.getRule(key) || sheet && sheet.getRule(key);

                    if (rule) {
                        rule = rule;
                        return rule.selector;
                    }

                    false ? undefined : void 0;
                    return key;
                }
                ;
            }

            function replaceParentRefs(nestedProp, parentProp) {
                var parentSelectors = parentProp.split(jss_plugin_nested_esm_separatorRegExp);
                var nestedSelectors = nestedProp.split(jss_plugin_nested_esm_separatorRegExp);
                var result = '';

                for (var i = 0; i < parentSelectors.length; i++) {
                    var parent = parentSelectors[i];

                    for (var j = 0; j < nestedSelectors.length; j++) {
                        var nested = nestedSelectors[j];
                        if (result)
                            result += ', ';
                        // Replace all & by the parent or prefix & with the parent.

                        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
                    }
                }

                return result;
            }

            function getOptions(rule, container, prevOptions) {
                // Options has been already created, now we only increase index.
                if (prevOptions)
                    return Object(esm_extends["a"/* default */
                    ])({}, prevOptions, {
                        index: prevOptions.index + 1
                    });
                var nestingLevel = rule.options.nestingLevel;
                nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

                var options = Object(esm_extends["a"/* default */
                ])({}, rule.options, {
                    nestingLevel: nestingLevel,
                    index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.

                });

                delete options.name;
                return options;
            }

            function onProcessStyle(style, rule, sheet) {
                if (rule.type !== 'style')
                    return style;
                var styleRule = rule;
                var container = styleRule.options.parent;
                var options;
                var replaceRef;

                for (var prop in style) {
                    var isNested = prop.indexOf('&') !== -1;
                    var isNestedConditional = prop[0] === '@';
                    if (!isNested && !isNestedConditional)
                        continue;
                    options = getOptions(styleRule, container, options);

                    if (isNested) {
                        var selector = replaceParentRefs(prop, styleRule.selector);
                        // Lazily create the ref replacer function just once for
                        // all nested rules within the sheet.

                        if (!replaceRef)
                            replaceRef = getReplaceRef(container, sheet);
                        // Replace all $refs.

                        selector = selector.replace(refRegExp, replaceRef);
                        container.addRule(selector, style[prop], Object(esm_extends["a"/* default */
                        ])({}, options, {
                            selector: selector
                        }));
                    } else if (isNestedConditional) {
                        // Place conditional right after the parent rule to ensure right ordering.
                        container.addRule(prop, {}, options)// Flow expects more options but they aren't required
                        // And flow doesn't know this will always be a StyleRule which has the addRule method
                        // $FlowFixMe
                        .addRule(styleRule.key, style[prop], {
                            selector: styleRule.selector
                        });
                    }

                    delete style[prop];
                }

                return style;
            }

            return {
                onProcessStyle: onProcessStyle
            };
        }

        /* harmony default export */
        var jss_plugin_nested_esm = (jssNested);

        // CONCATENATED MODULE: ../node_modules/hyphenate-style-name/index.js
        /* eslint-disable no-var, prefer-template */
        var uppercasePattern = /[A-Z]/g
        var msPattern = /^ms-/
        var cache = {}

        function toHyphenLower(match) {
            return '-' + match.toLowerCase()
        }

        function hyphenateStyleName(name) {
            if (cache.hasOwnProperty(name)) {
                return cache[name]
            }

            var hName = name.replace(uppercasePattern, toHyphenLower)
            return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)
        }

        /* harmony default export */
        var hyphenate_style_name = (hyphenateStyleName);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js

        /**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */

        function convertCase(style) {
            var converted = {};

            for (var prop in style) {
                var key = prop.indexOf('--') === 0 ? prop : hyphenate_style_name(prop);
                converted[key] = style[prop];
            }

            if (style.fallbacks) {
                if (Array.isArray(style.fallbacks))
                    converted.fallbacks = style.fallbacks.map(convertCase);
                else
                    converted.fallbacks = convertCase(style.fallbacks);
            }

            return converted;
        }
        /**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */

        function camelCase() {
            function onProcessStyle(style) {
                if (Array.isArray(style)) {
                    // Handle rules like @font-face, which can have multiple styles in an array
                    for (var index = 0; index < style.length; index++) {
                        style[index] = convertCase(style[index]);
                    }

                    return style;
                }

                return convertCase(style);
            }

            function onChangeValue(value, prop, rule) {
                if (prop.indexOf('--') === 0) {
                    return value;
                }

                var hyphenatedProp = hyphenate_style_name(prop);
                // There was no camel case in place

                if (prop === hyphenatedProp)
                    return value;
                rule.prop(hyphenatedProp, value);
                // Core will ignore that property value we set the proper one above.

                return null;
            }

            return {
                onProcessStyle: onProcessStyle,
                onChangeValue: onChangeValue
            };
        }

        /* harmony default export */
        var jss_plugin_camel_case_esm = (camelCase);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js

        var px = jss_esm["f"/* hasCSSTOMSupport */
        ] && CSS ? CSS.px : 'px';
        var ms = jss_esm["f"/* hasCSSTOMSupport */
        ] && CSS ? CSS.ms : 'ms';
        var percent = jss_esm["f"/* hasCSSTOMSupport */
        ] && CSS ? CSS.percent : '%';
        /**
 * Generated jss-plugin-default-unit CSS property units
 *
 * @type object
 */

        var defaultUnits = {
            // Animation properties
            'animation-delay': ms,
            'animation-duration': ms,
            // Background properties
            'background-position': px,
            'background-position-x': px,
            'background-position-y': px,
            'background-size': px,
            // Border Properties
            border: px,
            'border-bottom': px,
            'border-bottom-left-radius': px,
            'border-bottom-right-radius': px,
            'border-bottom-width': px,
            'border-left': px,
            'border-left-width': px,
            'border-radius': px,
            'border-right': px,
            'border-right-width': px,
            'border-top': px,
            'border-top-left-radius': px,
            'border-top-right-radius': px,
            'border-top-width': px,
            'border-width': px,
            // Margin properties
            margin: px,
            'margin-bottom': px,
            'margin-left': px,
            'margin-right': px,
            'margin-top': px,
            // Padding properties
            padding: px,
            'padding-bottom': px,
            'padding-left': px,
            'padding-right': px,
            'padding-top': px,
            // Mask properties
            'mask-position-x': px,
            'mask-position-y': px,
            'mask-size': px,
            // Width and height properties
            height: px,
            width: px,
            'min-height': px,
            'max-height': px,
            'min-width': px,
            'max-width': px,
            // Position properties
            bottom: px,
            left: px,
            top: px,
            right: px,
            // Shadow properties
            'box-shadow': px,
            'text-shadow': px,
            // Column properties
            'column-gap': px,
            'column-rule': px,
            'column-rule-width': px,
            'column-width': px,
            // Font and text properties
            'font-size': px,
            'font-size-delta': px,
            'letter-spacing': px,
            'text-indent': px,
            'text-stroke': px,
            'text-stroke-width': px,
            'word-spacing': px,
            // Motion properties
            motion: px,
            'motion-offset': px,
            // Outline properties
            outline: px,
            'outline-offset': px,
            'outline-width': px,
            // Perspective properties
            perspective: px,
            'perspective-origin-x': percent,
            'perspective-origin-y': percent,
            // Transform properties
            'transform-origin': percent,
            'transform-origin-x': percent,
            'transform-origin-y': percent,
            'transform-origin-z': percent,
            // Transition properties
            'transition-delay': ms,
            'transition-duration': ms,
            // Alignment properties
            'vertical-align': px,
            'flex-basis': px,
            // Some random properties
            'shape-margin': px,
            size: px,
            // Grid properties
            grid: px,
            'grid-gap': px,
            'grid-row-gap': px,
            'grid-column-gap': px,
            'grid-template-rows': px,
            'grid-template-columns': px,
            'grid-auto-rows': px,
            'grid-auto-columns': px,
            // Not existing properties.
            // Used to avoid issues with jss-plugin-expand integration.
            'box-shadow-x': px,
            'box-shadow-y': px,
            'box-shadow-blur': px,
            'box-shadow-spread': px,
            'font-line-height': px,
            'text-shadow-x': px,
            'text-shadow-y': px,
            'text-shadow-blur': px
        };

        /**
 * Clones the object and adds a camel cased property version.
 */
        function addCamelCasedVersion(obj) {
            var regExp = /(-[a-z])/g;

            var replace = function replace(str) {
                return str[1].toUpperCase();
            };

            var newObj = {};

            for (var _key in obj) {
                newObj[_key] = obj[_key];
                newObj[_key.replace(regExp, replace)] = obj[_key];
            }

            return newObj;
        }

        var units = addCamelCasedVersion(defaultUnits);
        /**
 * Recursive deep style passing function
 */

        function iterate(prop, value, options) {
            if (!value)
                return value;

            if (Array.isArray(value)) {
                for (var i = 0; i < value.length; i++) {
                    value[i] = iterate(prop, value[i], options);
                }
            } else if (typeof value === 'object') {
                if (prop === 'fallbacks') {
                    for (var innerProp in value) {
                        value[innerProp] = iterate(innerProp, value[innerProp], options);
                    }
                } else {
                    for (var _innerProp in value) {
                        value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options);
                    }
                }
            } else if (typeof value === 'number') {
                if (options[prop]) {
                    return "" + value + options[prop];
                }

                if (units[prop]) {
                    return typeof units[prop] === 'function' ? units[prop](value).toString() : "" + value + units[prop];
                }

                return value.toString();
            }

            return value;
        }
        /**
 * Add unit to numeric values.
 */

        function defaultUnit(options) {
            if (options === void 0) {
                options = {};
            }

            var camelCasedOptions = addCamelCasedVersion(options);

            function onProcessStyle(style, rule) {
                if (rule.type !== 'style')
                    return style;

                for (var prop in style) {
                    style[prop] = iterate(prop, style[prop], camelCasedOptions);
                }

                return style;
            }

            function onChangeValue(value, prop) {
                return iterate(prop, value, camelCasedOptions);
            }

            return {
                onProcessStyle: onProcessStyle,
                onChangeValue: onChangeValue
            };
        }

        /* harmony default export */
        var jss_plugin_default_unit_esm = (defaultUnit);

        // EXTERNAL MODULE: ../node_modules/is-in-browser/dist/module.js
        var dist_module = __webpack_require__(82);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
        var toConsumableArray = __webpack_require__(21);

        // CONCATENATED MODULE: ../node_modules/css-vendor/dist/css-vendor.esm.js

        // Export javascript style and css style vendor prefixes.
        var js = '';
        var css = '';
        var vendor = '';
        var browser = '';
        var isTouch = dist_module["a"/* default */
        ] && 'ontouchstart'in document.documentElement;
        // We should not do anything if required serverside.

        if (dist_module["a"/* default */
        ]) {
            // Order matters. We need to check Webkit the last one because
            // other vendors use to add Webkit prefixes to some properties
            var jsCssMap = {
                Moz: '-moz-',
                ms: '-ms-',
                O: '-o-',
                Webkit: '-webkit-'
            };

            var _document$createEleme = document.createElement('p')
              , css_vendor_esm_style = _document$createEleme.style;

            var testProp = 'Transform';

            for (var css_vendor_esm_key in jsCssMap) {
                if (css_vendor_esm_key + testProp in css_vendor_esm_style) {
                    js = css_vendor_esm_key;
                    css = jsCssMap[css_vendor_esm_key];
                    break;
                }
            }
            // Correctly detect the Edge browser.

            if (js === 'Webkit' && 'msHyphens'in css_vendor_esm_style) {
                js = 'ms';
                css = jsCssMap.ms;
                browser = 'edge';
            }
            // Correctly detect the Safari browser.

            if (js === 'Webkit' && '-apple-trailing-word'in css_vendor_esm_style) {
                vendor = 'apple';
            }
        }
        /**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */

        var prefix = {
            js: js,
            css: css,
            vendor: vendor,
            browser: browser,
            isTouch: isTouch
        };

        /**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

        function supportedKeyframes(key) {
            // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
            if (key[1] === '-')
                return key;
            // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
            // https://caniuse.com/#search=keyframes

            if (prefix.js === 'ms')
                return key;
            return "@" + prefix.css + "keyframes" + key.substr(10);
        }

        // https://caniuse.com/#search=appearance

        var appearence = {
            noPrefill: ['appearance'],
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'appearance')
                    return false;
                if (prefix.js === 'ms')
                    return "-webkit-" + prop;
                return prefix.css + prop;
            }
        };

        // https://caniuse.com/#search=color-adjust

        var colorAdjust = {
            noPrefill: ['color-adjust'],
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'color-adjust')
                    return false;
                if (prefix.js === 'Webkit')
                    return prefix.css + "print-" + prop;
                return prop;
            }
        };

        var regExp = /[-\s]+(.)?/g;
        /**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

        function toUpper(match, c) {
            return c ? c.toUpperCase() : '';
        }
        /**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

        function camelize(str) {
            return str.replace(regExp, toUpper);
        }

        /**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

        function pascalize(str) {
            return camelize("-" + str);
        }

        // but we can use a longhand property instead.
        // https://caniuse.com/#search=mask

        var mask = {
            noPrefill: ['mask'],
            supportedProperty: function supportedProperty(prop, style) {
                if (!/^mask/.test(prop))
                    return false;

                if (prefix.js === 'Webkit') {
                    var longhand = 'mask-image';

                    if (camelize(longhand)in style) {
                        return prop;
                    }

                    if (prefix.js + pascalize(longhand)in style) {
                        return prefix.css + prop;
                    }
                }

                return prop;
            }
        };

        // https://caniuse.com/#search=text-orientation

        var textOrientation = {
            noPrefill: ['text-orientation'],
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'text-orientation')
                    return false;

                if (prefix.vendor === 'apple' && !prefix.isTouch) {
                    return prefix.css + prop;
                }

                return prop;
            }
        };

        // https://caniuse.com/#search=transform

        var transform = {
            noPrefill: ['transform'],
            supportedProperty: function supportedProperty(prop, style, options) {
                if (prop !== 'transform')
                    return false;

                if (options.transform) {
                    return prop;
                }

                return prefix.css + prop;
            }
        };

        // https://caniuse.com/#search=transition

        var transition = {
            noPrefill: ['transition'],
            supportedProperty: function supportedProperty(prop, style, options) {
                if (prop !== 'transition')
                    return false;

                if (options.transition) {
                    return prop;
                }

                return prefix.css + prop;
            }
        };

        // https://caniuse.com/#search=writing-mode

        var writingMode = {
            noPrefill: ['writing-mode'],
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'writing-mode')
                    return false;

                if (prefix.js === 'Webkit' || prefix.js === 'ms') {
                    return prefix.css + prop;
                }

                return prop;
            }
        };

        // https://caniuse.com/#search=user-select

        var userSelect = {
            noPrefill: ['user-select'],
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'user-select')
                    return false;

                if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {
                    return prefix.css + prop;
                }

                return prop;
            }
        };

        // https://caniuse.com/#search=multicolumn
        // https://github.com/postcss/autoprefixer/issues/491
        // https://github.com/postcss/autoprefixer/issues/177

        var breakPropsOld = {
            supportedProperty: function supportedProperty(prop, style) {
                if (!/^break-/.test(prop))
                    return false;

                if (prefix.js === 'Webkit') {
                    var jsProp = "WebkitColumn" + pascalize(prop);
                    return jsProp in style ? prefix.css + "column-" + prop : false;
                }

                if (prefix.js === 'Moz') {
                    var _jsProp = "page" + pascalize(prop);

                    return _jsProp in style ? "page-" + prop : false;
                }

                return false;
            }
        };

        // See https://github.com/postcss/autoprefixer/issues/324.

        var inlineLogicalOld = {
            supportedProperty: function supportedProperty(prop, style) {
                if (!/^(border|margin|padding)-inline/.test(prop))
                    return false;
                if (prefix.js === 'Moz')
                    return prop;
                var newProp = prop.replace('-inline', '');
                return prefix.js + pascalize(newProp)in style ? prefix.css + newProp : false;
            }
        };

        // Camelization is required because we can't test using.
        // CSS syntax for e.g. in FF.

        var unprefixed = {
            supportedProperty: function supportedProperty(prop, style) {
                return camelize(prop)in style ? prop : false;
            }
        };

        var prefixed = {
            supportedProperty: function supportedProperty(prop, style) {
                var pascalized = pascalize(prop);
                // Return custom CSS variable without prefixing.

                if (prop[0] === '-')
                    return prop;
                // Return already prefixed value without prefixing.

                if (prop[0] === '-' && prop[1] === '-')
                    return prop;
                if (prefix.js + pascalized in style)
                    return prefix.css + prop;
                // Try webkit fallback.

                if (prefix.js !== 'Webkit' && "Webkit" + pascalized in style)
                    return "-webkit-" + prop;
                return false;
            }
        };

        // https://caniuse.com/#search=scroll-snap

        var scrollSnap = {
            supportedProperty: function supportedProperty(prop) {
                if (prop.substring(0, 11) !== 'scroll-snap')
                    return false;

                if (prefix.js === 'ms') {
                    return "" + prefix.css + prop;
                }

                return prop;
            }
        };

        // https://caniuse.com/#search=overscroll-behavior

        var overscrollBehavior = {
            supportedProperty: function supportedProperty(prop) {
                if (prop !== 'overscroll-behavior')
                    return false;

                if (prefix.js === 'ms') {
                    return prefix.css + "scroll-chaining";
                }

                return prop;
            }
        };

        var propMap = {
            'flex-grow': 'flex-positive',
            'flex-shrink': 'flex-negative',
            'flex-basis': 'flex-preferred-size',
            'justify-content': 'flex-pack',
            order: 'flex-order',
            'align-items': 'flex-align',
            'align-content': 'flex-line-pack'// 'align-self' is handled by 'align-self' plugin.

        };
        // Support old flex spec from 2012.

        var flex2012 = {
            supportedProperty: function supportedProperty(prop, style) {
                var newProp = propMap[prop];
                if (!newProp)
                    return false;
                return prefix.js + pascalize(newProp)in style ? prefix.css + newProp : false;
            }
        };

        var propMap$1 = {
            flex: 'box-flex',
            'flex-grow': 'box-flex',
            'flex-direction': ['box-orient', 'box-direction'],
            order: 'box-ordinal-group',
            'align-items': 'box-align',
            'flex-flow': ['box-orient', 'box-direction'],
            'justify-content': 'box-pack'
        };
        var propKeys = Object.keys(propMap$1);

        var prefixCss = function prefixCss(p) {
            return prefix.css + p;
        };
        // Support old flex spec from 2009.

        var flex2009 = {
            supportedProperty: function supportedProperty(prop, style, _ref) {
                var multiple = _ref.multiple;

                if (propKeys.indexOf(prop) > -1) {
                    var newProp = propMap$1[prop];

                    if (!Array.isArray(newProp)) {
                        return prefix.js + pascalize(newProp)in style ? prefix.css + newProp : false;
                    }

                    if (!multiple)
                        return false;

                    for (var i = 0; i < newProp.length; i++) {
                        if (!(prefix.js + pascalize(newProp[0])in style)) {
                            return false;
                        }
                    }

                    return newProp.map(prefixCss);
                }

                return false;
            }
        };

        // plugins = [
        //   ...plugins,
        //    breakPropsOld,
        //    inlineLogicalOld,
        //    unprefixed,
        //    prefixed,
        //    scrollSnap,
        //    flex2012,
        //    flex2009
        // ]
        // Plugins without 'noPrefill' value, going last.
        // 'flex-*' plugins should be at the bottom.
        // 'flex2009' going after 'flex2012'.
        // 'prefixed' going after 'unprefixed'

        var plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
        var propertyDetectors = plugins.filter(function(p) {
            return p.supportedProperty;
        }).map(function(p) {
            return p.supportedProperty;
        });
        var noPrefill = plugins.filter(function(p) {
            return p.noPrefill;
        }).reduce(function(a, p) {
            a.push.apply(a, Object(toConsumableArray["a"/* default */
            ])(p.noPrefill));
            return a;
        }, []);

        var el;
        var css_vendor_esm_cache = {};

        if (dist_module["a"/* default */
        ]) {
            el = document.createElement('p');
            // We test every property on vendor prefix requirement.
            // Once tested, result is cached. It gives us up to 70% perf boost.
            // http://jsperf.com/element-style-object-access-vs-plain-object
            //
            // Prefill cache with known css properties to reduce amount of
            // properties we need to feature test at runtime.
            // http://davidwalsh.name/vendor-prefix

            var computed = window.getComputedStyle(document.documentElement, '');

            for (var key$1 in computed) {
                // eslint-disable-next-line no-restricted-globals
                if (!isNaN(key$1))
                    css_vendor_esm_cache[computed[key$1]] = computed[key$1];
            }
            // Properties that cannot be correctly detected using the
            // cache prefill method.

            noPrefill.forEach(function(x) {
                return delete css_vendor_esm_cache[x];
            });
        }
        /**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */

        function supportedProperty(prop, options) {
            if (options === void 0) {
                options = {};
            }

            // For server-side rendering.
            if (!el)
                return prop;
            // Remove cache for benchmark tests or return property from the cache.

            if (true && css_vendor_esm_cache[prop] != null) {
                return css_vendor_esm_cache[prop];
            }
            // Check if 'transition' or 'transform' natively supported in browser.

            if (prop === 'transition' || prop === 'transform') {
                options[prop] = prop in el.style;
            }
            // Find a plugin for current prefix property.

            for (var i = 0; i < propertyDetectors.length; i++) {
                css_vendor_esm_cache[prop] = propertyDetectors[i](prop, el.style, options);
                // Break loop, if value found.

                if (css_vendor_esm_cache[prop])
                    break;
            }
            // Reset styles for current property.
            // Firefox can even throw an error for invalid properties, e.g., "0".

            try {
                el.style[prop] = '';
            } catch (err) {
                return false;
            }

            return css_vendor_esm_cache[prop];
        }

        var cache$1 = {};
        var transitionProperties = {
            transition: 1,
            'transition-property': 1,
            '-webkit-transition': 1,
            '-webkit-transition-property': 1
        };
        var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
        var el$1;
        /**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

        function prefixTransitionCallback(match, p1, p2) {
            if (p1 === 'var')
                return 'var';
            if (p1 === 'all')
                return 'all';
            if (p2 === 'all')
                return ', all';
            var prefixedValue = p1 ? supportedProperty(p1) : ", " + supportedProperty(p2);
            if (!prefixedValue)
                return p1 || p2;
            return prefixedValue;
        }

        if (dist_module["a"/* default */
        ])
            el$1 = document.createElement('p');
        /**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

        function supportedValue(property, value) {
            // For server-side rendering.
            var prefixedValue = value;
            if (!el$1 || property === 'content')
                return value;
            // It is a string or a number as a string like '1'.
            // We want only prefixable values here.
            // eslint-disable-next-line no-restricted-globals

            if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {
                return prefixedValue;
            }
            // Create cache key for current value.

            var cacheKey = property + prefixedValue;
            // Remove cache for benchmark tests or return value from cache.

            if (true && cache$1[cacheKey] != null) {
                return cache$1[cacheKey];
            }
            // IE can even throw an error in some cases, for e.g. style.content = 'bar'.

            try {
                // Test value as it is.
                el$1.style[property] = prefixedValue;
            } catch (err) {
                // Return false if value not supported.
                cache$1[cacheKey] = false;
                return false;
            }
            // If 'transition' or 'transition-property' property.

            if (transitionProperties[property]) {
                prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
            } else if (el$1.style[property] === '') {
                // Value with a vendor prefix.
                prefixedValue = prefix.css + prefixedValue;
                // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

                if (prefixedValue === '-ms-flex')
                    el$1.style[property] = '-ms-flexbox';
                // Test prefixed value.

                el$1.style[property] = prefixedValue;
                // Return false if value not supported.

                if (el$1.style[property] === '') {
                    cache$1[cacheKey] = false;
                    return false;
                }
            }
            // Reset styles for current property.

            el$1.style[property] = '';
            // Write current value to cache.

            cache$1[cacheKey] = prefixedValue;
            return cache$1[cacheKey];
        }

        // CONCATENATED MODULE: ../node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js

        /**
 * Add vendor prefix to a property name when needed.
 *
 * @api public
 */

        function jssVendorPrefixer() {
            function onProcessRule(rule) {
                if (rule.type === 'keyframes') {
                    var atRule = rule;
                    atRule.at = supportedKeyframes(atRule.at);
                }
            }

            function prefixStyle(style) {
                for (var prop in style) {
                    var value = style[prop];

                    if (prop === 'fallbacks' && Array.isArray(value)) {
                        style[prop] = value.map(prefixStyle);
                        continue;
                    }

                    var changeProp = false;
                    var supportedProp = supportedProperty(prop);
                    if (supportedProp && supportedProp !== prop)
                        changeProp = true;
                    var changeValue = false;
                    var supportedValue$$1 = supportedValue(supportedProp, Object(jss_esm["g"/* toCssValue */
                    ])(value));
                    if (supportedValue$$1 && supportedValue$$1 !== value)
                        changeValue = true;

                    if (changeProp || changeValue) {
                        if (changeProp)
                            delete style[prop];
                        style[supportedProp || prop] = supportedValue$$1 || value;
                    }
                }

                return style;
            }

            function onProcessStyle(style, rule) {
                if (rule.type !== 'style')
                    return style;
                return prefixStyle(style);
            }

            function onChangeValue(value, prop) {
                return supportedValue(prop, Object(jss_esm["g"/* toCssValue */
                ])(value)) || value;
            }

            return {
                onProcessRule: onProcessRule,
                onProcessStyle: onProcessStyle,
                onChangeValue: onChangeValue
            };
        }

        /* harmony default export */
        var jss_plugin_vendor_prefixer_esm = (jssVendorPrefixer);

        // CONCATENATED MODULE: ../node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js
        /**
 * Sort props by length.
 */
        function jssPropsSort() {
            var sort = function sort(prop0, prop1) {
                if (prop0.length === prop1.length) {
                    return prop0 > prop1 ? 1 : -1;
                }

                return prop0.length - prop1.length;
            };

            return {
                onProcessStyle: function onProcessStyle(style, rule) {
                    if (rule.type !== 'style')
                        return style;
                    var newStyle = {};
                    var props = Object.keys(style).sort(sort);

                    for (var i = 0; i < props.length; i++) {
                        newStyle[props[i]] = style[props[i]];
                    }

                    return newStyle;
                }
            };
        }

        /* harmony default export */
        var jss_plugin_props_sort_esm = (jssPropsSort);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js

        // Subset of jss-preset-default with only the plugins the Material-UI components are using.

        function jssPreset() {
            return {
                plugins: [jss_plugin_rule_value_function_esm(), jss_plugin_global_esm(), jss_plugin_nested_esm(), jss_plugin_camel_case_esm(), jss_plugin_default_unit_esm(), // Disable the vendor prefixer server-side, it does nothing.
                // This way, we can get a performance boost.
                // In the documentation, we are using `autoprefixer` to solve this problem.
                typeof window === 'undefined' ? null : jss_plugin_vendor_prefixer_esm(), jss_plugin_props_sort_esm()]
            };
        }

        /* harmony default export */
        var jssPreset_jssPreset = __webpack_exports__["a"] = (jssPreset);

        /***/
    }
    ), /* 437 */
    , /* 438 */
    , /* 439 */
    , /* 440 */
    , /* 441 */
    , /* 442 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const createMuiTheme_1 = tslib_1.__importDefault(__webpack_require__(443));

        const widget_1 = tslib_1.__importDefault(__webpack_require__(466));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const react_dom_1 = tslib_1.__importDefault(__webpack_require__(0));

        const styles_1 = __webpack_require__(249);

        const react_redux_1 = __webpack_require__(422);

        const connectors_1 = __webpack_require__(581);

        const store_1 = __webpack_require__(372);

        const global_scss_1 = tslib_1.__importDefault(__webpack_require__(226));

        __webpack_require__(696);

        if (config_1.default.debug) {
            console.warn('--- DEBUG ENABLED ---');
        }
        // Create modal div to contain widget and append to html doc

        const modal = document.createElement(`div`);
        modal.setAttribute('id', config_1.default.widgetId);
        modal.className = `${config_1.default.widgetId} ${global_scss_1.default['wcasg-ada-app-container']}`;
        document.getElementsByTagName('html')[0].append(modal);
        const theme = createMuiTheme_1.default({
            props: {
                // Name of the component ⚛️
                MuiButtonBase: {
                    // The properties to apply
                    disableRipple: true // No more ripple, on the whole application 💣!

                }
            }
        });
        react_dom_1.default.render(react_1.default.createElement(react_redux_1.Provider, {
            store: store_1.createPluginStore()
        }, react_1.default.createElement(styles_1.ThemeProvider, {
            theme: theme
        }, react_1.default.createElement(connectors_1.Connector, null, (state,actions)=>react_1.default.createElement(widget_1.default, {
            state: state,
            actions: actions
        })))), modal);

        /***/
    }
    ), /* 443 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;

        var _defineProperty2 = _interopRequireDefault(__webpack_require__(328));

        var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(113));

        var _utils = __webpack_require__(14);

        var _createBreakpoints = _interopRequireDefault(__webpack_require__(448));

        var _createMixins = _interopRequireDefault(__webpack_require__(449));

        var _createPalette = _interopRequireDefault(__webpack_require__(450));

        var _createTypography = _interopRequireDefault(__webpack_require__(460));

        var _shadows = _interopRequireDefault(__webpack_require__(461));

        var _shape = _interopRequireDefault(__webpack_require__(462));

        var _createSpacing = _interopRequireDefault(__webpack_require__(463));

        var _transitions = _interopRequireDefault(__webpack_require__(464));

        var _zIndex = _interopRequireDefault(__webpack_require__(465));

        function createMuiTheme() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var _options$breakpoints = options.breakpoints
              , breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints
              , _options$mixins = options.mixins
              , mixinsInput = _options$mixins === void 0 ? {} : _options$mixins
              , _options$palette = options.palette
              , paletteInput = _options$palette === void 0 ? {} : _options$palette
              , spacingInput = options.spacing
              , _options$typography = options.typography
              , typographyInput = _options$typography === void 0 ? {} : _options$typography
              , other = (0,
            _objectWithoutProperties2.default)(options, ["breakpoints", "mixins", "palette", "spacing", "typography"]);
            var palette = (0,
            _createPalette.default)(paletteInput);
            var breakpoints = (0,
            _createBreakpoints.default)(breakpointsInput);
            var spacing = (0,
            _createSpacing.default)(spacingInput);
            var muiTheme = (0,
            _utils.deepmerge)({
                breakpoints: breakpoints,
                direction: 'ltr',
                mixins: (0,
                _createMixins.default)(breakpoints, spacing, mixinsInput),
                overrides: {},
                // Inject custom styles
                palette: palette,
                props: {},
                // Provide default props
                shadows: _shadows.default,
                typography: (0,
                _createTypography.default)(palette, typographyInput),
                spacing: spacing,
                shape: _shape.default,
                transitions: _transitions.default,
                zIndex: _zIndex.default
            }, other);

            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            muiTheme = args.reduce(function(acc, argument) {
                return (0,
                _utils.deepmerge)(acc, argument);
            }, muiTheme);

            if (false) {
                var traverse, pseudoClasses;
            }

            return muiTheme;
        }

        var _default = createMuiTheme;
        exports.default = _default;

        /***/
    }
    ), /* 444 */
    /***/
    (function(module, exports) {

        function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null)
                return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
                key = sourceKeys[i];
                if (excluded.indexOf(key) >= 0)
                    continue;
                target[key] = source[key];
            }

            return target;
        }

        module.exports = _objectWithoutPropertiesLoose;

        /***/
    }
    ), /* 445 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        var ReactPropTypesSecret = __webpack_require__(446);

        function emptyFunction() {}
        function emptyFunctionWithReset() {}
        emptyFunctionWithReset.resetWarningCache = emptyFunction;

        module.exports = function() {
            function shim(props, propName, componentName, location, propFullName, secret) {
                if (secret === ReactPropTypesSecret) {
                    // It is still safe when called from React.
                    return;
                }
                var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
                err.name = 'Invariant Violation';
                throw err;
            }
            ;shim.isRequired = shim;
            function getShim() {
                return shim;
            }
            ;// Important!
            // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
            var ReactPropTypes = {
                array: shim,
                bool: shim,
                func: shim,
                number: shim,
                object: shim,
                string: shim,
                symbol: shim,

                any: shim,
                arrayOf: getShim,
                element: shim,
                elementType: shim,
                instanceOf: getShim,
                node: shim,
                objectOf: getShim,
                oneOf: getShim,
                oneOfType: getShim,
                shape: getShim,
                exact: getShim,

                checkPropTypes: emptyFunctionWithReset,
                resetWarningCache: emptyFunction
            };

            ReactPropTypes.PropTypes = ReactPropTypes;

            return ReactPropTypes;
        }
        ;

        /***/
    }
    ), /* 446 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

        module.exports = ReactPropTypesSecret;

        /***/
    }
    ), /* 447 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var b = "function" === typeof Symbol && Symbol.for
          , c = b ? Symbol.for("react.element") : 60103
          , d = b ? Symbol.for("react.portal") : 60106
          , e = b ? Symbol.for("react.fragment") : 60107
          , f = b ? Symbol.for("react.strict_mode") : 60108
          , g = b ? Symbol.for("react.profiler") : 60114
          , h = b ? Symbol.for("react.provider") : 60109
          , k = b ? Symbol.for("react.context") : 60110
          , l = b ? Symbol.for("react.async_mode") : 60111
          , m = b ? Symbol.for("react.concurrent_mode") : 60111
          , n = b ? Symbol.for("react.forward_ref") : 60112
          , p = b ? Symbol.for("react.suspense") : 60113
          , q = b ? Symbol.for("react.suspense_list") : 60120
          , r = b ? Symbol.for("react.memo") : 60115
          , t = b ? Symbol.for("react.lazy") : 60116
          , v = b ? Symbol.for("react.fundamental") : 60117
          , w = b ? Symbol.for("react.responder") : 60118
          , x = b ? Symbol.for("react.scope") : 60119;
        function y(a) {
            if ("object" === typeof a && null !== a) {
                var u = a.$$typeof;
                switch (u) {
                case c:
                    switch (a = a.type,
                    a) {
                    case l:
                    case m:
                    case e:
                    case g:
                    case f:
                    case p:
                        return a;
                    default:
                        switch (a = a && a.$$typeof,
                        a) {
                        case k:
                        case n:
                        case t:
                        case r:
                        case h:
                            return a;
                        default:
                            return u
                        }
                    }
                case d:
                    return u
                }
            }
        }
        function z(a) {
            return y(a) === m
        }
        exports.typeOf = y;
        exports.AsyncMode = l;
        exports.ConcurrentMode = m;
        exports.ContextConsumer = k;
        exports.ContextProvider = h;
        exports.Element = c;
        exports.ForwardRef = n;
        exports.Fragment = e;
        exports.Lazy = t;
        exports.Memo = r;
        exports.Portal = d;
        exports.Profiler = g;
        exports.StrictMode = f;
        exports.Suspense = p;
        exports.isValidElementType = function(a) {
            return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === v || a.$$typeof === w || a.$$typeof === x)
        }
        ;
        exports.isAsyncMode = function(a) {
            return z(a) || y(a) === l
        }
        ;
        exports.isConcurrentMode = z;
        exports.isContextConsumer = function(a) {
            return y(a) === k
        }
        ;
        exports.isContextProvider = function(a) {
            return y(a) === h
        }
        ;
        exports.isElement = function(a) {
            return "object" === typeof a && null !== a && a.$$typeof === c
        }
        ;
        exports.isForwardRef = function(a) {
            return y(a) === n
        }
        ;
        exports.isFragment = function(a) {
            return y(a) === e
        }
        ;
        exports.isLazy = function(a) {
            return y(a) === t
        }
        ;
        exports.isMemo = function(a) {
            return y(a) === r
        }
        ;
        exports.isPortal = function(a) {
            return y(a) === d
        }
        ;
        exports.isProfiler = function(a) {
            return y(a) === g
        }
        ;
        exports.isStrictMode = function(a) {
            return y(a) === f
        }
        ;
        exports.isSuspense = function(a) {
            return y(a) === p
        }
        ;

        /***/
    }
    ), /* 448 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = createBreakpoints;
        exports.keys = void 0;

        var _extends2 = _interopRequireDefault(__webpack_require__(139));

        var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(113));

        // Sorted ASC by size. That's important.
        // It can't be configured as it's used statically for propTypes.
        var keys = ['xs', 'sm', 'md', 'lg', 'xl'];
        // Keep in mind that @media is inclusive by the CSS specification.

        exports.keys = keys;

        function createBreakpoints(breakpoints) {
            var _breakpoints$values = breakpoints.values
              , values = _breakpoints$values === void 0 ? {
                xs: 0,
                sm: 600,
                md: 960,
                lg: 1280,
                xl: 1920
            } : _breakpoints$values
              , _breakpoints$unit = breakpoints.unit
              , unit = _breakpoints$unit === void 0 ? 'px' : _breakpoints$unit
              , _breakpoints$step = breakpoints.step
              , step = _breakpoints$step === void 0 ? 5 : _breakpoints$step
              , other = (0,
            _objectWithoutProperties2.default)(breakpoints, ["values", "unit", "step"]);

            function up(key) {
                var value = typeof values[key] === 'number' ? values[key] : key;
                return "@media (min-width:".concat(value).concat(unit, ")");
            }

            function down(key) {
                var endIndex = keys.indexOf(key) + 1;
                var upperbound = values[keys[endIndex]];

                if (endIndex === keys.length) {
                    // xl down applies to all sizes
                    return up('xs');
                }

                var value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;
                return "@media (max-width:".concat(value - step / 100).concat(unit, ")");
            }

            function between(start, end) {
                var endIndex = keys.indexOf(end);

                if (endIndex === keys.length - 1) {
                    return up(start);
                }

                return "@media (min-width:".concat(typeof values[start] === 'number' ? values[start] : start).concat(unit, ") and ") + "(max-width:".concat((endIndex !== -1 && typeof values[keys[endIndex + 1]] === 'number' ? values[keys[endIndex + 1]] : end) - step / 100).concat(unit, ")");
            }

            function only(key) {
                return between(key, key);
            }

            function width(key) {
                return values[key];
            }

            return (0,
            _extends2.default)({
                keys: keys,
                values: values,
                up: up,
                down: down,
                between: between,
                only: only,
                width: width
            }, other);
        }

        /***/
    }
    ), /* 449 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = createMixins;

        var _defineProperty2 = _interopRequireDefault(__webpack_require__(328));

        var _extends3 = _interopRequireDefault(__webpack_require__(139));

        function createMixins(breakpoints, spacing, mixins) {
            var _toolbar;

            return (0,
            _extends3.default)({
                gutters: function gutters() {
                    var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    // To deprecate in v4.1
                    //       warning(
                    //         false,
                    //         [
                    //           'Material-UI: theme.mixins.gutters() is deprecated.',
                    //           'You can use the source of the mixin directly:',
                    //           `
                    // paddingLeft: theme.spacing(2),
                    // paddingRight: theme.spacing(2),
                    // [theme.breakpoints.up('sm')]: {
                    //   paddingLeft: theme.spacing(3),
                    //   paddingRight: theme.spacing(3),
                    // },
                    // `,
                    //         ].join('\n'),
                    //       );
                    return (0,
                    _extends3.default)({
                        paddingLeft: spacing(2),
                        paddingRight: spacing(2)
                    }, styles, (0,
                    _defineProperty2.default)({}, breakpoints.up('sm'), (0,
                    _extends3.default)({
                        paddingLeft: spacing(3),
                        paddingRight: spacing(3)
                    }, styles[breakpoints.up('sm')])));
                },
                toolbar: (_toolbar = {
                    minHeight: 56
                },
                (0,
                _defineProperty2.default)(_toolbar, "".concat(breakpoints.up('xs'), " and (orientation: landscape)"), {
                    minHeight: 48
                }),
                (0,
                _defineProperty2.default)(_toolbar, breakpoints.up('sm'), {
                    minHeight: 64
                }),
                _toolbar)
            }, mixins);
        }

        /***/
    }
    ), /* 450 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = createPalette;
        exports.dark = exports.light = void 0;

        var _extends2 = _interopRequireDefault(__webpack_require__(139));

        var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(113));

        var _utils = __webpack_require__(14);

        var _common = _interopRequireDefault(__webpack_require__(451));

        var _grey = _interopRequireDefault(__webpack_require__(452));

        var _indigo = _interopRequireDefault(__webpack_require__(453));

        var _pink = _interopRequireDefault(__webpack_require__(454));

        var _red = _interopRequireDefault(__webpack_require__(455));

        var _orange = _interopRequireDefault(__webpack_require__(456));

        var _blue = _interopRequireDefault(__webpack_require__(457));

        var _green = _interopRequireDefault(__webpack_require__(458));

        var _colorManipulator = __webpack_require__(459);

        var light = {
            // The colors used to style the text.
            text: {
                // The most important text.
                primary: 'rgba(0, 0, 0, 0.87)',
                // Secondary text.
                secondary: 'rgba(0, 0, 0, 0.54)',
                // Disabled text have even lower visual prominence.
                disabled: 'rgba(0, 0, 0, 0.38)',
                // Text hints.
                hint: 'rgba(0, 0, 0, 0.38)'
            },
            // The color used to divide different elements.
            divider: 'rgba(0, 0, 0, 0.12)',
            // The background colors used to style the surfaces.
            // Consistency between these values is important.
            background: {
                paper: _common.default.white,
                default: _grey.default[50]
            },
            // The colors used to style the action elements.
            action: {
                // The color of an active action like an icon button.
                active: 'rgba(0, 0, 0, 0.54)',
                // The color of an hovered action.
                hover: 'rgba(0, 0, 0, 0.04)',
                hoverOpacity: 0.04,
                // The color of a selected action.
                selected: 'rgba(0, 0, 0, 0.08)',
                selectedOpacity: 0.08,
                // The color of a disabled action.
                disabled: 'rgba(0, 0, 0, 0.26)',
                // The background color of a disabled action.
                disabledBackground: 'rgba(0, 0, 0, 0.12)'
            }
        };
        exports.light = light;
        var dark = {
            text: {
                primary: _common.default.white,
                secondary: 'rgba(255, 255, 255, 0.7)',
                disabled: 'rgba(255, 255, 255, 0.5)',
                hint: 'rgba(255, 255, 255, 0.5)',
                icon: 'rgba(255, 255, 255, 0.5)'
            },
            divider: 'rgba(255, 255, 255, 0.12)',
            background: {
                paper: _grey.default[800],
                default: '#303030'
            },
            action: {
                active: _common.default.white,
                hover: 'rgba(255, 255, 255, 0.08)',
                hoverOpacity: 0.08,
                selected: 'rgba(255, 255, 255, 0.16)',
                selectedOpacity: 0.16,
                disabled: 'rgba(255, 255, 255, 0.3)',
                disabledBackground: 'rgba(255, 255, 255, 0.12)'
            }
        };
        exports.dark = dark;

        function addLightOrDark(intent, direction, shade, tonalOffset) {
            if (!intent[direction]) {
                if (intent.hasOwnProperty(shade)) {
                    intent[direction] = intent[shade];
                } else if (direction === 'light') {
                    intent.light = (0,
                    _colorManipulator.lighten)(intent.main, tonalOffset);
                } else if (direction === 'dark') {
                    intent.dark = (0,
                    _colorManipulator.darken)(intent.main, tonalOffset * 1.5);
                }
            }
        }

        function createPalette(palette) {
            var _palette$primary = palette.primary
              , primary = _palette$primary === void 0 ? {
                light: _indigo.default[300],
                main: _indigo.default[500],
                dark: _indigo.default[700]
            } : _palette$primary
              , _palette$secondary = palette.secondary
              , secondary = _palette$secondary === void 0 ? {
                light: _pink.default.A200,
                main: _pink.default.A400,
                dark: _pink.default.A700
            } : _palette$secondary
              , _palette$error = palette.error
              , error = _palette$error === void 0 ? {
                light: _red.default[300],
                main: _red.default[500],
                dark: _red.default[700]
            } : _palette$error
              , _palette$warning = palette.warning
              , warning = _palette$warning === void 0 ? {
                light: _orange.default[300],
                main: _orange.default[500],
                dark: _orange.default[700]
            } : _palette$warning
              , _palette$info = palette.info
              , info = _palette$info === void 0 ? {
                light: _blue.default[300],
                main: _blue.default[500],
                dark: _blue.default[700]
            } : _palette$info
              , _palette$success = palette.success
              , success = _palette$success === void 0 ? {
                light: _green.default[300],
                main: _green.default[500],
                dark: _green.default[700]
            } : _palette$success
              , _palette$type = palette.type
              , type = _palette$type === void 0 ? 'light' : _palette$type
              , _palette$contrastThre = palette.contrastThreshold
              , contrastThreshold = _palette$contrastThre === void 0 ? 3 : _palette$contrastThre
              , _palette$tonalOffset = palette.tonalOffset
              , tonalOffset = _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset
              , other = (0,
            _objectWithoutProperties2.default)(palette, ["primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset"]);
            // Use the same logic as
            // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
            // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

            function getContrastText(background) {
                if (!background) {
                    throw new TypeError("Material-UI: missing background argument in getContrastText(".concat(background, ")."));
                }

                var contrastText = (0,
                _colorManipulator.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;

                if (false) {
                    var contrast;
                }

                return contrastText;
            }

            function augmentColor(color) {
                var mainShade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
                var lightShade = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;
                var darkShade = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 700;
                color = (0,
                _extends2.default)({}, color);

                if (!color.main && color[mainShade]) {
                    color.main = color[mainShade];
                }

                if (false) {}

                addLightOrDark(color, 'light', lightShade, tonalOffset);
                addLightOrDark(color, 'dark', darkShade, tonalOffset);

                if (!color.contrastText) {
                    color.contrastText = getContrastText(color.main);
                }

                return color;
            }

            var types = {
                dark: dark,
                light: light
            };

            if (false) {}

            var paletteOutput = (0,
            _utils.deepmerge)((0,
            _extends2.default)({
                // A collection of common colors.
                common: _common.default,
                // The palette type, can be light or dark.
                type: type,
                // The colors used to represent primary interface elements for a user.
                primary: augmentColor(primary),
                // The colors used to represent secondary interface elements for a user.
                secondary: augmentColor(secondary, 'A400', 'A200', 'A700'),
                // The colors used to represent interface elements that the user should be made aware of.
                error: augmentColor(error),
                // The colors used to represent potentially dangerous actions or important messages.
                warning: augmentColor(warning),
                // The colors used to present information to the user that is neutral and not necessarily important.
                info: augmentColor(info),
                // The colors used to indicate the successful completion of an action that user triggered.
                success: augmentColor(success),
                // The grey colors.
                grey: _grey.default,
                // Used by `getContrastText()` to maximize the contrast between
                // the background and the text.
                contrastThreshold: contrastThreshold,
                // Takes a background color and returns the text color that maximizes the contrast.
                getContrastText: getContrastText,
                // Generate a rich color object.
                augmentColor: augmentColor,
                // Used by the functions below to shift a color's luminance by approximately
                // two indexes within its tonal palette.
                // E.g., shift from Red 500 to Red 300 or Red 700.
                tonalOffset: tonalOffset
            }, types[type]), other);
            return paletteOutput;
        }

        /***/
    }
    ), /* 451 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var common = {
            black: '#000',
            white: '#fff'
        };
        var _default = common;
        exports.default = _default;

        /***/
    }
    ), /* 452 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var grey = {
            50: '#fafafa',
            100: '#f5f5f5',
            200: '#eeeeee',
            300: '#e0e0e0',
            400: '#bdbdbd',
            500: '#9e9e9e',
            600: '#757575',
            700: '#616161',
            800: '#424242',
            900: '#212121',
            A100: '#d5d5d5',
            A200: '#aaaaaa',
            A400: '#303030',
            A700: '#616161'
        };
        var _default = grey;
        exports.default = _default;

        /***/
    }
    ), /* 453 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var indigo = {
            50: '#e8eaf6',
            100: '#c5cae9',
            200: '#9fa8da',
            300: '#7986cb',
            400: '#5c6bc0',
            500: '#3f51b5',
            600: '#3949ab',
            700: '#303f9f',
            800: '#283593',
            900: '#1a237e',
            A100: '#8c9eff',
            A200: '#536dfe',
            A400: '#3d5afe',
            A700: '#304ffe'
        };
        var _default = indigo;
        exports.default = _default;

        /***/
    }
    ), /* 454 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var pink = {
            50: '#fce4ec',
            100: '#f8bbd0',
            200: '#f48fb1',
            300: '#f06292',
            400: '#ec407a',
            500: '#e91e63',
            600: '#d81b60',
            700: '#c2185b',
            800: '#ad1457',
            900: '#880e4f',
            A100: '#ff80ab',
            A200: '#ff4081',
            A400: '#f50057',
            A700: '#c51162'
        };
        var _default = pink;
        exports.default = _default;

        /***/
    }
    ), /* 455 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var red = {
            50: '#ffebee',
            100: '#ffcdd2',
            200: '#ef9a9a',
            300: '#e57373',
            400: '#ef5350',
            500: '#f44336',
            600: '#e53935',
            700: '#d32f2f',
            800: '#c62828',
            900: '#b71c1c',
            A100: '#ff8a80',
            A200: '#ff5252',
            A400: '#ff1744',
            A700: '#d50000'
        };
        var _default = red;
        exports.default = _default;

        /***/
    }
    ), /* 456 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var orange = {
            50: '#fff3e0',
            100: '#ffe0b2',
            200: '#ffcc80',
            300: '#ffb74d',
            400: '#ffa726',
            500: '#ff9800',
            600: '#fb8c00',
            700: '#f57c00',
            800: '#ef6c00',
            900: '#e65100',
            A100: '#ffd180',
            A200: '#ffab40',
            A400: '#ff9100',
            A700: '#ff6d00'
        };
        var _default = orange;
        exports.default = _default;

        /***/
    }
    ), /* 457 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var blue = {
            50: '#e3f2fd',
            100: '#bbdefb',
            200: '#90caf9',
            300: '#64b5f6',
            400: '#42a5f5',
            500: '#2196f3',
            600: '#1e88e5',
            700: '#1976d2',
            800: '#1565c0',
            900: '#0d47a1',
            A100: '#82b1ff',
            A200: '#448aff',
            A400: '#2979ff',
            A700: '#2962ff'
        };
        var _default = blue;
        exports.default = _default;

        /***/
    }
    ), /* 458 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var green = {
            50: '#e8f5e9',
            100: '#c8e6c9',
            200: '#a5d6a7',
            300: '#81c784',
            400: '#66bb6a',
            500: '#4caf50',
            600: '#43a047',
            700: '#388e3c',
            800: '#2e7d32',
            900: '#1b5e20',
            A100: '#b9f6ca',
            A200: '#69f0ae',
            A400: '#00e676',
            A700: '#00c853'
        };
        var _default = green;
        exports.default = _default;

        /***/
    }
    ), /* 459 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.hexToRgb = hexToRgb;
        exports.rgbToHex = rgbToHex;
        exports.hslToRgb = hslToRgb;
        exports.decomposeColor = decomposeColor;
        exports.recomposeColor = recomposeColor;
        exports.getContrastRatio = getContrastRatio;
        exports.getLuminance = getLuminance;
        exports.emphasize = emphasize;
        exports.fade = fade;
        exports.darken = darken;
        exports.lighten = lighten;

        /* eslint-disable no-use-before-define */

        /**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */
        function clamp(value) {
            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

            if (false) {}

            return Math.min(Math.max(min, value), max);
        }
        /**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */

        function hexToRgb(color) {
            color = color.substr(1);
            var re = new RegExp(".{1,".concat(color.length / 3, "}"),'g');
            var colors = color.match(re);

            if (colors && colors[0].length === 1) {
                colors = colors.map(function(n) {
                    return n + n;
                });
            }

            return colors ? "rgb(".concat(colors.map(function(n) {
                return parseInt(n, 16);
            }).join(', '), ")") : '';
        }

        function intToHex(int) {
            var hex = int.toString(16);
            return hex.length === 1 ? "0".concat(hex) : hex;
        }
        /**
 * Converts a color from CSS rgb format to CSS hex format.
 *
 * @param {string} color - RGB color, i.e. rgb(n, n, n)
 * @returns {string} A CSS rgb color string, i.e. #nnnnnn
 */

        function rgbToHex(color) {
            // Idempotent
            if (color.indexOf('#') === 0) {
                return color;
            }

            var _decomposeColor = decomposeColor(color)
              , values = _decomposeColor.values;

            return "#".concat(values.map(function(n) {
                return intToHex(n);
            }).join(''));
        }
        /**
 * Converts a color from hsl format to rgb format.
 *
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

        function hslToRgb(color) {
            color = decomposeColor(color);
            var _color = color
              , values = _color.values;
            var h = values[0];
            var s = values[1] / 100;
            var l = values[2] / 100;
            var a = s * Math.min(l, 1 - l);

            var f = function f(n) {
                var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;
                return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
            };

            var type = 'rgb';
            var rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];

            if (color.type === 'hsla') {
                type += 'a';
                rgb.push(values[3]);
            }

            return recomposeColor({
                type: type,
                values: rgb
            });
        }
        /**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */

        function decomposeColor(color) {
            // Idempotent
            if (color.type) {
                return color;
            }

            if (color.charAt(0) === '#') {
                return decomposeColor(hexToRgb(color));
            }

            var marker = color.indexOf('(');
            var type = color.substring(0, marker);

            if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {
                throw new Error(["Material-UI: unsupported `".concat(color, "` color."), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\n'));
            }

            var values = color.substring(marker + 1, color.length - 1).split(',');
            values = values.map(function(value) {
                return parseFloat(value);
            });
            return {
                type: type,
                values: values
            };
        }
        /**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

        function recomposeColor(color) {
            var type = color.type;
            var values = color.values;

            if (type.indexOf('rgb') !== -1) {
                // Only convert the first 3 values to int (i.e. not alpha)
                values = values.map(function(n, i) {
                    return i < 3 ? parseInt(n, 10) : n;
                });
            } else if (type.indexOf('hsl') !== -1) {
                values[1] = "".concat(values[1], "%");
                values[2] = "".concat(values[2], "%");
            }

            return "".concat(type, "(").concat(values.join(', '), ")");
        }
        /**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

        function getContrastRatio(foreground, background) {
            var lumA = getLuminance(foreground);
            var lumB = getLuminance(background);
            return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
        }
        /**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

        function getLuminance(color) {
            color = decomposeColor(color);
            var rgb = color.type === 'hsl' ? decomposeColor(hslToRgb(color)).values : color.values;
            rgb = rgb.map(function(val) {
                val /= 255;
                // normalized

                return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
            });
            // Truncate at 3 digits

            return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
        }
        /**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function emphasize(color) {
            var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;
            return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
        }
        /**
 * Set the absolute transparency of a color.
 * Any existing alpha values are overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0 -1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function fade(color, value) {
            color = decomposeColor(color);
            value = clamp(value);

            if (color.type === 'rgb' || color.type === 'hsl') {
                color.type += 'a';
            }

            color.values[3] = value;
            return recomposeColor(color);
        }
        /**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function darken(color, coefficient) {
            color = decomposeColor(color);
            coefficient = clamp(coefficient);

            if (color.type.indexOf('hsl') !== -1) {
                color.values[2] *= 1 - coefficient;
            } else if (color.type.indexOf('rgb') !== -1) {
                for (var i = 0; i < 3; i += 1) {
                    color.values[i] *= 1 - coefficient;
                }
            }

            return recomposeColor(color);
        }
        /**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

        function lighten(color, coefficient) {
            color = decomposeColor(color);
            coefficient = clamp(coefficient);

            if (color.type.indexOf('hsl') !== -1) {
                color.values[2] += (100 - color.values[2]) * coefficient;
            } else if (color.type.indexOf('rgb') !== -1) {
                for (var i = 0; i < 3; i += 1) {
                    color.values[i] += (255 - color.values[i]) * coefficient;
                }
            }

            return recomposeColor(color);
        }

        /***/
    }
    ), /* 460 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = createTypography;

        var _extends2 = _interopRequireDefault(__webpack_require__(139));

        var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(113));

        var _utils = __webpack_require__(14);

        function round(value) {
            return Math.round(value * 1e5) / 1e5;
        }

        var caseAllCaps = {
            textTransform: 'uppercase'
        };
        var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
        /**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

        function createTypography(palette, typography) {
            var _ref = typeof typography === 'function' ? typography(palette) : typography
              , _ref$fontFamily = _ref.fontFamily
              , fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily
              , _ref$fontSize = _ref.fontSize
              , fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize
              , _ref$fontWeightLight = _ref.fontWeightLight
              , fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight
              , _ref$fontWeightRegula = _ref.fontWeightRegular
              , fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula
              , _ref$fontWeightMedium = _ref.fontWeightMedium
              , fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium
              , _ref$fontWeightBold = _ref.fontWeightBold
              , fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold
              , _ref$htmlFontSize = _ref.htmlFontSize
              , htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize
              , allVariants = _ref.allVariants
              , pxToRem2 = _ref.pxToRem
              , other = (0,
            _objectWithoutProperties2.default)(_ref, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"]);

            if (false) {}

            var coef = fontSize / 14;

            var pxToRem = pxToRem2 || function(size) {
                return "".concat(size / htmlFontSize * coef, "rem");
            }
            ;

            var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {
                return (0,
                _extends2.default)({
                    fontFamily: fontFamily,
                    fontWeight: fontWeight,
                    fontSize: pxToRem(size),
                    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
                    lineHeight: lineHeight
                }, fontFamily === defaultFontFamily ? {
                    letterSpacing: "".concat(round(letterSpacing / size), "em")
                } : {}, {}, casing, {}, allVariants);
            };

            var variants = {
                h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
                h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
                h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
                h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
                h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
                h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
                subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
                subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
                body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
                body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
                button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
                caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
                overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
            };
            return (0,
            _utils.deepmerge)((0,
            _extends2.default)({
                htmlFontSize: htmlFontSize,
                pxToRem: pxToRem,
                round: round,
                // TODO To remove in v5?
                fontFamily: fontFamily,
                fontSize: fontSize,
                fontWeightLight: fontWeightLight,
                fontWeightRegular: fontWeightRegular,
                fontWeightMedium: fontWeightMedium,
                fontWeightBold: fontWeightBold
            }, variants), other, {
                clone: false // No need to clone deep

            });
        }

        /***/
    }
    ), /* 461 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var shadowKeyUmbraOpacity = 0.2;
        var shadowKeyPenumbraOpacity = 0.14;
        var shadowAmbientShadowOpacity = 0.12;

        function createShadow() {
            return ["".concat(arguments.length <= 0 ? undefined : arguments[0], "px ").concat(arguments.length <= 1 ? undefined : arguments[1], "px ").concat(arguments.length <= 2 ? undefined : arguments[2], "px ").concat(arguments.length <= 3 ? undefined : arguments[3], "px rgba(0,0,0,").concat(shadowKeyUmbraOpacity, ")"), "".concat(arguments.length <= 4 ? undefined : arguments[4], "px ").concat(arguments.length <= 5 ? undefined : arguments[5], "px ").concat(arguments.length <= 6 ? undefined : arguments[6], "px ").concat(arguments.length <= 7 ? undefined : arguments[7], "px rgba(0,0,0,").concat(shadowKeyPenumbraOpacity, ")"), "".concat(arguments.length <= 8 ? undefined : arguments[8], "px ").concat(arguments.length <= 9 ? undefined : arguments[9], "px ").concat(arguments.length <= 10 ? undefined : arguments[10], "px ").concat(arguments.length <= 11 ? undefined : arguments[11], "px rgba(0,0,0,").concat(shadowAmbientShadowOpacity, ")")].join(',');
        }
        // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

        var shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
        var _default = shadows;
        exports.default = _default;

        /***/
    }
    ), /* 462 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        var shape = {
            borderRadius: 4
        };
        var _default = shape;
        exports.default = _default;

        /***/
    }
    ), /* 463 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = createSpacing;
        var warnOnce;

        function createSpacing() {
            var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;

            // Already transformed.
            if (spacingInput.mui) {
                return spacingInput;
            }
            // All components align to an 8dp square baseline grid for mobile, tablet, and desktop.
            // https://material.io/design/layout/understanding-layout.html#pixel-density

            var transform;

            if (typeof spacingInput === 'function') {
                transform = spacingInput;
            } else {
                if (false) {}

                transform = function transform(factor) {
                    if (false) {}

                    return spacingInput * factor;
                }
                ;
            }

            var spacing = function spacing() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                if (false) {}

                if (args.length === 0) {
                    return transform(1);
                }

                if (args.length === 1) {
                    return transform(args[0]);
                }

                return args.map(function(factor) {
                    var output = transform(factor);
                    return typeof output === 'number' ? "".concat(output, "px") : output;
                }).join(' ');
            };
            // Backward compatibility, to remove in v5.

            Object.defineProperty(spacing, 'unit', {
                get: function get() {
                    if (false) {}

                    return spacingInput;
                }
            });
            spacing.mui = true;
            return spacing;
        }

        /***/
    }
    ), /* 464 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var _interopRequireDefault = __webpack_require__(85);

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = exports.duration = exports.easing = void 0;

        var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(113));

        // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
        // to learn the context in which each easing should be used.
        var easing = {
            // This is the most common easing curve.
            easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
            // Objects enter the screen at full velocity from off-screen and
            // slowly decelerate to a resting point.
            easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
            // Objects leave the screen at full velocity. They do not decelerate when off-screen.
            easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
            // The sharp curve is used by objects that may return to the screen at any time.
            sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
        };
        // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
        // to learn when use what timing

        exports.easing = easing;
        var duration = {
            shortest: 150,
            shorter: 200,
            short: 250,
            // most basic recommended timing
            standard: 300,
            // this is to be used in complex animations
            complex: 375,
            // recommended when something is entering screen
            enteringScreen: 225,
            // recommended when something is leaving screen
            leavingScreen: 195
        };
        exports.duration = duration;

        function formatMs(milliseconds) {
            return "".concat(Math.round(milliseconds), "ms");
        }
        /**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */

        var _default = {
            easing: easing,
            duration: duration,
            create: function create() {
                var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var _options$duration = options.duration
                  , durationOption = _options$duration === void 0 ? duration.standard : _options$duration
                  , _options$easing = options.easing
                  , easingOption = _options$easing === void 0 ? easing.easeInOut : _options$easing
                  , _options$delay = options.delay
                  , delay = _options$delay === void 0 ? 0 : _options$delay
                  , other = (0,
                _objectWithoutProperties2.default)(options, ["duration", "easing", "delay"]);

                if (false) {
                    var isNumber, isString;
                }

                return (Array.isArray(props) ? props : [props]).map(function(animatedProp) {
                    return "".concat(animatedProp, " ").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), " ").concat(easingOption, " ").concat(typeof delay === 'string' ? delay : formatMs(delay));
                }).join(',');
            },
            getAutoHeightDuration: function getAutoHeightDuration(height) {
                if (!height) {
                    return 0;
                }

                var constant = height / 36;
                // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

                return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);
            }
        };
        exports.default = _default;

        /***/
    }
    ), /* 465 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = void 0;
        // We need to centralize the zIndex definitions as they work
        // like global values in the browser.
        var zIndex = {
            mobileStepper: 1000,
            speedDial: 1050,
            appBar: 1100,
            drawer: 1200,
            modal: 1300,
            snackbar: 1400,
            tooltip: 1500
        };
        var _default = zIndex;
        exports.default = _default;

        /***/
    }
    ), /* 466 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const react_1 = tslib_1.__importStar(__webpack_require__(0));

        const manager_1 = tslib_1.__importDefault(__webpack_require__(114));

        const Typography_1 = tslib_1.__importDefault(__webpack_require__(36));

        const plugin_1 = __webpack_require__(467);

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const page_navigation_1 = tslib_1.__importDefault(__webpack_require__(563));

        const plugin_2 = tslib_1.__importDefault(__webpack_require__(368));

        const virtual_keyboard_1 = tslib_1.__importDefault(__webpack_require__(570));

        const plugin_3 = tslib_1.__importDefault(__webpack_require__(370));

        const selectors_1 = __webpack_require__(41);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(575));
        // import BlackAndYellowComponent from 'plugins/black-and-yellow';
        // import DarkContrastComponent from 'plugins/dark-contrast';
        // import EmphasizeHoverComponent from 'plugins/emphasize-hover';
        // import EmphasizeTitlesComponent from 'plugins/emphasize-titles';
        // import GrayscaleComponent from 'plugins/grayscale';
        // import HideImagesComponent from 'plugins/hide-images';
        // import HighlightFormsComponent from 'plugins/highlight-forms';
        // import HighlightLinksComponent from 'plugins/highlight-links';
        // import InvertColorsComponent from 'plugins/invert-colors';
        // import KeyboardNavigationComponent from 'plugins/keyboard-navigation';
        // import LargeCursorComponent from 'plugins/large-cursor';
        // import LightContrastComponent from 'plugins/light-contrast';
        // import ReadableFontsComponent from 'plugins/readable-fonts';
        // import StopAnimationsComponent from 'plugins/stop-animations';
        // import TextToSpeechComponent from 'plugins/text-to-speech';
        // import TooltipComponent from 'plugins/tooltip';
        //
        // import HighlightLinksPlugin from 'plugins/highlight-links/plugin';
        // import KeyboardNavigationPlugin from 'plugins/keyboard-navigation/plugin';
        // import TextToSpeechPlugin from 'plugins/text-to-speech/plugin';
        //
        // import HighlightLinksComponent from 'plugins/highlight-links';
        // import HighlightLinksPlugin from 'plugins/highlight-links/plugin';
        // import KeyboardNavigationComponent from 'plugins/keyboard-navigation';
        // import KeyboardNavigationPlugin from 'plugins/keyboard-navigation/plugin';

        const text_to_speech_1 = tslib_1.__importDefault(__webpack_require__(577));

        const plugin_4 = tslib_1.__importDefault(__webpack_require__(371));

        const Widget = ({state, actions})=>{
            react_1.useEffect(()=>{
                // One-time dispatch of enabled plugins on initial render.
                const ids = new selectors_1.Selectors(state).getEnabledIds();
                ids.forEach(id=>actions.enable(id));
            }
            , []);
            return react_1.default.createElement("div", {
                className: styles_scss_1.default.modal
            }, react_1.default.createElement(Typography_1.default, {
                component: 'h2'
            }, config_1.default.widgetTitle), react_1.default.createElement("div", {
                className: styles_scss_1.default.modalContainer
            }, manager_1.default.getInstance().pluginsAutoGenerated.map(plugin=>react_1.default.createElement(plugin_1.PluginComponent, {
                key: plugin.id,
                state: state,
                actions: actions,
                id: plugin.id
            })), react_1.default.createElement(text_to_speech_1.default, {
                key: plugin_4.default.id,
                state: state,
                actions: actions,
                id: plugin_4.default.id
            }), react_1.default.createElement(page_navigation_1.default, {
                key: plugin_2.default.id,
                state: state,
                actions: actions,
                id: plugin_2.default.id
            }), react_1.default.createElement(virtual_keyboard_1.default, {
                key: plugin_3.default.id,
                state: state,
                actions: actions,
                id: plugin_3.default.id
            })));
        }
        ;

        exports.default = Widget;

        /***/
    }
    ), /* 467 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const Typography_1 = tslib_1.__importDefault(__webpack_require__(36));

        const toggle_button_1 = tslib_1.__importDefault(__webpack_require__(206));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const radio_1 = tslib_1.__importDefault(__webpack_require__(207));

        const scalable_1 = tslib_1.__importDefault(__webpack_require__(208));

        const selectors_1 = __webpack_require__(41);

        exports.PluginComponent = ({state, actions, id})=>{
            const plugin = new selectors_1.Selectors(state).getPlugin(id);
            return react_1.default.createElement("div", null, react_1.default.createElement(Typography_1.default, {
                component: 'h2'
            }, plugin.title), react_1.default.createElement(toggle_button_1.default, {
                plugin: plugin,
                actions: actions
            }), plugin.options.length > 0 && react_1.default.createElement(radio_1.default, {
                data: plugin.options,
                plugin: plugin,
                actions: actions
            }), plugin.scaling && react_1.default.createElement(scalable_1.default, {
                plugin: plugin,
                actions: actions,
                scaling: plugin.scaling
            }));
        }
        ;

        /***/
    }
    ), /* 468 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsEqual = __webpack_require__(209);

        /**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
        function isEqual(value, other) {
            return baseIsEqual(value, other);
        }

        module.exports = isEqual;

        /***/
    }
    ), /* 469 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(210)
          , equalArrays = __webpack_require__(335)
          , equalByTag = __webpack_require__(503)
          , equalObjects = __webpack_require__(506)
          , getTag = __webpack_require__(149)
          , isArray = __webpack_require__(56)
          , isBuffer = __webpack_require__(147)
          , isTypedArray = __webpack_require__(216);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]'
          , arrayTag = '[object Array]'
          , objectTag = '[object Object]';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object)
              , othIsArr = isArray(other)
              , objTag = objIsArr ? arrayTag : getTag(object)
              , othTag = othIsArr ? arrayTag : getTag(other);

            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;

            var objIsObj = objTag == objectTag
              , othIsObj = othTag == objectTag
              , isSameTag = objTag == othTag;

            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) {
                    return false;
                }
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return (objIsArr || isTypedArray(object)) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__')
                  , othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object
                      , othUnwrapped = othIsWrapped ? other.value() : other;

                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) {
                return false;
            }
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }

        module.exports = baseIsEqualDeep;

        /***/
    }
    ), /* 470 */
    /***/
    (function(module, exports) {

        /**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
        function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }

        module.exports = listCacheClear;

        /***/
    }
    ), /* 471 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(144);

        /** Used for built-in method references. */
        var arrayProto = Array.prototype;

        /** Built-in value references. */
        var splice = arrayProto.splice;

        /**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
        function listCacheDelete(key) {
            var data = this.__data__
              , index = assocIndexOf(data, key);

            if (index < 0) {
                return false;
            }
            var lastIndex = data.length - 1;
            if (index == lastIndex) {
                data.pop();
            } else {
                splice.call(data, index, 1);
            }
            --this.size;
            return true;
        }

        module.exports = listCacheDelete;

        /***/
    }
    ), /* 472 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(144);

        /**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
        function listCacheGet(key) {
            var data = this.__data__
              , index = assocIndexOf(data, key);

            return index < 0 ? undefined : data[index][1];
        }

        module.exports = listCacheGet;

        /***/
    }
    ), /* 473 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(144);

        /**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
        function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }

        module.exports = listCacheHas;

        /***/
    }
    ), /* 474 */
    /***/
    (function(module, exports, __webpack_require__) {

        var assocIndexOf = __webpack_require__(144);

        /**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
        function listCacheSet(key, value) {
            var data = this.__data__
              , index = assocIndexOf(data, key);

            if (index < 0) {
                ++this.size;
                data.push([key, value]);
            } else {
                data[index][1] = value;
            }
            return this;
        }

        module.exports = listCacheSet;

        /***/
    }
    ), /* 475 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(143);

        /**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
        function stackClear() {
            this.__data__ = new ListCache;
            this.size = 0;
        }

        module.exports = stackClear;

        /***/
    }
    ), /* 476 */
    /***/
    (function(module, exports) {

        /**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
        function stackDelete(key) {
            var data = this.__data__
              , result = data['delete'](key);

            this.size = data.size;
            return result;
        }

        module.exports = stackDelete;

        /***/
    }
    ), /* 477 */
    /***/
    (function(module, exports) {

        /**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
        function stackGet(key) {
            return this.__data__.get(key);
        }

        module.exports = stackGet;

        /***/
    }
    ), /* 478 */
    /***/
    (function(module, exports) {

        /**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
        function stackHas(key) {
            return this.__data__.has(key);
        }

        module.exports = stackHas;

        /***/
    }
    ), /* 479 */
    /***/
    (function(module, exports, __webpack_require__) {

        var ListCache = __webpack_require__(143)
          , Map = __webpack_require__(212)
          , MapCache = __webpack_require__(214);

        /** Used as the size to enable large array optimizations. */
        var LARGE_ARRAY_SIZE = 200;

        /**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
        function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
                    pairs.push([key, value]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }

        module.exports = stackSet;

        /***/
    }
    ), /* 480 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isFunction = __webpack_require__(213)
          , isMasked = __webpack_require__(483)
          , isObject = __webpack_require__(69)
          , toSource = __webpack_require__(334);

        /**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Used for built-in method references. */
        var funcProto = Function.prototype
          , objectProto = Object.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to detect if a method is native. */
        var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

        /**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
        function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
                return false;
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }

        module.exports = baseIsNative;

        /***/
    }
    ), /* 481 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(118);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
        function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag)
              , tag = value[symToStringTag];

            try {
                value[symToStringTag] = undefined;
                var unmasked = true;
            } catch (e) {}

            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) {
                    value[symToStringTag] = tag;
                } else {
                    delete value[symToStringTag];
                }
            }
            return result;
        }

        module.exports = getRawTag;

        /***/
    }
    ), /* 482 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var nativeObjectToString = objectProto.toString;

        /**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }

        module.exports = objectToString;

        /***/
    }
    ), /* 483 */
    /***/
    (function(module, exports, __webpack_require__) {

        var coreJsData = __webpack_require__(484);

        /** Used to detect methods masquerading as native. */
        var maskSrcKey = (function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
            return uid ? ('Symbol(src)_1.' + uid) : '';
        }());

        /**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
        function isMasked(func) {
            return !!maskSrcKey && (maskSrcKey in func);
        }

        module.exports = isMasked;

        /***/
    }
    ), /* 484 */
    /***/
    (function(module, exports, __webpack_require__) {

        var root = __webpack_require__(60);

        /** Used to detect overreaching core-js shims. */
        var coreJsData = root['__core-js_shared__'];

        module.exports = coreJsData;

        /***/
    }
    ), /* 485 */
    /***/
    (function(module, exports) {

        /**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
        function getValue(object, key) {
            return object == null ? undefined : object[key];
        }

        module.exports = getValue;

        /***/
    }
    ), /* 486 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Hash = __webpack_require__(487)
          , ListCache = __webpack_require__(143)
          , Map = __webpack_require__(212);

        /**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
        function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                'hash': new Hash,
                'map': new (Map || ListCache),
                'string': new Hash
            };
        }

        module.exports = mapCacheClear;

        /***/
    }
    ), /* 487 */
    /***/
    (function(module, exports, __webpack_require__) {

        var hashClear = __webpack_require__(488)
          , hashDelete = __webpack_require__(489)
          , hashGet = __webpack_require__(490)
          , hashHas = __webpack_require__(491)
          , hashSet = __webpack_require__(492);

        /**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
        function Hash(entries) {
            var index = -1
              , length = entries == null ? 0 : entries.length;

            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }

        // Add methods to `Hash`.
        Hash.prototype.clear = hashClear;
        Hash.prototype['delete'] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;

        module.exports = Hash;

        /***/
    }
    ), /* 488 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(145);

        /**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
        function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
        }

        module.exports = hashClear;

        /***/
    }
    ), /* 489 */
    /***/
    (function(module, exports) {

        /**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
        function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }

        module.exports = hashDelete;

        /***/
    }
    ), /* 490 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(145);

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
        function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
        }

        module.exports = hashGet;

        /***/
    }
    ), /* 491 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(145);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
        function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
        }

        module.exports = hashHas;

        /***/
    }
    ), /* 492 */
    /***/
    (function(module, exports, __webpack_require__) {

        var nativeCreate = __webpack_require__(145);

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
        function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
            return this;
        }

        module.exports = hashSet;

        /***/
    }
    ), /* 493 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(146);

        /**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
        function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key);
            this.size -= result ? 1 : 0;
            return result;
        }

        module.exports = mapCacheDelete;

        /***/
    }
    ), /* 494 */
    /***/
    (function(module, exports) {

        /**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
        function isKeyable(value) {
            var type = typeof value;
            return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean') ? (value !== '__proto__') : (value === null);
        }

        module.exports = isKeyable;

        /***/
    }
    ), /* 495 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(146);

        /**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
        function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }

        module.exports = mapCacheGet;

        /***/
    }
    ), /* 496 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(146);

        /**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
        function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }

        module.exports = mapCacheHas;

        /***/
    }
    ), /* 497 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getMapData = __webpack_require__(146);

        /**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
        function mapCacheSet(key, value) {
            var data = getMapData(this, key)
              , size = data.size;

            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }

        module.exports = mapCacheSet;

        /***/
    }
    ), /* 498 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MapCache = __webpack_require__(214)
          , setCacheAdd = __webpack_require__(499)
          , setCacheHas = __webpack_require__(500);

        /**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
        function SetCache(values) {
            var index = -1
              , length = values == null ? 0 : values.length;

            this.__data__ = new MapCache;
            while (++index < length) {
                this.add(values[index]);
            }
        }

        // Add methods to `SetCache`.
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;

        module.exports = SetCache;

        /***/
    }
    ), /* 499 */
    /***/
    (function(module, exports) {

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
        function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }

        module.exports = setCacheAdd;

        /***/
    }
    ), /* 500 */
    /***/
    (function(module, exports) {

        /**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
        function setCacheHas(value) {
            return this.__data__.has(value);
        }

        module.exports = setCacheHas;

        /***/
    }
    ), /* 501 */
    /***/
    (function(module, exports) {

        /**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
        function arraySome(array, predicate) {
            var index = -1
              , length = array == null ? 0 : array.length;

            while (++index < length) {
                if (predicate(array[index], index, array)) {
                    return true;
                }
            }
            return false;
        }

        module.exports = arraySome;

        /***/
    }
    ), /* 502 */
    /***/
    (function(module, exports) {

        /**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
        function cacheHas(cache, key) {
            return cache.has(key);
        }

        module.exports = cacheHas;

        /***/
    }
    ), /* 503 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(118)
          , Uint8Array = __webpack_require__(336)
          , eq = __webpack_require__(211)
          , equalArrays = __webpack_require__(335)
          , mapToArray = __webpack_require__(504)
          , setToArray = __webpack_require__(505);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1
          , COMPARE_UNORDERED_FLAG = 2;

        /** `Object#toString` result references. */
        var boolTag = '[object Boolean]'
          , dateTag = '[object Date]'
          , errorTag = '[object Error]'
          , mapTag = '[object Map]'
          , numberTag = '[object Number]'
          , regexpTag = '[object RegExp]'
          , setTag = '[object Set]'
          , stringTag = '[object String]'
          , symbolTag = '[object Symbol]';

        var arrayBufferTag = '[object ArrayBuffer]'
          , dataViewTag = '[object DataView]';

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined
          , symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch (tag) {
            case dataViewTag:
                if ((object.byteLength != other.byteLength) || (object.byteOffset != other.byteOffset)) {
                    return false;
                }
                object = object.buffer;
                other = other.buffer;

            case arrayBufferTag:
                if ((object.byteLength != other.byteLength) || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                    return false;
                }
                return true;

            case boolTag:
            case dateTag:
            case numberTag:
                // Coerce booleans to `1` or `0` and dates to milliseconds.
                // Invalid dates are coerced to `NaN`.
                return eq(+object, +other);

            case errorTag:
                return object.name == other.name && object.message == other.message;

            case regexpTag:
            case stringTag:
                // Coerce regexes to strings and treat strings, primitives and objects,
                // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                // for more details.
                return object == (other + '');

            case mapTag:
                var convert = mapToArray;

            case setTag:
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                convert || (convert = setToArray);

                if (object.size != other.size && !isPartial) {
                    return false;
                }
                // Assume cyclic values are equal.
                var stacked = stack.get(object);
                if (stacked) {
                    return stacked == other;
                }
                bitmask |= COMPARE_UNORDERED_FLAG;

                // Recursively compare objects (susceptible to call stack limits).
                stack.set(object, other);
                var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                stack['delete'](object);
                return result;

            case symbolTag:
                if (symbolValueOf) {
                    return symbolValueOf.call(object) == symbolValueOf.call(other);
                }
            }
            return false;
        }

        module.exports = equalByTag;

        /***/
    }
    ), /* 504 */
    /***/
    (function(module, exports) {

        /**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
        function mapToArray(map) {
            var index = -1
              , result = Array(map.size);

            map.forEach(function(value, key) {
                result[++index] = [key, value];
            });
            return result;
        }

        module.exports = mapToArray;

        /***/
    }
    ), /* 505 */
    /***/
    (function(module, exports) {

        /**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
        function setToArray(set) {
            var index = -1
              , result = Array(set.size);

            set.forEach(function(value) {
                result[++index] = value;
            });
            return result;
        }

        module.exports = setToArray;

        /***/
    }
    ), /* 506 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getAllKeys = __webpack_require__(337);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1;

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG
              , objProps = getAllKeys(object)
              , objLength = objProps.length
              , othProps = getAllKeys(other)
              , othLength = othProps.length;

            if (objLength != othLength && !isPartial) {
                return false;
            }
            var index = objLength;
            while (index--) {
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                    return false;
                }
            }
            // Assume cyclic values are equal.
            var stacked = stack.get(object);
            if (stacked && stack.get(other)) {
                return stacked == other;
            }
            var result = true;
            stack.set(object, other);
            stack.set(other, object);

            var skipCtor = isPartial;
            while (++index < objLength) {
                key = objProps[index];
                var objValue = object[key]
                  , othValue = other[key];

                if (customizer) {
                    var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                }
                // Recursively compare objects (susceptible to call stack limits).
                if (!(compared === undefined ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack)) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == 'constructor');
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor
                  , othCtor = other.constructor;

                // Non `Object` object instances with different constructors are not equal.
                if (objCtor != othCtor && ('constructor'in object && 'constructor'in other) && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
                    result = false;
                }
            }
            stack['delete'](object);
            stack['delete'](other);
            return result;
        }

        module.exports = equalObjects;

        /***/
    }
    ), /* 507 */
    /***/
    (function(module, exports) {

        /**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
        function arrayFilter(array, predicate) {
            var index = -1
              , length = array == null ? 0 : array.length
              , resIndex = 0
              , result = [];

            while (++index < length) {
                var value = array[index];
                if (predicate(value, index, array)) {
                    result[resIndex++] = value;
                }
            }
            return result;
        }

        module.exports = arrayFilter;

        /***/
    }
    ), /* 508 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(117)
          , isObjectLike = __webpack_require__(75);

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]';

        /**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
        function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }

        module.exports = baseIsArguments;

        /***/
    }
    ), /* 509 */
    /***/
    (function(module, exports) {

        /**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
        function stubFalse() {
            return false;
        }

        module.exports = stubFalse;

        /***/
    }
    ), /* 510 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetTag = __webpack_require__(117)
          , isLength = __webpack_require__(217)
          , isObjectLike = __webpack_require__(75);

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]'
          , arrayTag = '[object Array]'
          , boolTag = '[object Boolean]'
          , dateTag = '[object Date]'
          , errorTag = '[object Error]'
          , funcTag = '[object Function]'
          , mapTag = '[object Map]'
          , numberTag = '[object Number]'
          , objectTag = '[object Object]'
          , regexpTag = '[object RegExp]'
          , setTag = '[object Set]'
          , stringTag = '[object String]'
          , weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]'
          , dataViewTag = '[object DataView]'
          , float32Tag = '[object Float32Array]'
          , float64Tag = '[object Float64Array]'
          , int8Tag = '[object Int8Array]'
          , int16Tag = '[object Int16Array]'
          , int32Tag = '[object Int32Array]'
          , uint8Tag = '[object Uint8Array]'
          , uint8ClampedTag = '[object Uint8ClampedArray]'
          , uint16Tag = '[object Uint16Array]'
          , uint32Tag = '[object Uint32Array]';

        /** Used to identify `toStringTag` values of typed arrays. */
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

        /**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
        function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }

        module.exports = baseIsTypedArray;

        /***/
    }
    ), /* 511 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isPrototype = __webpack_require__(220)
          , nativeKeys = __webpack_require__(512);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
        function baseKeys(object) {
            if (!isPrototype(object)) {
                return nativeKeys(object);
            }
            var result = [];
            for (var key in Object(object)) {
                if (hasOwnProperty.call(object, key) && key != 'constructor') {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = baseKeys;

        /***/
    }
    ), /* 512 */
    /***/
    (function(module, exports, __webpack_require__) {

        var overArg = __webpack_require__(345);

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeKeys = overArg(Object.keys, Object);

        module.exports = nativeKeys;

        /***/
    }
    ), /* 513 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74)
          , root = __webpack_require__(60);

        /* Built-in method references that are verified to be native. */
        var DataView = getNative(root, 'DataView');

        module.exports = DataView;

        /***/
    }
    ), /* 514 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74)
          , root = __webpack_require__(60);

        /* Built-in method references that are verified to be native. */
        var Promise = getNative(root, 'Promise');

        module.exports = Promise;

        /***/
    }
    ), /* 515 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74)
          , root = __webpack_require__(60);

        /* Built-in method references that are verified to be native. */
        var Set = getNative(root, 'Set');

        module.exports = Set;

        /***/
    }
    ), /* 516 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74)
          , root = __webpack_require__(60);

        /* Built-in method references that are verified to be native. */
        var WeakMap = getNative(root, 'WeakMap');

        module.exports = WeakMap;

        /***/
    }
    ), /* 517 */
    /***/
    (function(module, exports, __webpack_require__) {

        var arrayEach = __webpack_require__(221)
          , baseCreate = __webpack_require__(346)
          , baseForOwn = __webpack_require__(347)
          , baseIteratee = __webpack_require__(150)
          , getPrototype = __webpack_require__(223)
          , isArray = __webpack_require__(56)
          , isBuffer = __webpack_require__(147)
          , isFunction = __webpack_require__(213)
          , isObject = __webpack_require__(69)
          , isTypedArray = __webpack_require__(216);

        /**
 * An alternative to `_.reduce`; this method transforms `object` to a new
 * `accumulator` object which is the result of running each of its own
 * enumerable string keyed properties thru `iteratee`, with each invocation
 * potentially mutating the `accumulator` object. If `accumulator` is not
 * provided, a new object with the same `[[Prototype]]` will be used. The
 * iteratee is invoked with four arguments: (accumulator, value, key, object).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The custom accumulator value.
 * @returns {*} Returns the accumulated value.
 * @example
 *
 * _.transform([2, 3, 4], function(result, n) {
 *   result.push(n *= n);
 *   return n % 2 == 0;
 * }, []);
 * // => [4, 9]
 *
 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] }
 */
        function transform(object, iteratee, accumulator) {
            var isArr = isArray(object)
              , isArrLike = isArr || isBuffer(object) || isTypedArray(object);

            iteratee = baseIteratee(iteratee, 4);
            if (accumulator == null) {
                var Ctor = object && object.constructor;
                if (isArrLike) {
                    accumulator = isArr ? new Ctor : [];
                } else if (isObject(object)) {
                    accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                } else {
                    accumulator = {};
                }
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
                return iteratee(accumulator, value, index, object);
            });
            return accumulator;
        }

        module.exports = transform;

        /***/
    }
    ), /* 518 */
    /***/
    (function(module, exports, __webpack_require__) {

        var createBaseFor = __webpack_require__(519);

        /**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
        var baseFor = createBaseFor();

        module.exports = baseFor;

        /***/
    }
    ), /* 519 */
    /***/
    (function(module, exports) {

        /**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
        function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1
                  , iterable = Object(object)
                  , props = keysFunc(object)
                  , length = props.length;

                while (length--) {
                    var key = props[fromRight ? length : ++index];
                    if (iteratee(iterable[key], key, iterable) === false) {
                        break;
                    }
                }
                return object;
            }
            ;
        }

        module.exports = createBaseFor;

        /***/
    }
    ), /* 520 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsMatch = __webpack_require__(521)
          , getMatchData = __webpack_require__(522)
          , matchesStrictComparable = __webpack_require__(349);

        /**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
        function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
                return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            }
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            }
            ;
        }

        module.exports = baseMatches;

        /***/
    }
    ), /* 521 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(210)
          , baseIsEqual = __webpack_require__(209);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1
          , COMPARE_UNORDERED_FLAG = 2;

        /**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
        function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length
              , length = index
              , noCustomizer = !customizer;

            if (object == null) {
                return !length;
            }
            object = Object(object);
            while (index--) {
                var data = matchData[index];
                if ((noCustomizer && data[2]) ? data[1] !== object[data[0]] : !(data[0]in object)) {
                    return false;
                }
            }
            while (++index < length) {
                data = matchData[index];
                var key = data[0]
                  , objValue = object[key]
                  , srcValue = data[1];

                if (noCustomizer && data[2]) {
                    if (objValue === undefined && !(key in object)) {
                        return false;
                    }
                } else {
                    var stack = new Stack;
                    if (customizer) {
                        var result = customizer(objValue, srcValue, key, object, source, stack);
                    }
                    if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
                        return false;
                    }
                }
            }
            return true;
        }

        module.exports = baseIsMatch;

        /***/
    }
    ), /* 522 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isStrictComparable = __webpack_require__(348)
          , keys = __webpack_require__(86);

        /**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
        function getMatchData(object) {
            var result = keys(object)
              , length = result.length;

            while (length--) {
                var key = result[length]
                  , value = object[key];

                result[length] = [key, value, isStrictComparable(value)];
            }
            return result;
        }

        module.exports = getMatchData;

        /***/
    }
    ), /* 523 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsEqual = __webpack_require__(209)
          , get = __webpack_require__(524)
          , hasIn = __webpack_require__(531)
          , isKey = __webpack_require__(222)
          , isStrictComparable = __webpack_require__(348)
          , matchesStrictComparable = __webpack_require__(349)
          , toKey = __webpack_require__(152);

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1
          , COMPARE_UNORDERED_FLAG = 2;

        /**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
        function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
                return matchesStrictComparable(toKey(path), srcValue);
            }
            return function(object) {
                var objValue = get(object, path);
                return (objValue === undefined && objValue === srcValue) ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            }
            ;
        }

        module.exports = baseMatchesProperty;

        /***/
    }
    ), /* 524 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGet = __webpack_require__(350);

        /**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
        function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
        }

        module.exports = get;

        /***/
    }
    ), /* 525 */
    /***/
    (function(module, exports, __webpack_require__) {

        var memoizeCapped = __webpack_require__(526);

        /** Used to match property names within property paths. */
        var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

        /** Used to match backslashes in property paths. */
        var reEscapeChar = /\\(\\)?/g;

        /**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
        var stringToPath = memoizeCapped(function(string) {
            var result = [];
            if (string.charCodeAt(0) === 46/* . */
            ) {
                result.push('');
            }
            string.replace(rePropName, function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
            });
            return result;
        });

        module.exports = stringToPath;

        /***/
    }
    ), /* 526 */
    /***/
    (function(module, exports, __webpack_require__) {

        var memoize = __webpack_require__(527);

        /** Used as the maximum memoize cache size. */
        var MAX_MEMOIZE_SIZE = 500;

        /**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
        function memoizeCapped(func) {
            var result = memoize(func, function(key) {
                if (cache.size === MAX_MEMOIZE_SIZE) {
                    cache.clear();
                }
                return key;
            });

            var cache = result.cache;
            return result;
        }

        module.exports = memoizeCapped;

        /***/
    }
    ), /* 527 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MapCache = __webpack_require__(214);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
        function memoize(func, resolver) {
            if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            var memoized = function() {
                var args = arguments
                  , key = resolver ? resolver.apply(this, args) : args[0]
                  , cache = memoized.cache;

                if (cache.has(key)) {
                    return cache.get(key);
                }
                var result = func.apply(this, args);
                memoized.cache = cache.set(key, result) || cache;
                return result;
            };
            memoized.cache = new (memoize.Cache || MapCache);
            return memoized;
        }

        // Expose `MapCache`.
        memoize.Cache = MapCache;

        module.exports = memoize;

        /***/
    }
    ), /* 528 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseToString = __webpack_require__(529);

        /**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
        function toString(value) {
            return value == null ? '' : baseToString(value);
        }

        module.exports = toString;

        /***/
    }
    ), /* 529 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(118)
          , arrayMap = __webpack_require__(530)
          , isArray = __webpack_require__(56)
          , isSymbol = __webpack_require__(151);

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0;

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined
          , symbolToString = symbolProto ? symbolProto.toString : undefined;

        /**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
        function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == 'string') {
                return value;
            }
            if (isArray(value)) {
                // Recursively convert values (susceptible to call stack limits).
                return arrayMap(value, baseToString) + '';
            }
            if (isSymbol(value)) {
                return symbolToString ? symbolToString.call(value) : '';
            }
            var result = (value + '');
            return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
        }

        module.exports = baseToString;

        /***/
    }
    ), /* 530 */
    /***/
    (function(module, exports) {

        /**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
        function arrayMap(array, iteratee) {
            var index = -1
              , length = array == null ? 0 : array.length
              , result = Array(length);

            while (++index < length) {
                result[index] = iteratee(array[index], index, array);
            }
            return result;
        }

        module.exports = arrayMap;

        /***/
    }
    ), /* 531 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseHasIn = __webpack_require__(532)
          , hasPath = __webpack_require__(533);

        /**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
        function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
        }

        module.exports = hasIn;

        /***/
    }
    ), /* 532 */
    /***/
    (function(module, exports) {

        /**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
        function baseHasIn(object, key) {
            return object != null && key in Object(object);
        }

        module.exports = baseHasIn;

        /***/
    }
    ), /* 533 */
    /***/
    (function(module, exports, __webpack_require__) {

        var castPath = __webpack_require__(351)
          , isArguments = __webpack_require__(343)
          , isArray = __webpack_require__(56)
          , isIndex = __webpack_require__(344)
          , isLength = __webpack_require__(217)
          , toKey = __webpack_require__(152);

        /**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
        function hasPath(object, path, hasFunc) {
            path = castPath(path, object);

            var index = -1
              , length = path.length
              , result = false;

            while (++index < length) {
                var key = toKey(path[index]);
                if (!(result = object != null && hasFunc(object, key))) {
                    break;
                }
                object = object[key];
            }
            if (result || ++index != length) {
                return result;
            }
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }

        module.exports = hasPath;

        /***/
    }
    ), /* 534 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseProperty = __webpack_require__(535)
          , basePropertyDeep = __webpack_require__(536)
          , isKey = __webpack_require__(222)
          , toKey = __webpack_require__(152);

        /**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
        function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }

        module.exports = property;

        /***/
    }
    ), /* 535 */
    /***/
    (function(module, exports) {

        /**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
        function baseProperty(key) {
            return function(object) {
                return object == null ? undefined : object[key];
            }
            ;
        }

        module.exports = baseProperty;

        /***/
    }
    ), /* 536 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGet = __webpack_require__(350);

        /**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
        function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            }
            ;
        }

        module.exports = basePropertyDeep;

        /***/
    }
    ), /* 537 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseTimes = __webpack_require__(342)
          , castFunction = __webpack_require__(353)
          , toInteger = __webpack_require__(224);

        /** Used as references for various `Number` constants. */
        var MAX_SAFE_INTEGER = 9007199254740991;

        /** Used as references for the maximum length and index of an array. */
        var MAX_ARRAY_LENGTH = 4294967295;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMin = Math.min;

        /**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
        function times(n, iteratee) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) {
                return [];
            }
            var index = MAX_ARRAY_LENGTH
              , length = nativeMin(n, MAX_ARRAY_LENGTH);

            iteratee = castFunction(iteratee);
            n -= MAX_ARRAY_LENGTH;

            var result = baseTimes(length, iteratee);
            while (++index < n) {
                iteratee(index);
            }
            return result;
        }

        module.exports = times;

        /***/
    }
    ), /* 538 */
    /***/
    (function(module, exports, __webpack_require__) {

        var toNumber = __webpack_require__(539);

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0
          , MAX_INTEGER = 1.7976931348623157e+308;

        /**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
        function toFinite(value) {
            if (!value) {
                return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = (value < 0 ? -1 : 1);
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }

        module.exports = toFinite;

        /***/
    }
    ), /* 539 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(69)
          , isSymbol = __webpack_require__(151);

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
        function toNumber(value) {
            if (typeof value == 'number') {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? (other + '') : other;
            }
            if (typeof value != 'string') {
                return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, '');
            var isBinary = reIsBinary.test(value);
            return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
        }

        module.exports = toNumber;

        /***/
    }
    ), /* 540 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GoogleCloudAudioEncoding;

        (function(GoogleCloudAudioEncoding) {
            GoogleCloudAudioEncoding["AUDIO_ENCODING_UNSPECIFIED"] = "AUDIO_ENCODING_UNSPECIFIED";
            GoogleCloudAudioEncoding["LINEAR16"] = "LINEAR16";
            GoogleCloudAudioEncoding["MP3"] = "MP3";
            GoogleCloudAudioEncoding["OGG_OPUS"] = "OGG_OPUS";
        }
        )(GoogleCloudAudioEncoding = exports.GoogleCloudAudioEncoding || (exports.GoogleCloudAudioEncoding = {}));

        var GoogleCloudVoiceSsmlVoiceGender;

        (function(GoogleCloudVoiceSsmlVoiceGender) {
            GoogleCloudVoiceSsmlVoiceGender["FEMALE"] = "FEMALE";
            GoogleCloudVoiceSsmlVoiceGender["MALE"] = "MALE";
            GoogleCloudVoiceSsmlVoiceGender["NEUTRAL"] = "NEUTRAL";
            GoogleCloudVoiceSsmlVoiceGender["SSML_VOICE_GENDER_UNSPECIFIED"] = "SSML_VOICE_GENDER_UNSPECIFIED";
        }
        )(GoogleCloudVoiceSsmlVoiceGender = exports.GoogleCloudVoiceSsmlVoiceGender || (exports.GoogleCloudVoiceSsmlVoiceGender = {}));
        /**
 * @see https://cloud.google.com/text-to-speech/docs/audio-profiles
 */

        var GoogleCloudVoiceAudioProfile;

        (function(GoogleCloudVoiceAudioProfile) {
            GoogleCloudVoiceAudioProfile["WEARABLE_CLASS_DEVICE"] = "wearable-class-device";
            GoogleCloudVoiceAudioProfile["HANDSET_CLASS_DEVICE"] = "handset-class-device";
            GoogleCloudVoiceAudioProfile["HEADPHONE_CLASS_DEVICE"] = "headphone-class-device";
            GoogleCloudVoiceAudioProfile["SMALL_BLUETOOTH_SPEAKER_CLASS_DEVICE"] = "small-bluetooth-speaker-class-device";
            GoogleCloudVoiceAudioProfile["MEDIUM_BLUETOOTH_SPEAKER_CLASS_DEVICE"] = "medium-bluetooth-speaker-class-device";
            GoogleCloudVoiceAudioProfile["LARGE_HOME_ENTERTAINMENT_CLASS_DEVICE"] = "large-home-entertainment-class-device";
            GoogleCloudVoiceAudioProfile["LARGE_AUTOMOTIVE_CLASS_DEVICE"] = "large-automotive-class-device";
            GoogleCloudVoiceAudioProfile["TELEPHONY_CLASS_APPLICATION"] = "telephony-class-application";
        }
        )(GoogleCloudVoiceAudioProfile = exports.GoogleCloudVoiceAudioProfile || (exports.GoogleCloudVoiceAudioProfile = {}));

        /***/
    }
    ), /* 541 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Stack = __webpack_require__(210)
          , arrayEach = __webpack_require__(221)
          , assignValue = __webpack_require__(356)
          , baseAssign = __webpack_require__(543)
          , baseAssignIn = __webpack_require__(544)
          , cloneBuffer = __webpack_require__(547)
          , copyArray = __webpack_require__(548)
          , copySymbols = __webpack_require__(549)
          , copySymbolsIn = __webpack_require__(550)
          , getAllKeys = __webpack_require__(337)
          , getAllKeysIn = __webpack_require__(551)
          , getTag = __webpack_require__(149)
          , initCloneArray = __webpack_require__(552)
          , initCloneByTag = __webpack_require__(553)
          , initCloneObject = __webpack_require__(558)
          , isArray = __webpack_require__(56)
          , isBuffer = __webpack_require__(147)
          , isMap = __webpack_require__(559)
          , isObject = __webpack_require__(69)
          , isSet = __webpack_require__(561)
          , keys = __webpack_require__(86);

        /** Used to compose bitmasks for cloning. */
        var CLONE_DEEP_FLAG = 1
          , CLONE_FLAT_FLAG = 2
          , CLONE_SYMBOLS_FLAG = 4;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]'
          , arrayTag = '[object Array]'
          , boolTag = '[object Boolean]'
          , dateTag = '[object Date]'
          , errorTag = '[object Error]'
          , funcTag = '[object Function]'
          , genTag = '[object GeneratorFunction]'
          , mapTag = '[object Map]'
          , numberTag = '[object Number]'
          , objectTag = '[object Object]'
          , regexpTag = '[object RegExp]'
          , setTag = '[object Set]'
          , stringTag = '[object String]'
          , symbolTag = '[object Symbol]'
          , weakMapTag = '[object WeakMap]';

        var arrayBufferTag = '[object ArrayBuffer]'
          , dataViewTag = '[object DataView]'
          , float32Tag = '[object Float32Array]'
          , float64Tag = '[object Float64Array]'
          , int8Tag = '[object Int8Array]'
          , int16Tag = '[object Int16Array]'
          , int32Tag = '[object Int32Array]'
          , uint8Tag = '[object Uint8Array]'
          , uint8ClampedTag = '[object Uint8ClampedArray]'
          , uint16Tag = '[object Uint16Array]'
          , uint32Tag = '[object Uint32Array]';

        /** Used to identify `toStringTag` values supported by `_.clone`. */
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

        /**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
        function baseClone(value, bitmask, customizer, key, object, stack) {
            var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;

            if (customizer) {
                result = object ? customizer(value, key, object, stack) : customizer(value);
            }
            if (result !== undefined) {
                return result;
            }
            if (!isObject(value)) {
                return value;
            }
            var isArr = isArray(value);
            if (isArr) {
                result = initCloneArray(value);
                if (!isDeep) {
                    return copyArray(value, result);
                }
            } else {
                var tag = getTag(value)
                  , isFunc = tag == funcTag || tag == genTag;

                if (isBuffer(value)) {
                    return cloneBuffer(value, isDeep);
                }
                if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
                    result = (isFlat || isFunc) ? {} : initCloneObject(value);
                    if (!isDeep) {
                        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                    }
                } else {
                    if (!cloneableTags[tag]) {
                        return object ? value : {};
                    }
                    result = initCloneByTag(value, tag, isDeep);
                }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack);
            var stacked = stack.get(value);
            if (stacked) {
                return stacked;
            }
            stack.set(value, result);

            if (isSet(value)) {
                value.forEach(function(subValue) {
                    result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                });
            } else if (isMap(value)) {
                value.forEach(function(subValue, key) {
                    result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                });
            }

            var keysFunc = isFull ? (isFlat ? getAllKeysIn : getAllKeys) : (isFlat ? keysIn : keys);

            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key) {
                if (props) {
                    key = subValue;
                    subValue = value[key];
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
        }

        module.exports = baseClone;

        /***/
    }
    ), /* 542 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getNative = __webpack_require__(74);

        var defineProperty = (function() {
            try {
                var func = getNative(Object, 'defineProperty');
                func({}, '', {});
                return func;
            } catch (e) {}
        }());

        module.exports = defineProperty;

        /***/
    }
    ), /* 543 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(153)
          , keys = __webpack_require__(86);

        /**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
        function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
        }

        module.exports = baseAssign;

        /***/
    }
    ), /* 544 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(153)
          , keysIn = __webpack_require__(358);

        /**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
        function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
        }

        module.exports = baseAssignIn;

        /***/
    }
    ), /* 545 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isObject = __webpack_require__(69)
          , isPrototype = __webpack_require__(220)
          , nativeKeysIn = __webpack_require__(546);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
        function baseKeysIn(object) {
            if (!isObject(object)) {
                return nativeKeysIn(object);
            }
            var isProto = isPrototype(object)
              , result = [];

            for (var key in object) {
                if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = baseKeysIn;

        /***/
    }
    ), /* 546 */
    /***/
    (function(module, exports) {

        /**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
        function nativeKeysIn(object) {
            var result = [];
            if (object != null) {
                for (var key in Object(object)) {
                    result.push(key);
                }
            }
            return result;
        }

        module.exports = nativeKeysIn;

        /***/
    }
    ), /* 547 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(module) {
            var root = __webpack_require__(60);

            /** Detect free variable `exports`. */
            var freeExports = true && exports && !exports.nodeType && exports;

            /** Detect free variable `module`. */
            var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

            /** Detect the popular CommonJS extension `module.exports`. */
            var moduleExports = freeModule && freeModule.exports === freeExports;

            /** Built-in value references. */
            var Buffer = moduleExports ? root.Buffer : undefined
              , allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

            /**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
            function cloneBuffer(buffer, isDeep) {
                if (isDeep) {
                    return buffer.slice();
                }
                var length = buffer.length
                  , result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

                buffer.copy(result);
                return result;
            }

            module.exports = cloneBuffer;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(119)(module)))

        /***/
    }
    ), /* 548 */
    /***/
    (function(module, exports) {

        /**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
        function copyArray(source, array) {
            var index = -1
              , length = source.length;

            array || (array = Array(length));
            while (++index < length) {
                array[index] = source[index];
            }
            return array;
        }

        module.exports = copyArray;

        /***/
    }
    ), /* 549 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(153)
          , getSymbols = __webpack_require__(215);

        /**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
        function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
        }

        module.exports = copySymbols;

        /***/
    }
    ), /* 550 */
    /***/
    (function(module, exports, __webpack_require__) {

        var copyObject = __webpack_require__(153)
          , getSymbolsIn = __webpack_require__(359);

        /**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
        function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
        }

        module.exports = copySymbolsIn;

        /***/
    }
    ), /* 551 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseGetAllKeys = __webpack_require__(338)
          , getSymbolsIn = __webpack_require__(359)
          , keysIn = __webpack_require__(358);

        /**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
        function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
        }

        module.exports = getAllKeysIn;

        /***/
    }
    ), /* 552 */
    /***/
    (function(module, exports) {

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
        function initCloneArray(array) {
            var length = array.length
              , result = new array.constructor(length);

            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
                result.index = array.index;
                result.input = array.input;
            }
            return result;
        }

        module.exports = initCloneArray;

        /***/
    }
    ), /* 553 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(225)
          , cloneDataView = __webpack_require__(554)
          , cloneRegExp = __webpack_require__(555)
          , cloneSymbol = __webpack_require__(556)
          , cloneTypedArray = __webpack_require__(557);

        /** `Object#toString` result references. */
        var boolTag = '[object Boolean]'
          , dateTag = '[object Date]'
          , mapTag = '[object Map]'
          , numberTag = '[object Number]'
          , regexpTag = '[object RegExp]'
          , setTag = '[object Set]'
          , stringTag = '[object String]'
          , symbolTag = '[object Symbol]';

        var arrayBufferTag = '[object ArrayBuffer]'
          , dataViewTag = '[object DataView]'
          , float32Tag = '[object Float32Array]'
          , float64Tag = '[object Float64Array]'
          , int8Tag = '[object Int8Array]'
          , int16Tag = '[object Int16Array]'
          , int32Tag = '[object Int32Array]'
          , uint8Tag = '[object Uint8Array]'
          , uint8ClampedTag = '[object Uint8ClampedArray]'
          , uint16Tag = '[object Uint16Array]'
          , uint32Tag = '[object Uint32Array]';

        /**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
        function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch (tag) {
            case arrayBufferTag:
                return cloneArrayBuffer(object);

            case boolTag:
            case dateTag:
                return new Ctor(+object);

            case dataViewTag:
                return cloneDataView(object, isDeep);

            case float32Tag:
            case float64Tag:
            case int8Tag:
            case int16Tag:
            case int32Tag:
            case uint8Tag:
            case uint8ClampedTag:
            case uint16Tag:
            case uint32Tag:
                return cloneTypedArray(object, isDeep);

            case mapTag:
                return new Ctor;

            case numberTag:
            case stringTag:
                return new Ctor(object);

            case regexpTag:
                return cloneRegExp(object);

            case setTag:
                return new Ctor;

            case symbolTag:
                return cloneSymbol(object);
            }
        }

        module.exports = initCloneByTag;

        /***/
    }
    ), /* 554 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(225);

        /**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
        function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);
        }

        module.exports = cloneDataView;

        /***/
    }
    ), /* 555 */
    /***/
    (function(module, exports) {

        /** Used to match `RegExp` flags from their coerced string values. */
        var reFlags = /\w*$/;

        /**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
        function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source,reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
        }

        module.exports = cloneRegExp;

        /***/
    }
    ), /* 556 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Symbol = __webpack_require__(118);

        /** Used to convert symbols to primitives and strings. */
        var symbolProto = Symbol ? Symbol.prototype : undefined
          , symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

        /**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
        function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
        }

        module.exports = cloneSymbol;

        /***/
    }
    ), /* 557 */
    /***/
    (function(module, exports, __webpack_require__) {

        var cloneArrayBuffer = __webpack_require__(225);

        /**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
        function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);
        }

        module.exports = cloneTypedArray;

        /***/
    }
    ), /* 558 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseCreate = __webpack_require__(346)
          , getPrototype = __webpack_require__(223)
          , isPrototype = __webpack_require__(220);

        /**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
        function initCloneObject(object) {
            return (typeof object.constructor == 'function' && !isPrototype(object)) ? baseCreate(getPrototype(object)) : {};
        }

        module.exports = initCloneObject;

        /***/
    }
    ), /* 559 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsMap = __webpack_require__(560)
          , baseUnary = __webpack_require__(218)
          , nodeUtil = __webpack_require__(219);

        /* Node.js helper references. */
        var nodeIsMap = nodeUtil && nodeUtil.isMap;

        /**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

        module.exports = isMap;

        /***/
    }
    ), /* 560 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getTag = __webpack_require__(149)
          , isObjectLike = __webpack_require__(75);

        /** `Object#toString` result references. */
        var mapTag = '[object Map]';

        /**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
        function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
        }

        module.exports = baseIsMap;

        /***/
    }
    ), /* 561 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseIsSet = __webpack_require__(562)
          , baseUnary = __webpack_require__(218)
          , nodeUtil = __webpack_require__(219);

        /* Node.js helper references. */
        var nodeIsSet = nodeUtil && nodeUtil.isSet;

        /**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

        module.exports = isSet;

        /***/
    }
    ), /* 562 */
    /***/
    (function(module, exports, __webpack_require__) {

        var getTag = __webpack_require__(149)
          , isObjectLike = __webpack_require__(75);

        /** `Object#toString` result references. */
        var setTag = '[object Set]';

        /**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
        function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
        }

        module.exports = baseIsSet;

        /***/
    }
    ), /* 563 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        const aria_1 = tslib_1.__importDefault(__webpack_require__(154));

        const FormControl_1 = tslib_1.__importDefault(__webpack_require__(88));

        const Input_1 = tslib_1.__importDefault(__webpack_require__(76));

        const InputLabel_1 = tslib_1.__importDefault(__webpack_require__(89));

        const ListSubheader_1 = tslib_1.__importDefault(__webpack_require__(155));

        const MenuItem_1 = tslib_1.__importDefault(__webpack_require__(90));

        const Select_1 = tslib_1.__importDefault(__webpack_require__(77));

        const Typography_1 = tslib_1.__importDefault(__webpack_require__(36));

        const findLast_1 = tslib_1.__importDefault(__webpack_require__(567));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const selectors_1 = __webpack_require__(41);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(568));

        let isInitialized = false;

        function initialize() {
            if (isInitialized) {
                return;
            }

            isInitialized = true;
        }

        const headerTags = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];
        const allTags = headerTags.concat('A');

        function selectOptions() {
            // const allTags = headerTags.concat(`A > *:not(${config.widgetId}))`);
            const elements = document.querySelectorAll(allTags.map(tag=>'body '.concat(tag)).join(', '));
            const options = [];
            // Iterate nodes

            elements.forEach(element=>{
                // Get ARIA text of element
                const text = aria_1.default.getElementText({
                    element
                }).trim();
                // If header

                if (headerTags.includes(element.tagName)) {
                    options.push({
                        tagName: element.tagName,
                        text,
                        element,
                        links: []
                    });
                } else {
                    options.push({
                        tagName: element.tagName,
                        text,
                        href: element.href,
                        element
                    });
                }
            }
            );
            return options;
        }

        function getOptions() {
            const elements = document.querySelectorAll(allTags.map(tag=>'body '.concat(tag)).join(', '));
            const options = [];
            // Iterate nodes

            elements.forEach(element=>{
                // Get ARIA text of element
                const text = aria_1.default.getElementText({
                    element
                }).trim();
                // If header

                if (headerTags.includes(element.tagName)) {
                    options.push({
                        tagName: element.tagName,
                        text,
                        element,
                        links: []
                    });
                } else {
                    const latestHeader = findLast_1.default(options, option=>headerTags.includes(option.tagName));

                    if (latestHeader) {
                        latestHeader.links.push({
                            tagName: element.tagName,
                            text,
                            href: element.href,
                            element
                        });
                    } else {
                        options.push({
                            tagName: element.tagName,
                            text,
                            href: element.href,
                            element
                        });
                    }
                }
            }
            );
            return options.map((item,index)=>{
                if (headerTags.includes(item.tagName)) {
                    return react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(ListSubheader_1.default, {
                        key: index,
                        "aria-label": `[${item.tagName}]${item.text}`
                    }, item.text), item.links.map((link,linkIndex)=>{
                        // Ensure href exists.
                        if (link.href) {
                            return react_1.default.createElement(MenuItem_1.default, {
                                key: linkIndex,
                                value: link.href
                            }, link.text);
                        }
                    }
                    ));
                } else {
                    // Ensure href exists.
                    if (item.href) {
                        return react_1.default.createElement(MenuItem_1.default, {
                            key: index,
                            value: item.href
                        }, item.text);
                    }
                }
            }
            );
        }

        exports.Component = ({state, actions, id})=>{
            const plugin = new selectors_1.Selectors(state).getPlugin(id);

            const handleOnChange = (event,value)=>{
                try {
                    window.location.href = event.target.value;
                } catch (error) {
                    // Likely CORS failure.
                    utility_1.default.throwError(error);
                }
            }
            ;

            return react_1.default.createElement("div", null, react_1.default.createElement(Typography_1.default, {
                component: 'h2'
            }, plugin.title), react_1.default.createElement(FormControl_1.default, null, react_1.default.createElement(InputLabel_1.default, {
                htmlFor: `${plugin.id}-select-label`
            }, "Page Select"), react_1.default.createElement(Select_1.default, {
                id: `${plugin.id}-select`,
                labelId: `${plugin.id}-select-label`,
                name: 'page-navigation',
                onChange: handleOnChange,
                className: styles_scss_1.default.pageNavigation,
                defaultValue: '',
                input: react_1.default.createElement(Input_1.default, {
                    id: `${plugin.id}-select-label`
                })
            }, selectOptions().map((item,index)=>{
                if (headerTags.includes(item.tagName)) {
                    return react_1.default.createElement(ListSubheader_1.default, {
                        key: index,
                        "aria-label": `[${item.tagName}]${item.text}`
                    }, item.text);
                } else {
                    return react_1.default.createElement(MenuItem_1.default, {
                        key: index,
                        value: item.href
                    }, item.text);
                }
            }
            ))));
        }
        ;

        exports.default = exports.Component;

        /***/
    }
    ), /* 564 */
    /***/
    (function(module, exports, __webpack_require__) {

        var baseForOwn = __webpack_require__(347)
          , createBaseEach = __webpack_require__(565);

        /**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
        var baseEach = createBaseEach(baseForOwn);

        module.exports = baseEach;

        /***/
    }
    ), /* 565 */
    /***/
    (function(module, exports, __webpack_require__) {

        var isArrayLike = __webpack_require__(148);

        /**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
        function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
                if (collection == null) {
                    return collection;
                }
                if (!isArrayLike(collection)) {
                    return eachFunc(collection, iteratee);
                }
                var length = collection.length
                  , index = fromRight ? length : -1
                  , iterable = Object(collection);

                while ((fromRight ? index-- : ++index < length)) {
                    if (iteratee(iterable[index], index, iterable) === false) {
                        break;
                    }
                }
                return collection;
            }
            ;
        }

        module.exports = createBaseEach;

        /***/
    }
    ), /* 566 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".styles-\\[title\\]__wcasg-ada-app-container--2z235{all:unset;background-color:rgba(0,0,0,.7);position:fixed;top:5%;left:0;width:20%;max-height:600px;max-width:350px;min-width:250px;overflow:auto;z-index:999}.styles-\\[title\\]__wcasg-ada-app-container--2z235 *{line-height:1.6;font-family:Arial,Helvetica,sans-serif!important;letter-spacing:-.00278rem;font-size:18px;-webkit-font-smoothing:antialiased}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h1{font-size:24px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h2{font-size:23px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h3{font-size:22px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h4{font-size:21px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h5{font-size:19px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 h6{font-size:18px}.styles-\\[title\\]__wcasg-ada-app-container--2z235 button{cursor:pointer;display:inline-block;line-height:1;font-weight:700;letter-spacing:normal;border:2px solid #535452;background-color:#fff;padding:5px 11px;color:#212121;text-decoration:none}.styles-\\[title\\]__wcasg-ada-app-container--2z235 button:focus,.styles-\\[title\\]__wcasg-ada-app-container--2z235 button:hover{color:hsla(0,0%,100%,.9);background-color:#56c69f;border-color:#373737;box-shadow:inset 0 1px 0 #2e8869}.styles-\\[title\\]__wcasg-ada-app-container--2z235 select{border:1px solid #535452;width:100%}.styles-\\[title\\]__wcasg-ada-app-focused--1bZCO{background-color:#56c69f!important;outline:2px solid rgba(198,83,140,.5)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "wcasg-ada-app-container": "styles-[title]__wcasg-ada-app-container--2z235",
            "wcasg-ada-app-focused": "styles-[title]__wcasg-ada-app-focused--1bZCO"
        };
        module.exports = exports;

        /***/
    }
    ), /* 567 */
    /***/
    (function(module, exports, __webpack_require__) {

        var createFind = __webpack_require__(365)
          , findLastIndex = __webpack_require__(366);

        /**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
        var findLast = createFind(findLastIndex);

        module.exports = findLast;

        /***/
    }
    ), /* 568 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(569);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 569 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-page-navigation-\\[title\\]__pageNavigation--So3nm{min-width:120px}", ""]);
        // Exports
        exports.locals = {
            "pageNavigation": "plugins-page-navigation-[title]__pageNavigation--So3nm"
        };
        module.exports = exports;

        /***/
    }
    ), /* 570 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const core_1 = __webpack_require__(751);

        const radio_1 = tslib_1.__importDefault(__webpack_require__(207));

        const scalable_1 = tslib_1.__importDefault(__webpack_require__(208));

        const toggle_button_1 = tslib_1.__importDefault(__webpack_require__(206));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const modal_1 = tslib_1.__importDefault(__webpack_require__(571));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const selectors_1 = __webpack_require__(41);

        exports.Component = ({state, actions, id})=>{
            const plugin = new selectors_1.Selectors(state).getPlugin(id);
            return react_1.default.createElement("div", {
                className: `${config_1.default.widgetId}-virtual-keyboard`
            }, react_1.default.createElement(core_1.Typography, {
                component: 'h2'
            }, plugin.title), react_1.default.createElement(toggle_button_1.default, {
                plugin: plugin,
                actions: actions
            }), plugin.options.length > 0 && react_1.default.createElement(radio_1.default, {
                data: plugin.options,
                plugin: plugin,
                actions: actions
            }), plugin.scaling && react_1.default.createElement(scalable_1.default, {
                plugin: plugin,
                actions: actions,
                scaling: plugin.scaling
            }), react_1.default.createElement(modal_1.default, {
                isVisible: plugin.enabled
            }));
        }
        ;

        exports.default = exports.Component;

        /***/
    }
    ), /* 571 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const key_1 = __webpack_require__(369);

        const keyboard_1 = tslib_1.__importDefault(__webpack_require__(572));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(228));

        const Modal = ({isVisible})=>react_1.default.createElement("div", {
            className: `${styles_scss_1.default['wcasg-ada-app-keyboard-modal']} ${isVisible ? styles_scss_1.default.visible : styles_scss_1.default.hidden}`
        }, react_1.default.createElement(keyboard_1.default, {
            layout: key_1.KeyboardLayoutENUS
        }));

        exports.default = Modal;

        /***/
    }
    ), /* 572 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const keyComponent_1 = tslib_1.__importDefault(__webpack_require__(573));

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(228));

        const Keyboard = ({layout})=>react_1.default.createElement("div", {
            className: styles_scss_1.default.keyboard
        }, layout.rows.map(row=>{
            return react_1.default.createElement("div", {
                className: styles_scss_1.default['key-row']
            }, row.map(key=>{
                return react_1.default.createElement(keyComponent_1.default, {
                    key: key.toString(),
                    instance: key
                });
            }
            ));
        }
        ));

        exports.default = Keyboard;

        /***/
    }
    ), /* 573 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const dom_1 = tslib_1.__importDefault(__webpack_require__(227));

        const key_1 = __webpack_require__(369);

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(228));

        const KeyComponent = ({instance})=>{
            const buttonClasses = [styles_scss_1.default.key];
            let buttonStyle;

            switch (instance.size) {
            case key_1.KeyboardLayoutKeySize.Normal:
                buttonClasses.push(styles_scss_1.default.Normal);
                break;

            case key_1.KeyboardLayoutKeySize.Large:
                buttonClasses.push(styles_scss_1.default.Large);
                break;

            case key_1.KeyboardLayoutKeySize.XLarge:
                buttonClasses.push(styles_scss_1.default.XXLarge);
                break;

            case key_1.KeyboardLayoutKeySize.XXLarge:
                buttonClasses.push(styles_scss_1.default.XXLarge);
                break;

            default:
                // Number
                buttonStyle = {
                    fontSize: `${instance.size}px`
                };
            }

            return react_1.default.createElement("a", {
                className: buttonClasses.join(' '),
                style: buttonStyle,
                "aria-label": instance.toString(),
                "aria-roledescription": 'button',
                role: 'button',
                onClick: e=>{
                    e.preventDefault();
                    const focusedTextNode = dom_1.default.isFocusedNodeInputField();

                    if (focusedTextNode) {
                        if (instance.action) {
                            // Invoke action and pass element
                            instance.action(focusedTextNode);
                        } else {
                            // Cannot simulate character insertion as if user pressed key, so manually update value.
                            // @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Auto-repeat_handling_prior_to_Gecko_5.0
                            dom_1.default.insertTextIntoInputElement({
                                element: focusedTextNode,
                                value: instance.insertValued ? instance.insertValued : instance.toString()
                            });
                        }
                    }
                    // Find focused element

                    return document.dispatchEvent(new KeyboardEvent('keydown',{
                        key: instance.toString()
                    }));
                }
                ,
                onMouseDown: e=>e.preventDefault()
            }, react_1.default.createElement("span", null, instance.toString()));
        }
        ;

        exports.default = KeyComponent;

        /***/
    }
    ), /* 574 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-virtual-keyboard-\\[title\\]__wcasg-ada-app-keyboard-modal--1NMNu *{all:unset}.plugins-virtual-keyboard-\\[title\\]__wcasg-ada-app-keyboard-modal--1NMNu{background:#959595;border:2px solid #2d2d2d;font:12px sans-serif;flex-wrap:wrap;height:auto;-webkit-box-pack:center;justify-content:center;left:50%;margin:0 auto;position:fixed;bottom:5%;touch-action:manipulation;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);width:700px}.plugins-virtual-keyboard-\\[title\\]__wcasg-ada-app-keyboard-modal--1NMNu,.plugins-virtual-keyboard-\\[title\\]__wcasg-ada-app-keyboard-modal--1NMNu.plugins-virtual-keyboard-\\[title\\]__visible--XrvFw{display:-webkit-box;display:flex}.plugins-virtual-keyboard-\\[title\\]__wcasg-ada-app-keyboard-modal--1NMNu.plugins-virtual-keyboard-\\[title\\]__hidden--3CCk-{display:none}.plugins-virtual-keyboard-\\[title\\]__keyboard--3hFTp{box-shadow:#121212;margin:0 auto;text-align:center;width:620px}.plugins-virtual-keyboard-\\[title\\]__key-row--2aLHs{display:block}a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD{-webkit-box-align:center;align-items:center;background-color:#f2f2f2;border:1px solid #2b2b2b;box-sizing:border-box;cursor:pointer;display:-webkit-inline-box;display:inline-flex;height:36px;-webkit-box-pack:center;justify-content:center;margin:1px;padding:0}a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD,a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD.plugins-virtual-keyboard-\\[title\\]__Normal--2Sj7H{width:36px}a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD.plugins-virtual-keyboard-\\[title\\]__Large--yqj34{width:72px}a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD.plugins-virtual-keyboard-\\[title\\]__XLarge--14S5S{width:108px}a.plugins-virtual-keyboard-\\[title\\]__key--2p_aD.plugins-virtual-keyboard-\\[title\\]__XXLarge--1wD7h{width:144px}.plugins-virtual-keyboard-\\[title\\]__key--2p_aD:hover{background-color:#56c69f!important;outline:2px solid rgba(198,83,140,.5)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "wcasg-ada-app-keyboard-modal": "plugins-virtual-keyboard-[title]__wcasg-ada-app-keyboard-modal--1NMNu",
            "visible": "plugins-virtual-keyboard-[title]__visible--XrvFw",
            "hidden": "plugins-virtual-keyboard-[title]__hidden--3CCk-",
            "keyboard": "plugins-virtual-keyboard-[title]__keyboard--3hFTp",
            "key-row": "plugins-virtual-keyboard-[title]__key-row--2aLHs",
            "key": "plugins-virtual-keyboard-[title]__key--2p_aD",
            "Normal": "plugins-virtual-keyboard-[title]__Normal--2Sj7H",
            "Large": "plugins-virtual-keyboard-[title]__Large--yqj34",
            "XLarge": "plugins-virtual-keyboard-[title]__XLarge--14S5S",
            "XXLarge": "plugins-virtual-keyboard-[title]__XXLarge--1wD7h"
        };
        module.exports = exports;

        /***/
    }
    ), /* 575 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(576);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 576 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".components-widget-\\[title\\]__modal--F0vnV{background-color:hsla(0,0%,100%,.9);box-sizing:content-box;height:100%;margin:8px}.components-widget-\\[title\\]__modal--F0vnV h1{font-size:24px}.components-widget-\\[title\\]__modal--F0vnV h2{font-size:22px}.components-widget-\\[title\\]__modal--F0vnV h3{font-size:20px}.components-widget-\\[title\\]__modal--F0vnV .components-widget-\\[title\\]__modalContainer--aB2FB{background:inherit}", ""]);
        // Exports
        exports.locals = {
            "modal": "components-widget-[title]__modal--F0vnV",
            "modalContainer": "components-widget-[title]__modalContainer--aB2FB"
        };
        module.exports = exports;

        /***/
    }
    ), /* 577 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const InputLabel_1 = tslib_1.__importDefault(__webpack_require__(89));

        const MenuItem_1 = tslib_1.__importDefault(__webpack_require__(90));

        const Select_1 = tslib_1.__importDefault(__webpack_require__(77));

        const Slider_1 = tslib_1.__importDefault(__webpack_require__(156));

        const Typography_1 = tslib_1.__importDefault(__webpack_require__(36));

        const radio_1 = tslib_1.__importDefault(__webpack_require__(207));

        const scalable_1 = tslib_1.__importDefault(__webpack_require__(208));

        const toggle_button_1 = tslib_1.__importDefault(__webpack_require__(206));

        const react_1 = tslib_1.__importDefault(__webpack_require__(0));

        const selectors_1 = __webpack_require__(41);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(578));

        exports.Component = ({state, actions, id})=>{
            const plugin = new selectors_1.Selectors(state).getPlugin(id);
            const voices = new selectors_1.Selectors(state).getTextToSpeechVoices();
            const activeVoice = new selectors_1.Selectors(state).getActiveTextToSpeechVoice();
            const audioConfig = new selectors_1.Selectors(state).getTextToSpeechAudioConfig();

            const handleVoiceChange = event=>{
                const voice = new selectors_1.Selectors(state).getTextToSpeechVoice(event.target.value);

                if (voice) {
                    actions.setActiveTextToSpeechVoice(voice);
                }
            }
            ;

            const handleRateChange = (event,value)=>{
                if (Array.isArray(value)) {
                    actions.setTextToSpeechSpeakingRate(value[0]);
                } else {
                    actions.setTextToSpeechSpeakingRate(value);
                }
            }
            ;

            const handleVolumeChange = (event,value)=>{
                if (Array.isArray(value)) {
                    actions.setTextToSpeechVolumeGainDb(value[0]);
                } else {
                    actions.setTextToSpeechVolumeGainDb(value);
                }
            }
            ;

            const handlePitchChange = (event,value)=>{
                if (Array.isArray(value)) {
                    actions.setTextToSpeechPitch(value[0]);
                } else {
                    actions.setTextToSpeechPitch(value);
                }
            }
            ;

            return react_1.default.createElement("div", null, react_1.default.createElement(Typography_1.default, {
                component: 'h2'
            }, plugin.title), react_1.default.createElement(toggle_button_1.default, {
                plugin: plugin,
                actions: actions
            }), plugin.options.length > 0 && react_1.default.createElement(radio_1.default, {
                data: plugin.options,
                plugin: plugin,
                actions: actions
            }), voices && voices.length > 0 && react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement(InputLabel_1.default, {
                id: `${plugin.id}-voice-label`
            }, "Voice"), react_1.default.createElement(Select_1.default, {
                id: `${plugin.id}-voice`,
                labelId: `${plugin.id}-voice-label`,
                value: activeVoice === null || activeVoice === void 0 ? void 0 : activeVoice.name,
                onChange: handleVoiceChange
            }, voices.map(voice=>react_1.default.createElement(MenuItem_1.default, {
                value: voice.name
            }, voice.name)))), react_1.default.createElement(Typography_1.default, {
                id: `${plugin.id}-pitch-label`,
                gutterBottom: true
            }, "Pitch"), react_1.default.createElement(Slider_1.default, {
                id: `${plugin.id}-pitch`,
                value: audioConfig.pitch,
                defaultValue: audioConfig.pitch,
                valueLabelDisplay: 'auto',
                step: 1,
                marks: true,
                min: -20,
                max: 20,
                onChange: handlePitchChange,
                className: styles_scss_1.default.slider
            }), react_1.default.createElement(Typography_1.default, {
                id: `${plugin.id}-rate-label`,
                gutterBottom: true
            }, "Rate"), react_1.default.createElement(Slider_1.default, {
                id: `${plugin.id}-rate`,
                value: audioConfig.speakingRate,
                defaultValue: audioConfig.speakingRate,
                valueLabelDisplay: 'auto',
                step: 0.25,
                marks: true,
                min: 0.25,
                max: 4,
                onChange: handleRateChange,
                className: styles_scss_1.default.slider
            }), react_1.default.createElement(Typography_1.default, {
                id: `${plugin.id}-volume-label`,
                gutterBottom: true
            }, "Volume"), react_1.default.createElement(Slider_1.default, {
                id: `${plugin.id}-volume`,
                value: audioConfig.volumeGainDb,
                defaultValue: audioConfig.volumeGainDb,
                valueLabelDisplay: 'auto',
                step: 1,
                marks: true,
                min: -96,
                max: 16,
                onChange: handleVolumeChange,
                className: styles_scss_1.default.slider
            }), plugin.scaling && react_1.default.createElement(scalable_1.default, {
                plugin: plugin,
                actions: actions,
                scaling: plugin.scaling
            }));
        }
        ;

        exports.default = exports.Component;

        /***/
    }
    ), /* 578 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(579);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 579 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-text-to-speech-\\[title\\]__slider--2GP1N{color:#fff}.plugins-text-to-speech-\\[title\\]__slider--2GP1N span{background-color:#3f51b5}", ""]);
        // Exports
        exports.locals = {
            "slider": "plugins-text-to-speech-[title]__slider--2GP1N"
        };
        module.exports = exports;

        /***/
    }
    ), /* 580 */
    /***/
    (function(module, exports) {

        module.exports = function(originalModule) {
            if (!originalModule.webpackPolyfill) {
                var module = Object.create(originalModule);
                // module.parent = undefined by default
                if (!module.children)
                    module.children = [];
                Object.defineProperty(module, "loaded", {
                    enumerable: true,
                    get: function() {
                        return module.l;
                    }
                });
                Object.defineProperty(module, "id", {
                    enumerable: true,
                    get: function() {
                        return module.i;
                    }
                });
                Object.defineProperty(module, "exports", {
                    enumerable: true
                });
                module.webpackPolyfill = 1;
            }
            return module;
        }
        ;

        /***/
    }
    ), /* 581 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const store_1 = __webpack_require__(372);

        exports.Connector = store_1.createConnector({
            mapState: selectors=>selectors.state,
            mapActions: (actions,props)=>({
                decrement(id) {
                    actions.decrement({
                        id
                    });
                },

                disable(id) {
                    actions.disable({
                        id
                    });
                },

                disableKeyboard() {
                    actions.disableKeyboard();
                },

                enable(id) {
                    actions.enable({
                        id
                    });
                },

                enableKeyboard() {
                    actions.enableKeyboard();
                },

                focusNode(node) {
                    actions.focusNode({
                        node
                    });
                },

                increment(id) {
                    actions.increment({
                        id
                    });
                },

                keyDown(key) {
                    actions.keyDown({
                        key
                    });
                },

                keyUp(key) {
                    actions.keyUp({
                        key
                    });
                },

                reset(newState) {
                    actions.reset({
                        newState
                    });
                },

                selectOption(id, selectId) {
                    actions.selectOption({
                        id,
                        selectId
                    });
                },

                setActiveTextToSpeechVoice(voice) {
                    actions.setActiveTextToSpeechVoice({
                        voice
                    });
                },

                setTextToSpeechPitch(value) {
                    actions.setTextToSpeechPitch({
                        value
                    });
                },

                setTextToSpeechSpeakingRate(value) {
                    actions.setTextToSpeechSpeakingRate({
                        value
                    });
                },

                setTextToSpeechVolumeGainDb(value) {
                    actions.setTextToSpeechVolumeGainDb({
                        value
                    });
                },

                setTextToSpeechVoices(voices) {
                    actions.setTextToSpeechVoices({
                        voices
                    });
                }

            })
        });

        /***/
    }
    ), /* 582 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */
        (function(process) {
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Immer", function() {
                return Immer;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "applyPatches", function() {
                return applyPatches$1;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "castDraft", function() {
                return castDraft;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "castImmutable", function() {
                return castImmutable;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "createDraft", function() {
                return createDraft;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "finishDraft", function() {
                return finishDraft;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "immerable", function() {
                return DRAFTABLE;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "isDraft", function() {
                return isDraft;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "isDraftable", function() {
                return isDraftable;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "nothing", function() {
                return NOTHING;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "original", function() {
                return original;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "produce", function() {
                return produce;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "produceWithPatches", function() {
                return produceWithPatches;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "setAutoFreeze", function() {
                return setAutoFreeze;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "setUseProxies", function() {
                return setUseProxies;
            });
            // Should be no imports here!
            var _a;
            // SOme things that should be evaluated before all else...

            var hasSymbol = typeof Symbol !== "undefined";
            var hasMap = typeof Map !== "undefined";
            var hasSet = typeof Set !== "undefined";
            /**
 * The sentinel value returned by producers to replace the draft with undefined.
 */

            var NOTHING = hasSymbol ? Symbol("immer-nothing") : (_a = {},
            _a["immer-nothing"] = true,
            _a);
            /**
 * To let Immer treat your class instances as plain immutable objects
 * (albeit with a custom prototype), you must define either an instance property
 * or a static property on each of your custom classes.
 *
 * Otherwise, your class instance will never be drafted, which means it won't be
 * safe to mutate in a produce callback.
 */

            var DRAFTABLE = hasSymbol ? Symbol("immer-draftable") : "__$immer_draftable";
            var DRAFT_STATE = hasSymbol ? Symbol("immer-state") : "__$immer_state";
            var iteratorSymbol = hasSymbol ? Symbol.iterator : "@@iterator";

            /* istanbul ignore next */
            var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(d, b) {
                    d.__proto__ = b;
                }
                || function(d, b) {
                    for (var p in b) {
                        if (b.hasOwnProperty(p)) {
                            d[p] = b[p];
                        }
                    }
                }
                ;

                return extendStatics(d, b);
            };
            // Ugly hack to resolve #502 and inherit built in Map / Set

            function __extends(d, b) {
                extendStatics(d, b);

                function __() {
                    this.constructor = d;
                }

                d.prototype = (// @ts-ignore
                __.prototype = b.prototype,
                new __());
            }

            var Archtype;

            (function(Archtype) {
                Archtype[Archtype["Object"] = 0] = "Object";
                Archtype[Archtype["Array"] = 1] = "Array";
                Archtype[Archtype["Map"] = 2] = "Map";
                Archtype[Archtype["Set"] = 3] = "Set";
            }
            )(Archtype || (Archtype = {}));

            var ProxyType;

            (function(ProxyType) {
                ProxyType[ProxyType["ProxyObject"] = 0] = "ProxyObject";
                ProxyType[ProxyType["ProxyArray"] = 1] = "ProxyArray";
                ProxyType[ProxyType["ES5Object"] = 2] = "ES5Object";
                ProxyType[ProxyType["ES5Array"] = 3] = "ES5Array";
                ProxyType[ProxyType["Map"] = 4] = "Map";
                ProxyType[ProxyType["Set"] = 5] = "Set";
            }
            )(ProxyType || (ProxyType = {}));

            /** Returns true if the given value is an Immer draft */

            function isDraft(value) {
                return !!value && !!value[DRAFT_STATE];
            }
            /** Returns true if the given value can be drafted by Immer */

            function isDraftable(value) {
                if (!value) {
                    return false;
                }
                return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE] || isMap(value) || isSet(value);
            }
            function isPlainObject(value) {
                if (!value || typeof value !== "object") {
                    return false;
                }
                var proto = Object.getPrototypeOf(value);
                return !proto || proto === Object.prototype;
            }
            function original(value) {
                if (value && value[DRAFT_STATE]) {
                    return value[DRAFT_STATE].base;
                }
                // otherwise return undefined

            }
            var ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function(obj) {
                return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));
            }
            : /* istanbul ignore next */
            Object.getOwnPropertyNames;
            function each(obj, iter) {
                if (getArchtype(obj) === Archtype.Object) {
                    ownKeys(obj).forEach(function(key) {
                        return iter(key, obj[key], obj);
                    });
                } else {
                    obj.forEach(function(entry, index) {
                        return iter(index, entry, obj);
                    });
                }
            }
            function isEnumerable(base, prop) {
                var desc = Object.getOwnPropertyDescriptor(base, prop);
                return desc && desc.enumerable ? true : false;
            }
            function getArchtype(thing) {
                /* istanbul ignore next */
                if (!thing) {
                    die();
                }

                if (thing[DRAFT_STATE]) {
                    switch (thing[DRAFT_STATE].type) {
                    case ProxyType.ES5Object:
                    case ProxyType.ProxyObject:
                        return Archtype.Object;

                    case ProxyType.ES5Array:
                    case ProxyType.ProxyArray:
                        return Archtype.Array;

                    case ProxyType.Map:
                        return Archtype.Map;

                    case ProxyType.Set:
                        return Archtype.Set;
                    }
                }

                return Array.isArray(thing) ? Archtype.Array : isMap(thing) ? Archtype.Map : isSet(thing) ? Archtype.Set : Archtype.Object;
            }
            function has(thing, prop) {
                return getArchtype(thing) === Archtype.Map ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);
            }
            function get(thing, prop) {
                // @ts-ignore
                return getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop];
            }
            function set(thing, propOrOldValue, value) {
                switch (getArchtype(thing)) {
                case Archtype.Map:
                    thing.set(propOrOldValue, value);
                    break;

                case Archtype.Set:
                    thing.delete(propOrOldValue);
                    thing.add(value);
                    break;

                default:
                    thing[propOrOldValue] = value;
                }
            }
            function is(x, y) {
                // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js
                if (x === y) {
                    return x !== 0 || 1 / x === 1 / y;
                } else {
                    return x !== x && y !== y;
                }
            }
            function isMap(target) {
                return hasMap && target instanceof Map;
            }
            function isSet(target) {
                return hasSet && target instanceof Set;
            }
            function latest(state) {
                return state.copy || state.base;
            }
            function shallowCopy(base, invokeGetters) {
                if (invokeGetters === void 0) {
                    invokeGetters = false;
                }

                if (Array.isArray(base)) {
                    return base.slice();
                }
                var clone = Object.create(Object.getPrototypeOf(base));
                ownKeys(base).forEach(function(key) {
                    if (key === DRAFT_STATE) {
                        return;
                        // Never copy over draft state.
                    }

                    var desc = Object.getOwnPropertyDescriptor(base, key);
                    var value = desc.value;

                    if (desc.get) {
                        if (!invokeGetters) {
                            throw new Error("Immer drafts cannot have computed properties");
                        }

                        value = desc.get.call(base);
                    }

                    if (desc.enumerable) {
                        clone[key] = value;
                    } else {
                        Object.defineProperty(clone, key, {
                            value: value,
                            writable: true,
                            configurable: true
                        });
                    }
                });
                return clone;
            }
            function freeze(obj, deep) {
                if (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) {
                    return;
                }
                var type = getArchtype(obj);

                if (type === Archtype.Set) {
                    obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;
                } else if (type === Archtype.Map) {
                    obj.set = obj.clear = obj.delete = dontMutateFrozenCollections;
                }

                Object.freeze(obj);
                if (deep) {
                    each(obj, function(_, value) {
                        return freeze(value, true);
                    });
                }
            }

            function dontMutateFrozenCollections() {
                throw new Error("This object has been frozen and should not be mutated");
            }

            function createHiddenProperty(target, prop, value) {
                Object.defineProperty(target, prop, {
                    value: value,
                    enumerable: false,
                    writable: true
                });
            }
            /* istanbul ignore next */

            function die() {
                throw new Error("Illegal state, please file a bug");
            }

            /** Each scope represents a `produce` call. */

            var ImmerScope = /** @class */
            function() {
                function ImmerScope(parent, immer) {
                    this.drafts = [];
                    this.parent = parent;
                    this.immer = immer;
                    // Whenever the modified draft contains a draft from another scope, we
                    // need to prevent auto-freezing so the unowned draft can be finalized.

                    this.canAutoFreeze = true;
                }

                ImmerScope.prototype.usePatches = function(patchListener) {
                    if (patchListener) {
                        this.patches = [];
                        this.inversePatches = [];
                        this.patchListener = patchListener;
                    }
                }
                ;

                ImmerScope.prototype.revoke = function() {
                    this.leave();
                    this.drafts.forEach(revoke);
                    // @ts-ignore

                    this.drafts = null;
                }
                ;

                ImmerScope.prototype.leave = function() {
                    if (this === ImmerScope.current) {
                        ImmerScope.current = this.parent;
                    }
                }
                ;

                ImmerScope.enter = function(immer) {
                    var scope = new ImmerScope(ImmerScope.current,immer);
                    ImmerScope.current = scope;
                    return scope;
                }
                ;

                return ImmerScope;
            }();

            function revoke(draft) {
                var state = draft[DRAFT_STATE];
                if (state.type === ProxyType.ProxyObject || state.type === ProxyType.ProxyArray) {
                    state.revoke();
                } else {
                    state.revoked = true;
                }
            }

            function processResult(immer, result, scope) {
                var baseDraft = scope.drafts[0];
                var isReplaced = result !== undefined && result !== baseDraft;
                immer.willFinalize(scope, result, isReplaced);

                if (isReplaced) {
                    if (baseDraft[DRAFT_STATE].modified) {
                        scope.revoke();
                        throw new Error("An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.");
                        // prettier-ignore
                    }

                    if (isDraftable(result)) {
                        // Finalize the result in case it contains (or is) a subset of the draft.
                        result = finalize(immer, result, scope);
                        maybeFreeze(immer, result);
                    }

                    if (scope.patches) {
                        scope.patches.push({
                            op: "replace",
                            path: [],
                            value: result
                        });
                        scope.inversePatches.push({
                            op: "replace",
                            path: [],
                            value: baseDraft[DRAFT_STATE].base
                        });
                    }
                } else {
                    // Finalize the base draft.
                    result = finalize(immer, baseDraft, scope, []);
                }

                scope.revoke();

                if (scope.patches) {
                    scope.patchListener(scope.patches, scope.inversePatches);
                }

                return result !== NOTHING ? result : undefined;
            }

            function finalize(immer, draft, scope, path) {
                var state = draft[DRAFT_STATE];

                if (!state) {
                    if (Object.isFrozen(draft)) {
                        return draft;
                    }
                    return finalizeTree(immer, draft, scope);
                }
                // Never finalize drafts owned by another scope.

                if (state.scope !== scope) {
                    return draft;
                }

                if (!state.modified) {
                    maybeFreeze(immer, state.base, true);
                    return state.base;
                }

                if (!state.finalized) {
                    state.finalized = true;
                    finalizeTree(immer, state.draft, scope, path);
                    // We cannot really delete anything inside of a Set. We can only replace the whole Set.

                    if (immer.onDelete && state.type !== ProxyType.Set) {
                        // The `assigned` object is unreliable with ES5 drafts.
                        if (immer.useProxies) {
                            var assigned = state.assigned;
                            each(assigned, function(prop, exists) {
                                if (!exists) {
                                    immer.onDelete(state, prop);
                                }
                            });
                        } else {
                            var base = state.base
                              , copy_1 = state.copy;
                            each(base, function(prop) {
                                if (!has(copy_1, prop)) {
                                    immer.onDelete(state, prop);
                                }
                            });
                        }
                    }

                    if (immer.onCopy) {
                        immer.onCopy(state);
                    }
                    // At this point, all descendants of `state.copy` have been finalized,
                    // so we can be sure that `scope.canAutoFreeze` is accurate.

                    if (immer.autoFreeze && scope.canAutoFreeze) {
                        freeze(state.copy, false);
                    }

                    if (path && scope.patches) {
                        generatePatches(state, path, scope.patches, scope.inversePatches);
                    }
                }

                return state.copy;
            }

            function finalizeTree(immer, root, scope, rootPath) {
                var state = root[DRAFT_STATE];

                if (state) {
                    if (state.type === ProxyType.ES5Object || state.type === ProxyType.ES5Array) {
                        // Create the final copy, with added keys and without deleted keys.
                        state.copy = shallowCopy(state.draft, true);
                    }

                    root = state.copy;
                }

                each(root, function(key, value) {
                    return finalizeProperty(immer, scope, root, state, root, key, value, rootPath);
                });
                return root;
            }

            function finalizeProperty(immer, scope, root, rootState, parentValue, prop, childValue, rootPath) {
                if (childValue === parentValue) {
                    throw Error("Immer forbids circular references");
                }
                // In the `finalizeTree` method, only the `root` object may be a draft.

                var isDraftProp = !!rootState && parentValue === root;
                var isSetMember = isSet(parentValue);

                if (isDraft(childValue)) {
                    var path = rootPath && isDraftProp && !isSetMember && // Set objects are atomic since they have no keys.
                    !has(rootState.assigned, prop)// Skip deep patches for assigned keys.
                    ? rootPath.concat(prop) : undefined;
                    // Drafts owned by `scope` are finalized here.

                    childValue = finalize(immer, childValue, scope, path);
                    set(parentValue, prop, childValue);
                    // Drafts from another scope must prevent auto-freezing.

                    if (isDraft(childValue)) {
                        scope.canAutoFreeze = false;
                    }
                }// Unchanged draft properties are ignored.
                else if (isDraftProp && is(childValue, get(rootState.base, prop))) {
                    return;
                }// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.
                // TODO: the recursion over here looks weird, shouldn't non-draft stuff have it's own recursion?
                // especially the passing on of root and rootState doesn't make sense...
                else if (isDraftable(childValue) && !Object.isFrozen(childValue)) {
                    each(childValue, function(key, grandChild) {
                        return finalizeProperty(immer, scope, root, rootState, childValue, key, grandChild, rootPath);
                    });
                    maybeFreeze(immer, childValue);
                }

                if (isDraftProp && immer.onAssign && !isSetMember) {
                    immer.onAssign(rootState, prop, childValue);
                }
            }

            function maybeFreeze(immer, value, deep) {
                if (deep === void 0) {
                    deep = false;
                }

                if (immer.autoFreeze && !isDraft(value)) {
                    freeze(value, deep);
                }
            }

            /**
 * Returns a new draft of the `base` object.
 *
 * The second argument is the parent draft-state (used internally).
 */

            function createProxy(base, parent) {
                var isArray = Array.isArray(base);
                var state = {
                    type: isArray ? ProxyType.ProxyArray : ProxyType.ProxyObject,
                    // Track which produce call this is associated with.
                    scope: parent ? parent.scope : ImmerScope.current,
                    // True for both shallow and deep changes.
                    modified: false,
                    // Used during finalization.
                    finalized: false,
                    // Track which properties have been assigned (true) or deleted (false).
                    assigned: {},
                    // The parent draft state.
                    parent: parent,
                    // The base state.
                    base: base,
                    // The base proxy.
                    draft: null,
                    // Any property proxies.
                    drafts: {},
                    // The base copy with any updated values.
                    copy: null,
                    // Called by the `produce` function.
                    revoke: null,
                    isManual: false
                };
                // the traps must target something, a bit like the 'real' base.
                // but also, we need to be able to determine from the target what the relevant state is
                // (to avoid creating traps per instance to capture the state in closure,
                // and to avoid creating weird hidden properties as well)
                // So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)
                // Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb

                var target = state;
                var traps = objectTraps;

                if (isArray) {
                    target = [state];
                    traps = arrayTraps;
                }
                // TODO: optimization: might be faster, cheaper if we created a non-revocable proxy
                // and administrate revoking ourselves

                var _a = Proxy.revocable(target, traps)
                  , revoke = _a.revoke
                  , proxy = _a.proxy;

                state.draft = proxy;
                state.revoke = revoke;
                return proxy;
            }
            /**
 * Object drafts
 */

            var objectTraps = {
                get: function(state, prop) {
                    if (prop === DRAFT_STATE) {
                        return state;
                    }
                    var drafts = state.drafts;
                    // Check for existing draft in unmodified state.

                    if (!state.modified && has(drafts, prop)) {
                        return drafts[prop];
                    }

                    var value = latest(state)[prop];

                    if (state.finalized || !isDraftable(value)) {
                        return value;
                    }
                    // Check for existing draft in modified state.

                    if (state.modified) {
                        // Assigned values are never drafted. This catches any drafts we created, too.
                        if (value !== peek(state.base, prop)) {
                            return value;
                        }
                        // Store drafts on the copy (when one exists).
                        // @ts-ignore

                        drafts = state.copy;
                    }

                    return drafts[prop] = state.scope.immer.createProxy(value, state);
                },
                has: function(state, prop) {
                    return prop in latest(state);
                },
                ownKeys: function(state) {
                    return Reflect.ownKeys(latest(state));
                },
                set: function(state, prop /* strictly not, but helps TS */
                , value) {
                    if (!state.modified) {
                        var baseValue = peek(state.base, prop);
                        // Optimize based on value's truthiness. Truthy values are guaranteed to
                        // never be undefined, so we can avoid the `in` operator. Lastly, truthy
                        // values may be drafts, but falsy values are never drafts.

                        var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;
                        if (isUnchanged) {
                            return true;
                        }
                        prepareCopy(state);
                        markChanged(state);
                    }

                    state.assigned[prop] = true;
                    // @ts-ignore

                    state.copy[prop] = value;
                    return true;
                },
                deleteProperty: function(state, prop) {
                    // The `undefined` check is a fast path for pre-existing keys.
                    if (peek(state.base, prop) !== undefined || prop in state.base) {
                        state.assigned[prop] = false;
                        prepareCopy(state);
                        markChanged(state);
                    } else if (state.assigned[prop]) {
                        // if an originally not assigned property was deleted
                        delete state.assigned[prop];
                    }
                    // @ts-ignore

                    if (state.copy) {
                        delete state.copy[prop];
                    }
                    return true;
                },
                // Note: We never coerce `desc.value` into an Immer draft, because we can't make
                // the same guarantee in ES5 mode.
                getOwnPropertyDescriptor: function(state, prop) {
                    var owner = latest(state);
                    var desc = Reflect.getOwnPropertyDescriptor(owner, prop);

                    if (desc) {
                        desc.writable = true;
                        desc.configurable = state.type !== ProxyType.ProxyArray || prop !== "length";
                    }

                    return desc;
                },
                defineProperty: function() {
                    throw new Error("Object.defineProperty() cannot be used on an Immer draft");
                    // prettier-ignore
                },
                getPrototypeOf: function(state) {
                    return Object.getPrototypeOf(state.base);
                },
                setPrototypeOf: function() {
                    throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft");
                    // prettier-ignore
                }
            };
            /**
 * Array drafts
 */

            var arrayTraps = {};
            each(objectTraps, function(key, fn) {
                // @ts-ignore
                arrayTraps[key] = function() {
                    arguments[0] = arguments[0][0];
                    return fn.apply(this, arguments);
                }
                ;
            });

            arrayTraps.deleteProperty = function(state, prop) {
                if (isNaN(parseInt(prop))) {
                    throw new Error("Immer only supports deleting array indices");
                    // prettier-ignore
                }

                return objectTraps.deleteProperty.call(this, state[0], prop);
            }
            ;

            arrayTraps.set = function(state, prop, value) {
                if (prop !== "length" && isNaN(parseInt(prop))) {
                    throw new Error("Immer only supports setting array indices and the 'length' property");
                    // prettier-ignore
                }

                return objectTraps.set.call(this, state[0], prop, value, state[0]);
            }
            ;
            /**
 * Map drafts
 */
            // Access a property without creating an Immer draft.

            function peek(draft, prop) {
                var state = draft[DRAFT_STATE];
                var desc = Reflect.getOwnPropertyDescriptor(state ? latest(state) : draft, prop);
                return desc && desc.value;
            }

            function markChanged(state) {
                if (!state.modified) {
                    state.modified = true;

                    if (state.type === ProxyType.ProxyObject || state.type === ProxyType.ProxyArray) {
                        var copy_1 = state.copy = shallowCopy(state.base);
                        each(state.drafts, function(key, value) {
                            // @ts-ignore
                            copy_1[key] = value;
                        });
                        state.drafts = undefined;
                    }

                    if (state.parent) {
                        markChanged(state.parent);
                    }
                }
            }

            function prepareCopy(state) {
                if (!state.copy) {
                    state.copy = shallowCopy(state.base);
                }
            }

            function willFinalizeES5(scope, result, isReplaced) {
                scope.drafts.forEach(function(draft) {
                    draft[DRAFT_STATE].finalizing = true;
                });

                if (!isReplaced) {
                    if (scope.patches) {
                        markChangesRecursively(scope.drafts[0]);
                    }
                    // This is faster when we don't care about which attributes changed.

                    markChangesSweep(scope.drafts);
                }// When a child draft is returned, look for changes.
                else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {
                    markChangesSweep(scope.drafts);
                }
            }
            function createES5Proxy(base, parent) {
                var isArray = Array.isArray(base);
                var draft = clonePotentialDraft(base);
                each(draft, function(prop) {
                    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));
                });
                var state = {
                    type: isArray ? ProxyType.ES5Array : ProxyType.ES5Object,
                    scope: parent ? parent.scope : ImmerScope.current,
                    modified: false,
                    finalizing: false,
                    finalized: false,
                    assigned: {},
                    parent: parent,
                    base: base,
                    draft: draft,
                    copy: null,
                    revoked: false,
                    isManual: false
                };
                createHiddenProperty(draft, DRAFT_STATE, state);
                return draft;
            }
            // Access a property without creating an Immer draft.

            function peek$1(draft, prop) {
                var state = draft[DRAFT_STATE];

                if (state && !state.finalizing) {
                    state.finalizing = true;
                    var value = draft[prop];
                    state.finalizing = false;
                    return value;
                }

                return draft[prop];
            }

            function get$1(state, prop) {
                assertUnrevoked(state);
                var value = peek$1(latest(state), prop);
                if (state.finalizing) {
                    return value;
                }
                // Create a draft if the value is unmodified.

                if (value === peek$1(state.base, prop) && isDraftable(value)) {
                    prepareCopy$1(state);
                    // @ts-ignore

                    return state.copy[prop] = state.scope.immer.createProxy(value, state);
                }

                return value;
            }

            function set$1(state, prop, value) {
                assertUnrevoked(state);
                state.assigned[prop] = true;

                if (!state.modified) {
                    if (is(value, peek$1(latest(state), prop))) {
                        return;
                    }
                    markChangedES5(state);
                    prepareCopy$1(state);
                }
                // @ts-ignore

                state.copy[prop] = value;
            }

            function markChangedES5(state) {
                if (!state.modified) {
                    state.modified = true;
                    if (state.parent) {
                        markChangedES5(state.parent);
                    }
                }
            }

            function prepareCopy$1(state) {
                if (!state.copy) {
                    state.copy = clonePotentialDraft(state.base);
                }
            }

            function clonePotentialDraft(base) {
                var state = base && base[DRAFT_STATE];

                if (state) {
                    state.finalizing = true;
                    var draft = shallowCopy(state.draft, true);
                    state.finalizing = false;
                    return draft;
                }

                return shallowCopy(base);
            }
            // property descriptors are recycled to make sure we don't create a get and set closure per property,
            // but share them all instead

            var descriptors = {};

            function proxyProperty(draft, prop, enumerable) {
                var desc = descriptors[prop];

                if (desc) {
                    desc.enumerable = enumerable;
                } else {
                    descriptors[prop] = desc = {
                        configurable: true,
                        enumerable: enumerable,
                        get: function() {
                            return get$1(this[DRAFT_STATE], prop);
                        },
                        set: function(value) {
                            set$1(this[DRAFT_STATE], prop, value);
                        }
                    };
                }

                Object.defineProperty(draft, prop, desc);
            }

            function assertUnrevoked(state) {
                if (state.revoked === true) {
                    throw new Error("Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + JSON.stringify(latest(state)));
                }
            }
            // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.

            function markChangesSweep(drafts) {
                // The natural order of drafts in the `scope` array is based on when they
                // were accessed. By processing drafts in reverse natural order, we have a
                // better chance of processing leaf nodes first. When a leaf node is known to
                // have changed, we can avoid any traversal of its ancestor nodes.
                for (var i = drafts.length - 1; i >= 0; i--) {
                    var state = drafts[i][DRAFT_STATE];

                    if (!state.modified) {
                        switch (state.type) {
                        case ProxyType.ES5Array:
                            if (hasArrayChanges(state)) {
                                markChangedES5(state);
                            }
                            break;

                        case ProxyType.ES5Object:
                            if (hasObjectChanges(state)) {
                                markChangedES5(state);
                            }
                            break;
                        }
                    }
                }
            }

            function markChangesRecursively(object) {
                if (!object || typeof object !== "object") {
                    return;
                }
                var state = object[DRAFT_STATE];
                if (!state) {
                    return;
                }
                var base = state.base
                  , draft = state.draft
                  , assigned = state.assigned
                  , type = state.type;

                if (type === ProxyType.ES5Object) {
                    // Look for added keys.
                    // TODO: looks quite duplicate to hasObjectChanges,
                    // probably there is a faster way to detect changes, as sweep + recurse seems to do some
                    // unnecessary work.
                    // also: probably we can store the information we detect here, to speed up tree finalization!
                    each(draft, function(key) {
                        if (key === DRAFT_STATE) {
                            return;
                        }
                        // The `undefined` check is a fast path for pre-existing keys.

                        if (base[key] === undefined && !has(base, key)) {
                            assigned[key] = true;
                            markChangedES5(state);
                        } else if (!assigned[key]) {
                            // Only untouched properties trigger recursion.
                            markChangesRecursively(draft[key]);
                        }
                    });
                    // Look for removed keys.

                    each(base, function(key) {
                        // The `undefined` check is a fast path for pre-existing keys.
                        if (draft[key] === undefined && !has(draft, key)) {
                            assigned[key] = false;
                            markChangedES5(state);
                        }
                    });
                } else if (type === ProxyType.ES5Array && hasArrayChanges(state)) {
                    markChangedES5(state);
                    assigned.length = true;

                    if (draft.length < base.length) {
                        for (var i = draft.length; i < base.length; i++) {
                            assigned[i] = false;
                        }
                    } else {
                        for (var i = base.length; i < draft.length; i++) {
                            assigned[i] = true;
                        }
                    }

                    for (var i = 0; i < draft.length; i++) {
                        // Only untouched indices trigger recursion.
                        if (assigned[i] === undefined) {
                            markChangesRecursively(draft[i]);
                        }
                    }
                }
            }

            function hasObjectChanges(state) {
                var base = state.base
                  , draft = state.draft;
                // Search for added keys and changed keys. Start at the back, because
                // non-numeric keys are ordered by time of definition on the object.

                var keys = Object.keys(draft);

                for (var i = keys.length - 1; i >= 0; i--) {
                    var key = keys[i];
                    var baseValue = base[key];
                    // The `undefined` check is a fast path for pre-existing keys.

                    if (baseValue === undefined && !has(base, key)) {
                        return true;
                    }// Once a base key is deleted, future changes go undetected, because its
                    // descriptor is erased. This branch detects any missed changes.
                    else {
                        var value = draft[key];
                        var state_1 = value && value[DRAFT_STATE];

                        if (state_1 ? state_1.base !== baseValue : !is(value, baseValue)) {
                            return true;
                        }
                    }
                }
                // At this point, no keys were added or changed.
                // Compare key count to determine if keys were deleted.

                return keys.length !== Object.keys(base).length;
            }

            function hasArrayChanges(state) {
                var draft = state.draft;
                if (draft.length !== state.base.length) {
                    return true;
                }
                // See #116
                // If we first shorten the length, our array interceptors will be removed.
                // If after that new items are added, result in the same original length,
                // those last items will have no intercepting property.
                // So if there is no own descriptor on the last position, we know that items were removed and added
                // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check
                // the last one

                var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1);
                // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)

                if (descriptor && !descriptor.get) {
                    return true;
                }
                // For all other cases, we don't have to compare, as they would have been picked up by the index setters

                return false;
            }

            var DraftMap = function(_super) {
                if (!_super) {
                    /* istanbul ignore next */
                    throw new Error("Map is not polyfilled");
                }

                __extends(DraftMap, _super);
                // Create class manually, cause #502

                function DraftMap(target, parent) {
                    this[DRAFT_STATE] = {
                        type: ProxyType.Map,
                        parent: parent,
                        scope: parent ? parent.scope : ImmerScope.current,
                        modified: false,
                        finalized: false,
                        copy: undefined,
                        assigned: undefined,
                        base: target,
                        draft: this,
                        isManual: false,
                        revoked: false
                    };
                    return this;
                }

                var p = DraftMap.prototype;
                // TODO: smaller build size if we create a util for Object.defineProperty

                Object.defineProperty(p, "size", {
                    get: function() {
                        return latest(this[DRAFT_STATE]).size;
                    },
                    enumerable: true,
                    configurable: true
                });

                p.has = function(key) {
                    return latest(this[DRAFT_STATE]).has(key);
                }
                ;

                p.set = function(key, value) {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);

                    if (latest(state).get(key) !== value) {
                        prepareCopy$2(state);
                        state.scope.immer.markChanged(state);
                        state.assigned.set(key, true);
                        state.copy.set(key, value);
                        state.assigned.set(key, true);
                    }

                    return this;
                }
                ;

                p.delete = function(key) {
                    if (!this.has(key)) {
                        return false;
                    }

                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$2(state);
                    state.scope.immer.markChanged(state);
                    state.assigned.set(key, false);
                    state.copy.delete(key);
                    return true;
                }
                ;

                p.clear = function() {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$2(state);
                    state.scope.immer.markChanged(state);
                    state.assigned = new Map();
                    return state.copy.clear();
                }
                ;

                p.forEach = function(cb, thisArg) {
                    var _this = this;

                    var state = this[DRAFT_STATE];
                    latest(state).forEach(function(_value, key, _map) {
                        cb.call(thisArg, _this.get(key), key, _this);
                    });
                }
                ;

                p.get = function(key) {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    var value = latest(state).get(key);

                    if (state.finalized || !isDraftable(value)) {
                        return value;
                    }

                    if (value !== state.base.get(key)) {
                        return value;
                        // either already drafted or reassigned
                    }
                    // despite what it looks, this creates a draft only once, see above condition

                    var draft = state.scope.immer.createProxy(value, state);
                    prepareCopy$2(state);
                    state.copy.set(key, draft);
                    return draft;
                }
                ;

                p.keys = function() {
                    return latest(this[DRAFT_STATE]).keys();
                }
                ;

                p.values = function() {
                    var _a;

                    var _this = this;

                    var iterator = this.keys();
                    return _a = {},
                    _a[iteratorSymbol] = function() {
                        return _this.values();
                    }
                    ,
                    _a.next = function() {
                        var r = iterator.next();
                        /* istanbul ignore next */

                        if (r.done) {
                            return r;
                        }

                        var value = _this.get(r.value);

                        return {
                            done: false,
                            value: value
                        };
                    }
                    ,
                    _a;
                }
                ;

                p.entries = function() {
                    var _a;

                    var _this = this;

                    var iterator = this.keys();
                    return _a = {},
                    _a[iteratorSymbol] = function() {
                        return _this.entries();
                    }
                    ,
                    _a.next = function() {
                        var r = iterator.next();
                        /* istanbul ignore next */

                        if (r.done) {
                            return r;
                        }

                        var value = _this.get(r.value);

                        return {
                            done: false,
                            value: [r.value, value]
                        };
                    }
                    ,
                    _a;
                }
                ;

                p[iteratorSymbol] = function() {
                    return this.entries();
                }
                ;

                return DraftMap;
            }(Map);

            function proxyMap(target, parent) {
                // @ts-ignore
                return new DraftMap(target,parent);
            }

            function prepareCopy$2(state) {
                if (!state.copy) {
                    state.assigned = new Map();
                    state.copy = new Map(state.base);
                }
            }

            var DraftSet = function(_super) {
                if (!_super) {
                    /* istanbul ignore next */
                    throw new Error("Set is not polyfilled");
                }

                __extends(DraftSet, _super);
                // Create class manually, cause #502

                function DraftSet(target, parent) {
                    this[DRAFT_STATE] = {
                        type: ProxyType.Set,
                        parent: parent,
                        scope: parent ? parent.scope : ImmerScope.current,
                        modified: false,
                        finalized: false,
                        copy: undefined,
                        base: target,
                        draft: this,
                        drafts: new Map(),
                        revoked: false,
                        isManual: false
                    };
                    return this;
                }

                var p = DraftSet.prototype;
                Object.defineProperty(p, "size", {
                    get: function() {
                        return latest(this[DRAFT_STATE]).size;
                    },
                    enumerable: true,
                    configurable: true
                });

                p.has = function(value) {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    // bit of trickery here, to be able to recognize both the value, and the draft of its value

                    if (!state.copy) {
                        return state.base.has(value);
                    }

                    if (state.copy.has(value)) {
                        return true;
                    }
                    if (state.drafts.has(value) && state.copy.has(state.drafts.get(value))) {
                        return true;
                    }
                    return false;
                }
                ;

                p.add = function(value) {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);

                    if (state.copy) {
                        state.copy.add(value);
                    } else if (!state.base.has(value)) {
                        prepareCopy$3(state);
                        state.scope.immer.markChanged(state);
                        state.copy.add(value);
                    }

                    return this;
                }
                ;

                p.delete = function(value) {
                    if (!this.has(value)) {
                        return false;
                    }

                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$3(state);
                    state.scope.immer.markChanged(state);
                    return state.copy.delete(value) || (state.drafts.has(value) ? state.copy.delete(state.drafts.get(value)) : /* istanbul ignore next */
                    false);
                }
                ;

                p.clear = function() {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$3(state);
                    state.scope.immer.markChanged(state);
                    return state.copy.clear();
                }
                ;

                p.values = function() {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$3(state);
                    return state.copy.values();
                }
                ;

                p.entries = function entries() {
                    var state = this[DRAFT_STATE];
                    assertUnrevoked(state);
                    prepareCopy$3(state);
                    return state.copy.entries();
                }
                ;

                p.keys = function() {
                    return this.values();
                }
                ;

                p[iteratorSymbol] = function() {
                    return this.values();
                }
                ;

                p.forEach = function forEach(cb, thisArg) {
                    var iterator = this.values();
                    var result = iterator.next();

                    while (!result.done) {
                        cb.call(thisArg, result.value, result.value, this);
                        result = iterator.next();
                    }
                }
                ;

                return DraftSet;
            }(Set);

            function proxySet(target, parent) {
                // @ts-ignore
                return new DraftSet(target,parent);
            }

            function prepareCopy$3(state) {
                if (!state.copy) {
                    // create drafts for all entries to preserve insertion order
                    state.copy = new Set();
                    state.base.forEach(function(value) {
                        if (isDraftable(value)) {
                            var draft = state.scope.immer.createProxy(value, state);
                            state.drafts.set(value, draft);
                            state.copy.add(draft);
                        } else {
                            state.copy.add(value);
                        }
                    });
                }
            }

            function generatePatches(state, basePath, patches, inversePatches) {
                switch (state.type) {
                case ProxyType.ProxyObject:
                case ProxyType.ES5Object:
                case ProxyType.Map:
                    return generatePatchesFromAssigned(state, basePath, patches, inversePatches);

                case ProxyType.ES5Array:
                case ProxyType.ProxyArray:
                    return generateArrayPatches(state, basePath, patches, inversePatches);

                case ProxyType.Set:
                    return generateSetPatches(state, basePath, patches, inversePatches);
                }
            }

            function generateArrayPatches(state, basePath, patches, inversePatches) {
                var _a, _b;

                var base = state.base
                  , assigned = state.assigned
                  , copy = state.copy;
                /* istanbul ignore next */

                if (!copy) {
                    die();
                }
                // Reduce complexity by ensuring `base` is never longer.

                if (copy.length < base.length) {
                    _a = [copy, base],
                    base = _a[0],
                    copy = _a[1];
                    _b = [inversePatches, patches],
                    patches = _b[0],
                    inversePatches = _b[1];
                }

                var delta = copy.length - base.length;
                // Find the first replaced index.

                var start = 0;

                while (base[start] === copy[start] && start < base.length) {
                    ++start;
                }
                // Find the last replaced index. Search from the end to optimize splice patches.

                var end = base.length;

                while (end > start && base[end - 1] === copy[end + delta - 1]) {
                    --end;
                }
                // Process replaced indices.

                for (var i = start; i < end; ++i) {
                    if (assigned[i] && copy[i] !== base[i]) {
                        var path = basePath.concat([i]);
                        patches.push({
                            op: "replace",
                            path: path,
                            value: copy[i]
                        });
                        inversePatches.push({
                            op: "replace",
                            path: path,
                            value: base[i]
                        });
                    }
                }

                var replaceCount = patches.length;
                // Process added indices.

                for (var i = end + delta - 1; i >= end; --i) {
                    var path = basePath.concat([i]);
                    patches[replaceCount + i - end] = {
                        op: "add",
                        path: path,
                        value: copy[i]
                    };
                    inversePatches.push({
                        op: "remove",
                        path: path
                    });
                }
            }
            // This is used for both Map objects and normal objects.

            function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {
                var base = state.base
                  , copy = state.copy;
                each(state.assigned, function(key, assignedValue) {
                    var origValue = get(base, key);
                    var value = get(copy, key);
                    var op = !assignedValue ? "remove" : has(base, key) ? "replace" : "add";
                    if (origValue === value && op === "replace") {
                        return;
                    }
                    var path = basePath.concat(key);
                    patches.push(op === "remove" ? {
                        op: op,
                        path: path
                    } : {
                        op: op,
                        path: path,
                        value: value
                    });
                    inversePatches.push(op === "add" ? {
                        op: "remove",
                        path: path
                    } : op === "remove" ? {
                        op: "add",
                        path: path,
                        value: origValue
                    } : {
                        op: "replace",
                        path: path,
                        value: origValue
                    });
                });
            }

            function generateSetPatches(state, basePath, patches, inversePatches) {
                var base = state.base
                  , copy = state.copy;
                var i = 0;
                base.forEach(function(value) {
                    if (!copy.has(value)) {
                        var path = basePath.concat([i]);
                        patches.push({
                            op: "remove",
                            path: path,
                            value: value
                        });
                        inversePatches.unshift({
                            op: "add",
                            path: path,
                            value: value
                        });
                    }

                    i++;
                });
                i = 0;
                copy.forEach(function(value) {
                    if (!base.has(value)) {
                        var path = basePath.concat([i]);
                        patches.push({
                            op: "add",
                            path: path,
                            value: value
                        });
                        inversePatches.unshift({
                            op: "remove",
                            path: path,
                            value: value
                        });
                    }

                    i++;
                });
            }

            function applyPatches(draft, patches) {
                patches.forEach(function(patch) {
                    var path = patch.path
                      , op = patch.op;
                    /* istanbul ignore next */

                    if (!path.length) {
                        die();
                    }
                    var base = draft;

                    for (var i = 0; i < path.length - 1; i++) {
                        base = get(base, path[i]);
                        if (!base || typeof base !== "object") {
                            throw new Error("Cannot apply patch, path doesn't resolve: " + path.join("/"));
                        }
                        // prettier-ignore
                    }

                    var type = getArchtype(base);
                    var value = deepClonePatchValue(patch.value);
                    // used to clone patch to ensure original patch is not modified, see #411

                    var key = path[path.length - 1];

                    switch (op) {
                    case "replace":
                        switch (type) {
                        case Archtype.Map:
                            return base.set(key, value);

                            /* istanbul ignore next */

                        case Archtype.Set:
                            throw new Error('Sets cannot have "replace" patches.');

                        default:
                            // if value is an object, then it's assigned by reference
                            // in the following add or remove ops, the value field inside the patch will also be modifyed
                            // so we use value from the cloned patch
                            // @ts-ignore
                            return base[key] = value;
                        }

                    case "add":
                        switch (type) {
                        case Archtype.Array:
                            return base.splice(key, 0, value);

                        case Archtype.Map:
                            return base.set(key, value);

                        case Archtype.Set:
                            return base.add(value);

                        default:
                            return base[key] = value;
                        }

                    case "remove":
                        switch (type) {
                        case Archtype.Array:
                            return base.splice(key, 1);

                        case Archtype.Map:
                            return base.delete(key);

                        case Archtype.Set:
                            return base.delete(patch.value);

                        default:
                            return delete base[key];
                        }

                    default:
                        throw new Error("Unsupported patch operation: " + op);
                    }
                });
                return draft;
            }

            function deepClonePatchValue(obj) {
                if (!obj || typeof obj !== "object") {
                    return obj;
                }
                if (Array.isArray(obj)) {
                    return obj.map(deepClonePatchValue);
                }
                if (isMap(obj)) {
                    return new Map(Array.from(obj.entries()).map(function(_a) {
                        var k = _a[0]
                          , v = _a[1];
                        return [k, deepClonePatchValue(v)];
                    }));
                }
                // Not needed: if (isSet(obj)) return new Set(Array.from(obj.values()).map(deepClone))

                var cloned = Object.create(Object.getPrototypeOf(obj));

                for (var key in obj) {
                    cloned[key] = deepClonePatchValue(obj[key]);
                }

                return cloned;
            }

            /*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

            function __spreadArrays() {
                for (var s = 0, i = 0, il = arguments.length; i < il; i++)
                    s += arguments[i].length;
                for (var r = Array(s), k = 0, i = 0; i < il; i++)
                    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++,
                    k++)
                        r[k] = a[j];
                return r;
            }

            /* istanbul ignore next */

            function verifyMinified() {}

            var configDefaults = {
                useProxies: typeof Proxy !== "undefined" && typeof Proxy.revocable !== "undefined" && typeof Reflect !== "undefined",
                autoFreeze: typeof process !== "undefined" ? "production" !== "production" : /* istanbul ignore next */
                verifyMinified.name === "verifyMinified",
                onAssign: null,
                onDelete: null,
                onCopy: null
            };

            var Immer = /** @class */
            function() {
                function Immer(config) {
                    var _this = this;

                    this.useProxies = false;
                    this.autoFreeze = false;
                    each(configDefaults, function(key, value) {
                        var _a, _b;
                        // @ts-ignore

                        _this[key] = (_b = (_a = config) === null || _a === void 0 ? void 0 : _a[key],
                        _b !== null && _b !== void 0 ? _b : value);
                    });
                    this.setUseProxies(this.useProxies);
                    this.produce = this.produce.bind(this);
                    this.produceWithPatches = this.produceWithPatches.bind(this);
                }
                /**
   * The `produce` function takes a value and a "recipe function" (whose
   * return value often depends on the base state). The recipe function is
   * free to mutate its first argument however it wants. All mutations are
   * only ever applied to a __copy__ of the base state.
   *
   * Pass only a function to create a "curried producer" which relieves you
   * from passing the recipe function every time.
   *
   * Only plain objects and arrays are made mutable. All other objects are
   * considered uncopyable.
   *
   * Note: This function is __bound__ to its `Immer` instance.
   *
   * @param {any} base - the initial state
   * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified
   * @param {Function} patchListener - optional function that will be called with all the patches produced here
   * @returns {any} a new state, or the initial state if nothing was modified
   */

                Immer.prototype.produce = function(base, recipe, patchListener) {
                    var _this = this;
                    // curried invocation

                    if (typeof base === "function" && typeof recipe !== "function") {
                        var defaultBase_1 = recipe;
                        recipe = base;
                        var self_1 = this;
                        return function curriedProduce(base) {
                            var arguments$1 = arguments;

                            var _this = this;

                            if (base === void 0) {
                                base = defaultBase_1;
                            }

                            var args = [];

                            for (var _i = 1; _i < arguments.length; _i++) {
                                args[_i - 1] = arguments$1[_i];
                            }

                            return self_1.produce(base, function(draft) {
                                return recipe.call.apply(recipe, __spreadArrays([_this, draft], args));
                            });
                            // prettier-ignore
                        }
                        ;
                    }
                    // prettier-ignore

                    {
                        if (typeof recipe !== "function") {
                            throw new Error("The first or second argument to `produce` must be a function");
                        }

                        if (patchListener !== undefined && typeof patchListener !== "function") {
                            throw new Error("The third argument to `produce` must be a function or undefined");
                        }
                    }
                    var result;
                    // Only plain objects, arrays, and "immerable classes" are drafted.

                    if (isDraftable(base)) {
                        var scope_1 = ImmerScope.enter(this);
                        var proxy = this.createProxy(base, undefined);
                        var hasError = true;

                        try {
                            result = recipe(proxy);
                            hasError = false;
                        } finally {
                            // finally instead of catch + rethrow better preserves original stack
                            if (hasError) {
                                scope_1.revoke();
                            } else {
                                scope_1.leave();
                            }
                        }

                        if (typeof Promise !== "undefined" && result instanceof Promise) {
                            return result.then(function(result) {
                                scope_1.usePatches(patchListener);
                                return processResult(_this, result, scope_1);
                            }, function(error) {
                                scope_1.revoke();
                                throw error;
                            });
                        }

                        scope_1.usePatches(patchListener);
                        return processResult(this, result, scope_1);
                    } else {
                        result = recipe(base);
                        if (result === NOTHING) {
                            return undefined;
                        }
                        if (result === undefined) {
                            result = base;
                        }
                        maybeFreeze(this, result, true);
                        return result;
                    }
                }
                ;

                Immer.prototype.produceWithPatches = function(arg1, arg2, arg3) {
                    var _this = this;

                    if (typeof arg1 === "function") {
                        return function(state) {
                            var arguments$1 = arguments;

                            var args = [];

                            for (var _i = 1; _i < arguments.length; _i++) {
                                args[_i - 1] = arguments$1[_i];
                            }

                            return _this.produceWithPatches(state, function(draft) {
                                return arg1.apply(void 0, __spreadArrays([draft], args));
                            });
                        }
                        ;
                    }
                    // non-curried form

                    /* istanbul ignore next */

                    if (arg3) {
                        die();
                    }
                    var patches, inversePatches;
                    var nextState = this.produce(arg1, arg2, function(p, ip) {
                        patches = p;
                        inversePatches = ip;
                    });
                    return [nextState, patches, inversePatches];
                }
                ;

                Immer.prototype.createDraft = function(base) {
                    if (!isDraftable(base)) {
                        throw new Error("First argument to `createDraft` must be a plain object, an array, or an immerable object");
                        // prettier-ignore
                    }

                    var scope = ImmerScope.enter(this);
                    var proxy = this.createProxy(base, undefined);
                    proxy[DRAFT_STATE].isManual = true;
                    scope.leave();
                    return proxy;
                }
                ;

                Immer.prototype.finishDraft = function(draft, patchListener) {
                    var state = draft && draft[DRAFT_STATE];

                    if (!state || !state.isManual) {
                        throw new Error("First argument to `finishDraft` must be a draft returned by `createDraft`");
                        // prettier-ignore
                    }

                    if (state.finalized) {
                        throw new Error("The given draft is already finalized");
                        // prettier-ignore
                    }

                    var scope = state.scope;
                    scope.usePatches(patchListener);
                    return processResult(this, undefined, scope);
                }
                ;
                /**
   * Pass true to automatically freeze all copies created by Immer.
   *
   * By default, auto-freezing is disabled in production.
   */

                Immer.prototype.setAutoFreeze = function(value) {
                    this.autoFreeze = value;
                }
                ;
                /**
   * Pass true to use the ES2015 `Proxy` class when creating drafts, which is
   * always faster than using ES5 proxies.
   *
   * By default, feature detection is used, so calling this is rarely necessary.
   */

                Immer.prototype.setUseProxies = function(value) {
                    this.useProxies = value;
                }
                ;

                Immer.prototype.applyPatches = function(base, patches) {
                    // If a patch replaces the entire state, take that replacement as base
                    // before applying patches
                    var i;

                    for (i = patches.length - 1; i >= 0; i--) {
                        var patch = patches[i];

                        if (patch.path.length === 0 && patch.op === "replace") {
                            base = patch.value;
                            break;
                        }
                    }

                    if (isDraft(base)) {
                        // N.B: never hits if some patch a replacement, patches are never drafts
                        return applyPatches(base, patches);
                    }
                    // Otherwise, produce a copy of the base state.

                    return this.produce(base, function(draft) {
                        return applyPatches(draft, patches.slice(i + 1));
                    });
                }
                ;

                Immer.prototype.createProxy = function(value, parent) {
                    // precondition: createProxy should be guarded by isDraftable, so we know we can safely draft
                    var draft = isMap(value) ? proxyMap(value, parent) : isSet(value) ? proxySet(value, parent) : this.useProxies ? createProxy(value, parent) : createES5Proxy(value, parent);
                    var scope = parent ? parent.scope : ImmerScope.current;
                    scope.drafts.push(draft);
                    return draft;
                }
                ;

                Immer.prototype.willFinalize = function(scope, thing, isReplaced) {
                    if (!this.useProxies) {
                        willFinalizeES5(scope, thing, isReplaced);
                    }
                }
                ;

                Immer.prototype.markChanged = function(state) {
                    if (this.useProxies) {
                        markChanged(state);
                    } else {
                        markChangedES5(state);
                    }
                }
                ;

                return Immer;
            }();

            var immer = new Immer();
            /**
 * The `produce` function takes a value and a "recipe function" (whose
 * return value often depends on the base state). The recipe function is
 * free to mutate its first argument however it wants. All mutations are
 * only ever applied to a __copy__ of the base state.
 *
 * Pass only a function to create a "curried producer" which relieves you
 * from passing the recipe function every time.
 *
 * Only plain objects and arrays are made mutable. All other objects are
 * considered uncopyable.
 *
 * Note: This function is __bound__ to its `Immer` instance.
 *
 * @param {any} base - the initial state
 * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified
 * @param {Function} patchListener - optional function that will be called with all the patches produced here
 * @returns {any} a new state, or the initial state if nothing was modified
 */

            var produce = immer.produce;
            /**
 * Like `produce`, but `produceWithPatches` always returns a tuple
 * [nextState, patches, inversePatches] (instead of just the next state)
 */

            var produceWithPatches = immer.produceWithPatches.bind(immer);
            /**
 * Pass true to automatically freeze all copies created by Immer.
 *
 * By default, auto-freezing is disabled in production.
 */

            var setAutoFreeze = immer.setAutoFreeze.bind(immer);
            /**
 * Pass true to use the ES2015 `Proxy` class when creating drafts, which is
 * always faster than using ES5 proxies.
 *
 * By default, feature detection is used, so calling this is rarely necessary.
 */

            var setUseProxies = immer.setUseProxies.bind(immer);
            /**
 * Apply an array of Immer patches to the first argument.
 *
 * This function is a producer, which means copy-on-write is in effect.
 */

            var applyPatches$1 = immer.applyPatches.bind(immer);
            /**
 * Create an Immer draft from the given base state, which may be a draft itself.
 * The draft can be modified until you finalize it with the `finishDraft` function.
 */

            var createDraft = immer.createDraft.bind(immer);
            /**
 * Finalize an Immer draft from a `createDraft` call, returning the base state
 * (if no changes were made) or a modified copy. The draft must *not* be
 * mutated afterwards.
 *
 * Pass a function as the 2nd argument to generate Immer patches based on the
 * changes that were made.
 */

            var finishDraft = immer.finishDraft.bind(immer);
            /**
 * This function is actually a no-op, but can be used to cast an immutable type
 * to an draft type and make TypeScript happy
 *
 * @param value
 */

            function castDraft(value) {
                return value;
            }
            /**
 * This function is actually a no-op, but can be used to cast a mutable type
 * to an immutable type and make TypeScript happy
 * @param value
 */

            function castImmutable(value) {
                return value;
            }

            /* harmony default export */
            __webpack_exports__["default"] = (produce);

            //# sourceMappingURL=immer.module.js.map

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 583 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var __extends = (this && this.__extends) || (function() {
            var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || ({
                    __proto__: []
                }instanceof Array && function(d, b) {
                    d.__proto__ = b;
                }
                ) || function(d, b) {
                    for (var p in b)
                        if (b.hasOwnProperty(p))
                            d[p] = b[p];
                }
                ;
                return extendStatics(d, b);
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype,
                new __());
            }
            ;
        }
        )();
        var __rest = (this && this.__rest) || function(s, e) {
            var t = {};
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                    t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)
                    if (e.indexOf(p[i]) < 0)
                        t[p[i]] = s[p[i]];
            return t;
        }
        ;
        var __importDefault = (this && this.__importDefault) || function(mod) {
            return (mod && mod.__esModule) ? mod : {
                "default": mod
            };
        }
        ;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var react_redux_1 = __webpack_require__(422);
        var shallow_equal_1 = __importDefault(__webpack_require__(584));
        /**
 * Throw in mapState to force null rendering.
 *
 * Experimental API. Do not use.
 */
        var RenderNull = /** @class */
        (function(_super) {
            __extends(RenderNull, _super);
            function RenderNull() {
                var _this = _super.call(this, "Render null") || this;
                _this.isRenderNull = true;
                return _this;
            }
            return RenderNull;
        }(Error));
        exports.RenderNull = RenderNull;
        function isRenderNull(o) {
            return o && o.isRenderNull;
        }
        var reduxRenderPropRender = function(props) {
            if (props.mappedState && props.mappedState.__renderNull) {
                return null;
            }
            if (typeof props.render !== "function") {
                return null;
            }
            return props.render(props.mappedState, props.mappedActions);
        };
        function makeConnector(makeOptions) {
            return function createComponent(options) {
                var RenderPropComponent = react_redux_1.connectAdvanced(function(dispatch, factoryOptions) {
                    var mappedStateCache = null;
                    var mappedActionsCache = null;
                    var ownPropsCache = null;
                    var preparedActions = null;
                    var prevState = {};
                    var prevRender = null;
                    var finalPropsCache = {};
                    var memoizedMapState = null;
                    return function(state, _a) {
                        var children = _a.children
                          , render = _a.render
                          , ownProps = __rest(_a, ["children", "render"]);
                        var passRender = children || render;
                        var stateChanged = state !== prevState;
                        prevState = state;
                        var ownPropsChanged = !shallow_equal_1.default(ownPropsCache, ownProps);
                        if (ownPropsChanged) {
                            ownPropsCache = ownProps;
                        }
                        var renderFunctionChanged = prevRender !== passRender;
                        prevRender = passRender;
                        var mappedStateChanged = false;
                        var mappedActionsChanged = false;
                        var preparedState = makeOptions.prepareState(state);
                        if (!memoizedMapState && options.memoizeMapState) {
                            memoizedMapState = options.memoizeMapState(preparedState, ownPropsCache);
                        }
                        var mapState = memoizedMapState || options.mapState;
                        // Execute mapState only when the state or the ownPropsChanged
                        if (mapState && (stateChanged || ownPropsChanged)) {
                            var newMappedState = {};
                            try {
                                newMappedState = mapState(preparedState, ownPropsCache);
                            } catch (error) {
                                if (isRenderNull(error)) {
                                    newMappedState = {
                                        __renderNull: true
                                    };
                                } else {
                                    throw error;
                                }
                            }
                            if (!shallow_equal_1.default(newMappedState, mappedStateCache)) {
                                mappedStateCache = newMappedState;
                                mappedStateChanged = true;
                            }
                        }
                        if (options.mapActions && ownPropsChanged) {
                            if (!preparedActions) {
                                preparedActions = makeOptions.prepareActions(dispatch);
                            }
                            var newMappedActions = options.mapActions(preparedActions, ownPropsCache);
                            if (!shallow_equal_1.default(newMappedActions, mappedActionsCache)) {
                                mappedActionsCache = newMappedActions;
                                mappedActionsChanged = true;
                            }
                        }
                        // For debugging
                        // console.log("MAPPING", {
                        //     mappedStateChanged,
                        //     mappedActionsChanged,
                        //     renderFunctionChanged,
                        //     stateChanged,
                        //     ownPropsChanged,
                        // });
                        // Force rendering when nothing changes. This seems bit
                        // weird at first but we must do this because we must be
                        // able to render when the render function is an instance
                        // method of class whose idendity does not change. Ie. the
                        // render is only caused by the parent component for
                        // whatever reason.
                        //
                        // The reference of the data-argument in the render function
                        // does not change so this won't cause any extra rendering
                        // down stream.
                        var forcePlainRender = !mappedStateChanged && !mappedActionsChanged && !renderFunctionChanged && !stateChanged && !ownPropsChanged;
                        // This is where we decide when to render the wrapped
                        // component. connectAdvanced() triggers rendering when a
                        // new reference is returned so we update the the
                        // finalPropsCache only when absolutely required.
                        if (forcePlainRender || mappedStateChanged || mappedActionsChanged || // renderFunctionChanged can be the same function with
                        // new closure or completely different implementation
                        renderFunctionChanged) {
                            finalPropsCache = {
                                mappedState: mappedStateCache,
                                mappedActions: mappedActionsCache,
                                render: passRender,
                            };
                        }
                        return finalPropsCache;
                    }
                    ;
                })(reduxRenderPropRender);
                // But return the component with proper types
                return RenderPropComponent;
            }
            ;
        }
        exports.makeConnector = makeConnector;
        // Old removed api with nice error message
        function makeComponentCreator(a) {
            throw new Error("makeComponentCreator is renamed to makeConnector");
        }
        exports.makeComponentCreator = makeComponentCreator;
        //# sourceMappingURL=redux-render-prop.js.map

        /***/
    }
    ), /* 584 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        // Adapted to TS from https://github.com/reduxjs/react-redux/blob/aba2452c8012336daaca666a3fda0f565a8f0cbc/src/utils/shallowEqual.js
        var hasOwn = Object.prototype.hasOwnProperty;
        function is(x, y) {
            if (x === y) {
                return x !== 0 || y !== 0 || 1 / x === 1 / y;
            } else {
                return x !== x && y !== y;
            }
        }
        function shallowEqual(objA, objB) {
            if (is(objA, objB))
                return true;
            if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
                return false;
            }
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA.length !== keysB.length)
                return false;
            for (var i = 0; i < keysA.length; i++) {
                if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
                    return false;
                }
            }
            return true;
        }
        exports.default = shallowEqual;
        //# sourceMappingURL=shallow-equal.js.map

        /***/
    }
    ), /* 585 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const auth_1 = tslib_1.__importDefault(__webpack_require__(586));

        const index_1 = tslib_1.__importDefault(__webpack_require__(68));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const effects_1 = __webpack_require__(62);

        const actions_1 = __webpack_require__(92);

        exports.AudioUtilities = {
            createHTMLAudioElement: ({encoding='data:audio/wav;base64', content})=>{
                const encoded = `${encoding}, ${content}`;

                if (config_1.default.debug) {
                    console.log(`Audio data received: ${index_1.default.bytesToSize(new Blob([encoded]).size)}.`);
                }

                try {
                    return new Audio(encoded);
                } catch (error) {
                    index_1.default.throwError(error);
                }
            }
            ,
            getSpeechToTextVoices,
            synthesizeSpeechFromText
        };

        function *getSpeechToTextVoices(params={
            languageCode: 'en-US'
        }) {
            const result = yield auth_1.default.makeFetchRequest({
                url: `https://texttospeech.googleapis.com/v1/voices?languageCode=${params.languageCode}`,
                options: {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        // tslint:disable-next-line:object-literal-key-quotes
                        Authorization: `Bearer ${auth_1.default.GoogleCloud.TextToSpeech.generateAuthToken()}`
                    }
                }
            });
            return yield effects_1.put(actions_1.ActionCreators.setTextToSpeechVoices({
                voices: result.voices
            }));
        }
        /**
 * Invoke Google Cloud Text to Speech API to synthesize passed 'text' to speech.
 *
 * @see https://developers.google.com/identity/protocols/OAuth2ServiceAccount
 * @see https://developers.google.com/identity/protocols/OAuth2ServiceAccount#jwt-auth
 * @see https://github.com/googleapis/googleapis/blob/master/google/cloud/texttospeech/tts_v1.yaml#L7
 * @param audioConfig
 * @param {string} text
 * @param voice
 */

        function *synthesizeSpeechFromText({audioConfig=config_1.default.services.GoogleCloud.TextToSpeech.defaultAudioConfig, text, voice=config_1.default.services.GoogleCloud.TextToSpeech.defaultVoice}) {
            return yield auth_1.default.makeFetchRequest({
                url: 'https://texttospeech.googleapis.com/v1/text:synthesize',
                options: {
                    method: 'POST',
                    body: JSON.stringify({
                        audioConfig,
                        input: {
                            text
                        },
                        voice
                    }),
                    headers: {
                        'Content-Type': 'application/json',
                        // tslint:disable-next-line:object-literal-key-quotes
                        Authorization: `Bearer ${auth_1.default.GoogleCloud.TextToSpeech.generateAuthToken()}`
                    }
                }
            });
        }

        exports.default = exports.AudioUtilities;

        /***/
    }
    ), /* 586 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const index_1 = tslib_1.__importDefault(__webpack_require__(68));

        const jsonwebtoken_1 = __webpack_require__(587);

        const wcasg_ada_app_dev_c14f778938af_json_1 = tslib_1.__importDefault(__webpack_require__(686));

        exports.Auth = {
            GoogleCloud: {
                TextToSpeech: {
                    generateAuthToken: ()=>{
                        const timestamp = Math.round(new Date().getTime() / 1000);
                        return exports.Auth.signJWT({
                            payload: {
                                iss: wcasg_ada_app_dev_c14f778938af_json_1.default.client_email,
                                sub: wcasg_ada_app_dev_c14f778938af_json_1.default.client_email,
                                aud: 'https://texttospeech.googleapis.com/',
                                iat: timestamp,
                                exp: timestamp + 3600
                            },
                            privateKey: wcasg_ada_app_dev_c14f778938af_json_1.default.private_key,
                            options: {
                                header: {
                                    alg: 'RS256',
                                    typ: 'JWT',
                                    kid: wcasg_ada_app_dev_c14f778938af_json_1.default.private_key_id
                                },
                                algorithm: 'RS256'
                            }
                        });
                    }
                }
            },

            /**
   * @see https://github.com/auth0/node-jsonwebtoken
   */
            signJWT: ({payload, privateKey, options})=>{
                return jsonwebtoken_1.sign(payload, privateKey, options);
            }
            ,

            /**
   * @returns {Promise<void>}
   */
            makeFetchRequest: async({options, url})=>{
                try {
                    const response = await fetch(url,options);

                    if (response.status === 400) {
                        console.error((await response.json()));
                    }

                    return response.json();
                } catch (error) {
                    index_1.default.throwError(error);
                }
            }
        };
        exports.default = exports.Auth;

        /***/
    }
    ), /* 587 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = {
            decode: __webpack_require__(373),
            verify: __webpack_require__(675),
            sign: __webpack_require__(678),
            JsonWebTokenError: __webpack_require__(164),
            NotBeforeError: __webpack_require__(414),
            TokenExpiredError: __webpack_require__(415),
        };

        /***/
    }
    ), /* 588 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*global module*/
        var Buffer = __webpack_require__(15).Buffer;
        var DataStream = __webpack_require__(375);
        var jwa = __webpack_require__(380);
        var Stream = __webpack_require__(93);
        var toString = __webpack_require__(413);
        var util = __webpack_require__(159);

        function base64url(string, encoding) {
            return Buffer.from(string, encoding).toString('base64').replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
        }

        function jwsSecuredInput(header, payload, encoding) {
            encoding = encoding || 'utf8';
            var encodedHeader = base64url(toString(header), 'binary');
            var encodedPayload = base64url(toString(payload), encoding);
            return util.format('%s.%s', encodedHeader, encodedPayload);
        }

        function jwsSign(opts) {
            var header = opts.header;
            var payload = opts.payload;
            var secretOrKey = opts.secret || opts.privateKey;
            var encoding = opts.encoding;
            var algo = jwa(header.alg);
            var securedInput = jwsSecuredInput(header, payload, encoding);
            var signature = algo.sign(securedInput, secretOrKey);
            return util.format('%s.%s', securedInput, signature);
        }

        function SignStream(opts) {
            var secret = opts.secret || opts.privateKey || opts.key;
            var secretStream = new DataStream(secret);
            this.readable = true;
            this.header = opts.header;
            this.encoding = opts.encoding;
            this.secret = this.privateKey = this.key = secretStream;
            this.payload = new DataStream(opts.payload);
            this.secret.once('close', function() {
                if (!this.payload.writable && this.readable)
                    this.sign();
            }
            .bind(this));

            this.payload.once('close', function() {
                if (!this.secret.writable && this.readable)
                    this.sign();
            }
            .bind(this));
        }
        util.inherits(SignStream, Stream);

        SignStream.prototype.sign = function sign() {
            try {
                var signature = jwsSign({
                    header: this.header,
                    payload: this.payload.buffer,
                    secret: this.secret.buffer,
                    encoding: this.encoding
                });
                this.emit('done', signature);
                this.emit('data', signature);
                this.emit('end');
                this.readable = false;
                return signature;
            } catch (e) {
                this.readable = false;
                this.emit('error', e);
                this.emit('close');
            }
        }
        ;

        SignStream.sign = jwsSign;

        module.exports = SignStream;

        /***/
    }
    ), /* 589 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.byteLength = byteLength
        exports.toByteArray = toByteArray
        exports.fromByteArray = fromByteArray

        var lookup = []
        var revLookup = []
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

        var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
        for (var i = 0, len = code.length; i < len; ++i) {
            lookup[i] = code[i]
            revLookup[code.charCodeAt(i)] = i
        }

        // Support decoding URL-safe base64 strings, as Node.js does.
        // See: https://en.wikipedia.org/wiki/Base64#URL_applications
        revLookup['-'.charCodeAt(0)] = 62
        revLookup['_'.charCodeAt(0)] = 63

        function getLens(b64) {
            var len = b64.length

            if (len % 4 > 0) {
                throw new Error('Invalid string. Length must be a multiple of 4')
            }

            // Trim off extra bytes after placeholder bytes are found
            // See: https://github.com/beatgammit/base64-js/issues/42
            var validLen = b64.indexOf('=')
            if (validLen === -1)
                validLen = len

            var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)

            return [validLen, placeHoldersLen]
        }

        // base64 is 4/3 + up to two characters of the original data
        function byteLength(b64) {
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function _byteLength(b64, validLen, placeHoldersLen) {
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function toByteArray(b64) {
            var tmp
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]

            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

            var curByte = 0

            // if there are placeholders, only get up to the last complete 4 chars
            var len = placeHoldersLen > 0 ? validLen - 4 : validLen

            var i
            for (i = 0; i < len; i += 4) {
                tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
                arr[curByte++] = (tmp >> 16) & 0xFF
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 2) {
                tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 1) {
                tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            return arr
        }

        function tripletToBase64(num) {
            return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
        }

        function encodeChunk(uint8, start, end) {
            var tmp
            var output = []
            for (var i = start; i < end; i += 3) {
                tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)
                output.push(tripletToBase64(tmp))
            }
            return output.join('')
        }

        function fromByteArray(uint8) {
            var tmp
            var len = uint8.length
            var extraBytes = len % 3
            // if we have 1 byte left, pad 2 bytes
            var parts = []
            var maxChunkLength = 16383
            // must be multiple of 3

            // go through the array every three bytes, we'll deal with trailing stuff later
            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
                parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
            }

            // pad the end with zeros, but make sure to not forget the extra bytes
            if (extraBytes === 1) {
                tmp = uint8[len - 1]
                parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3F] + '==')
            } else if (extraBytes === 2) {
                tmp = (uint8[len - 2] << 8) + uint8[len - 1]
                parts.push(lookup[tmp >> 10] + lookup[(tmp >> 4) & 0x3F] + lookup[(tmp << 2) & 0x3F] + '=')
            }

            return parts.join('')
        }

        /***/
    }
    ), /* 590 */
    /***/
    (function(module, exports) {

        exports.read = function(buffer, offset, isLE, mLen, nBytes) {
            var e, m
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var nBits = -7
            var i = isLE ? (nBytes - 1) : 0
            var d = isLE ? -1 : 1
            var s = buffer[offset + i]

            i += d

            e = s & ((1 << (-nBits)) - 1)
            s >>= (-nBits)
            nBits += eLen
            for (; nBits > 0; e = (e * 256) + buffer[offset + i],
            i += d,
            nBits -= 8) {}

            m = e & ((1 << (-nBits)) - 1)
            e >>= (-nBits)
            nBits += mLen
            for (; nBits > 0; m = (m * 256) + buffer[offset + i],
            i += d,
            nBits -= 8) {}

            if (e === 0) {
                e = 1 - eBias
            } else if (e === eMax) {
                return m ? NaN : ((s ? -1 : 1) * Infinity)
            } else {
                m = m + Math.pow(2, mLen)
                e = e - eBias
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
        }

        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
            var i = isLE ? 0 : (nBytes - 1)
            var d = isLE ? 1 : -1
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

            value = Math.abs(value)

            if (isNaN(value) || value === Infinity) {
                m = isNaN(value) ? 1 : 0
                e = eMax
            } else {
                e = Math.floor(Math.log(value) / Math.LN2)
                if (value * (c = Math.pow(2, -e)) < 1) {
                    e--
                    c *= 2
                }
                if (e + eBias >= 1) {
                    value += rt / c
                } else {
                    value += rt * Math.pow(2, 1 - eBias)
                }
                if (value * c >= 2) {
                    e++
                    c /= 2
                }

                if (e + eBias >= eMax) {
                    m = 0
                    e = eMax
                } else if (e + eBias >= 1) {
                    m = ((value * c) - 1) * Math.pow(2, mLen)
                    e = e + eBias
                } else {
                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
                    e = 0
                }
            }

            for (; mLen >= 8; buffer[offset + i] = m & 0xff,
            i += d,
            m /= 256,
            mLen -= 8) {}

            e = (e << mLen) | m
            eLen += mLen
            for (; eLen > 0; buffer[offset + i] = e & 0xff,
            i += d,
            e /= 256,
            eLen -= 8) {}

            buffer[offset + i - d] |= s * 128
        }

        /***/
    }
    ), /* 591 */
    /***/
    (function(module, exports) {
    /* (ignored) */

    /***/
    }
    ), /* 592 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var Buffer = __webpack_require__(235).Buffer;
        var util = __webpack_require__(593);

        function copyBuffer(src, target, offset) {
            src.copy(target, offset);
        }

        module.exports = function() {
            function BufferList() {
                _classCallCheck(this, BufferList);

                this.head = null;
                this.tail = null;
                this.length = 0;
            }

            BufferList.prototype.push = function push(v) {
                var entry = {
                    data: v,
                    next: null
                };
                if (this.length > 0)
                    this.tail.next = entry;
                else
                    this.head = entry;
                this.tail = entry;
                ++this.length;
            }
            ;

            BufferList.prototype.unshift = function unshift(v) {
                var entry = {
                    data: v,
                    next: this.head
                };
                if (this.length === 0)
                    this.tail = entry;
                this.head = entry;
                ++this.length;
            }
            ;

            BufferList.prototype.shift = function shift() {
                if (this.length === 0)
                    return;
                var ret = this.head.data;
                if (this.length === 1)
                    this.head = this.tail = null;
                else
                    this.head = this.head.next;
                --this.length;
                return ret;
            }
            ;

            BufferList.prototype.clear = function clear() {
                this.head = this.tail = null;
                this.length = 0;
            }
            ;

            BufferList.prototype.join = function join(s) {
                if (this.length === 0)
                    return '';
                var p = this.head;
                var ret = '' + p.data;
                while (p = p.next) {
                    ret += s + p.data;
                }
                return ret;
            }
            ;

            BufferList.prototype.concat = function concat(n) {
                if (this.length === 0)
                    return Buffer.alloc(0);
                if (this.length === 1)
                    return this.head.data;
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while (p) {
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            }
            ;

            return BufferList;
        }();

        if (util && util.inspect && util.inspect.custom) {
            module.exports.prototype[util.inspect.custom] = function() {
                var obj = util.inspect({
                    length: this.length
                });
                return this.constructor.name + ' ' + obj;
            }
            ;
        }

        /***/
    }
    ), /* 593 */
    /***/
    (function(module, exports) {
    /* (ignored) */

    /***/
    }
    ), /* 594 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global) {
            var scope = (typeof global !== "undefined" && global) || (typeof self !== "undefined" && self) || window;
            var apply = Function.prototype.apply;

            // DOM APIs, for completeness

            exports.setTimeout = function() {
                return new Timeout(apply.call(setTimeout, scope, arguments),clearTimeout);
            }
            ;
            exports.setInterval = function() {
                return new Timeout(apply.call(setInterval, scope, arguments),clearInterval);
            }
            ;
            exports.clearTimeout = exports.clearInterval = function(timeout) {
                if (timeout) {
                    timeout.close();
                }
            }
            ;

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {}
            ;
            Timeout.prototype.close = function() {
                this._clearFn.call(scope, this._id);
            }
            ;

            // Does not start the time, just sets up the members needed.
            exports.enroll = function(item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            }
            ;

            exports.unenroll = function(item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            }
            ;

            exports._unrefActive = exports.active = function(item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            }
            ;

            // setimmediate attaches itself to the global object
            __webpack_require__(595);
            // On some exotic environments, it's not clear which object `setimmediate` was
            // able to install onto.  Search each possibility in the same order as the
            // `setimmediate` library.
            exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) || (typeof global !== "undefined" && global.setImmediate) || (this && this.setImmediate);
            exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) || (typeof global !== "undefined" && global.clearImmediate) || (this && this.clearImmediate);

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 595 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global, process) {
            (function(global, undefined) {
                "use strict";

                if (global.setImmediate) {
                    return;
                }

                var nextHandle = 1;
                // Spec says greater than zero
                var tasksByHandle = {};
                var currentlyRunningATask = false;
                var doc = global.document;
                var registerImmediate;

                function setImmediate(callback) {
                    // Callback can either be a function or a string
                    if (typeof callback !== "function") {
                        callback = new Function("" + callback);
                    }
                    // Copy function arguments
                    var args = new Array(arguments.length - 1);
                    for (var i = 0; i < args.length; i++) {
                        args[i] = arguments[i + 1];
                    }
                    // Store and register the task
                    var task = {
                        callback: callback,
                        args: args
                    };
                    tasksByHandle[nextHandle] = task;
                    registerImmediate(nextHandle);
                    return nextHandle++;
                }

                function clearImmediate(handle) {
                    delete tasksByHandle[handle];
                }

                function run(task) {
                    var callback = task.callback;
                    var args = task.args;
                    switch (args.length) {
                    case 0:
                        callback();
                        break;
                    case 1:
                        callback(args[0]);
                        break;
                    case 2:
                        callback(args[0], args[1]);
                        break;
                    case 3:
                        callback(args[0], args[1], args[2]);
                        break;
                    default:
                        callback.apply(undefined, args);
                        break;
                    }
                }

                function runIfPresent(handle) {
                    // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
                    // So if we're currently running a task, we'll need to delay this invocation.
                    if (currentlyRunningATask) {
                        // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                        // "too much recursion" error.
                        setTimeout(runIfPresent, 0, handle);
                    } else {
                        var task = tasksByHandle[handle];
                        if (task) {
                            currentlyRunningATask = true;
                            try {
                                run(task);
                            } finally {
                                clearImmediate(handle);
                                currentlyRunningATask = false;
                            }
                        }
                    }
                }

                function installNextTickImplementation() {
                    registerImmediate = function(handle) {
                        process.nextTick(function() {
                            runIfPresent(handle);
                        });
                    }
                    ;
                }

                function canUsePostMessage() {
                    // The test against `importScripts` prevents this implementation from being installed inside a web worker,
                    // where `global.postMessage` means something completely different and can't be used for this purpose.
                    if (global.postMessage && !global.importScripts) {
                        var postMessageIsAsynchronous = true;
                        var oldOnMessage = global.onmessage;
                        global.onmessage = function() {
                            postMessageIsAsynchronous = false;
                        }
                        ;
                        global.postMessage("", "*");
                        global.onmessage = oldOnMessage;
                        return postMessageIsAsynchronous;
                    }
                }

                function installPostMessageImplementation() {
                    // Installs an event handler on `global` for the `message` event: see
                    // * https://developer.mozilla.org/en/DOM/window.postMessage
                    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

                    var messagePrefix = "setImmediate$" + Math.random() + "$";
                    var onGlobalMessage = function(event) {
                        if (event.source === global && typeof event.data === "string" && event.data.indexOf(messagePrefix) === 0) {
                            runIfPresent(+event.data.slice(messagePrefix.length));
                        }
                    };

                    if (global.addEventListener) {
                        global.addEventListener("message", onGlobalMessage, false);
                    } else {
                        global.attachEvent("onmessage", onGlobalMessage);
                    }

                    registerImmediate = function(handle) {
                        global.postMessage(messagePrefix + handle, "*");
                    }
                    ;
                }

                function installMessageChannelImplementation() {
                    var channel = new MessageChannel();
                    channel.port1.onmessage = function(event) {
                        var handle = event.data;
                        runIfPresent(handle);
                    }
                    ;

                    registerImmediate = function(handle) {
                        channel.port2.postMessage(handle);
                    }
                    ;
                }

                function installReadyStateChangeImplementation() {
                    var html = doc.documentElement;
                    registerImmediate = function(handle) {
                        // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                        // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                        var script = doc.createElement("script");
                        script.onreadystatechange = function() {
                            runIfPresent(handle);
                            script.onreadystatechange = null;
                            html.removeChild(script);
                            script = null;
                        }
                        ;
                        html.appendChild(script);
                    }
                    ;
                }

                function installSetTimeoutImplementation() {
                    registerImmediate = function(handle) {
                        setTimeout(runIfPresent, 0, handle);
                    }
                    ;
                }

                // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
                var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
                attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

                // Don't get fooled by e.g. browserify environments.
                if ({}.toString.call(global.process) === "[object process]") {
                    // For Node.js before 0.9
                    installNextTickImplementation();

                } else if (canUsePostMessage()) {
                    // For non-IE10 modern browsers
                    installPostMessageImplementation();

                } else if (global.MessageChannel) {
                    // For web workers, where supported
                    installMessageChannelImplementation();

                } else if (doc && "onreadystatechange"in doc.createElement("script")) {
                    // For IE 6–8
                    installReadyStateChangeImplementation();

                } else {
                    // For older browsers
                    installSetTimeoutImplementation();
                }

                attachTo.setImmediate = setImmediate;
                attachTo.clearImmediate = clearImmediate;
            }(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(44)))

        /***/
    }
    ), /* 596 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global) {
            /**
 * Module exports.
 */

            module.exports = deprecate;

            /**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

            function deprecate(fn, msg) {
                if (config('noDeprecation')) {
                    return fn;
                }

                var warned = false;
                function deprecated() {
                    if (!warned) {
                        if (config('throwDeprecation')) {
                            throw new Error(msg);
                        } else if (config('traceDeprecation')) {
                            console.trace(msg);
                        } else {
                            console.warn(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            }

            /**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

            function config(name) {
                // accessing global.localStorage can trigger a DOMException in sandboxed iframes
                try {
                    if (!global.localStorage)
                        return false;
                } catch (_) {
                    return false;
                }
                var val = global.localStorage[name];
                if (null == val)
                    return false;
                return String(val).toLowerCase() === 'true';
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43)))

        /***/
    }
    ), /* 597 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a passthrough stream.
        // basically just the most minimal sort of Transform stream.
        // Every written chunk gets output as-is.

        module.exports = PassThrough;

        var Transform = __webpack_require__(379);

        /*<replacement>*/
        var util = Object.create(__webpack_require__(121));
        util.inherits = __webpack_require__(16);
        /*</replacement>*/

        util.inherits(PassThrough, Transform);

        function PassThrough(options) {
            if (!(this instanceof PassThrough))
                return new PassThrough(options);

            Transform.call(this, options);
        }

        PassThrough.prototype._transform = function(chunk, encoding, cb) {
            cb(null, chunk);
        }
        ;

        /***/
    }
    ), /* 598 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(236);

        /***/
    }
    ), /* 599 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(78);

        /***/
    }
    ), /* 600 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(234).Transform

        /***/
    }
    ), /* 601 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(234).PassThrough

        /***/
    }
    ), /* 602 */
    /***/
    (function(module, exports) {

        module.exports = function isBuffer(arg) {
            return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
        }

        /***/
    }
    ), /* 603 */
    /***/
    (function(module, exports) {

        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
            }
            ;
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                var TempCtor = function() {}
                TempCtor.prototype = superCtor.prototype
                ctor.prototype = new TempCtor()
                ctor.prototype.constructor = ctor
            }
        }

        /***/
    }
    ), /* 604 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /*jshint node:true */

        var Buffer = __webpack_require__(25).Buffer;
        // browserify
        var SlowBuffer = __webpack_require__(25).SlowBuffer;

        module.exports = bufferEq;

        function bufferEq(a, b) {

            // shortcutting on type is necessary for correctness
            if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                return false;
            }

            // buffer sizes should be well-known information, so despite this
            // shortcutting, it doesn't leak any information about the *contents* of the
            // buffers.
            if (a.length !== b.length) {
                return false;
            }

            var c = 0;
            for (var i = 0; i < a.length; i++) {
                /*jshint bitwise:false */
                c |= a[i] ^ b[i];
                // XOR
            }
            return c === 0;
        }

        bufferEq.install = function() {
            Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {
                return bufferEq(this, that);
            }
            ;
        }
        ;

        var origBufEqual = Buffer.prototype.equal;
        var origSlowBufEqual = SlowBuffer.prototype.equal;
        bufferEq.restore = function() {
            Buffer.prototype.equal = origBufEqual;
            SlowBuffer.prototype.equal = origSlowBufEqual;
        }
        ;

        /***/
    }
    ), /* 605 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(94)
        exports.createHash = exports.Hash = __webpack_require__(122)
        exports.createHmac = exports.Hmac = __webpack_require__(384)

        var algos = __webpack_require__(611)
        var algoKeys = Object.keys(algos)
        var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
        exports.getHashes = function() {
            return hashes
        }

        var p = __webpack_require__(387)
        exports.pbkdf2 = p.pbkdf2
        exports.pbkdf2Sync = p.pbkdf2Sync

        var aes = __webpack_require__(613)

        exports.Cipher = aes.Cipher
        exports.createCipher = aes.createCipher
        exports.Cipheriv = aes.Cipheriv
        exports.createCipheriv = aes.createCipheriv
        exports.Decipher = aes.Decipher
        exports.createDecipher = aes.createDecipher
        exports.Decipheriv = aes.Decipheriv
        exports.createDecipheriv = aes.createDecipheriv
        exports.getCiphers = aes.getCiphers
        exports.listCiphers = aes.listCiphers

        var dh = __webpack_require__(628)

        exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
        exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
        exports.getDiffieHellman = dh.getDiffieHellman
        exports.createDiffieHellman = dh.createDiffieHellman
        exports.DiffieHellman = dh.DiffieHellman

        var sign = __webpack_require__(633)

        exports.createSign = sign.createSign
        exports.Sign = sign.Sign
        exports.createVerify = sign.createVerify
        exports.Verify = sign.Verify

        exports.createECDH = __webpack_require__(667)

        var publicEncrypt = __webpack_require__(668)

        exports.publicEncrypt = publicEncrypt.publicEncrypt
        exports.privateEncrypt = publicEncrypt.privateEncrypt
        exports.publicDecrypt = publicEncrypt.publicDecrypt
        exports.privateDecrypt = publicEncrypt.privateDecrypt

        // the least I can do is make error messages for the rest of the node.js/crypto api.
        // ;[
        //   'createCredentials'
        // ].forEach(function (name) {
        //   exports[name] = function () {
        //     throw new Error([
        //       'sorry, ' + name + ' is not implemented yet',
        //       'we accept pull requests',
        //       'https://github.com/crypto-browserify/crypto-browserify'
        //     ].join('\n'))
        //   }
        // })

        var rf = __webpack_require__(671)

        exports.randomFill = rf.randomFill
        exports.randomFillSync = rf.randomFillSync

        exports.createCredentials = function() {
            throw new Error(['sorry, createCredentials is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\n'))
        }

        exports.constants = {
            'DH_CHECK_P_NOT_SAFE_PRIME': 2,
            'DH_CHECK_P_NOT_PRIME': 1,
            'DH_UNABLE_TO_CHECK_GENERATOR': 4,
            'DH_NOT_SUITABLE_GENERATOR': 8,
            'NPN_ENABLED': 1,
            'ALPN_ENABLED': 1,
            'RSA_PKCS1_PADDING': 1,
            'RSA_SSLV23_PADDING': 2,
            'RSA_NO_PADDING': 3,
            'RSA_PKCS1_OAEP_PADDING': 4,
            'RSA_X931_PADDING': 5,
            'RSA_PKCS1_PSS_PADDING': 6,
            'POINT_CONVERSION_COMPRESSED': 2,
            'POINT_CONVERSION_UNCOMPRESSED': 4,
            'POINT_CONVERSION_HYBRID': 6
        }

        /***/
    }
    ), /* 606 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

        var inherits = __webpack_require__(16)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0]

        var W = new Array(80)

        function Sha() {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha, Hash)

        Sha.prototype.init = function() {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl5(num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30(num) {
            return (num << 30) | (num >>> 2)
        }

        function ft(s, b, c, d) {
            if (s === 0)
                return (b & c) | ((~b) & d)
            if (s === 2)
                return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i)
                W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha.prototype._hash = function() {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha

        /***/
    }
    ), /* 607 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

        var inherits = __webpack_require__(16)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0]

        var W = new Array(80)

        function Sha1() {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha1, Hash)

        Sha1.prototype.init = function() {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl1(num) {
            return (num << 1) | (num >>> 31)
        }

        function rotl5(num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30(num) {
            return (num << 30) | (num >>> 2)
        }

        function ft(s, b, c, d) {
            if (s === 0)
                return (b & c) | ((~b) & d)
            if (s === 2)
                return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha1.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i)
                W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha1.prototype._hash = function() {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha1

        /***/
    }
    ), /* 608 */
    /***/
    (function(module, exports, __webpack_require__) {

        /**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

        var inherits = __webpack_require__(16)
        var Sha256 = __webpack_require__(382)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var W = new Array(64)

        function Sha224() {
            this.init()

            this._w = W
            // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha224, Sha256)

        Sha224.prototype.init = function() {
            this._a = 0xc1059ed8
            this._b = 0x367cd507
            this._c = 0x3070dd17
            this._d = 0xf70e5939
            this._e = 0xffc00b31
            this._f = 0x68581511
            this._g = 0x64f98fa7
            this._h = 0xbefa4fa4

            return this
        }

        Sha224.prototype._hash = function() {
            var H = Buffer.allocUnsafe(28)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)

            return H
        }

        module.exports = Sha224

        /***/
    }
    ), /* 609 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16)
        var SHA512 = __webpack_require__(383)
        var Hash = __webpack_require__(95)
        var Buffer = __webpack_require__(15).Buffer

        var W = new Array(160)

        function Sha384() {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha384, SHA512)

        Sha384.prototype.init = function() {
            this._ah = 0xcbbb9d5d
            this._bh = 0x629a292a
            this._ch = 0x9159015a
            this._dh = 0x152fecd8
            this._eh = 0x67332667
            this._fh = 0x8eb44a87
            this._gh = 0xdb0c2e0d
            this._hh = 0x47b5481d

            this._al = 0xc1059ed8
            this._bl = 0x367cd507
            this._cl = 0x3070dd17
            this._dl = 0xf70e5939
            this._el = 0xffc00b31
            this._fl = 0x68581511
            this._gl = 0x64f98fa7
            this._hl = 0xbefa4fa4

            return this
        }

        Sha384.prototype._hash = function() {
            var H = Buffer.allocUnsafe(48)

            function writeInt64BE(h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)

            return H
        }

        module.exports = Sha384

        /***/
    }
    ), /* 610 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var inherits = __webpack_require__(16)
        var Buffer = __webpack_require__(15).Buffer

        var Base = __webpack_require__(71)

        var ZEROS = Buffer.alloc(128)
        var blocksize = 64

        function Hmac(alg, key) {
            Base.call(this, 'digest')
            if (typeof key === 'string') {
                key = Buffer.from(key)
            }

            this._alg = alg
            this._key = key

            if (key.length > blocksize) {
                key = alg(key)
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
            var opad = this._opad = Buffer.allocUnsafe(blocksize)

            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }

            this._hash = [ipad]
        }

        inherits(Hmac, Base)

        Hmac.prototype._update = function(data) {
            this._hash.push(data)
        }

        Hmac.prototype._final = function() {
            var h = this._alg(Buffer.concat(this._hash))
            return this._alg(Buffer.concat([this._opad, h]))
        }
        module.exports = Hmac

        /***/
    }
    ), /* 611 */
    /***/
    (function(module, exports, __webpack_require__) {

        module.exports = __webpack_require__(386)

        /***/
    }
    ), /* 612 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(global, process) {
            var checkParameters = __webpack_require__(388)
            var defaultEncoding = __webpack_require__(389)
            var sync = __webpack_require__(390)
            var Buffer = __webpack_require__(15).Buffer

            var ZERO_BUF
            var subtle = global.crypto && global.crypto.subtle
            var toBrowser = {
                'sha': 'SHA-1',
                'sha-1': 'SHA-1',
                'sha1': 'SHA-1',
                'sha256': 'SHA-256',
                'sha-256': 'SHA-256',
                'sha384': 'SHA-384',
                'sha-384': 'SHA-384',
                'sha-512': 'SHA-512',
                'sha512': 'SHA-512'
            }
            var checks = []
            function checkNative(algo) {
                if (global.process && !global.process.browser) {
                    return Promise.resolve(false)
                }
                if (!subtle || !subtle.importKey || !subtle.deriveBits) {
                    return Promise.resolve(false)
                }
                if (checks[algo] !== undefined) {
                    return checks[algo]
                }
                ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
                var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
                    return true
                }).catch(function() {
                    return false
                })
                checks[algo] = prom
                return prom
            }

            function browserPbkdf2(password, salt, iterations, length, algo) {
                return subtle.importKey('raw', password, {
                    name: 'PBKDF2'
                }, false, ['deriveBits']).then(function(key) {
                    return subtle.deriveBits({
                        name: 'PBKDF2',
                        salt: salt,
                        iterations: iterations,
                        hash: {
                            name: algo
                        }
                    }, key, length << 3)
                }).then(function(res) {
                    return Buffer.from(res)
                })
            }

            function resolvePromise(promise, callback) {
                promise.then(function(out) {
                    process.nextTick(function() {
                        callback(null, out)
                    })
                }, function(e) {
                    process.nextTick(function() {
                        callback(e)
                    })
                })
            }
            module.exports = function(password, salt, iterations, keylen, digest, callback) {
                if (typeof digest === 'function') {
                    callback = digest
                    digest = undefined
                }

                digest = digest || 'sha1'
                var algo = toBrowser[digest.toLowerCase()]

                if (!algo || typeof global.Promise !== 'function') {
                    return process.nextTick(function() {
                        var out
                        try {
                            out = sync(password, salt, iterations, keylen, digest)
                        } catch (e) {
                            return callback(e)
                        }
                        callback(null, out)
                    })
                }

                checkParameters(password, salt, iterations, keylen)
                if (typeof callback !== 'function')
                    throw new Error('No callback provided to pbkdf2')
                if (!Buffer.isBuffer(password))
                    password = Buffer.from(password, defaultEncoding)
                if (!Buffer.isBuffer(salt))
                    salt = Buffer.from(salt, defaultEncoding)

                resolvePromise(checkNative(algo).then(function(resp) {
                    if (resp)
                        return browserPbkdf2(password, salt, iterations, keylen, algo)

                    return sync(password, salt, iterations, keylen, digest)
                }), callback)
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(44)))

        /***/
    }
    ), /* 613 */
    /***/
    (function(module, exports, __webpack_require__) {

        var DES = __webpack_require__(614)
        var aes = __webpack_require__(242)
        var aesModes = __webpack_require__(243)
        var desModes = __webpack_require__(627)
        var ebtk = __webpack_require__(161)

        function createCipher(suite, password) {
            suite = suite.toLowerCase()

            var keyLen, ivLen
            if (aesModes[suite]) {
                keyLen = aesModes[suite].key
                ivLen = aesModes[suite].iv
            } else if (desModes[suite]) {
                keyLen = desModes[suite].key * 8
                ivLen = desModes[suite].iv
            } else {
                throw new TypeError('invalid suite type')
            }

            var keys = ebtk(password, false, keyLen, ivLen)
            return createCipheriv(suite, keys.key, keys.iv)
        }

        function createDecipher(suite, password) {
            suite = suite.toLowerCase()

            var keyLen, ivLen
            if (aesModes[suite]) {
                keyLen = aesModes[suite].key
                ivLen = aesModes[suite].iv
            } else if (desModes[suite]) {
                keyLen = desModes[suite].key * 8
                ivLen = desModes[suite].iv
            } else {
                throw new TypeError('invalid suite type')
            }

            var keys = ebtk(password, false, keyLen, ivLen)
            return createDecipheriv(suite, keys.key, keys.iv)
        }

        function createCipheriv(suite, key, iv) {
            suite = suite.toLowerCase()
            if (aesModes[suite])
                return aes.createCipheriv(suite, key, iv)
            if (desModes[suite])
                return new DES({
                    key: key,
                    iv: iv,
                    mode: suite
                })

            throw new TypeError('invalid suite type')
        }

        function createDecipheriv(suite, key, iv) {
            suite = suite.toLowerCase()
            if (aesModes[suite])
                return aes.createDecipheriv(suite, key, iv)
            if (desModes[suite])
                return new DES({
                    key: key,
                    iv: iv,
                    mode: suite,
                    decrypt: true
                })

            throw new TypeError('invalid suite type')
        }

        function getCiphers() {
            return Object.keys(desModes).concat(aes.getCiphers())
        }

        exports.createCipher = exports.Cipher = createCipher
        exports.createCipheriv = exports.Cipheriv = createCipheriv
        exports.createDecipher = exports.Decipher = createDecipher
        exports.createDecipheriv = exports.Decipheriv = createDecipheriv
        exports.listCiphers = exports.getCiphers = getCiphers

        /***/
    }
    ), /* 614 */
    /***/
    (function(module, exports, __webpack_require__) {

        var CipherBase = __webpack_require__(71)
        var des = __webpack_require__(615)
        var inherits = __webpack_require__(16)
        var Buffer = __webpack_require__(15).Buffer

        var modes = {
            'des-ede3-cbc': des.CBC.instantiate(des.EDE),
            'des-ede3': des.EDE,
            'des-ede-cbc': des.CBC.instantiate(des.EDE),
            'des-ede': des.EDE,
            'des-cbc': des.CBC.instantiate(des.DES),
            'des-ecb': des.DES
        }
        modes.des = modes['des-cbc']
        modes.des3 = modes['des-ede3-cbc']
        module.exports = DES
        inherits(DES, CipherBase)
        function DES(opts) {
            CipherBase.call(this)
            var modeName = opts.mode.toLowerCase()
            var mode = modes[modeName]
            var type
            if (opts.decrypt) {
                type = 'decrypt'
            } else {
                type = 'encrypt'
            }
            var key = opts.key
            if (!Buffer.isBuffer(key)) {
                key = Buffer.from(key)
            }
            if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
                key = Buffer.concat([key, key.slice(0, 8)])
            }
            var iv = opts.iv
            if (!Buffer.isBuffer(iv)) {
                iv = Buffer.from(iv)
            }
            this._des = mode.create({
                key: key,
                iv: iv,
                type: type
            })
        }
        DES.prototype._update = function(data) {
            return Buffer.from(this._des.update(data))
        }
        DES.prototype._final = function() {
            return Buffer.from(this._des.final())
        }

        /***/
    }
    ), /* 615 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.utils = __webpack_require__(391);
        exports.Cipher = __webpack_require__(241);
        exports.DES = __webpack_require__(392);
        exports.CBC = __webpack_require__(616);
        exports.EDE = __webpack_require__(617);

        /***/
    }
    ), /* 616 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var assert = __webpack_require__(49);
        var inherits = __webpack_require__(16);

        var proto = {};

        function CBCState(iv) {
            assert.equal(iv.length, 8, 'Invalid IV length');

            this.iv = new Array(8);
            for (var i = 0; i < this.iv.length; i++)
                this.iv[i] = iv[i];
        }

        function instantiate(Base) {
            function CBC(options) {
                Base.call(this, options);
                this._cbcInit();
            }
            inherits(CBC, Base);

            var keys = Object.keys(proto);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                CBC.prototype[key] = proto[key];
            }

            CBC.create = function create(options) {
                return new CBC(options);
            }
            ;

            return CBC;
        }

        exports.instantiate = instantiate;

        proto._cbcInit = function _cbcInit() {
            var state = new CBCState(this.options.iv);
            this._cbcState = state;
        }
        ;

        proto._update = function _update(inp, inOff, out, outOff) {
            var state = this._cbcState;
            var superProto = this.constructor.super_.prototype;

            var iv = state.iv;
            if (this.type === 'encrypt') {
                for (var i = 0; i < this.blockSize; i++)
                    iv[i] ^= inp[inOff + i];

                superProto._update.call(this, iv, 0, out, outOff);

                for (var i = 0; i < this.blockSize; i++)
                    iv[i] = out[outOff + i];
            } else {
                superProto._update.call(this, inp, inOff, out, outOff);

                for (var i = 0; i < this.blockSize; i++)
                    out[outOff + i] ^= iv[i];

                for (var i = 0; i < this.blockSize; i++)
                    iv[i] = inp[inOff + i];
            }
        }
        ;

        /***/
    }
    ), /* 617 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var assert = __webpack_require__(49);
        var inherits = __webpack_require__(16);

        var Cipher = __webpack_require__(241);
        var DES = __webpack_require__(392);

        function EDEState(type, key) {
            assert.equal(key.length, 24, 'Invalid key length');

            var k1 = key.slice(0, 8);
            var k2 = key.slice(8, 16);
            var k3 = key.slice(16, 24);

            if (type === 'encrypt') {
                this.ciphers = [DES.create({
                    type: 'encrypt',
                    key: k1
                }), DES.create({
                    type: 'decrypt',
                    key: k2
                }), DES.create({
                    type: 'encrypt',
                    key: k3
                })];
            } else {
                this.ciphers = [DES.create({
                    type: 'decrypt',
                    key: k3
                }), DES.create({
                    type: 'encrypt',
                    key: k2
                }), DES.create({
                    type: 'decrypt',
                    key: k1
                })];
            }
        }

        function EDE(options) {
            Cipher.call(this, options);

            var state = new EDEState(this.type,this.options.key);
            this._edeState = state;
        }
        inherits(EDE, Cipher);

        module.exports = EDE;

        EDE.create = function create(options) {
            return new EDE(options);
        }
        ;

        EDE.prototype._update = function _update(inp, inOff, out, outOff) {
            var state = this._edeState;

            state.ciphers[0]._update(inp, inOff, out, outOff);
            state.ciphers[1]._update(out, outOff, out, outOff);
            state.ciphers[2]._update(out, outOff, out, outOff);
        }
        ;

        EDE.prototype._pad = DES.prototype._pad;
        EDE.prototype._unpad = DES.prototype._unpad;

        /***/
    }
    ), /* 618 */
    /***/
    (function(module, exports, __webpack_require__) {

        var MODES = __webpack_require__(243)
        var AuthCipher = __webpack_require__(396)
        var Buffer = __webpack_require__(15).Buffer
        var StreamCipher = __webpack_require__(397)
        var Transform = __webpack_require__(71)
        var aes = __webpack_require__(160)
        var ebtk = __webpack_require__(161)
        var inherits = __webpack_require__(16)

        function Cipher(mode, key, iv) {
            Transform.call(this)

            this._cache = new Splitter()
            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._mode = mode
            this._autopadding = true
        }

        inherits(Cipher, Transform)

        Cipher.prototype._update = function(data) {
            this._cache.add(data)
            var chunk
            var thing
            var out = []

            while ((chunk = this._cache.get())) {
                thing = this._mode.encrypt(this, chunk)
                out.push(thing)
            }

            return Buffer.concat(out)
        }

        var PADDING = Buffer.alloc(16, 0x10)

        Cipher.prototype._final = function() {
            var chunk = this._cache.flush()
            if (this._autopadding) {
                chunk = this._mode.encrypt(this, chunk)
                this._cipher.scrub()
                return chunk
            }

            if (!chunk.equals(PADDING)) {
                this._cipher.scrub()
                throw new Error('data not multiple of block length')
            }
        }

        Cipher.prototype.setAutoPadding = function(setTo) {
            this._autopadding = !!setTo
            return this
        }

        function Splitter() {
            this.cache = Buffer.allocUnsafe(0)
        }

        Splitter.prototype.add = function(data) {
            this.cache = Buffer.concat([this.cache, data])
        }

        Splitter.prototype.get = function() {
            if (this.cache.length > 15) {
                var out = this.cache.slice(0, 16)
                this.cache = this.cache.slice(16)
                return out
            }
            return null
        }

        Splitter.prototype.flush = function() {
            var len = 16 - this.cache.length
            var padBuff = Buffer.allocUnsafe(len)

            var i = -1
            while (++i < len) {
                padBuff.writeUInt8(len, i)
            }

            return Buffer.concat([this.cache, padBuff])
        }

        function createCipheriv(suite, password, iv) {
            var config = MODES[suite.toLowerCase()]
            if (!config)
                throw new TypeError('invalid suite type')

            if (typeof password === 'string')
                password = Buffer.from(password)
            if (password.length !== config.key / 8)
                throw new TypeError('invalid key length ' + password.length)

            if (typeof iv === 'string')
                iv = Buffer.from(iv)
            if (config.mode !== 'GCM' && iv.length !== config.iv)
                throw new TypeError('invalid iv length ' + iv.length)

            if (config.type === 'stream') {
                return new StreamCipher(config.module,password,iv)
            } else if (config.type === 'auth') {
                return new AuthCipher(config.module,password,iv)
            }

            return new Cipher(config.module,password,iv)
        }

        function createCipher(suite, password) {
            var config = MODES[suite.toLowerCase()]
            if (!config)
                throw new TypeError('invalid suite type')

            var keys = ebtk(password, false, config.key, config.iv)
            return createCipheriv(suite, keys.key, keys.iv)
        }

        exports.createCipheriv = createCipheriv
        exports.createCipher = createCipher

        /***/
    }
    ), /* 619 */
    /***/
    (function(module, exports) {

        exports.encrypt = function(self, block) {
            return self._cipher.encryptBlock(block)
        }

        exports.decrypt = function(self, block) {
            return self._cipher.decryptBlock(block)
        }

        /***/
    }
    ), /* 620 */
    /***/
    (function(module, exports, __webpack_require__) {

        var xor = __webpack_require__(123)

        exports.encrypt = function(self, block) {
            var data = xor(block, self._prev)

            self._prev = self._cipher.encryptBlock(data)
            return self._prev
        }

        exports.decrypt = function(self, block) {
            var pad = self._prev

            self._prev = block
            var out = self._cipher.decryptBlock(block)

            return xor(out, pad)
        }

        /***/
    }
    ), /* 621 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer
        var xor = __webpack_require__(123)

        function encryptStart(self, data, decrypt) {
            var len = data.length
            var out = xor(data, self._cache)
            self._cache = self._cache.slice(len)
            self._prev = Buffer.concat([self._prev, decrypt ? data : out])
            return out
        }

        exports.encrypt = function(self, data, decrypt) {
            var out = Buffer.allocUnsafe(0)
            var len

            while (data.length) {
                if (self._cache.length === 0) {
                    self._cache = self._cipher.encryptBlock(self._prev)
                    self._prev = Buffer.allocUnsafe(0)
                }

                if (self._cache.length <= data.length) {
                    len = self._cache.length
                    out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
                    data = data.slice(len)
                } else {
                    out = Buffer.concat([out, encryptStart(self, data, decrypt)])
                    break
                }
            }

            return out
        }

        /***/
    }
    ), /* 622 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer

        function encryptByte(self, byteParam, decrypt) {
            var pad = self._cipher.encryptBlock(self._prev)
            var out = pad[0] ^ byteParam

            self._prev = Buffer.concat([self._prev.slice(1), Buffer.from([decrypt ? byteParam : out])])

            return out
        }

        exports.encrypt = function(self, chunk, decrypt) {
            var len = chunk.length
            var out = Buffer.allocUnsafe(len)
            var i = -1

            while (++i < len) {
                out[i] = encryptByte(self, chunk[i], decrypt)
            }

            return out
        }

        /***/
    }
    ), /* 623 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer

        function encryptByte(self, byteParam, decrypt) {
            var pad
            var i = -1
            var len = 8
            var out = 0
            var bit, value
            while (++i < len) {
                pad = self._cipher.encryptBlock(self._prev)
                bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
                value = pad[0] ^ bit
                out += ((value & 0x80) >> (i % 8))
                self._prev = shiftIn(self._prev, decrypt ? bit : value)
            }
            return out
        }

        function shiftIn(buffer, value) {
            var len = buffer.length
            var i = -1
            var out = Buffer.allocUnsafe(buffer.length)
            buffer = Buffer.concat([buffer, Buffer.from([value])])

            while (++i < len) {
                out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
            }

            return out
        }

        exports.encrypt = function(self, chunk, decrypt) {
            var len = chunk.length
            var out = Buffer.allocUnsafe(len)
            var i = -1

            while (++i < len) {
                out[i] = encryptByte(self, chunk[i], decrypt)
            }

            return out
        }

        /***/
    }
    ), /* 624 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var xor = __webpack_require__(123)

            function getBlock(self) {
                self._prev = self._cipher.encryptBlock(self._prev)
                return self._prev
            }

            exports.encrypt = function(self, chunk) {
                while (self._cache.length < chunk.length) {
                    self._cache = Buffer.concat([self._cache, getBlock(self)])
                }

                var pad = self._cache.slice(0, chunk.length)
                self._cache = self._cache.slice(chunk.length)
                return xor(chunk, pad)
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 625 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Buffer = __webpack_require__(15).Buffer
        var ZEROES = Buffer.alloc(16, 0)

        function toArray(buf) {
            return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)]
        }

        function fromArray(out) {
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0] >>> 0, 0)
            buf.writeUInt32BE(out[1] >>> 0, 4)
            buf.writeUInt32BE(out[2] >>> 0, 8)
            buf.writeUInt32BE(out[3] >>> 0, 12)
            return buf
        }

        function GHASH(key) {
            this.h = key
            this.state = Buffer.alloc(16, 0)
            this.cache = Buffer.allocUnsafe(0)
        }

        // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
        // by Juho Vähä-Herttua
        GHASH.prototype.ghash = function(block) {
            var i = -1
            while (++i < block.length) {
                this.state[i] ^= block[i]
            }
            this._multiply()
        }

        GHASH.prototype._multiply = function() {
            var Vi = toArray(this.h)
            var Zi = [0, 0, 0, 0]
            var j, xi, lsbVi
            var i = -1
            while (++i < 128) {
                xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
                if (xi) {
                    // Z_i+1 = Z_i ^ V_i
                    Zi[0] ^= Vi[0]
                    Zi[1] ^= Vi[1]
                    Zi[2] ^= Vi[2]
                    Zi[3] ^= Vi[3]
                }

                // Store the value of LSB(V_i)
                lsbVi = (Vi[3] & 1) !== 0

                // V_i+1 = V_i >> 1
                for (j = 3; j > 0; j--) {
                    Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
                }
                Vi[0] = Vi[0] >>> 1

                // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
                if (lsbVi) {
                    Vi[0] = Vi[0] ^ (0xe1 << 24)
                }
            }
            this.state = fromArray(Zi)
        }

        GHASH.prototype.update = function(buf) {
            this.cache = Buffer.concat([this.cache, buf])
            var chunk
            while (this.cache.length >= 16) {
                chunk = this.cache.slice(0, 16)
                this.cache = this.cache.slice(16)
                this.ghash(chunk)
            }
        }

        GHASH.prototype.final = function(abl, bl) {
            if (this.cache.length) {
                this.ghash(Buffer.concat([this.cache, ZEROES], 16))
            }

            this.ghash(fromArray([0, abl, 0, bl]))
            return this.state
        }

        module.exports = GHASH

        /***/
    }
    ), /* 626 */
    /***/
    (function(module, exports, __webpack_require__) {

        var AuthCipher = __webpack_require__(396)
        var Buffer = __webpack_require__(15).Buffer
        var MODES = __webpack_require__(243)
        var StreamCipher = __webpack_require__(397)
        var Transform = __webpack_require__(71)
        var aes = __webpack_require__(160)
        var ebtk = __webpack_require__(161)
        var inherits = __webpack_require__(16)

        function Decipher(mode, key, iv) {
            Transform.call(this)

            this._cache = new Splitter()
            this._last = void 0
            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._mode = mode
            this._autopadding = true
        }

        inherits(Decipher, Transform)

        Decipher.prototype._update = function(data) {
            this._cache.add(data)
            var chunk
            var thing
            var out = []
            while ((chunk = this._cache.get(this._autopadding))) {
                thing = this._mode.decrypt(this, chunk)
                out.push(thing)
            }
            return Buffer.concat(out)
        }

        Decipher.prototype._final = function() {
            var chunk = this._cache.flush()
            if (this._autopadding) {
                return unpad(this._mode.decrypt(this, chunk))
            } else if (chunk) {
                throw new Error('data not multiple of block length')
            }
        }

        Decipher.prototype.setAutoPadding = function(setTo) {
            this._autopadding = !!setTo
            return this
        }

        function Splitter() {
            this.cache = Buffer.allocUnsafe(0)
        }

        Splitter.prototype.add = function(data) {
            this.cache = Buffer.concat([this.cache, data])
        }

        Splitter.prototype.get = function(autoPadding) {
            var out
            if (autoPadding) {
                if (this.cache.length > 16) {
                    out = this.cache.slice(0, 16)
                    this.cache = this.cache.slice(16)
                    return out
                }
            } else {
                if (this.cache.length >= 16) {
                    out = this.cache.slice(0, 16)
                    this.cache = this.cache.slice(16)
                    return out
                }
            }

            return null
        }

        Splitter.prototype.flush = function() {
            if (this.cache.length)
                return this.cache
        }

        function unpad(last) {
            var padded = last[15]
            if (padded < 1 || padded > 16) {
                throw new Error('unable to decrypt data')
            }
            var i = -1
            while (++i < padded) {
                if (last[(i + (16 - padded))] !== padded) {
                    throw new Error('unable to decrypt data')
                }
            }
            if (padded === 16)
                return

            return last.slice(0, 16 - padded)
        }

        function createDecipheriv(suite, password, iv) {
            var config = MODES[suite.toLowerCase()]
            if (!config)
                throw new TypeError('invalid suite type')

            if (typeof iv === 'string')
                iv = Buffer.from(iv)
            if (config.mode !== 'GCM' && iv.length !== config.iv)
                throw new TypeError('invalid iv length ' + iv.length)

            if (typeof password === 'string')
                password = Buffer.from(password)
            if (password.length !== config.key / 8)
                throw new TypeError('invalid key length ' + password.length)

            if (config.type === 'stream') {
                return new StreamCipher(config.module,password,iv,true)
            } else if (config.type === 'auth') {
                return new AuthCipher(config.module,password,iv,true)
            }

            return new Decipher(config.module,password,iv)
        }

        function createDecipher(suite, password) {
            var config = MODES[suite.toLowerCase()]
            if (!config)
                throw new TypeError('invalid suite type')

            var keys = ebtk(password, false, config.key, config.iv)
            return createDecipheriv(suite, keys.key, keys.iv)
        }

        exports.createDecipher = createDecipher
        exports.createDecipheriv = createDecipheriv

        /***/
    }
    ), /* 627 */
    /***/
    (function(module, exports) {

        exports['des-ecb'] = {
            key: 8,
            iv: 0
        }
        exports['des-cbc'] = exports.des = {
            key: 8,
            iv: 8
        }
        exports['des-ede3-cbc'] = exports.des3 = {
            key: 24,
            iv: 8
        }
        exports['des-ede3'] = {
            key: 24,
            iv: 0
        }
        exports['des-ede-cbc'] = {
            key: 16,
            iv: 8
        }
        exports['des-ede'] = {
            key: 16,
            iv: 0
        }

        /***/
    }
    ), /* 628 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var generatePrime = __webpack_require__(398)
            var primes = __webpack_require__(631)

            var DH = __webpack_require__(632)

            function getDiffieHellman(mod) {
                var prime = new Buffer(primes[mod].prime,'hex')
                var gen = new Buffer(primes[mod].gen,'hex')

                return new DH(prime,gen)
            }

            var ENCODINGS = {
                'binary': true,
                'hex': true,
                'base64': true
            }

            function createDiffieHellman(prime, enc, generator, genc) {
                if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
                    return createDiffieHellman(prime, 'binary', enc, generator)
                }

                enc = enc || 'binary'
                genc = genc || 'binary'
                generator = generator || new Buffer([2])

                if (!Buffer.isBuffer(generator)) {
                    generator = new Buffer(generator,genc)
                }

                if (typeof prime === 'number') {
                    return new DH(generatePrime(prime, generator),generator,true)
                }

                if (!Buffer.isBuffer(prime)) {
                    prime = new Buffer(prime,enc)
                }

                return new DH(prime,generator,true)
            }

            exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
            exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 629 */
    /***/
    (function(module, exports) {
    /* (ignored) */

    /***/
    }
    ), /* 630 */
    /***/
    (function(module, exports) {
    /* (ignored) */

    /***/
    }
    ), /* 631 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}}");

        /***/
    }
    ), /* 632 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var BN = __webpack_require__(30);
            var MillerRabin = __webpack_require__(399);
            var millerRabin = new MillerRabin();
            var TWENTYFOUR = new BN(24);
            var ELEVEN = new BN(11);
            var TEN = new BN(10);
            var THREE = new BN(3);
            var SEVEN = new BN(7);
            var primes = __webpack_require__(398);
            var randomBytes = __webpack_require__(94);
            module.exports = DH;

            function setPublicKey(pub, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(pub)) {
                    pub = new Buffer(pub,enc);
                }
                this._pub = new BN(pub);
                return this;
            }

            function setPrivateKey(priv, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(priv)) {
                    priv = new Buffer(priv,enc);
                }
                this._priv = new BN(priv);
                return this;
            }

            var primeCache = {};
            function checkPrime(prime, generator) {
                var gen = generator.toString('hex');
                var hex = [gen, prime.toString(16)].join('_');
                if (hex in primeCache) {
                    return primeCache[hex];
                }
                var error = 0;

                if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
                    //not a prime so +1
                    error += 1;

                    if (gen === '02' || gen === '05') {
                        // we'd be able to check the generator
                        // it would fail so +8
                        error += 8;
                    } else {
                        //we wouldn't be able to test the generator
                        // so +4
                        error += 4;
                    }
                    primeCache[hex] = error;
                    return error;
                }
                if (!millerRabin.test(prime.shrn(1))) {
                    //not a safe prime
                    error += 2;
                }
                var rem;
                switch (gen) {
                case '02':
                    if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
                        // unsuidable generator
                        error += 8;
                    }
                    break;
                case '05':
                    rem = prime.mod(TEN);
                    if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
                        // prime mod 10 needs to equal 3 or 7
                        error += 8;
                    }
                    break;
                default:
                    error += 4;
                }
                primeCache[hex] = error;
                return error;
            }

            function DH(prime, generator, malleable) {
                this.setGenerator(generator);
                this.__prime = new BN(prime);
                this._prime = BN.mont(this.__prime);
                this._primeLen = prime.length;
                this._pub = undefined;
                this._priv = undefined;
                this._primeCode = undefined;
                if (malleable) {
                    this.setPublicKey = setPublicKey;
                    this.setPrivateKey = setPrivateKey;
                } else {
                    this._primeCode = 8;
                }
            }
            Object.defineProperty(DH.prototype, 'verifyError', {
                enumerable: true,
                get: function() {
                    if (typeof this._primeCode !== 'number') {
                        this._primeCode = checkPrime(this.__prime, this.__gen);
                    }
                    return this._primeCode;
                }
            });
            DH.prototype.generateKeys = function() {
                if (!this._priv) {
                    this._priv = new BN(randomBytes(this._primeLen));
                }
                this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
                return this.getPublicKey();
            }
            ;

            DH.prototype.computeSecret = function(other) {
                other = new BN(other);
                other = other.toRed(this._prime);
                var secret = other.redPow(this._priv).fromRed();
                var out = new Buffer(secret.toArray());
                var prime = this.getPrime();
                if (out.length < prime.length) {
                    var front = new Buffer(prime.length - out.length);
                    front.fill(0);
                    out = Buffer.concat([front, out]);
                }
                return out;
            }
            ;

            DH.prototype.getPublicKey = function getPublicKey(enc) {
                return formatReturnValue(this._pub, enc);
            }
            ;

            DH.prototype.getPrivateKey = function getPrivateKey(enc) {
                return formatReturnValue(this._priv, enc);
            }
            ;

            DH.prototype.getPrime = function(enc) {
                return formatReturnValue(this.__prime, enc);
            }
            ;

            DH.prototype.getGenerator = function(enc) {
                return formatReturnValue(this._gen, enc);
            }
            ;

            DH.prototype.setGenerator = function(gen, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(gen)) {
                    gen = new Buffer(gen,enc);
                }
                this.__gen = gen;
                this._gen = new BN(gen);
                return this;
            }
            ;

            function formatReturnValue(bn, enc) {
                var buf = new Buffer(bn.toArray());
                if (!enc) {
                    return buf;
                } else {
                    return buf.toString(enc);
                }
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 633 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var createHash = __webpack_require__(122)
            var stream = __webpack_require__(93)
            var inherits = __webpack_require__(16)
            var sign = __webpack_require__(634)
            var verify = __webpack_require__(666)

            var algorithms = __webpack_require__(386)
            Object.keys(algorithms).forEach(function(key) {
                algorithms[key].id = new Buffer(algorithms[key].id,'hex')
                algorithms[key.toLowerCase()] = algorithms[key]
            })

            function Sign(algorithm) {
                stream.Writable.call(this)

                var data = algorithms[algorithm]
                if (!data)
                    throw new Error('Unknown message digest')

                this._hashType = data.hash
                this._hash = createHash(data.hash)
                this._tag = data.id
                this._signType = data.sign
            }
            inherits(Sign, stream.Writable)

            Sign.prototype._write = function _write(data, _, done) {
                this._hash.update(data)
                done()
            }

            Sign.prototype.update = function update(data, enc) {
                if (typeof data === 'string')
                    data = new Buffer(data,enc)

                this._hash.update(data)
                return this
            }

            Sign.prototype.sign = function signMethod(key, enc) {
                this.end()
                var hash = this._hash.digest()
                var sig = sign(hash, key, this._hashType, this._signType, this._tag)

                return enc ? sig.toString(enc) : sig
            }

            function Verify(algorithm) {
                stream.Writable.call(this)

                var data = algorithms[algorithm]
                if (!data)
                    throw new Error('Unknown message digest')

                this._hash = createHash(data.hash)
                this._tag = data.id
                this._signType = data.sign
            }
            inherits(Verify, stream.Writable)

            Verify.prototype._write = function _write(data, _, done) {
                this._hash.update(data)
                done()
            }

            Verify.prototype.update = function update(data, enc) {
                if (typeof data === 'string')
                    data = new Buffer(data,enc)

                this._hash.update(data)
                return this
            }

            Verify.prototype.verify = function verifyMethod(key, sig, enc) {
                if (typeof sig === 'string')
                    sig = new Buffer(sig,enc)

                this.end()
                var hash = this._hash.digest()
                return verify(sig, hash, key, this._signType, this._tag)
            }

            function createSign(algorithm) {
                return new Sign(algorithm)
            }

            function createVerify(algorithm) {
                return new Verify(algorithm)
            }

            module.exports = {
                Sign: createSign,
                Verify: createVerify,
                createSign: createSign,
                createVerify: createVerify
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 634 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
            var createHmac = __webpack_require__(384)
            var crt = __webpack_require__(245)
            var EC = __webpack_require__(246).ec
            var BN = __webpack_require__(30)
            var parseKeys = __webpack_require__(163)
            var curves = __webpack_require__(409)

            function sign(hash, key, hashType, signType, tag) {
                var priv = parseKeys(key)
                if (priv.curve) {
                    // rsa keys can be interpreted as ecdsa ones in openssl
                    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa')
                        throw new Error('wrong private key type')
                    return ecSign(hash, priv)
                } else if (priv.type === 'dsa') {
                    if (signType !== 'dsa')
                        throw new Error('wrong private key type')
                    return dsaSign(hash, priv, hashType)
                } else {
                    if (signType !== 'rsa' && signType !== 'ecdsa/rsa')
                        throw new Error('wrong private key type')
                }
                hash = Buffer.concat([tag, hash])
                var len = priv.modulus.byteLength()
                var pad = [0, 1]
                while (hash.length + pad.length + 1 < len)
                    pad.push(0xff)
                pad.push(0x00)
                var i = -1
                while (++i < hash.length)
                    pad.push(hash[i])

                var out = crt(pad, priv)
                return out
            }

            function ecSign(hash, priv) {
                var curveId = curves[priv.curve.join('.')]
                if (!curveId)
                    throw new Error('unknown curve ' + priv.curve.join('.'))

                var curve = new EC(curveId)
                var key = curve.keyFromPrivate(priv.privateKey)
                var out = key.sign(hash)

                return new Buffer(out.toDER())
            }

            function dsaSign(hash, priv, algo) {
                var x = priv.params.priv_key
                var p = priv.params.p
                var q = priv.params.q
                var g = priv.params.g
                var r = new BN(0)
                var k
                var H = bits2int(hash, q).mod(q)
                var s = false
                var kv = getKey(x, q, hash, algo)
                while (s === false) {
                    k = makeKey(q, kv, algo)
                    r = makeR(g, k, p, q)
                    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
                    if (s.cmpn(0) === 0) {
                        s = false
                        r = new BN(0)
                    }
                }
                return toDER(r, s)
            }

            function toDER(r, s) {
                r = r.toArray()
                s = s.toArray()

                // Pad values
                if (r[0] & 0x80)
                    r = [0].concat(r)
                if (s[0] & 0x80)
                    s = [0].concat(s)

                var total = r.length + s.length + 4
                var res = [0x30, total, 0x02, r.length]
                res = res.concat(r, [0x02, s.length], s)
                return new Buffer(res)
            }

            function getKey(x, q, hash, algo) {
                x = new Buffer(x.toArray())
                if (x.length < q.byteLength()) {
                    var zeros = new Buffer(q.byteLength() - x.length)
                    zeros.fill(0)
                    x = Buffer.concat([zeros, x])
                }
                var hlen = hash.length
                var hbits = bits2octets(hash, q)
                var v = new Buffer(hlen)
                v.fill(1)
                var k = new Buffer(hlen)
                k.fill(0)
                k = createHmac(algo, k).update(v).update(new Buffer([0])).update(x).update(hbits).digest()
                v = createHmac(algo, k).update(v).digest()
                k = createHmac(algo, k).update(v).update(new Buffer([1])).update(x).update(hbits).digest()
                v = createHmac(algo, k).update(v).digest()
                return {
                    k: k,
                    v: v
                }
            }

            function bits2int(obits, q) {
                var bits = new BN(obits)
                var shift = (obits.length << 3) - q.bitLength()
                if (shift > 0)
                    bits.ishrn(shift)
                return bits
            }

            function bits2octets(bits, q) {
                bits = bits2int(bits, q)
                bits = bits.mod(q)
                var out = new Buffer(bits.toArray())
                if (out.length < q.byteLength()) {
                    var zeros = new Buffer(q.byteLength() - out.length)
                    zeros.fill(0)
                    out = Buffer.concat([zeros, out])
                }
                return out
            }

            function makeKey(q, kv, algo) {
                var t
                var k

                do {
                    t = new Buffer(0)

                    while (t.length * 8 < q.bitLength()) {
                        kv.v = createHmac(algo, kv.k).update(kv.v).digest()
                        t = Buffer.concat([t, kv.v])
                    }

                    k = bits2int(t, q)
                    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([0])).digest()
                    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
                } while (k.cmp(q) !== -1)
                return k
            }

            function makeR(g, k, p, q) {
                return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
            }

            module.exports = sign
            module.exports.getKey = getKey
            module.exports.makeKey = makeKey

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 635 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"name\":\"elliptic\",\"version\":\"6.5.2\",\"description\":\"EC cryptography\",\"main\":\"lib/elliptic.js\",\"files\":[\"lib\"],\"scripts\":{\"jscs\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"jshint\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"lint\":\"npm run jscs && npm run jshint\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"test\":\"npm run lint && npm run unit\",\"version\":\"grunt dist && git add dist/\"},\"repository\":{\"type\":\"git\",\"url\":\"git@github.com:indutny/elliptic\"},\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"author\":\"Fedor Indutny <fedor@indutny.com>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"homepage\":\"https://github.com/indutny/elliptic\",\"devDependencies\":{\"brfs\":\"^1.4.3\",\"coveralls\":\"^3.0.8\",\"grunt\":\"^1.0.4\",\"grunt-browserify\":\"^5.0.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-connect\":\"^1.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^1.0.1\",\"grunt-mocha-istanbul\":\"^3.0.1\",\"grunt-saucelabs\":\"^9.0.1\",\"istanbul\":\"^0.4.2\",\"jscs\":\"^3.0.7\",\"jshint\":\"^2.10.3\",\"mocha\":\"^6.2.2\"},\"dependencies\":{\"bn.js\":\"^4.4.0\",\"brorand\":\"^1.0.1\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.0\",\"inherits\":\"^2.0.1\",\"minimalistic-assert\":\"^1.0.0\",\"minimalistic-crypto-utils\":\"^1.0.0\"}}");

        /***/
    }
    ), /* 636 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(50);
        var BN = __webpack_require__(30);
        var inherits = __webpack_require__(16);
        var Base = __webpack_require__(162);

        var assert = utils.assert;

        function ShortCurve(conf) {
            Base.call(this, 'short', conf);

            this.a = new BN(conf.a,16).toRed(this.red);
            this.b = new BN(conf.b,16).toRed(this.red);
            this.tinv = this.two.redInvm();

            this.zeroA = this.a.fromRed().cmpn(0) === 0;
            this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

            // If the curve is endomorphic, precalculate beta and lambda
            this.endo = this._getEndomorphism(conf);
            this._endoWnafT1 = new Array(4);
            this._endoWnafT2 = new Array(4);
        }
        inherits(ShortCurve, Base);
        module.exports = ShortCurve;

        ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
            // No efficient endomorphism
            if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
                return;

            // Compute beta and lambda, that lambda * P = (beta * Px; Py)
            var beta;
            var lambda;
            if (conf.beta) {
                beta = new BN(conf.beta,16).toRed(this.red);
            } else {
                var betas = this._getEndoRoots(this.p);
                // Choose the smallest beta
                beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
                beta = beta.toRed(this.red);
            }
            if (conf.lambda) {
                lambda = new BN(conf.lambda,16);
            } else {
                // Choose the lambda that is matching selected beta
                var lambdas = this._getEndoRoots(this.n);
                if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
                    lambda = lambdas[0];
                } else {
                    lambda = lambdas[1];
                    assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
                }
            }

            // Get basis vectors, used for balanced length-two representation
            var basis;
            if (conf.basis) {
                basis = conf.basis.map(function(vec) {
                    return {
                        a: new BN(vec.a,16),
                        b: new BN(vec.b,16)
                    };
                });
            } else {
                basis = this._getEndoBasis(lambda);
            }

            return {
                beta: beta,
                lambda: lambda,
                basis: basis
            };
        }
        ;

        ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
            // Find roots of for x^2 + x + 1 in F
            // Root = (-1 +- Sqrt(-3)) / 2
            //
            var red = num === this.p ? this.red : BN.mont(num);
            var tinv = new BN(2).toRed(red).redInvm();
            var ntinv = tinv.redNeg();

            var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

            var l1 = ntinv.redAdd(s).fromRed();
            var l2 = ntinv.redSub(s).fromRed();
            return [l1, l2];
        }
        ;

        ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
            // aprxSqrt >= sqrt(this.n)
            var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

            // 3.74
            // Run EGCD, until r(L + 1) < aprxSqrt
            var u = lambda;
            var v = this.n.clone();
            var x1 = new BN(1);
            var y1 = new BN(0);
            var x2 = new BN(0);
            var y2 = new BN(1);

            // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
            var a0;
            var b0;
            // First vector
            var a1;
            var b1;
            // Second vector
            var a2;
            var b2;

            var prevR;
            var i = 0;
            var r;
            var x;
            while (u.cmpn(0) !== 0) {
                var q = v.div(u);
                r = v.sub(q.mul(u));
                x = x2.sub(q.mul(x1));
                var y = y2.sub(q.mul(y1));

                if (!a1 && r.cmp(aprxSqrt) < 0) {
                    a0 = prevR.neg();
                    b0 = x1;
                    a1 = r.neg();
                    b1 = x;
                } else if (a1 && ++i === 2) {
                    break;
                }
                prevR = r;

                v = u;
                u = r;
                x2 = x1;
                x1 = x;
                y2 = y1;
                y1 = y;
            }
            a2 = r.neg();
            b2 = x;

            var len1 = a1.sqr().add(b1.sqr());
            var len2 = a2.sqr().add(b2.sqr());
            if (len2.cmp(len1) >= 0) {
                a2 = a0;
                b2 = b0;
            }

            // Normalize signs
            if (a1.negative) {
                a1 = a1.neg();
                b1 = b1.neg();
            }
            if (a2.negative) {
                a2 = a2.neg();
                b2 = b2.neg();
            }

            return [{
                a: a1,
                b: b1
            }, {
                a: a2,
                b: b2
            }];
        }
        ;

        ShortCurve.prototype._endoSplit = function _endoSplit(k) {
            var basis = this.endo.basis;
            var v1 = basis[0];
            var v2 = basis[1];

            var c1 = v2.b.mul(k).divRound(this.n);
            var c2 = v1.b.neg().mul(k).divRound(this.n);

            var p1 = c1.mul(v1.a);
            var p2 = c2.mul(v2.a);
            var q1 = c1.mul(v1.b);
            var q2 = c2.mul(v2.b);

            // Calculate answer
            var k1 = k.sub(p1).sub(p2);
            var k2 = q1.add(q2).neg();
            return {
                k1: k1,
                k2: k2
            };
        }
        ;

        ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
            x = new BN(x,16);
            if (!x.red)
                x = x.toRed(this.red);

            var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
            var y = y2.redSqrt();
            if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            // XXX Is there any way to tell if the number is odd without converting it
            // to non-red form?
            var isOdd = y.fromRed().isOdd();
            if (odd && !isOdd || !odd && isOdd)
                y = y.redNeg();

            return this.point(x, y);
        }
        ;

        ShortCurve.prototype.validate = function validate(point) {
            if (point.inf)
                return true;

            var x = point.x;
            var y = point.y;

            var ax = this.a.redMul(x);
            var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
            return y.redSqr().redISub(rhs).cmpn(0) === 0;
        }
        ;

        ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
            var npoints = this._endoWnafT1;
            var ncoeffs = this._endoWnafT2;
            for (var i = 0; i < points.length; i++) {
                var split = this._endoSplit(coeffs[i]);
                var p = points[i];
                var beta = p._getBeta();

                if (split.k1.negative) {
                    split.k1.ineg();
                    p = p.neg(true);
                }
                if (split.k2.negative) {
                    split.k2.ineg();
                    beta = beta.neg(true);
                }

                npoints[i * 2] = p;
                npoints[i * 2 + 1] = beta;
                ncoeffs[i * 2] = split.k1;
                ncoeffs[i * 2 + 1] = split.k2;
            }
            var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

            // Clean-up references to points and coefficients
            for (var j = 0; j < i * 2; j++) {
                npoints[j] = null;
                ncoeffs[j] = null;
            }
            return res;
        }
        ;

        function Point(curve, x, y, isRed) {
            Base.BasePoint.call(this, curve, 'affine');
            if (x === null && y === null) {
                this.x = null;
                this.y = null;
                this.inf = true;
            } else {
                this.x = new BN(x,16);
                this.y = new BN(y,16);
                // Force redgomery representation when loading from JSON
                if (isRed) {
                    this.x.forceRed(this.curve.red);
                    this.y.forceRed(this.curve.red);
                }
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.y.red)
                    this.y = this.y.toRed(this.curve.red);
                this.inf = false;
            }
        }
        inherits(Point, Base.BasePoint);

        ShortCurve.prototype.point = function point(x, y, isRed) {
            return new Point(this,x,y,isRed);
        }
        ;

        ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
            return Point.fromJSON(this, obj, red);
        }
        ;

        Point.prototype._getBeta = function _getBeta() {
            if (!this.curve.endo)
                return;

            var pre = this.precomputed;
            if (pre && pre.beta)
                return pre.beta;

            var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
            if (pre) {
                var curve = this.curve;
                var endoMul = function(p) {
                    return curve.point(p.x.redMul(curve.endo.beta), p.y);
                };
                pre.beta = beta;
                beta.precomputed = {
                    beta: null,
                    naf: pre.naf && {
                        wnd: pre.naf.wnd,
                        points: pre.naf.points.map(endoMul)
                    },
                    doubles: pre.doubles && {
                        step: pre.doubles.step,
                        points: pre.doubles.points.map(endoMul)
                    }
                };
            }
            return beta;
        }
        ;

        Point.prototype.toJSON = function toJSON() {
            if (!this.precomputed)
                return [this.x, this.y];

            return [this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            }];
        }
        ;

        Point.fromJSON = function fromJSON(curve, obj, red) {
            if (typeof obj === 'string')
                obj = JSON.parse(obj);
            var res = curve.point(obj[0], obj[1], red);
            if (!obj[2])
                return res;

            function obj2point(obj) {
                return curve.point(obj[0], obj[1], red);
            }

            var pre = obj[2];
            res.precomputed = {
                beta: null,
                doubles: pre.doubles && {
                    step: pre.doubles.step,
                    points: [res].concat(pre.doubles.points.map(obj2point))
                },
                naf: pre.naf && {
                    wnd: pre.naf.wnd,
                    points: [res].concat(pre.naf.points.map(obj2point))
                }
            };
            return res;
        }
        ;

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
        }
        ;

        Point.prototype.isInfinity = function isInfinity() {
            return this.inf;
        }
        ;

        Point.prototype.add = function add(p) {
            // O + P = P
            if (this.inf)
                return p;

            // P + O = P
            if (p.inf)
                return this;

            // P + P = 2P
            if (this.eq(p))
                return this.dbl();

            // P + (-P) = O
            if (this.neg().eq(p))
                return this.curve.point(null, null);

            // P + Q = O
            if (this.x.cmp(p.x) === 0)
                return this.curve.point(null, null);

            var c = this.y.redSub(p.y);
            if (c.cmpn(0) !== 0)
                c = c.redMul(this.x.redSub(p.x).redInvm());
            var nx = c.redSqr().redISub(this.x).redISub(p.x);
            var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
            return this.curve.point(nx, ny);
        }
        ;

        Point.prototype.dbl = function dbl() {
            if (this.inf)
                return this;

            // 2P = O
            var ys1 = this.y.redAdd(this.y);
            if (ys1.cmpn(0) === 0)
                return this.curve.point(null, null);

            var a = this.curve.a;

            var x2 = this.x.redSqr();
            var dyinv = ys1.redInvm();
            var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

            var nx = c.redSqr().redISub(this.x.redAdd(this.x));
            var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
            return this.curve.point(nx, ny);
        }
        ;

        Point.prototype.getX = function getX() {
            return this.x.fromRed();
        }
        ;

        Point.prototype.getY = function getY() {
            return this.y.fromRed();
        }
        ;

        Point.prototype.mul = function mul(k) {
            k = new BN(k,16);
            if (this.isInfinity())
                return this;
            else if (this._hasDoubles(k))
                return this.curve._fixedNafMul(this, k);
            else if (this.curve.endo)
                return this.curve._endoWnafMulAdd([this], [k]);
            else
                return this.curve._wnafMul(this, k);
        }
        ;

        Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
            var points = [this, p2];
            var coeffs = [k1, k2];
            if (this.curve.endo)
                return this.curve._endoWnafMulAdd(points, coeffs);
            else
                return this.curve._wnafMulAdd(1, points, coeffs, 2);
        }
        ;

        Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
            var points = [this, p2];
            var coeffs = [k1, k2];
            if (this.curve.endo)
                return this.curve._endoWnafMulAdd(points, coeffs, true);
            else
                return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
        }
        ;

        Point.prototype.eq = function eq(p) {
            return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
        }
        ;

        Point.prototype.neg = function neg(_precompute) {
            if (this.inf)
                return this;

            var res = this.curve.point(this.x, this.y.redNeg());
            if (_precompute && this.precomputed) {
                var pre = this.precomputed;
                var negate = function(p) {
                    return p.neg();
                };
                res.precomputed = {
                    naf: pre.naf && {
                        wnd: pre.naf.wnd,
                        points: pre.naf.points.map(negate)
                    },
                    doubles: pre.doubles && {
                        step: pre.doubles.step,
                        points: pre.doubles.points.map(negate)
                    }
                };
            }
            return res;
        }
        ;

        Point.prototype.toJ = function toJ() {
            if (this.inf)
                return this.curve.jpoint(null, null, null);

            var res = this.curve.jpoint(this.x, this.y, this.curve.one);
            return res;
        }
        ;

        function JPoint(curve, x, y, z) {
            Base.BasePoint.call(this, curve, 'jacobian');
            if (x === null && y === null && z === null) {
                this.x = this.curve.one;
                this.y = this.curve.one;
                this.z = new BN(0);
            } else {
                this.x = new BN(x,16);
                this.y = new BN(y,16);
                this.z = new BN(z,16);
            }
            if (!this.x.red)
                this.x = this.x.toRed(this.curve.red);
            if (!this.y.red)
                this.y = this.y.toRed(this.curve.red);
            if (!this.z.red)
                this.z = this.z.toRed(this.curve.red);

            this.zOne = this.z === this.curve.one;
        }
        inherits(JPoint, Base.BasePoint);

        ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
            return new JPoint(this,x,y,z);
        }
        ;

        JPoint.prototype.toP = function toP() {
            if (this.isInfinity())
                return this.curve.point(null, null);

            var zinv = this.z.redInvm();
            var zinv2 = zinv.redSqr();
            var ax = this.x.redMul(zinv2);
            var ay = this.y.redMul(zinv2).redMul(zinv);

            return this.curve.point(ax, ay);
        }
        ;

        JPoint.prototype.neg = function neg() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }
        ;

        JPoint.prototype.add = function add(p) {
            // O + P = P
            if (this.isInfinity())
                return p;

            // P + O = P
            if (p.isInfinity())
                return this;

            // 12M + 4S + 7A
            var pz2 = p.z.redSqr();
            var z2 = this.z.redSqr();
            var u1 = this.x.redMul(pz2);
            var u2 = p.x.redMul(z2);
            var s1 = this.y.redMul(pz2.redMul(p.z));
            var s2 = p.y.redMul(z2.redMul(this.z));

            var h = u1.redSub(u2);
            var r = s1.redSub(s2);
            if (h.cmpn(0) === 0) {
                if (r.cmpn(0) !== 0)
                    return this.curve.jpoint(null, null, null);
                else
                    return this.dbl();
            }

            var h2 = h.redSqr();
            var h3 = h2.redMul(h);
            var v = u1.redMul(h2);

            var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
            var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
            var nz = this.z.redMul(p.z).redMul(h);

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype.mixedAdd = function mixedAdd(p) {
            // O + P = P
            if (this.isInfinity())
                return p.toJ();

            // P + O = P
            if (p.isInfinity())
                return this;

            // 8M + 3S + 7A
            var z2 = this.z.redSqr();
            var u1 = this.x;
            var u2 = p.x.redMul(z2);
            var s1 = this.y;
            var s2 = p.y.redMul(z2).redMul(this.z);

            var h = u1.redSub(u2);
            var r = s1.redSub(s2);
            if (h.cmpn(0) === 0) {
                if (r.cmpn(0) !== 0)
                    return this.curve.jpoint(null, null, null);
                else
                    return this.dbl();
            }

            var h2 = h.redSqr();
            var h3 = h2.redMul(h);
            var v = u1.redMul(h2);

            var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
            var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
            var nz = this.z.redMul(h);

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype.dblp = function dblp(pow) {
            if (pow === 0)
                return this;
            if (this.isInfinity())
                return this;
            if (!pow)
                return this.dbl();

            if (this.curve.zeroA || this.curve.threeA) {
                var r = this;
                for (var i = 0; i < pow; i++)
                    r = r.dbl();
                return r;
            }

            // 1M + 2S + 1A + N * (4S + 5M + 8A)
            // N = 1 => 6M + 6S + 9A
            var a = this.curve.a;
            var tinv = this.curve.tinv;

            var jx = this.x;
            var jy = this.y;
            var jz = this.z;
            var jz4 = jz.redSqr().redSqr();

            // Reuse results
            var jyd = jy.redAdd(jy);
            for (var i = 0; i < pow; i++) {
                var jx2 = jx.redSqr();
                var jyd2 = jyd.redSqr();
                var jyd4 = jyd2.redSqr();
                var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

                var t1 = jx.redMul(jyd2);
                var nx = c.redSqr().redISub(t1.redAdd(t1));
                var t2 = t1.redISub(nx);
                var dny = c.redMul(t2);
                dny = dny.redIAdd(dny).redISub(jyd4);
                var nz = jyd.redMul(jz);
                if (i + 1 < pow)
                    jz4 = jz4.redMul(jyd4);

                jx = nx;
                jz = nz;
                jyd = dny;
            }

            return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
        }
        ;

        JPoint.prototype.dbl = function dbl() {
            if (this.isInfinity())
                return this;

            if (this.curve.zeroA)
                return this._zeroDbl();
            else if (this.curve.threeA)
                return this._threeDbl();
            else
                return this._dbl();
        }
        ;

        JPoint.prototype._zeroDbl = function _zeroDbl() {
            var nx;
            var ny;
            var nz;
            // Z = 1
            if (this.zOne) {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
                //     #doubling-mdbl-2007-bl
                // 1M + 5S + 14A

                // XX = X1^2
                var xx = this.x.redSqr();
                // YY = Y1^2
                var yy = this.y.redSqr();
                // YYYY = YY^2
                var yyyy = yy.redSqr();
                // S = 2 * ((X1 + YY)^2 - XX - YYYY)
                var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                s = s.redIAdd(s);
                // M = 3 * XX + a; a = 0
                var m = xx.redAdd(xx).redIAdd(xx);
                // T = M ^ 2 - 2*S
                var t = m.redSqr().redISub(s).redISub(s);

                // 8 * YYYY
                var yyyy8 = yyyy.redIAdd(yyyy);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                yyyy8 = yyyy8.redIAdd(yyyy8);

                // X3 = T
                nx = t;
                // Y3 = M * (S - T) - 8 * YYYY
                ny = m.redMul(s.redISub(t)).redISub(yyyy8);
                // Z3 = 2*Y1
                nz = this.y.redAdd(this.y);
            } else {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
                //     #doubling-dbl-2009-l
                // 2M + 5S + 13A

                // A = X1^2
                var a = this.x.redSqr();
                // B = Y1^2
                var b = this.y.redSqr();
                // C = B^2
                var c = b.redSqr();
                // D = 2 * ((X1 + B)^2 - A - C)
                var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
                d = d.redIAdd(d);
                // E = 3 * A
                var e = a.redAdd(a).redIAdd(a);
                // F = E^2
                var f = e.redSqr();

                // 8 * C
                var c8 = c.redIAdd(c);
                c8 = c8.redIAdd(c8);
                c8 = c8.redIAdd(c8);

                // X3 = F - 2 * D
                nx = f.redISub(d).redISub(d);
                // Y3 = E * (D - X3) - 8 * C
                ny = e.redMul(d.redISub(nx)).redISub(c8);
                // Z3 = 2 * Y1 * Z1
                nz = this.y.redMul(this.z);
                nz = nz.redIAdd(nz);
            }

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype._threeDbl = function _threeDbl() {
            var nx;
            var ny;
            var nz;
            // Z = 1
            if (this.zOne) {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
                //     #doubling-mdbl-2007-bl
                // 1M + 5S + 15A

                // XX = X1^2
                var xx = this.x.redSqr();
                // YY = Y1^2
                var yy = this.y.redSqr();
                // YYYY = YY^2
                var yyyy = yy.redSqr();
                // S = 2 * ((X1 + YY)^2 - XX - YYYY)
                var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                s = s.redIAdd(s);
                // M = 3 * XX + a
                var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
                // T = M^2 - 2 * S
                var t = m.redSqr().redISub(s).redISub(s);
                // X3 = T
                nx = t;
                // Y3 = M * (S - T) - 8 * YYYY
                var yyyy8 = yyyy.redIAdd(yyyy);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                ny = m.redMul(s.redISub(t)).redISub(yyyy8);
                // Z3 = 2 * Y1
                nz = this.y.redAdd(this.y);
            } else {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
                // 3M + 5S

                // delta = Z1^2
                var delta = this.z.redSqr();
                // gamma = Y1^2
                var gamma = this.y.redSqr();
                // beta = X1 * gamma
                var beta = this.x.redMul(gamma);
                // alpha = 3 * (X1 - delta) * (X1 + delta)
                var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
                alpha = alpha.redAdd(alpha).redIAdd(alpha);
                // X3 = alpha^2 - 8 * beta
                var beta4 = beta.redIAdd(beta);
                beta4 = beta4.redIAdd(beta4);
                var beta8 = beta4.redAdd(beta4);
                nx = alpha.redSqr().redISub(beta8);
                // Z3 = (Y1 + Z1)^2 - gamma - delta
                nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
                // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
                var ggamma8 = gamma.redSqr();
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
            }

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype._dbl = function _dbl() {
            var a = this.curve.a;

            // 4M + 6S + 10A
            var jx = this.x;
            var jy = this.y;
            var jz = this.z;
            var jz4 = jz.redSqr().redSqr();

            var jx2 = jx.redSqr();
            var jy2 = jy.redSqr();

            var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

            var jxd4 = jx.redAdd(jx);
            jxd4 = jxd4.redIAdd(jxd4);
            var t1 = jxd4.redMul(jy2);
            var nx = c.redSqr().redISub(t1.redAdd(t1));
            var t2 = t1.redISub(nx);

            var jyd8 = jy2.redSqr();
            jyd8 = jyd8.redIAdd(jyd8);
            jyd8 = jyd8.redIAdd(jyd8);
            jyd8 = jyd8.redIAdd(jyd8);
            var ny = c.redMul(t2).redISub(jyd8);
            var nz = jy.redAdd(jy).redMul(jz);

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype.trpl = function trpl() {
            if (!this.curve.zeroA)
                return this.dbl().add(this);

            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
            // 5M + 10S + ...

            // XX = X1^2
            var xx = this.x.redSqr();
            // YY = Y1^2
            var yy = this.y.redSqr();
            // ZZ = Z1^2
            var zz = this.z.redSqr();
            // YYYY = YY^2
            var yyyy = yy.redSqr();
            // M = 3 * XX + a * ZZ2; a = 0
            var m = xx.redAdd(xx).redIAdd(xx);
            // MM = M^2
            var mm = m.redSqr();
            // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
            var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
            e = e.redIAdd(e);
            e = e.redAdd(e).redIAdd(e);
            e = e.redISub(mm);
            // EE = E^2
            var ee = e.redSqr();
            // T = 16*YYYY
            var t = yyyy.redIAdd(yyyy);
            t = t.redIAdd(t);
            t = t.redIAdd(t);
            t = t.redIAdd(t);
            // U = (M + E)^2 - MM - EE - T
            var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
            // X3 = 4 * (X1 * EE - 4 * YY * U)
            var yyu4 = yy.redMul(u);
            yyu4 = yyu4.redIAdd(yyu4);
            yyu4 = yyu4.redIAdd(yyu4);
            var nx = this.x.redMul(ee).redISub(yyu4);
            nx = nx.redIAdd(nx);
            nx = nx.redIAdd(nx);
            // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
            var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
            ny = ny.redIAdd(ny);
            ny = ny.redIAdd(ny);
            ny = ny.redIAdd(ny);
            // Z3 = (Z1 + E)^2 - ZZ - EE
            var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

            return this.curve.jpoint(nx, ny, nz);
        }
        ;

        JPoint.prototype.mul = function mul(k, kbase) {
            k = new BN(k,kbase);

            return this.curve._wnafMul(this, k);
        }
        ;

        JPoint.prototype.eq = function eq(p) {
            if (p.type === 'affine')
                return this.eq(p.toJ());

            if (this === p)
                return true;

            // x1 * z2^2 == x2 * z1^2
            var z2 = this.z.redSqr();
            var pz2 = p.z.redSqr();
            if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
                return false;

            // y1 * z2^3 == y2 * z1^3
            var z3 = z2.redMul(this.z);
            var pz3 = pz2.redMul(p.z);
            return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
        }
        ;

        JPoint.prototype.eqXToP = function eqXToP(x) {
            var zs = this.z.redSqr();
            var rx = x.toRed(this.curve.red).redMul(zs);
            if (this.x.cmp(rx) === 0)
                return true;

            var xc = x.clone();
            var t = this.curve.redN.redMul(zs);
            for (; ; ) {
                xc.iadd(this.curve.n);
                if (xc.cmp(this.curve.p) >= 0)
                    return false;

                rx.redIAdd(t);
                if (this.x.cmp(rx) === 0)
                    return true;
            }
        }
        ;

        JPoint.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC JPoint Infinity>';
            return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
        }
        ;

        JPoint.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.z.cmpn(0) === 0;
        }
        ;

        /***/
    }
    ), /* 637 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);
        var inherits = __webpack_require__(16);
        var Base = __webpack_require__(162);

        var utils = __webpack_require__(50);

        function MontCurve(conf) {
            Base.call(this, 'mont', conf);

            this.a = new BN(conf.a,16).toRed(this.red);
            this.b = new BN(conf.b,16).toRed(this.red);
            this.i4 = new BN(4).toRed(this.red).redInvm();
            this.two = new BN(2).toRed(this.red);
            this.a24 = this.i4.redMul(this.a.redAdd(this.two));
        }
        inherits(MontCurve, Base);
        module.exports = MontCurve;

        MontCurve.prototype.validate = function validate(point) {
            var x = point.normalize().x;
            var x2 = x.redSqr();
            var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
            var y = rhs.redSqrt();

            return y.redSqr().cmp(rhs) === 0;
        }
        ;

        function Point(curve, x, z) {
            Base.BasePoint.call(this, curve, 'projective');
            if (x === null && z === null) {
                this.x = this.curve.one;
                this.z = this.curve.zero;
            } else {
                this.x = new BN(x,16);
                this.z = new BN(z,16);
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.z.red)
                    this.z = this.z.toRed(this.curve.red);
            }
        }
        inherits(Point, Base.BasePoint);

        MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
            return this.point(utils.toArray(bytes, enc), 1);
        }
        ;

        MontCurve.prototype.point = function point(x, z) {
            return new Point(this,x,z);
        }
        ;

        MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
            return Point.fromJSON(this, obj);
        }
        ;

        Point.prototype.precompute = function precompute() {// No-op
        }
        ;

        Point.prototype._encode = function _encode() {
            return this.getX().toArray('be', this.curve.p.byteLength());
        }
        ;

        Point.fromJSON = function fromJSON(curve, obj) {
            return new Point(curve,obj[0],obj[1] || curve.one);
        }
        ;

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
        }
        ;

        Point.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.z.cmpn(0) === 0;
        }
        ;

        Point.prototype.dbl = function dbl() {
            // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
            // 2M + 2S + 4A

            // A = X1 + Z1
            var a = this.x.redAdd(this.z);
            // AA = A^2
            var aa = a.redSqr();
            // B = X1 - Z1
            var b = this.x.redSub(this.z);
            // BB = B^2
            var bb = b.redSqr();
            // C = AA - BB
            var c = aa.redSub(bb);
            // X3 = AA * BB
            var nx = aa.redMul(bb);
            // Z3 = C * (BB + A24 * C)
            var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
            return this.curve.point(nx, nz);
        }
        ;

        Point.prototype.add = function add() {
            throw new Error('Not supported on Montgomery curve');
        }
        ;

        Point.prototype.diffAdd = function diffAdd(p, diff) {
            // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
            // 4M + 2S + 6A

            // A = X2 + Z2
            var a = this.x.redAdd(this.z);
            // B = X2 - Z2
            var b = this.x.redSub(this.z);
            // C = X3 + Z3
            var c = p.x.redAdd(p.z);
            // D = X3 - Z3
            var d = p.x.redSub(p.z);
            // DA = D * A
            var da = d.redMul(a);
            // CB = C * B
            var cb = c.redMul(b);
            // X5 = Z1 * (DA + CB)^2
            var nx = diff.z.redMul(da.redAdd(cb).redSqr());
            // Z5 = X1 * (DA - CB)^2
            var nz = diff.x.redMul(da.redISub(cb).redSqr());
            return this.curve.point(nx, nz);
        }
        ;

        Point.prototype.mul = function mul(k) {
            var t = k.clone();
            var a = this;
            // (N / 2) * Q + Q
            var b = this.curve.point(null, null);
            // (N / 2) * Q
            var c = this;
            // Q

            for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
                bits.push(t.andln(1));

            for (var i = bits.length - 1; i >= 0; i--) {
                if (bits[i] === 0) {
                    // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
                    a = a.diffAdd(b, c);
                    // N * Q = 2 * ((N / 2) * Q + Q))
                    b = b.dbl();
                } else {
                    // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
                    b = a.diffAdd(b, c);
                    // N * Q + Q = 2 * ((N / 2) * Q + Q)
                    a = a.dbl();
                }
            }
            return b;
        }
        ;

        Point.prototype.mulAdd = function mulAdd() {
            throw new Error('Not supported on Montgomery curve');
        }
        ;

        Point.prototype.jumlAdd = function jumlAdd() {
            throw new Error('Not supported on Montgomery curve');
        }
        ;

        Point.prototype.eq = function eq(other) {
            return this.getX().cmp(other.getX()) === 0;
        }
        ;

        Point.prototype.normalize = function normalize() {
            this.x = this.x.redMul(this.z.redInvm());
            this.z = this.curve.one;
            return this;
        }
        ;

        Point.prototype.getX = function getX() {
            // Normalize coordinates
            this.normalize();

            return this.x.fromRed();
        }
        ;

        /***/
    }
    ), /* 638 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(50);
        var BN = __webpack_require__(30);
        var inherits = __webpack_require__(16);
        var Base = __webpack_require__(162);

        var assert = utils.assert;

        function EdwardsCurve(conf) {
            // NOTE: Important as we are creating point in Base.call()
            this.twisted = (conf.a | 0) !== 1;
            this.mOneA = this.twisted && (conf.a | 0) === -1;
            this.extended = this.mOneA;

            Base.call(this, 'edwards', conf);

            this.a = new BN(conf.a,16).umod(this.red.m);
            this.a = this.a.toRed(this.red);
            this.c = new BN(conf.c,16).toRed(this.red);
            this.c2 = this.c.redSqr();
            this.d = new BN(conf.d,16).toRed(this.red);
            this.dd = this.d.redAdd(this.d);

            assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
            this.oneC = (conf.c | 0) === 1;
        }
        inherits(EdwardsCurve, Base);
        module.exports = EdwardsCurve;

        EdwardsCurve.prototype._mulA = function _mulA(num) {
            if (this.mOneA)
                return num.redNeg();
            else
                return this.a.redMul(num);
        }
        ;

        EdwardsCurve.prototype._mulC = function _mulC(num) {
            if (this.oneC)
                return num;
            else
                return this.c.redMul(num);
        }
        ;

        // Just for compatibility with Short curve
        EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
            return this.point(x, y, z, t);
        }
        ;

        EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
            x = new BN(x,16);
            if (!x.red)
                x = x.toRed(this.red);

            var x2 = x.redSqr();
            var rhs = this.c2.redSub(this.a.redMul(x2));
            var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

            var y2 = rhs.redMul(lhs.redInvm());
            var y = y2.redSqrt();
            if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            var isOdd = y.fromRed().isOdd();
            if (odd && !isOdd || !odd && isOdd)
                y = y.redNeg();

            return this.point(x, y);
        }
        ;

        EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
            y = new BN(y,16);
            if (!y.red)
                y = y.toRed(this.red);

            // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
            var y2 = y.redSqr();
            var lhs = y2.redSub(this.c2);
            var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
            var x2 = lhs.redMul(rhs.redInvm());

            if (x2.cmp(this.zero) === 0) {
                if (odd)
                    throw new Error('invalid point');
                else
                    return this.point(this.zero, y);
            }

            var x = x2.redSqrt();
            if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            if (x.fromRed().isOdd() !== odd)
                x = x.redNeg();

            return this.point(x, y);
        }
        ;

        EdwardsCurve.prototype.validate = function validate(point) {
            if (point.isInfinity())
                return true;

            // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
            point.normalize();

            var x2 = point.x.redSqr();
            var y2 = point.y.redSqr();
            var lhs = x2.redMul(this.a).redAdd(y2);
            var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

            return lhs.cmp(rhs) === 0;
        }
        ;

        function Point(curve, x, y, z, t) {
            Base.BasePoint.call(this, curve, 'projective');
            if (x === null && y === null && z === null) {
                this.x = this.curve.zero;
                this.y = this.curve.one;
                this.z = this.curve.one;
                this.t = this.curve.zero;
                this.zOne = true;
            } else {
                this.x = new BN(x,16);
                this.y = new BN(y,16);
                this.z = z ? new BN(z,16) : this.curve.one;
                this.t = t && new BN(t,16);
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.y.red)
                    this.y = this.y.toRed(this.curve.red);
                if (!this.z.red)
                    this.z = this.z.toRed(this.curve.red);
                if (this.t && !this.t.red)
                    this.t = this.t.toRed(this.curve.red);
                this.zOne = this.z === this.curve.one;

                // Use extended coordinates
                if (this.curve.extended && !this.t) {
                    this.t = this.x.redMul(this.y);
                    if (!this.zOne)
                        this.t = this.t.redMul(this.z.redInvm());
                }
            }
        }
        inherits(Point, Base.BasePoint);

        EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
            return Point.fromJSON(this, obj);
        }
        ;

        EdwardsCurve.prototype.point = function point(x, y, z, t) {
            return new Point(this,x,y,z,t);
        }
        ;

        Point.fromJSON = function fromJSON(curve, obj) {
            return new Point(curve,obj[0],obj[1],obj[2]);
        }
        ;

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';
        }
        ;

        Point.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || (this.zOne && this.y.cmp(this.curve.c) === 0));
        }
        ;

        Point.prototype._extDbl = function _extDbl() {
            // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
            //     #doubling-dbl-2008-hwcd
            // 4M + 4S

            // A = X1^2
            var a = this.x.redSqr();
            // B = Y1^2
            var b = this.y.redSqr();
            // C = 2 * Z1^2
            var c = this.z.redSqr();
            c = c.redIAdd(c);
            // D = a * A
            var d = this.curve._mulA(a);
            // E = (X1 + Y1)^2 - A - B
            var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
            // G = D + B
            var g = d.redAdd(b);
            // F = G - C
            var f = g.redSub(c);
            // H = D - B
            var h = d.redSub(b);
            // X3 = E * F
            var nx = e.redMul(f);
            // Y3 = G * H
            var ny = g.redMul(h);
            // T3 = E * H
            var nt = e.redMul(h);
            // Z3 = F * G
            var nz = f.redMul(g);
            return this.curve.point(nx, ny, nz, nt);
        }
        ;

        Point.prototype._projDbl = function _projDbl() {
            // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
            //     #doubling-dbl-2008-bbjlp
            //     #doubling-dbl-2007-bl
            // and others
            // Generally 3M + 4S or 2M + 4S

            // B = (X1 + Y1)^2
            var b = this.x.redAdd(this.y).redSqr();
            // C = X1^2
            var c = this.x.redSqr();
            // D = Y1^2
            var d = this.y.redSqr();

            var nx;
            var ny;
            var nz;
            if (this.curve.twisted) {
                // E = a * C
                var e = this.curve._mulA(c);
                // F = E + D
                var f = e.redAdd(d);
                if (this.zOne) {
                    // X3 = (B - C - D) * (F - 2)
                    nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
                    // Y3 = F * (E - D)
                    ny = f.redMul(e.redSub(d));
                    // Z3 = F^2 - 2 * F
                    nz = f.redSqr().redSub(f).redSub(f);
                } else {
                    // H = Z1^2
                    var h = this.z.redSqr();
                    // J = F - 2 * H
                    var j = f.redSub(h).redISub(h);
                    // X3 = (B-C-D)*J
                    nx = b.redSub(c).redISub(d).redMul(j);
                    // Y3 = F * (E - D)
                    ny = f.redMul(e.redSub(d));
                    // Z3 = F * J
                    nz = f.redMul(j);
                }
            } else {
                // E = C + D
                var e = c.redAdd(d);
                // H = (c * Z1)^2
                var h = this.curve._mulC(this.z).redSqr();
                // J = E - 2 * H
                var j = e.redSub(h).redSub(h);
                // X3 = c * (B - E) * J
                nx = this.curve._mulC(b.redISub(e)).redMul(j);
                // Y3 = c * E * (C - D)
                ny = this.curve._mulC(e).redMul(c.redISub(d));
                // Z3 = E * J
                nz = e.redMul(j);
            }
            return this.curve.point(nx, ny, nz);
        }
        ;

        Point.prototype.dbl = function dbl() {
            if (this.isInfinity())
                return this;

            // Double in extended coordinates
            if (this.curve.extended)
                return this._extDbl();
            else
                return this._projDbl();
        }
        ;

        Point.prototype._extAdd = function _extAdd(p) {
            // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
            //     #addition-add-2008-hwcd-3
            // 8M

            // A = (Y1 - X1) * (Y2 - X2)
            var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
            // B = (Y1 + X1) * (Y2 + X2)
            var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
            // C = T1 * k * T2
            var c = this.t.redMul(this.curve.dd).redMul(p.t);
            // D = Z1 * 2 * Z2
            var d = this.z.redMul(p.z.redAdd(p.z));
            // E = B - A
            var e = b.redSub(a);
            // F = D - C
            var f = d.redSub(c);
            // G = D + C
            var g = d.redAdd(c);
            // H = B + A
            var h = b.redAdd(a);
            // X3 = E * F
            var nx = e.redMul(f);
            // Y3 = G * H
            var ny = g.redMul(h);
            // T3 = E * H
            var nt = e.redMul(h);
            // Z3 = F * G
            var nz = f.redMul(g);
            return this.curve.point(nx, ny, nz, nt);
        }
        ;

        Point.prototype._projAdd = function _projAdd(p) {
            // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
            //     #addition-add-2008-bbjlp
            //     #addition-add-2007-bl
            // 10M + 1S

            // A = Z1 * Z2
            var a = this.z.redMul(p.z);
            // B = A^2
            var b = a.redSqr();
            // C = X1 * X2
            var c = this.x.redMul(p.x);
            // D = Y1 * Y2
            var d = this.y.redMul(p.y);
            // E = d * C * D
            var e = this.curve.d.redMul(c).redMul(d);
            // F = B - E
            var f = b.redSub(e);
            // G = B + E
            var g = b.redAdd(e);
            // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
            var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
            var nx = a.redMul(f).redMul(tmp);
            var ny;
            var nz;
            if (this.curve.twisted) {
                // Y3 = A * G * (D - a * C)
                ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
                // Z3 = F * G
                nz = f.redMul(g);
            } else {
                // Y3 = A * G * (D - C)
                ny = a.redMul(g).redMul(d.redSub(c));
                // Z3 = c * F * G
                nz = this.curve._mulC(f).redMul(g);
            }
            return this.curve.point(nx, ny, nz);
        }
        ;

        Point.prototype.add = function add(p) {
            if (this.isInfinity())
                return p;
            if (p.isInfinity())
                return this;

            if (this.curve.extended)
                return this._extAdd(p);
            else
                return this._projAdd(p);
        }
        ;

        Point.prototype.mul = function mul(k) {
            if (this._hasDoubles(k))
                return this.curve._fixedNafMul(this, k);
            else
                return this.curve._wnafMul(this, k);
        }
        ;

        Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
            return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
        }
        ;

        Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
            return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
        }
        ;

        Point.prototype.normalize = function normalize() {
            if (this.zOne)
                return this;

            // Normalize coordinates
            var zi = this.z.redInvm();
            this.x = this.x.redMul(zi);
            this.y = this.y.redMul(zi);
            if (this.t)
                this.t = this.t.redMul(zi);
            this.z = this.curve.one;
            this.zOne = true;
            return this;
        }
        ;

        Point.prototype.neg = function neg() {
            return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
        }
        ;

        Point.prototype.getX = function getX() {
            this.normalize();
            return this.x.fromRed();
        }
        ;

        Point.prototype.getY = function getY() {
            this.normalize();
            return this.y.fromRed();
        }
        ;

        Point.prototype.eq = function eq(other) {
            return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;
        }
        ;

        Point.prototype.eqXToP = function eqXToP(x) {
            var rx = x.toRed(this.curve.red).redMul(this.z);
            if (this.x.cmp(rx) === 0)
                return true;

            var xc = x.clone();
            var t = this.curve.redN.redMul(this.z);
            for (; ; ) {
                xc.iadd(this.curve.n);
                if (xc.cmp(this.curve.p) >= 0)
                    return false;

                rx.redIAdd(t);
                if (this.x.cmp(rx) === 0)
                    return true;
            }
        }
        ;

        // Compatibility with BaseCurve
        Point.prototype.toP = Point.prototype.normalize;
        Point.prototype.mixedAdd = Point.prototype.add;

        /***/
    }
    ), /* 639 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.sha1 = __webpack_require__(640);
        exports.sha224 = __webpack_require__(641);
        exports.sha256 = __webpack_require__(403);
        exports.sha384 = __webpack_require__(642);
        exports.sha512 = __webpack_require__(404);

        /***/
    }
    ), /* 640 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var common = __webpack_require__(124);
        var shaCommon = __webpack_require__(402);

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_5 = utils.sum32_5;
        var ft_1 = shaCommon.ft_1;
        var BlockHash = common.BlockHash;

        var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];

        function SHA1() {
            if (!(this instanceof SHA1))
                return new SHA1();

            BlockHash.call(this);
            this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
            this.W = new Array(80);
        }

        utils.inherits(SHA1, BlockHash);
        module.exports = SHA1;

        SHA1.blockSize = 512;
        SHA1.outSize = 160;
        SHA1.hmacStrength = 80;
        SHA1.padLength = 64;

        SHA1.prototype._update = function _update(msg, start) {
            var W = this.W;

            for (var i = 0; i < 16; i++)
                W[i] = msg[start + i];

            for (; i < W.length; i++)
                W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

            var a = this.h[0];
            var b = this.h[1];
            var c = this.h[2];
            var d = this.h[3];
            var e = this.h[4];

            for (i = 0; i < W.length; i++) {
                var s = ~~(i / 20);
                var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
                e = d;
                d = c;
                c = rotl32(b, 30);
                b = a;
                a = t;
            }

            this.h[0] = sum32(this.h[0], a);
            this.h[1] = sum32(this.h[1], b);
            this.h[2] = sum32(this.h[2], c);
            this.h[3] = sum32(this.h[3], d);
            this.h[4] = sum32(this.h[4], e);
        }
        ;

        SHA1.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        }
        ;

        /***/
    }
    ), /* 641 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var SHA256 = __webpack_require__(403);

        function SHA224() {
            if (!(this instanceof SHA224))
                return new SHA224();

            SHA256.call(this);
            this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];
        }
        utils.inherits(SHA224, SHA256);
        module.exports = SHA224;

        SHA224.blockSize = 512;
        SHA224.outSize = 224;
        SHA224.hmacStrength = 192;
        SHA224.padLength = 64;

        SHA224.prototype._digest = function digest(enc) {
            // Just truncate output
            if (enc === 'hex')
                return utils.toHex32(this.h.slice(0, 7), 'big');
            else
                return utils.split32(this.h.slice(0, 7), 'big');
        }
        ;

        /***/
    }
    ), /* 642 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);

        var SHA512 = __webpack_require__(404);

        function SHA384() {
            if (!(this instanceof SHA384))
                return new SHA384();

            SHA512.call(this);
            this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];
        }
        utils.inherits(SHA384, SHA512);
        module.exports = SHA384;

        SHA384.blockSize = 1024;
        SHA384.outSize = 384;
        SHA384.hmacStrength = 192;
        SHA384.padLength = 128;

        SHA384.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h.slice(0, 12), 'big');
            else
                return utils.split32(this.h.slice(0, 12), 'big');
        }
        ;

        /***/
    }
    ), /* 643 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var common = __webpack_require__(124);

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_3 = utils.sum32_3;
        var sum32_4 = utils.sum32_4;
        var BlockHash = common.BlockHash;

        function RIPEMD160() {
            if (!(this instanceof RIPEMD160))
                return new RIPEMD160();

            BlockHash.call(this);

            this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
            this.endian = 'little';
        }
        utils.inherits(RIPEMD160, BlockHash);
        exports.ripemd160 = RIPEMD160;

        RIPEMD160.blockSize = 512;
        RIPEMD160.outSize = 160;
        RIPEMD160.hmacStrength = 192;
        RIPEMD160.padLength = 64;

        RIPEMD160.prototype._update = function update(msg, start) {
            var A = this.h[0];
            var B = this.h[1];
            var C = this.h[2];
            var D = this.h[3];
            var E = this.h[4];
            var Ah = A;
            var Bh = B;
            var Ch = C;
            var Dh = D;
            var Eh = E;
            for (var j = 0; j < 80; j++) {
                var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
                A = E;
                E = D;
                D = rotl32(C, 10);
                C = B;
                B = T;
                T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
                Ah = Eh;
                Eh = Dh;
                Dh = rotl32(Ch, 10);
                Ch = Bh;
                Bh = T;
            }
            T = sum32_3(this.h[1], C, Dh);
            this.h[1] = sum32_3(this.h[2], D, Eh);
            this.h[2] = sum32_3(this.h[3], E, Ah);
            this.h[3] = sum32_3(this.h[4], A, Bh);
            this.h[4] = sum32_3(this.h[0], B, Ch);
            this.h[0] = T;
        }
        ;

        RIPEMD160.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'little');
            else
                return utils.split32(this.h, 'little');
        }
        ;

        function f(j, x, y, z) {
            if (j <= 15)
                return x ^ y ^ z;
            else if (j <= 31)
                return (x & y) | ((~x) & z);
            else if (j <= 47)
                return (x | (~y)) ^ z;
            else if (j <= 63)
                return (x & z) | (y & (~z));
            else
                return x ^ (y | (~z));
        }

        function K(j) {
            if (j <= 15)
                return 0x00000000;
            else if (j <= 31)
                return 0x5a827999;
            else if (j <= 47)
                return 0x6ed9eba1;
            else if (j <= 63)
                return 0x8f1bbcdc;
            else
                return 0xa953fd4e;
        }

        function Kh(j) {
            if (j <= 15)
                return 0x50a28be6;
            else if (j <= 31)
                return 0x5c4dd124;
            else if (j <= 47)
                return 0x6d703ef3;
            else if (j <= 63)
                return 0x7a6d76e9;
            else
                return 0x00000000;
        }

        var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];

        var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];

        var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];

        var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];

        /***/
    }
    ), /* 644 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(61);
        var assert = __webpack_require__(49);

        function Hmac(hash, key, enc) {
            if (!(this instanceof Hmac))
                return new Hmac(hash,key,enc);
            this.Hash = hash;
            this.blockSize = hash.blockSize / 8;
            this.outSize = hash.outSize / 8;
            this.inner = null;
            this.outer = null;

            this._init(utils.toArray(key, enc));
        }
        module.exports = Hmac;

        Hmac.prototype._init = function init(key) {
            // Shorten key, if needed
            if (key.length > this.blockSize)
                key = new this.Hash().update(key).digest();
            assert(key.length <= this.blockSize);

            // Add padding to key
            for (var i = key.length; i < this.blockSize; i++)
                key.push(0);

            for (i = 0; i < key.length; i++)
                key[i] ^= 0x36;
            this.inner = new this.Hash().update(key);

            // 0x36 ^ 0x5c = 0x6a
            for (i = 0; i < key.length; i++)
                key[i] ^= 0x6a;
            this.outer = new this.Hash().update(key);
        }
        ;

        Hmac.prototype.update = function update(msg, enc) {
            this.inner.update(msg, enc);
            return this;
        }
        ;

        Hmac.prototype.digest = function digest(enc) {
            this.outer.update(this.inner.digest());
            return this.outer.digest(enc);
        }
        ;

        /***/
    }
    ), /* 645 */
    /***/
    (function(module, exports) {

        module.exports = {
            doubles: {
                step: 4,
                points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]
            },
            naf: {
                wnd: 7,
                points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]
            }
        };

        /***/
    }
    ), /* 646 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);
        var HmacDRBG = __webpack_require__(647);
        var utils = __webpack_require__(50);
        var curves = __webpack_require__(247);
        var rand = __webpack_require__(244);
        var assert = utils.assert;

        var KeyPair = __webpack_require__(648);
        var Signature = __webpack_require__(649);

        function EC(options) {
            if (!(this instanceof EC))
                return new EC(options);

            // Shortcut `elliptic.ec(curve-name)`
            if (typeof options === 'string') {
                assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);

                options = curves[options];
            }

            // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
            if (options instanceof curves.PresetCurve)
                options = {
                    curve: options
                };

            this.curve = options.curve.curve;
            this.n = this.curve.n;
            this.nh = this.n.ushrn(1);
            this.g = this.curve.g;

            // Point on curve
            this.g = options.curve.g;
            this.g.precompute(options.curve.n.bitLength() + 1);

            // Hash for function for DRBG
            this.hash = options.hash || options.curve.hash;
        }
        module.exports = EC;

        EC.prototype.keyPair = function keyPair(options) {
            return new KeyPair(this,options);
        }
        ;

        EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
            return KeyPair.fromPrivate(this, priv, enc);
        }
        ;

        EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
            return KeyPair.fromPublic(this, pub, enc);
        }
        ;

        EC.prototype.genKeyPair = function genKeyPair(options) {
            if (!options)
                options = {};

            // Instantiate Hmac_DRBG
            var drbg = new HmacDRBG({
                hash: this.hash,
                pers: options.pers,
                persEnc: options.persEnc || 'utf8',
                entropy: options.entropy || rand(this.hash.hmacStrength),
                entropyEnc: options.entropy && options.entropyEnc || 'utf8',
                nonce: this.n.toArray()
            });

            var bytes = this.n.byteLength();
            var ns2 = this.n.sub(new BN(2));
            do {
                var priv = new BN(drbg.generate(bytes));
                if (priv.cmp(ns2) > 0)
                    continue;

                priv.iaddn(1);
                return this.keyFromPrivate(priv);
            } while (true);
        }
        ;

        EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
            var delta = msg.byteLength() * 8 - this.n.bitLength();
            if (delta > 0)
                msg = msg.ushrn(delta);
            if (!truncOnly && msg.cmp(this.n) >= 0)
                return msg.sub(this.n);
            else
                return msg;
        }
        ;

        EC.prototype.sign = function sign(msg, key, enc, options) {
            if (typeof enc === 'object') {
                options = enc;
                enc = null;
            }
            if (!options)
                options = {};

            key = this.keyFromPrivate(key, enc);
            msg = this._truncateToN(new BN(msg,16));

            // Zero-extend key to provide enough entropy
            var bytes = this.n.byteLength();
            var bkey = key.getPrivate().toArray('be', bytes);

            // Zero-extend nonce to have the same byte size as N
            var nonce = msg.toArray('be', bytes);

            // Instantiate Hmac_DRBG
            var drbg = new HmacDRBG({
                hash: this.hash,
                entropy: bkey,
                nonce: nonce,
                pers: options.pers,
                persEnc: options.persEnc || 'utf8'
            });

            // Number of bytes to generate
            var ns1 = this.n.sub(new BN(1));

            for (var iter = 0; true; iter++) {
                var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
                k = this._truncateToN(k, true);
                if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
                    continue;

                var kp = this.g.mul(k);
                if (kp.isInfinity())
                    continue;

                var kpX = kp.getX();
                var r = kpX.umod(this.n);
                if (r.cmpn(0) === 0)
                    continue;

                var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
                s = s.umod(this.n);
                if (s.cmpn(0) === 0)
                    continue;

                var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);

                // Use complement of `s`, if it is > `n / 2`
                if (options.canonical && s.cmp(this.nh) > 0) {
                    s = this.n.sub(s);
                    recoveryParam ^= 1;
                }

                return new Signature({
                    r: r,
                    s: s,
                    recoveryParam: recoveryParam
                });
            }
        }
        ;

        EC.prototype.verify = function verify(msg, signature, key, enc) {
            msg = this._truncateToN(new BN(msg,16));
            key = this.keyFromPublic(key, enc);
            signature = new Signature(signature,'hex');

            // Perform primitive values validation
            var r = signature.r;
            var s = signature.s;
            if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
                return false;
            if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
                return false;

            // Validate signature
            var sinv = s.invm(this.n);
            var u1 = sinv.mul(msg).umod(this.n);
            var u2 = sinv.mul(r).umod(this.n);

            if (!this.curve._maxwellTrick) {
                var p = this.g.mulAdd(u1, key.getPublic(), u2);
                if (p.isInfinity())
                    return false;

                return p.getX().umod(this.n).cmp(r) === 0;
            }

            // NOTE: Greg Maxwell's trick, inspired by:
            // https://git.io/vad3K

            var p = this.g.jmulAdd(u1, key.getPublic(), u2);
            if (p.isInfinity())
                return false;

            // Compare `p.x` of Jacobian point with `r`,
            // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
            // inverse of `p.z^2`
            return p.eqXToP(r);
        }
        ;

        EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
            assert((3 & j) === j, 'The recovery param is more than two bits');
            signature = new Signature(signature,enc);

            var n = this.n;
            var e = new BN(msg);
            var r = signature.r;
            var s = signature.s;

            // A set LSB signifies that the y-coordinate is odd
            var isYOdd = j & 1;
            var isSecondKey = j >> 1;
            if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
                throw new Error('Unable to find sencond key candinate');

            // 1.1. Let x = r + jn.
            if (isSecondKey)
                r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
            else
                r = this.curve.pointFromX(r, isYOdd);

            var rInv = signature.r.invm(n);
            var s1 = n.sub(e).mul(rInv).umod(n);
            var s2 = s.mul(rInv).umod(n);

            // 1.6.1 Compute Q = r^-1 (sR -  eG)
            //               Q = r^-1 (sR + -eG)
            return this.g.mulAdd(s1, r, s2);
        }
        ;

        EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
            signature = new Signature(signature,enc);
            if (signature.recoveryParam !== null)
                return signature.recoveryParam;

            for (var i = 0; i < 4; i++) {
                var Qprime;
                try {
                    Qprime = this.recoverPubKey(e, signature, i);
                } catch (e) {
                    continue;
                }

                if (Qprime.eq(Q))
                    return i;
            }
            throw new Error('Unable to find valid recovery factor');
        }
        ;

        /***/
    }
    ), /* 647 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var hash = __webpack_require__(248);
        var utils = __webpack_require__(400);
        var assert = __webpack_require__(49);

        function HmacDRBG(options) {
            if (!(this instanceof HmacDRBG))
                return new HmacDRBG(options);
            this.hash = options.hash;
            this.predResist = !!options.predResist;

            this.outLen = this.hash.outSize;
            this.minEntropy = options.minEntropy || this.hash.hmacStrength;

            this._reseed = null;
            this.reseedInterval = null;
            this.K = null;
            this.V = null;

            var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
            var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
            var pers = utils.toArray(options.pers, options.persEnc || 'hex');
            assert(entropy.length >= (this.minEntropy / 8), 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
            this._init(entropy, nonce, pers);
        }
        module.exports = HmacDRBG;

        HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
            var seed = entropy.concat(nonce).concat(pers);

            this.K = new Array(this.outLen / 8);
            this.V = new Array(this.outLen / 8);
            for (var i = 0; i < this.V.length; i++) {
                this.K[i] = 0x00;
                this.V[i] = 0x01;
            }

            this._update(seed);
            this._reseed = 1;
            this.reseedInterval = 0x1000000000000;
            // 2^48
        }
        ;

        HmacDRBG.prototype._hmac = function hmac() {
            return new hash.hmac(this.hash,this.K);
        }
        ;

        HmacDRBG.prototype._update = function update(seed) {
            var kmac = this._hmac().update(this.V).update([0x00]);
            if (seed)
                kmac = kmac.update(seed);
            this.K = kmac.digest();
            this.V = this._hmac().update(this.V).digest();
            if (!seed)
                return;

            this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();
            this.V = this._hmac().update(this.V).digest();
        }
        ;

        HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
            // Optional entropy enc
            if (typeof entropyEnc !== 'string') {
                addEnc = add;
                add = entropyEnc;
                entropyEnc = null;
            }

            entropy = utils.toArray(entropy, entropyEnc);
            add = utils.toArray(add, addEnc);

            assert(entropy.length >= (this.minEntropy / 8), 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

            this._update(entropy.concat(add || []));
            this._reseed = 1;
        }
        ;

        HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
            if (this._reseed > this.reseedInterval)
                throw new Error('Reseed is required');

            // Optional encoding
            if (typeof enc !== 'string') {
                addEnc = add;
                add = enc;
                enc = null;
            }

            // Optional additional data
            if (add) {
                add = utils.toArray(add, addEnc || 'hex');
                this._update(add);
            }

            var temp = [];
            while (temp.length < len) {
                this.V = this._hmac().update(this.V).digest();
                temp = temp.concat(this.V);
            }

            var res = temp.slice(0, len);
            this._update(add);
            this._reseed++;
            return utils.encode(res, enc);
        }
        ;

        /***/
    }
    ), /* 648 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);
        var utils = __webpack_require__(50);
        var assert = utils.assert;

        function KeyPair(ec, options) {
            this.ec = ec;
            this.priv = null;
            this.pub = null;

            // KeyPair(ec, { priv: ..., pub: ... })
            if (options.priv)
                this._importPrivate(options.priv, options.privEnc);
            if (options.pub)
                this._importPublic(options.pub, options.pubEnc);
        }
        module.exports = KeyPair;

        KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
            if (pub instanceof KeyPair)
                return pub;

            return new KeyPair(ec,{
                pub: pub,
                pubEnc: enc
            });
        }
        ;

        KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
            if (priv instanceof KeyPair)
                return priv;

            return new KeyPair(ec,{
                priv: priv,
                privEnc: enc
            });
        }
        ;

        KeyPair.prototype.validate = function validate() {
            var pub = this.getPublic();

            if (pub.isInfinity())
                return {
                    result: false,
                    reason: 'Invalid public key'
                };
            if (!pub.validate())
                return {
                    result: false,
                    reason: 'Public key is not a point'
                };
            if (!pub.mul(this.ec.curve.n).isInfinity())
                return {
                    result: false,
                    reason: 'Public key * N != O'
                };

            return {
                result: true,
                reason: null
            };
        }
        ;

        KeyPair.prototype.getPublic = function getPublic(compact, enc) {
            // compact is optional argument
            if (typeof compact === 'string') {
                enc = compact;
                compact = null;
            }

            if (!this.pub)
                this.pub = this.ec.g.mul(this.priv);

            if (!enc)
                return this.pub;

            return this.pub.encode(enc, compact);
        }
        ;

        KeyPair.prototype.getPrivate = function getPrivate(enc) {
            if (enc === 'hex')
                return this.priv.toString(16, 2);
            else
                return this.priv;
        }
        ;

        KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
            this.priv = new BN(key,enc || 16);

            // Ensure that the priv won't be bigger than n, otherwise we may fail
            // in fixed multiplication method
            this.priv = this.priv.umod(this.ec.curve.n);
        }
        ;

        KeyPair.prototype._importPublic = function _importPublic(key, enc) {
            if (key.x || key.y) {
                // Montgomery points only have an `x` coordinate.
                // Weierstrass/Edwards points on the other hand have both `x` and
                // `y` coordinates.
                if (this.ec.curve.type === 'mont') {
                    assert(key.x, 'Need x coordinate');
                } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
                    assert(key.x && key.y, 'Need both x and y coordinate');
                }
                this.pub = this.ec.curve.point(key.x, key.y);
                return;
            }
            this.pub = this.ec.curve.decodePoint(key, enc);
        }
        ;

        // ECDH
        KeyPair.prototype.derive = function derive(pub) {
            return pub.mul(this.priv).getX();
        }
        ;

        // ECDSA
        KeyPair.prototype.sign = function sign(msg, enc, options) {
            return this.ec.sign(msg, this, enc, options);
        }
        ;

        KeyPair.prototype.verify = function verify(msg, signature) {
            return this.ec.verify(msg, signature, this);
        }
        ;

        KeyPair.prototype.inspect = function inspect() {
            return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
        }
        ;

        /***/
    }
    ), /* 649 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);

        var utils = __webpack_require__(50);
        var assert = utils.assert;

        function Signature(options, enc) {
            if (options instanceof Signature)
                return options;

            if (this._importDER(options, enc))
                return;

            assert(options.r && options.s, 'Signature without r or s');
            this.r = new BN(options.r,16);
            this.s = new BN(options.s,16);
            if (options.recoveryParam === undefined)
                this.recoveryParam = null;
            else
                this.recoveryParam = options.recoveryParam;
        }
        module.exports = Signature;

        function Position() {
            this.place = 0;
        }

        function getLength(buf, p) {
            var initial = buf[p.place++];
            if (!(initial & 0x80)) {
                return initial;
            }
            var octetLen = initial & 0xf;
            var val = 0;
            for (var i = 0, off = p.place; i < octetLen; i++,
            off++) {
                val <<= 8;
                val |= buf[off];
            }
            p.place = off;
            return val;
        }

        function rmPadding(buf) {
            var i = 0;
            var len = buf.length - 1;
            while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
                i++;
            }
            if (i === 0) {
                return buf;
            }
            return buf.slice(i);
        }

        Signature.prototype._importDER = function _importDER(data, enc) {
            data = utils.toArray(data, enc);
            var p = new Position();
            if (data[p.place++] !== 0x30) {
                return false;
            }
            var len = getLength(data, p);
            if ((len + p.place) !== data.length) {
                return false;
            }
            if (data[p.place++] !== 0x02) {
                return false;
            }
            var rlen = getLength(data, p);
            var r = data.slice(p.place, rlen + p.place);
            p.place += rlen;
            if (data[p.place++] !== 0x02) {
                return false;
            }
            var slen = getLength(data, p);
            if (data.length !== slen + p.place) {
                return false;
            }
            var s = data.slice(p.place, slen + p.place);
            if (r[0] === 0 && (r[1] & 0x80)) {
                r = r.slice(1);
            }
            if (s[0] === 0 && (s[1] & 0x80)) {
                s = s.slice(1);
            }

            this.r = new BN(r);
            this.s = new BN(s);
            this.recoveryParam = null;

            return true;
        }
        ;

        function constructLength(arr, len) {
            if (len < 0x80) {
                arr.push(len);
                return;
            }
            var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
            arr.push(octets | 0x80);
            while (--octets) {
                arr.push((len >>> (octets << 3)) & 0xff);
            }
            arr.push(len);
        }

        Signature.prototype.toDER = function toDER(enc) {
            var r = this.r.toArray();
            var s = this.s.toArray();

            // Pad values
            if (r[0] & 0x80)
                r = [0].concat(r);
            // Pad values
            if (s[0] & 0x80)
                s = [0].concat(s);

            r = rmPadding(r);
            s = rmPadding(s);

            while (!s[0] && !(s[1] & 0x80)) {
                s = s.slice(1);
            }
            var arr = [0x02];
            constructLength(arr, r.length);
            arr = arr.concat(r);
            arr.push(0x02);
            constructLength(arr, s.length);
            var backHalf = arr.concat(s);
            var res = [0x30];
            constructLength(res, backHalf.length);
            res = res.concat(backHalf);
            return utils.encode(res, enc);
        }
        ;

        /***/
    }
    ), /* 650 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var hash = __webpack_require__(248);
        var curves = __webpack_require__(247);
        var utils = __webpack_require__(50);
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var KeyPair = __webpack_require__(651);
        var Signature = __webpack_require__(652);

        function EDDSA(curve) {
            assert(curve === 'ed25519', 'only tested with ed25519 so far');

            if (!(this instanceof EDDSA))
                return new EDDSA(curve);

            var curve = curves[curve].curve;
            this.curve = curve;
            this.g = curve.g;
            this.g.precompute(curve.n.bitLength() + 1);

            this.pointClass = curve.point().constructor;
            this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
            this.hash = hash.sha512;
        }

        module.exports = EDDSA;

        /**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
        EDDSA.prototype.sign = function sign(message, secret) {
            message = parseBytes(message);
            var key = this.keyFromSecret(secret);
            var r = this.hashInt(key.messagePrefix(), message);
            var R = this.g.mul(r);
            var Rencoded = this.encodePoint(R);
            var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
            var S = r.add(s_).umod(this.curve.n);
            return this.makeSignature({
                R: R,
                S: S,
                Rencoded: Rencoded
            });
        }
        ;

        /**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
        EDDSA.prototype.verify = function verify(message, sig, pub) {
            message = parseBytes(message);
            sig = this.makeSignature(sig);
            var key = this.keyFromPublic(pub);
            var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
            var SG = this.g.mul(sig.S());
            var RplusAh = sig.R().add(key.pub().mul(h));
            return RplusAh.eq(SG);
        }
        ;

        EDDSA.prototype.hashInt = function hashInt() {
            var hash = this.hash();
            for (var i = 0; i < arguments.length; i++)
                hash.update(arguments[i]);
            return utils.intFromLE(hash.digest()).umod(this.curve.n);
        }
        ;

        EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
            return KeyPair.fromPublic(this, pub);
        }
        ;

        EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
            return KeyPair.fromSecret(this, secret);
        }
        ;

        EDDSA.prototype.makeSignature = function makeSignature(sig) {
            if (sig instanceof Signature)
                return sig;
            return new Signature(this,sig);
        }
        ;

        /**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
        EDDSA.prototype.encodePoint = function encodePoint(point) {
            var enc = point.getY().toArray('le', this.encodingLength);
            enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
            return enc;
        }
        ;

        EDDSA.prototype.decodePoint = function decodePoint(bytes) {
            bytes = utils.parseBytes(bytes);

            var lastIx = bytes.length - 1;
            var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
            var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

            var y = utils.intFromLE(normed);
            return this.curve.pointFromY(y, xIsOdd);
        }
        ;

        EDDSA.prototype.encodeInt = function encodeInt(num) {
            return num.toArray('le', this.encodingLength);
        }
        ;

        EDDSA.prototype.decodeInt = function decodeInt(bytes) {
            return utils.intFromLE(bytes);
        }
        ;

        EDDSA.prototype.isPoint = function isPoint(val) {
            return val instanceof this.pointClass;
        }
        ;

        /***/
    }
    ), /* 651 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var utils = __webpack_require__(50);
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var cachedProperty = utils.cachedProperty;

        /**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
        function KeyPair(eddsa, params) {
            this.eddsa = eddsa;
            this._secret = parseBytes(params.secret);
            if (eddsa.isPoint(params.pub))
                this._pub = params.pub;
            else
                this._pubBytes = parseBytes(params.pub);
        }

        KeyPair.fromPublic = function fromPublic(eddsa, pub) {
            if (pub instanceof KeyPair)
                return pub;
            return new KeyPair(eddsa,{
                pub: pub
            });
        }
        ;

        KeyPair.fromSecret = function fromSecret(eddsa, secret) {
            if (secret instanceof KeyPair)
                return secret;
            return new KeyPair(eddsa,{
                secret: secret
            });
        }
        ;

        KeyPair.prototype.secret = function secret() {
            return this._secret;
        }
        ;

        cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
            return this.eddsa.encodePoint(this.pub());
        });

        cachedProperty(KeyPair, 'pub', function pub() {
            if (this._pubBytes)
                return this.eddsa.decodePoint(this._pubBytes);
            return this.eddsa.g.mul(this.priv());
        });

        cachedProperty(KeyPair, 'privBytes', function privBytes() {
            var eddsa = this.eddsa;
            var hash = this.hash();
            var lastIx = eddsa.encodingLength - 1;

            var a = hash.slice(0, eddsa.encodingLength);
            a[0] &= 248;
            a[lastIx] &= 127;
            a[lastIx] |= 64;

            return a;
        });

        cachedProperty(KeyPair, 'priv', function priv() {
            return this.eddsa.decodeInt(this.privBytes());
        });

        cachedProperty(KeyPair, 'hash', function hash() {
            return this.eddsa.hash().update(this.secret()).digest();
        });

        cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
            return this.hash().slice(this.eddsa.encodingLength);
        });

        KeyPair.prototype.sign = function sign(message) {
            assert(this._secret, 'KeyPair can only verify');
            return this.eddsa.sign(message, this);
        }
        ;

        KeyPair.prototype.verify = function verify(message, sig) {
            return this.eddsa.verify(message, sig, this);
        }
        ;

        KeyPair.prototype.getSecret = function getSecret(enc) {
            assert(this._secret, 'KeyPair is public only');
            return utils.encode(this.secret(), enc);
        }
        ;

        KeyPair.prototype.getPublic = function getPublic(enc) {
            return utils.encode(this.pubBytes(), enc);
        }
        ;

        module.exports = KeyPair;

        /***/
    }
    ), /* 652 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var BN = __webpack_require__(30);
        var utils = __webpack_require__(50);
        var assert = utils.assert;
        var cachedProperty = utils.cachedProperty;
        var parseBytes = utils.parseBytes;

        /**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
        function Signature(eddsa, sig) {
            this.eddsa = eddsa;

            if (typeof sig !== 'object')
                sig = parseBytes(sig);

            if (Array.isArray(sig)) {
                sig = {
                    R: sig.slice(0, eddsa.encodingLength),
                    S: sig.slice(eddsa.encodingLength)
                };
            }

            assert(sig.R && sig.S, 'Signature without R or S');

            if (eddsa.isPoint(sig.R))
                this._R = sig.R;
            if (sig.S instanceof BN)
                this._S = sig.S;

            this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
            this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
        }

        cachedProperty(Signature, 'S', function S() {
            return this.eddsa.decodeInt(this.Sencoded());
        });

        cachedProperty(Signature, 'R', function R() {
            return this.eddsa.decodePoint(this.Rencoded());
        });

        cachedProperty(Signature, 'Rencoded', function Rencoded() {
            return this.eddsa.encodePoint(this.R());
        });

        cachedProperty(Signature, 'Sencoded', function Sencoded() {
            return this.eddsa.encodeInt(this.S());
        });

        Signature.prototype.toBytes = function toBytes() {
            return this.Rencoded().concat(this.Sencoded());
        }
        ;

        Signature.prototype.toHex = function toHex() {
            return utils.encode(this.toBytes(), 'hex').toUpperCase();
        }
        ;

        module.exports = Signature;

        /***/
    }
    ), /* 653 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
        // Fedor, you are amazing.

        var asn1 = __webpack_require__(125)

        exports.certificate = __webpack_require__(663)

        var RSAPrivateKey = asn1.define('RSAPrivateKey', function() {
            this.seq().obj(this.key('version').int(), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int())
        })
        exports.RSAPrivateKey = RSAPrivateKey

        var RSAPublicKey = asn1.define('RSAPublicKey', function() {
            this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int())
        })
        exports.RSAPublicKey = RSAPublicKey

        var PublicKey = asn1.define('SubjectPublicKeyInfo', function() {
            this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr())
        })
        exports.PublicKey = PublicKey

        var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function() {
            this.seq().obj(this.key('algorithm').objid(), this.key('none').null_().optional(), this.key('curve').objid().optional(), this.key('params').seq().obj(this.key('p').int(), this.key('q').int(), this.key('g').int()).optional())
        })

        var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function() {
            this.seq().obj(this.key('version').int(), this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPrivateKey').octstr())
        })
        exports.PrivateKey = PrivateKeyInfo
        var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function() {
            this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(), this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(), this.key('kdeparams').seq().obj(this.key('salt').octstr(), this.key('iters').int())), this.key('cipher').seq().obj(this.key('algo').objid(), this.key('iv').octstr()))), this.key('subjectPrivateKey').octstr())
        })

        exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

        var DSAPrivateKey = asn1.define('DSAPrivateKey', function() {
            this.seq().obj(this.key('version').int(), this.key('p').int(), this.key('q').int(), this.key('g').int(), this.key('pub_key').int(), this.key('priv_key').int())
        })
        exports.DSAPrivateKey = DSAPrivateKey

        exports.DSAparam = asn1.define('DSAparam', function() {
            this.int()
        })

        var ECPrivateKey = asn1.define('ECPrivateKey', function() {
            this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').optional().explicit(0).use(ECParameters), this.key('publicKey').optional().explicit(1).bitstr())
        })
        exports.ECPrivateKey = ECPrivateKey

        var ECParameters = asn1.define('ECParameters', function() {
            this.choice({
                namedCurve: this.objid()
            })
        })

        exports.signature = asn1.define('signature', function() {
            this.seq().obj(this.key('r').int(), this.key('s').int())
        })

        /***/
    }
    ), /* 654 */
    /***/
    (function(module, exports, __webpack_require__) {

        var asn1 = __webpack_require__(125);
        var inherits = __webpack_require__(16);

        var api = exports;

        api.define = function define(name, body) {
            return new Entity(name,body);
        }
        ;

        function Entity(name, body) {
            this.name = name;
            this.body = body;

            this.decoders = {};
            this.encoders = {};
        }
        ;
        Entity.prototype._createNamed = function createNamed(base) {
            var named;
            try {
                named = __webpack_require__(655).runInThisContext('(function ' + this.name + '(entity) {\n' + '  this._initNamed(entity);\n' + '})');
            } catch (e) {
                named = function(entity) {
                    this._initNamed(entity);
                }
                ;
            }
            inherits(named, base);
            named.prototype._initNamed = function initnamed(entity) {
                base.call(this, entity);
            }
            ;

            return new named(this);
        }
        ;

        Entity.prototype._getDecoder = function _getDecoder(enc) {
            enc = enc || 'der';
            // Lazily create decoder
            if (!this.decoders.hasOwnProperty(enc))
                this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
            return this.decoders[enc];
        }
        ;

        Entity.prototype.decode = function decode(data, enc, options) {
            return this._getDecoder(enc).decode(data, options);
        }
        ;

        Entity.prototype._getEncoder = function _getEncoder(enc) {
            enc = enc || 'der';
            // Lazily create encoder
            if (!this.encoders.hasOwnProperty(enc))
                this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
            return this.encoders[enc];
        }
        ;

        Entity.prototype.encode = function encode(data, enc, /* internal */
        reporter) {
            return this._getEncoder(enc).encode(data, reporter);
        }
        ;

        /***/
    }
    ), /* 655 */
    /***/
    (function(module, exports) {

        var indexOf = function(xs, item) {
            if (xs.indexOf)
                return xs.indexOf(item);
            else
                for (var i = 0; i < xs.length; i++) {
                    if (xs[i] === item)
                        return i;
                }
            return -1;
        };
        var Object_keys = function(obj) {
            if (Object.keys)
                return Object.keys(obj)
            else {
                var res = [];
                for (var key in obj)
                    res.push(key)
                return res;
            }
        };

        var forEach = function(xs, fn) {
            if (xs.forEach)
                return xs.forEach(fn)
            else
                for (var i = 0; i < xs.length; i++) {
                    fn(xs[i], i, xs);
                }
        };

        var defineProp = (function() {
            try {
                Object.defineProperty({}, '_', {});
                return function(obj, name, value) {
                    Object.defineProperty(obj, name, {
                        writable: true,
                        enumerable: false,
                        configurable: true,
                        value: value
                    })
                }
                ;
            } catch (e) {
                return function(obj, name, value) {
                    obj[name] = value;
                }
                ;
            }
        }());

        var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function', 'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError', 'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError', 'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape', 'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

        function Context() {}
        Context.prototype = {};

        var Script = exports.Script = function NodeScript(code) {
            if (!(this instanceof Script))
                return new Script(code);
            this.code = code;
        }
        ;

        Script.prototype.runInContext = function(context) {
            if (!(context instanceof Context)) {
                throw new TypeError("needs a 'context' argument.");
            }

            var iframe = document.createElement('iframe');
            if (!iframe.style)
                iframe.style = {};
            iframe.style.display = 'none';

            document.body.appendChild(iframe);

            var win = iframe.contentWindow;
            var wEval = win.eval
              , wExecScript = win.execScript;

            if (!wEval && wExecScript) {
                // win.eval() magically appears when this is called in IE:
                wExecScript.call(win, 'null');
                wEval = win.eval;
            }

            forEach(Object_keys(context), function(key) {
                win[key] = context[key];
            });
            forEach(globals, function(key) {
                if (context[key]) {
                    win[key] = context[key];
                }
            });

            var winKeys = Object_keys(win);

            var res = wEval.call(win, this.code);

            forEach(Object_keys(win), function(key) {
                // Avoid copying circular objects like `top` and `window` by only
                // updating existing context properties or new properties in the `win`
                // that was only introduced after the eval.
                if (key in context || indexOf(winKeys, key) === -1) {
                    context[key] = win[key];
                }
            });

            forEach(globals, function(key) {
                if (!(key in context)) {
                    defineProp(context, key, win[key]);
                }
            });

            document.body.removeChild(iframe);

            return res;
        }
        ;

        Script.prototype.runInThisContext = function() {
            return eval(this.code);
            // maybe...
        }
        ;

        Script.prototype.runInNewContext = function(context) {
            var ctx = Script.createContext(context);
            var res = this.runInContext(ctx);

            if (context) {
                forEach(Object_keys(ctx), function(key) {
                    context[key] = ctx[key];
                });
            }

            return res;
        }
        ;

        forEach(Object_keys(Script.prototype), function(name) {
            exports[name] = Script[name] = function(code) {
                var s = Script(code);
                return s[name].apply(s, [].slice.call(arguments, 1));
            }
            ;
        });

        exports.isContext = function(context) {
            return context instanceof Context;
        }
        ;

        exports.createScript = function(code) {
            return exports.Script(code);
        }
        ;

        exports.createContext = Script.createContext = function(context) {
            var copy = new Context();
            if (typeof context === 'object') {
                forEach(Object_keys(context), function(key) {
                    copy[key] = context[key];
                });
            }
            return copy;
        }
        ;

        /***/
    }
    ), /* 656 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);

        function Reporter(options) {
            this._reporterState = {
                obj: null,
                path: [],
                options: options || {},
                errors: []
            };
        }
        exports.Reporter = Reporter;

        Reporter.prototype.isError = function isError(obj) {
            return obj instanceof ReporterError;
        }
        ;

        Reporter.prototype.save = function save() {
            var state = this._reporterState;

            return {
                obj: state.obj,
                pathLen: state.path.length
            };
        }
        ;

        Reporter.prototype.restore = function restore(data) {
            var state = this._reporterState;

            state.obj = data.obj;
            state.path = state.path.slice(0, data.pathLen);
        }
        ;

        Reporter.prototype.enterKey = function enterKey(key) {
            return this._reporterState.path.push(key);
        }
        ;

        Reporter.prototype.exitKey = function exitKey(index) {
            var state = this._reporterState;

            state.path = state.path.slice(0, index - 1);
        }
        ;

        Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
            var state = this._reporterState;

            this.exitKey(index);
            if (state.obj !== null)
                state.obj[key] = value;
        }
        ;

        Reporter.prototype.path = function path() {
            return this._reporterState.path.join('/');
        }
        ;

        Reporter.prototype.enterObject = function enterObject() {
            var state = this._reporterState;

            var prev = state.obj;
            state.obj = {};
            return prev;
        }
        ;

        Reporter.prototype.leaveObject = function leaveObject(prev) {
            var state = this._reporterState;

            var now = state.obj;
            state.obj = prev;
            return now;
        }
        ;

        Reporter.prototype.error = function error(msg) {
            var err;
            var state = this._reporterState;

            var inherited = msg instanceof ReporterError;
            if (inherited) {
                err = msg;
            } else {
                err = new ReporterError(state.path.map(function(elem) {
                    return '[' + JSON.stringify(elem) + ']';
                }).join(''),msg.message || msg,msg.stack);
            }

            if (!state.options.partial)
                throw err;

            if (!inherited)
                state.errors.push(err);

            return err;
        }
        ;

        Reporter.prototype.wrapResult = function wrapResult(result) {
            var state = this._reporterState;
            if (!state.options.partial)
                return result;

            return {
                result: this.isError(result) ? null : result,
                errors: state.errors
            };
        }
        ;

        function ReporterError(path, msg) {
            this.path = path;
            this.rethrow(msg);
        }
        ;inherits(ReporterError, Error);

        ReporterError.prototype.rethrow = function rethrow(msg) {
            this.message = msg + ' at: ' + (this.path || '(shallow)');
            if (Error.captureStackTrace)
                Error.captureStackTrace(this, ReporterError);

            if (!this.stack) {
                try {
                    // IE only adds stack when thrown
                    throw new Error(this.message);
                } catch (e) {
                    this.stack = e.stack;
                }
            }
            return this;
        }
        ;

        /***/
    }
    ), /* 657 */
    /***/
    (function(module, exports, __webpack_require__) {

        var Reporter = __webpack_require__(126).Reporter;
        var EncoderBuffer = __webpack_require__(126).EncoderBuffer;
        var DecoderBuffer = __webpack_require__(126).DecoderBuffer;
        var assert = __webpack_require__(49);

        // Supported tags
        var tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'];

        // Public methods list
        var methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags);

        // Overrided methods list
        var overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',
        '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];

        function Node(enc, parent) {
            var state = {};
            this._baseState = state;

            state.enc = enc;

            state.parent = parent || null;
            state.children = null;

            // State
            state.tag = null;
            state.args = null;
            state.reverseArgs = null;
            state.choice = null;
            state.optional = false;
            state.any = false;
            state.obj = false;
            state.use = null;
            state.useDecoder = null;
            state.key = null;
            state['default'] = null;
            state.explicit = null;
            state.implicit = null;
            state.contains = null;

            // Should create new instance on each method
            if (!state.parent) {
                state.children = [];
                this._wrap();
            }
        }
        module.exports = Node;

        var stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];

        Node.prototype.clone = function clone() {
            var state = this._baseState;
            var cstate = {};
            stateProps.forEach(function(prop) {
                cstate[prop] = state[prop];
            });
            var res = new this.constructor(cstate.parent);
            res._baseState = cstate;
            return res;
        }
        ;

        Node.prototype._wrap = function wrap() {
            var state = this._baseState;
            methods.forEach(function(method) {
                this[method] = function _wrappedMethod() {
                    var clone = new this.constructor(this);
                    state.children.push(clone);
                    return clone[method].apply(clone, arguments);
                }
                ;
            }, this);
        }
        ;

        Node.prototype._init = function init(body) {
            var state = this._baseState;

            assert(state.parent === null);
            body.call(this);

            // Filter children
            state.children = state.children.filter(function(child) {
                return child._baseState.parent === this;
            }, this);
            assert.equal(state.children.length, 1, 'Root node can have only one child');
        }
        ;

        Node.prototype._useArgs = function useArgs(args) {
            var state = this._baseState;

            // Filter children and args
            var children = args.filter(function(arg) {
                return arg instanceof this.constructor;
            }, this);
            args = args.filter(function(arg) {
                return !(arg instanceof this.constructor);
            }, this);

            if (children.length !== 0) {
                assert(state.children === null);
                state.children = children;

                // Replace parent to maintain backward link
                children.forEach(function(child) {
                    child._baseState.parent = this;
                }, this);
            }
            if (args.length !== 0) {
                assert(state.args === null);
                state.args = args;
                state.reverseArgs = args.map(function(arg) {
                    if (typeof arg !== 'object' || arg.constructor !== Object)
                        return arg;

                    var res = {};
                    Object.keys(arg).forEach(function(key) {
                        if (key == (key | 0))
                            key |= 0;
                        var value = arg[key];
                        res[value] = key;
                    });
                    return res;
                });
            }
        }
        ;

        //
        // Overrided methods
        //

        overrided.forEach(function(method) {
            Node.prototype[method] = function _overrided() {
                var state = this._baseState;
                throw new Error(method + ' not implemented for encoding: ' + state.enc);
            }
            ;
        });

        //
        // Public methods
        //

        tags.forEach(function(tag) {
            Node.prototype[tag] = function _tagMethod() {
                var state = this._baseState;
                var args = Array.prototype.slice.call(arguments);

                assert(state.tag === null);
                state.tag = tag;

                this._useArgs(args);

                return this;
            }
            ;
        });

        Node.prototype.use = function use(item) {
            assert(item);
            var state = this._baseState;

            assert(state.use === null);
            state.use = item;

            return this;
        }
        ;

        Node.prototype.optional = function optional() {
            var state = this._baseState;

            state.optional = true;

            return this;
        }
        ;

        Node.prototype.def = function def(val) {
            var state = this._baseState;

            assert(state['default'] === null);
            state['default'] = val;
            state.optional = true;

            return this;
        }
        ;

        Node.prototype.explicit = function explicit(num) {
            var state = this._baseState;

            assert(state.explicit === null && state.implicit === null);
            state.explicit = num;

            return this;
        }
        ;

        Node.prototype.implicit = function implicit(num) {
            var state = this._baseState;

            assert(state.explicit === null && state.implicit === null);
            state.implicit = num;

            return this;
        }
        ;

        Node.prototype.obj = function obj() {
            var state = this._baseState;
            var args = Array.prototype.slice.call(arguments);

            state.obj = true;

            if (args.length !== 0)
                this._useArgs(args);

            return this;
        }
        ;

        Node.prototype.key = function key(newKey) {
            var state = this._baseState;

            assert(state.key === null);
            state.key = newKey;

            return this;
        }
        ;

        Node.prototype.any = function any() {
            var state = this._baseState;

            state.any = true;

            return this;
        }
        ;

        Node.prototype.choice = function choice(obj) {
            var state = this._baseState;

            assert(state.choice === null);
            state.choice = obj;
            this._useArgs(Object.keys(obj).map(function(key) {
                return obj[key];
            }));

            return this;
        }
        ;

        Node.prototype.contains = function contains(item) {
            var state = this._baseState;

            assert(state.use === null);
            state.contains = item;

            return this;
        }
        ;

        //
        // Decoding
        //

        Node.prototype._decode = function decode(input, options) {
            var state = this._baseState;

            // Decode root node
            if (state.parent === null)
                return input.wrapResult(state.children[0]._decode(input, options));

            var result = state['default'];
            var present = true;

            var prevKey = null;
            if (state.key !== null)
                prevKey = input.enterKey(state.key);

            // Check if tag is there
            if (state.optional) {
                var tag = null;
                if (state.explicit !== null)
                    tag = state.explicit;
                else if (state.implicit !== null)
                    tag = state.implicit;
                else if (state.tag !== null)
                    tag = state.tag;

                if (tag === null && !state.any) {
                    // Trial and Error
                    var save = input.save();
                    try {
                        if (state.choice === null)
                            this._decodeGeneric(state.tag, input, options);
                        else
                            this._decodeChoice(input, options);
                        present = true;
                    } catch (e) {
                        present = false;
                    }
                    input.restore(save);
                } else {
                    present = this._peekTag(input, tag, state.any);

                    if (input.isError(present))
                        return present;
                }
            }

            // Push object on stack
            var prevObj;
            if (state.obj && present)
                prevObj = input.enterObject();

            if (present) {
                // Unwrap explicit values
                if (state.explicit !== null) {
                    var explicit = this._decodeTag(input, state.explicit);
                    if (input.isError(explicit))
                        return explicit;
                    input = explicit;
                }

                var start = input.offset;

                // Unwrap implicit and normal values
                if (state.use === null && state.choice === null) {
                    if (state.any)
                        var save = input.save();
                    var body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);
                    if (input.isError(body))
                        return body;

                    if (state.any)
                        result = input.raw(save);
                    else
                        input = body;
                }

                if (options && options.track && state.tag !== null)
                    options.track(input.path(), start, input.length, 'tagged');

                if (options && options.track && state.tag !== null)
                    options.track(input.path(), input.offset, input.length, 'content');

                // Select proper method for tag
                if (state.any)
                    result = result;
                else if (state.choice === null)
                    result = this._decodeGeneric(state.tag, input, options);
                else
                    result = this._decodeChoice(input, options);

                if (input.isError(result))
                    return result;

                // Decode children
                if (!state.any && state.choice === null && state.children !== null) {
                    state.children.forEach(function decodeChildren(child) {
                        // NOTE: We are ignoring errors here, to let parser continue with other
                        // parts of encoded data
                        child._decode(input, options);
                    });
                }

                // Decode contained/encoded by schema, only in bit or octet strings
                if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
                    var data = new DecoderBuffer(result);
                    result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
                }
            }

            // Pop object
            if (state.obj && present)
                result = input.leaveObject(prevObj);

            // Set key
            if (state.key !== null && (result !== null || present === true))
                input.leaveKey(prevKey, state.key, result);
            else if (prevKey !== null)
                input.exitKey(prevKey);

            return result;
        }
        ;

        Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
            var state = this._baseState;

            if (tag === 'seq' || tag === 'set')
                return null;
            if (tag === 'seqof' || tag === 'setof')
                return this._decodeList(input, tag, state.args[0], options);
            else if (/str$/.test(tag))
                return this._decodeStr(input, tag, options);
            else if (tag === 'objid' && state.args)
                return this._decodeObjid(input, state.args[0], state.args[1], options);
            else if (tag === 'objid')
                return this._decodeObjid(input, null, null, options);
            else if (tag === 'gentime' || tag === 'utctime')
                return this._decodeTime(input, tag, options);
            else if (tag === 'null_')
                return this._decodeNull(input, options);
            else if (tag === 'bool')
                return this._decodeBool(input, options);
            else if (tag === 'objDesc')
                return this._decodeStr(input, tag, options);
            else if (tag === 'int' || tag === 'enum')
                return this._decodeInt(input, state.args && state.args[0], options);

            if (state.use !== null) {
                return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
            } else {
                return input.error('unknown tag: ' + tag);
            }
        }
        ;

        Node.prototype._getUse = function _getUse(entity, obj) {

            var state = this._baseState;
            // Create altered use decoder if implicit is set
            state.useDecoder = this._use(entity, obj);
            assert(state.useDecoder._baseState.parent === null);
            state.useDecoder = state.useDecoder._baseState.children[0];
            if (state.implicit !== state.useDecoder._baseState.implicit) {
                state.useDecoder = state.useDecoder.clone();
                state.useDecoder._baseState.implicit = state.implicit;
            }
            return state.useDecoder;
        }
        ;

        Node.prototype._decodeChoice = function decodeChoice(input, options) {
            var state = this._baseState;
            var result = null;
            var match = false;

            Object.keys(state.choice).some(function(key) {
                var save = input.save();
                var node = state.choice[key];
                try {
                    var value = node._decode(input, options);
                    if (input.isError(value))
                        return false;

                    result = {
                        type: key,
                        value: value
                    };
                    match = true;
                } catch (e) {
                    input.restore(save);
                    return false;
                }
                return true;
            }, this);

            if (!match)
                return input.error('Choice not matched');

            return result;
        }
        ;

        //
        // Encoding
        //

        Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
            return new EncoderBuffer(data,this.reporter);
        }
        ;

        Node.prototype._encode = function encode(data, reporter, parent) {
            var state = this._baseState;
            if (state['default'] !== null && state['default'] === data)
                return;

            var result = this._encodeValue(data, reporter, parent);
            if (result === undefined)
                return;

            if (this._skipDefault(result, reporter, parent))
                return;

            return result;
        }
        ;

        Node.prototype._encodeValue = function encode(data, reporter, parent) {
            var state = this._baseState;

            // Decode root node
            if (state.parent === null)
                return state.children[0]._encode(data, reporter || new Reporter());

            var result = null;

            // Set reporter to share it with a child class
            this.reporter = reporter;

            // Check if data is there
            if (state.optional && data === undefined) {
                if (state['default'] !== null)
                    data = state['default']
                else
                    return;
            }

            // Encode children first
            var content = null;
            var primitive = false;
            if (state.any) {
                // Anything that was given is translated to buffer
                result = this._createEncoderBuffer(data);
            } else if (state.choice) {
                result = this._encodeChoice(data, reporter);
            } else if (state.contains) {
                content = this._getUse(state.contains, parent)._encode(data, reporter);
                primitive = true;
            } else if (state.children) {
                content = state.children.map(function(child) {
                    if (child._baseState.tag === 'null_')
                        return child._encode(null, reporter, data);

                    if (child._baseState.key === null)
                        return reporter.error('Child should have a key');
                    var prevKey = reporter.enterKey(child._baseState.key);

                    if (typeof data !== 'object')
                        return reporter.error('Child expected, but input is not object');

                    var res = child._encode(data[child._baseState.key], reporter, data);
                    reporter.leaveKey(prevKey);

                    return res;
                }, this).filter(function(child) {
                    return child;
                });
                content = this._createEncoderBuffer(content);
            } else {
                if (state.tag === 'seqof' || state.tag === 'setof') {
                    // TODO(indutny): this should be thrown on DSL level
                    if (!(state.args && state.args.length === 1))
                        return reporter.error('Too many args for : ' + state.tag);

                    if (!Array.isArray(data))
                        return reporter.error('seqof/setof, but data is not Array');

                    var child = this.clone();
                    child._baseState.implicit = null;
                    content = this._createEncoderBuffer(data.map(function(item) {
                        var state = this._baseState;

                        return this._getUse(state.args[0], data)._encode(item, reporter);
                    }, child));
                } else if (state.use !== null) {
                    result = this._getUse(state.use, parent)._encode(data, reporter);
                } else {
                    content = this._encodePrimitive(state.tag, data);
                    primitive = true;
                }
            }

            // Encode data itself
            var result;
            if (!state.any && state.choice === null) {
                var tag = state.implicit !== null ? state.implicit : state.tag;
                var cls = state.implicit === null ? 'universal' : 'context';

                if (tag === null) {
                    if (state.use === null)
                        reporter.error('Tag could be omitted only for .use()');
                } else {
                    if (state.use === null)
                        result = this._encodeComposite(tag, primitive, cls, content);
                }
            }

            // Wrap in explicit
            if (state.explicit !== null)
                result = this._encodeComposite(state.explicit, false, 'context', result);

            return result;
        }
        ;

        Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
            var state = this._baseState;

            var node = state.choice[data.type];
            if (!node) {
                assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));
            }
            return node._encode(data.value, reporter);
        }
        ;

        Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
            var state = this._baseState;

            if (/str$/.test(tag))
                return this._encodeStr(data, tag);
            else if (tag === 'objid' && state.args)
                return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
            else if (tag === 'objid')
                return this._encodeObjid(data, null, null);
            else if (tag === 'gentime' || tag === 'utctime')
                return this._encodeTime(data, tag);
            else if (tag === 'null_')
                return this._encodeNull();
            else if (tag === 'int' || tag === 'enum')
                return this._encodeInt(data, state.args && state.reverseArgs[0]);
            else if (tag === 'bool')
                return this._encodeBool(data);
            else if (tag === 'objDesc')
                return this._encodeStr(data, tag);
            else
                throw new Error('Unsupported tag: ' + tag);
        }
        ;

        Node.prototype._isNumstr = function isNumstr(str) {
            return /^[0-9 ]*$/.test(str);
        }
        ;

        Node.prototype._isPrintstr = function isPrintstr(str) {
            return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
        }
        ;

        /***/
    }
    ), /* 658 */
    /***/
    (function(module, exports, __webpack_require__) {

        var constants = __webpack_require__(406);

        exports.tagClass = {
            0: 'universal',
            1: 'application',
            2: 'context',
            3: 'private'
        };
        exports.tagClassByName = constants._reverse(exports.tagClass);

        exports.tag = {
            0x00: 'end',
            0x01: 'bool',
            0x02: 'int',
            0x03: 'bitstr',
            0x04: 'octstr',
            0x05: 'null_',
            0x06: 'objid',
            0x07: 'objDesc',
            0x08: 'external',
            0x09: 'real',
            0x0a: 'enum',
            0x0b: 'embed',
            0x0c: 'utf8str',
            0x0d: 'relativeOid',
            0x10: 'seq',
            0x11: 'set',
            0x12: 'numstr',
            0x13: 'printstr',
            0x14: 't61str',
            0x15: 'videostr',
            0x16: 'ia5str',
            0x17: 'utctime',
            0x18: 'gentime',
            0x19: 'graphstr',
            0x1a: 'iso646str',
            0x1b: 'genstr',
            0x1c: 'unistr',
            0x1d: 'charstr',
            0x1e: 'bmpstr'
        };
        exports.tagByName = constants._reverse(exports.tag);

        /***/
    }
    ), /* 659 */
    /***/
    (function(module, exports, __webpack_require__) {

        var decoders = exports;

        decoders.der = __webpack_require__(407);
        decoders.pem = __webpack_require__(660);

        /***/
    }
    ), /* 660 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);
        var Buffer = __webpack_require__(25).Buffer;

        var DERDecoder = __webpack_require__(407);

        function PEMDecoder(entity) {
            DERDecoder.call(this, entity);
            this.enc = 'pem';
        }
        ;inherits(PEMDecoder, DERDecoder);
        module.exports = PEMDecoder;

        PEMDecoder.prototype.decode = function decode(data, options) {
            var lines = data.toString().split(/[\r\n]+/g);

            var label = options.label.toUpperCase();

            var re = /^-----(BEGIN|END) ([^-]+)-----$/;
            var start = -1;
            var end = -1;
            for (var i = 0; i < lines.length; i++) {
                var match = lines[i].match(re);
                if (match === null)
                    continue;

                if (match[2] !== label)
                    continue;

                if (start === -1) {
                    if (match[1] !== 'BEGIN')
                        break;
                    start = i;
                } else {
                    if (match[1] !== 'END')
                        break;
                    end = i;
                    break;
                }
            }
            if (start === -1 || end === -1)
                throw new Error('PEM section not found for: ' + label);

            var base64 = lines.slice(start + 1, end).join('');
            // Remove excessive symbols
            base64.replace(/[^a-z0-9\+\/=]+/gi, '');

            var input = new Buffer(base64,'base64');
            return DERDecoder.prototype.decode.call(this, input, options);
        }
        ;

        /***/
    }
    ), /* 661 */
    /***/
    (function(module, exports, __webpack_require__) {

        var encoders = exports;

        encoders.der = __webpack_require__(408);
        encoders.pem = __webpack_require__(662);

        /***/
    }
    ), /* 662 */
    /***/
    (function(module, exports, __webpack_require__) {

        var inherits = __webpack_require__(16);

        var DEREncoder = __webpack_require__(408);

        function PEMEncoder(entity) {
            DEREncoder.call(this, entity);
            this.enc = 'pem';
        }
        ;inherits(PEMEncoder, DEREncoder);
        module.exports = PEMEncoder;

        PEMEncoder.prototype.encode = function encode(data, options) {
            var buf = DEREncoder.prototype.encode.call(this, data);

            var p = buf.toString('base64');
            var out = ['-----BEGIN ' + options.label + '-----'];
            for (var i = 0; i < p.length; i += 64)
                out.push(p.slice(i, i + 64));
            out.push('-----END ' + options.label + '-----');
            return out.join('\n');
        }
        ;

        /***/
    }
    ), /* 663 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        // from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
        // thanks to @Rantanen

        var asn = __webpack_require__(125)

        var Time = asn.define('Time', function() {
            this.choice({
                utcTime: this.utctime(),
                generalTime: this.gentime()
            })
        })

        var AttributeTypeValue = asn.define('AttributeTypeValue', function() {
            this.seq().obj(this.key('type').objid(), this.key('value').any())
        })

        var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function() {
            this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional())
        })

        var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function() {
            this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr())
        })

        var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function() {
            this.setof(AttributeTypeValue)
        })

        var RDNSequence = asn.define('RDNSequence', function() {
            this.seqof(RelativeDistinguishedName)
        })

        var Name = asn.define('Name', function() {
            this.choice({
                rdnSequence: this.use(RDNSequence)
            })
        })

        var Validity = asn.define('Validity', function() {
            this.seq().obj(this.key('notBefore').use(Time), this.key('notAfter').use(Time))
        })

        var Extension = asn.define('Extension', function() {
            this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr())
        })

        var TBSCertificate = asn.define('TBSCertificate', function() {
            this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use(AlgorithmIdentifier), this.key('issuer').use(Name), this.key('validity').use(Validity), this.key('subject').use(Name), this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof(Extension).optional())
        })

        var X509Certificate = asn.define('X509Certificate', function() {
            this.seq().obj(this.key('tbsCertificate').use(TBSCertificate), this.key('signatureAlgorithm').use(AlgorithmIdentifier), this.key('signatureValue').bitstr())
        })

        module.exports = X509Certificate

        /***/
    }
    ), /* 664 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"}");

        /***/
    }
    ), /* 665 */
    /***/
    (function(module, exports, __webpack_require__) {

        // adapted from https://github.com/apatil/pemstrip
        var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
        var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
        var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
        var evp = __webpack_require__(161)
        var ciphers = __webpack_require__(242)
        var Buffer = __webpack_require__(15).Buffer
        module.exports = function(okey, password) {
            var key = okey.toString()
            var match = key.match(findProc)
            var decrypted
            if (!match) {
                var match2 = key.match(fullRegex)
                decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''),'base64')
            } else {
                var suite = 'aes' + match[1]
                var iv = Buffer.from(match[2], 'hex')
                var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
                var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
                var out = []
                var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
                out.push(cipher.update(cipherText))
                out.push(cipher.final())
                decrypted = Buffer.concat(out)
            }
            var tag = key.match(startRegex)[1]
            return {
                tag: tag,
                data: decrypted
            }
        }

        /***/
    }
    ), /* 666 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
            var BN = __webpack_require__(30)
            var EC = __webpack_require__(246).ec
            var parseKeys = __webpack_require__(163)
            var curves = __webpack_require__(409)

            function verify(sig, hash, key, signType, tag) {
                var pub = parseKeys(key)
                if (pub.type === 'ec') {
                    // rsa keys can be interpreted as ecdsa ones in openssl
                    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa')
                        throw new Error('wrong public key type')
                    return ecVerify(sig, hash, pub)
                } else if (pub.type === 'dsa') {
                    if (signType !== 'dsa')
                        throw new Error('wrong public key type')
                    return dsaVerify(sig, hash, pub)
                } else {
                    if (signType !== 'rsa' && signType !== 'ecdsa/rsa')
                        throw new Error('wrong public key type')
                }
                hash = Buffer.concat([tag, hash])
                var len = pub.modulus.byteLength()
                var pad = [1]
                var padNum = 0
                while (hash.length + pad.length + 2 < len) {
                    pad.push(0xff)
                    padNum++
                }
                pad.push(0x00)
                var i = -1
                while (++i < hash.length) {
                    pad.push(hash[i])
                }
                pad = new Buffer(pad)
                var red = BN.mont(pub.modulus)
                sig = new BN(sig).toRed(red)

                sig = sig.redPow(new BN(pub.publicExponent))
                sig = new Buffer(sig.fromRed().toArray())
                var out = padNum < 8 ? 1 : 0
                len = Math.min(sig.length, pad.length)
                if (sig.length !== pad.length)
                    out = 1

                i = -1
                while (++i < len)
                    out |= sig[i] ^ pad[i]
                return out === 0
            }

            function ecVerify(sig, hash, pub) {
                var curveId = curves[pub.data.algorithm.curve.join('.')]
                if (!curveId)
                    throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

                var curve = new EC(curveId)
                var pubkey = pub.data.subjectPrivateKey.data

                return curve.verify(hash, sig, pubkey)
            }

            function dsaVerify(sig, hash, pub) {
                var p = pub.data.p
                var q = pub.data.q
                var g = pub.data.g
                var y = pub.data.pub_key
                var unpacked = parseKeys.signature.decode(sig, 'der')
                var s = unpacked.s
                var r = unpacked.r
                checkValue(s, q)
                checkValue(r, q)
                var montp = BN.mont(p)
                var w = s.invm(q)
                var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q)
                return v.cmp(r) === 0
            }

            function checkValue(b, q) {
                if (b.cmpn(0) <= 0)
                    throw new Error('invalid sig')
                if (b.cmp(q) >= q)
                    throw new Error('invalid sig')
            }

            module.exports = verify

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 667 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var elliptic = __webpack_require__(246)
            var BN = __webpack_require__(30)

            module.exports = function createECDH(curve) {
                return new ECDH(curve)
            }

            var aliases = {
                secp256k1: {
                    name: 'secp256k1',
                    byteLength: 32
                },
                secp224r1: {
                    name: 'p224',
                    byteLength: 28
                },
                prime256v1: {
                    name: 'p256',
                    byteLength: 32
                },
                prime192v1: {
                    name: 'p192',
                    byteLength: 24
                },
                ed25519: {
                    name: 'ed25519',
                    byteLength: 32
                },
                secp384r1: {
                    name: 'p384',
                    byteLength: 48
                },
                secp521r1: {
                    name: 'p521',
                    byteLength: 66
                }
            }

            aliases.p224 = aliases.secp224r1
            aliases.p256 = aliases.secp256r1 = aliases.prime256v1
            aliases.p192 = aliases.secp192r1 = aliases.prime192v1
            aliases.p384 = aliases.secp384r1
            aliases.p521 = aliases.secp521r1

            function ECDH(curve) {
                this.curveType = aliases[curve]
                if (!this.curveType) {
                    this.curveType = {
                        name: curve
                    }
                }
                this.curve = new elliptic.ec(this.curveType.name)
                // eslint-disable-line new-cap
                this.keys = void 0
            }

            ECDH.prototype.generateKeys = function(enc, format) {
                this.keys = this.curve.genKeyPair()
                return this.getPublicKey(enc, format)
            }

            ECDH.prototype.computeSecret = function(other, inenc, enc) {
                inenc = inenc || 'utf8'
                if (!Buffer.isBuffer(other)) {
                    other = new Buffer(other,inenc)
                }
                var otherPub = this.curve.keyFromPublic(other).getPublic()
                var out = otherPub.mul(this.keys.getPrivate()).getX()
                return formatReturnValue(out, enc, this.curveType.byteLength)
            }

            ECDH.prototype.getPublicKey = function(enc, format) {
                var key = this.keys.getPublic(format === 'compressed', true)
                if (format === 'hybrid') {
                    if (key[key.length - 1] % 2) {
                        key[0] = 7
                    } else {
                        key[0] = 6
                    }
                }
                return formatReturnValue(key, enc)
            }

            ECDH.prototype.getPrivateKey = function(enc) {
                return formatReturnValue(this.keys.getPrivate(), enc)
            }

            ECDH.prototype.setPublicKey = function(pub, enc) {
                enc = enc || 'utf8'
                if (!Buffer.isBuffer(pub)) {
                    pub = new Buffer(pub,enc)
                }
                this.keys._importPublic(pub)
                return this
            }

            ECDH.prototype.setPrivateKey = function(priv, enc) {
                enc = enc || 'utf8'
                if (!Buffer.isBuffer(priv)) {
                    priv = new Buffer(priv,enc)
                }

                var _priv = new BN(priv)
                _priv = _priv.toString(16)
                this.keys = this.curve.genKeyPair()
                this.keys._importPrivate(_priv)
                return this
            }

            function formatReturnValue(bn, enc, len) {
                if (!Array.isArray(bn)) {
                    bn = bn.toArray()
                }
                var buf = new Buffer(bn)
                if (len && buf.length < len) {
                    var zeros = new Buffer(len - buf.length)
                    zeros.fill(0)
                    buf = Buffer.concat([zeros, buf])
                }
                if (!enc) {
                    return buf
                } else {
                    return buf.toString(enc)
                }
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 668 */
    /***/
    (function(module, exports, __webpack_require__) {

        exports.publicEncrypt = __webpack_require__(669)
        exports.privateDecrypt = __webpack_require__(670)

        exports.privateEncrypt = function privateEncrypt(key, buf) {
            return exports.publicEncrypt(key, buf, true)
        }

        exports.publicDecrypt = function publicDecrypt(key, buf) {
            return exports.privateDecrypt(key, buf, true)
        }

        /***/
    }
    ), /* 669 */
    /***/
    (function(module, exports, __webpack_require__) {

        var parseKeys = __webpack_require__(163)
        var randomBytes = __webpack_require__(94)
        var createHash = __webpack_require__(122)
        var mgf = __webpack_require__(410)
        var xor = __webpack_require__(411)
        var BN = __webpack_require__(30)
        var withPublic = __webpack_require__(412)
        var crt = __webpack_require__(245)
        var Buffer = __webpack_require__(15).Buffer

        module.exports = function publicEncrypt(publicKey, msg, reverse) {
            var padding
            if (publicKey.padding) {
                padding = publicKey.padding
            } else if (reverse) {
                padding = 1
            } else {
                padding = 4
            }
            var key = parseKeys(publicKey)
            var paddedMsg
            if (padding === 4) {
                paddedMsg = oaep(key, msg)
            } else if (padding === 1) {
                paddedMsg = pkcs1(key, msg, reverse)
            } else if (padding === 3) {
                paddedMsg = new BN(msg)
                if (paddedMsg.cmp(key.modulus) >= 0) {
                    throw new Error('data too long for modulus')
                }
            } else {
                throw new Error('unknown padding')
            }
            if (reverse) {
                return crt(paddedMsg, key)
            } else {
                return withPublic(paddedMsg, key)
            }
        }

        function oaep(key, msg) {
            var k = key.modulus.byteLength()
            var mLen = msg.length
            var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
            var hLen = iHash.length
            var hLen2 = 2 * hLen
            if (mLen > k - hLen2 - 2) {
                throw new Error('message too long')
            }
            var ps = Buffer.alloc(k - mLen - hLen2 - 2)
            var dblen = k - hLen - 1
            var seed = randomBytes(hLen)
            var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
            var maskedSeed = xor(seed, mgf(maskedDb, hLen))
            return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
        }
        function pkcs1(key, msg, reverse) {
            var mLen = msg.length
            var k = key.modulus.byteLength()
            if (mLen > k - 11) {
                throw new Error('message too long')
            }
            var ps
            if (reverse) {
                ps = Buffer.alloc(k - mLen - 3, 0xff)
            } else {
                ps = nonZero(k - mLen - 3)
            }
            return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
        }
        function nonZero(len) {
            var out = Buffer.allocUnsafe(len)
            var i = 0
            var cache = randomBytes(len * 2)
            var cur = 0
            var num
            while (i < len) {
                if (cur === cache.length) {
                    cache = randomBytes(len * 2)
                    cur = 0
                }
                num = cache[cur++]
                if (num) {
                    out[i++] = num
                }
            }
            return out
        }

        /***/
    }
    ), /* 670 */
    /***/
    (function(module, exports, __webpack_require__) {

        var parseKeys = __webpack_require__(163)
        var mgf = __webpack_require__(410)
        var xor = __webpack_require__(411)
        var BN = __webpack_require__(30)
        var crt = __webpack_require__(245)
        var createHash = __webpack_require__(122)
        var withPublic = __webpack_require__(412)
        var Buffer = __webpack_require__(15).Buffer

        module.exports = function privateDecrypt(privateKey, enc, reverse) {
            var padding
            if (privateKey.padding) {
                padding = privateKey.padding
            } else if (reverse) {
                padding = 1
            } else {
                padding = 4
            }

            var key = parseKeys(privateKey)
            var k = key.modulus.byteLength()
            if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
                throw new Error('decryption error')
            }
            var msg
            if (reverse) {
                msg = withPublic(new BN(enc), key)
            } else {
                msg = crt(enc, key)
            }
            var zBuffer = Buffer.alloc(k - msg.length)
            msg = Buffer.concat([zBuffer, msg], k)
            if (padding === 4) {
                return oaep(key, msg)
            } else if (padding === 1) {
                return pkcs1(key, msg, reverse)
            } else if (padding === 3) {
                return msg
            } else {
                throw new Error('unknown padding')
            }
        }

        function oaep(key, msg) {
            var k = key.modulus.byteLength()
            var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
            var hLen = iHash.length
            if (msg[0] !== 0) {
                throw new Error('decryption error')
            }
            var maskedSeed = msg.slice(1, hLen + 1)
            var maskedDb = msg.slice(hLen + 1)
            var seed = xor(maskedSeed, mgf(maskedDb, hLen))
            var db = xor(maskedDb, mgf(seed, k - hLen - 1))
            if (compare(iHash, db.slice(0, hLen))) {
                throw new Error('decryption error')
            }
            var i = hLen
            while (db[i] === 0) {
                i++
            }
            if (db[i++] !== 1) {
                throw new Error('decryption error')
            }
            return db.slice(i)
        }

        function pkcs1(key, msg, reverse) {
            var p1 = msg.slice(0, 2)
            var i = 2
            var status = 0
            while (msg[i++] !== 0) {
                if (i >= msg.length) {
                    status++
                    break
                }
            }
            var ps = msg.slice(2, i - 1)

            if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
                status++
            }
            if (ps.length < 8) {
                status++
            }
            if (status) {
                throw new Error('decryption error')
            }
            return msg.slice(i)
        }
        function compare(a, b) {
            a = Buffer.from(a)
            b = Buffer.from(b)
            var dif = 0
            var len = a.length
            if (a.length !== b.length) {
                dif++
                len = Math.min(a.length, b.length)
            }
            var i = -1
            while (++i < len) {
                dif += (a[i] ^ b[i])
            }
            return dif
        }

        /***/
    }
    ), /* 671 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function(global, process) {

            function oldBrowser() {
                throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
            }
            var safeBuffer = __webpack_require__(15)
            var randombytes = __webpack_require__(94)
            var Buffer = safeBuffer.Buffer
            var kBufferMaxLength = safeBuffer.kMaxLength
            var crypto = global.crypto || global.msCrypto
            var kMaxUint32 = Math.pow(2, 32) - 1
            function assertOffset(offset, length) {
                if (typeof offset !== 'number' || offset !== offset) {
                    // eslint-disable-line no-self-compare
                    throw new TypeError('offset must be a number')
                }

                if (offset > kMaxUint32 || offset < 0) {
                    throw new TypeError('offset must be a uint32')
                }

                if (offset > kBufferMaxLength || offset > length) {
                    throw new RangeError('offset out of range')
                }
            }

            function assertSize(size, offset, length) {
                if (typeof size !== 'number' || size !== size) {
                    // eslint-disable-line no-self-compare
                    throw new TypeError('size must be a number')
                }

                if (size > kMaxUint32 || size < 0) {
                    throw new TypeError('size must be a uint32')
                }

                if (size + offset > length || size > kBufferMaxLength) {
                    throw new RangeError('buffer too small')
                }
            }
            if ((crypto && crypto.getRandomValues) || !process.browser) {
                exports.randomFill = randomFill
                exports.randomFillSync = randomFillSync
            } else {
                exports.randomFill = oldBrowser
                exports.randomFillSync = oldBrowser
            }
            function randomFill(buf, offset, size, cb) {
                if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
                    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
                }

                if (typeof offset === 'function') {
                    cb = offset
                    offset = 0
                    size = buf.length
                } else if (typeof size === 'function') {
                    cb = size
                    size = buf.length - offset
                } else if (typeof cb !== 'function') {
                    throw new TypeError('"cb" argument must be a function')
                }
                assertOffset(offset, buf.length)
                assertSize(size, offset, buf.length)
                return actualFill(buf, offset, size, cb)
            }

            function actualFill(buf, offset, size, cb) {
                if (process.browser) {
                    var ourBuf = buf.buffer
                    var uint = new Uint8Array(ourBuf,offset,size)
                    crypto.getRandomValues(uint)
                    if (cb) {
                        process.nextTick(function() {
                            cb(null, buf)
                        })
                        return
                    }
                    return buf
                }
                if (cb) {
                    randombytes(size, function(err, bytes) {
                        if (err) {
                            return cb(err)
                        }
                        bytes.copy(buf, offset)
                        cb(null, buf)
                    })
                    return
                }
                var bytes = randombytes(size)
                bytes.copy(buf, offset)
                return buf
            }
            function randomFillSync(buf, offset, size) {
                if (typeof offset === 'undefined') {
                    offset = 0
                }
                if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
                    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
                }

                assertOffset(offset, buf.length)

                if (size === undefined)
                    size = buf.length - offset

                assertSize(size, offset, buf.length)

                return actualFill(buf, offset, size)
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(43), __webpack_require__(44)))

        /***/
    }
    ), /* 672 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        var Buffer = __webpack_require__(15).Buffer;

        var getParamBytesForAlg = __webpack_require__(673);

        var MAX_OCTET = 0x80
          , CLASS_UNIVERSAL = 0
          , PRIMITIVE_BIT = 0x20
          , TAG_SEQ = 0x10
          , TAG_INT = 0x02
          , ENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6)
          , ENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);

        function base64Url(base64) {
            return base64.replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
        }

        function signatureAsBuffer(signature) {
            if (Buffer.isBuffer(signature)) {
                return signature;
            } else if ('string' === typeof signature) {
                return Buffer.from(signature, 'base64');
            }

            throw new TypeError('ECDSA signature must be a Base64 string or a Buffer');
        }

        function derToJose(signature, alg) {
            signature = signatureAsBuffer(signature);
            var paramBytes = getParamBytesForAlg(alg);

            // the DER encoded param should at most be the param size, plus a padding
            // zero, since due to being a signed integer
            var maxEncodedParamLength = paramBytes + 1;

            var inputLength = signature.length;

            var offset = 0;
            if (signature[offset++] !== ENCODED_TAG_SEQ) {
                throw new Error('Could not find expected "seq"');
            }

            var seqLength = signature[offset++];
            if (seqLength === (MAX_OCTET | 1)) {
                seqLength = signature[offset++];
            }

            if (inputLength - offset < seqLength) {
                throw new Error('"seq" specified length of "' + seqLength + '", only "' + (inputLength - offset) + '" remaining');
            }

            if (signature[offset++] !== ENCODED_TAG_INT) {
                throw new Error('Could not find expected "int" for "r"');
            }

            var rLength = signature[offset++];

            if (inputLength - offset - 2 < rLength) {
                throw new Error('"r" specified length of "' + rLength + '", only "' + (inputLength - offset - 2) + '" available');
            }

            if (maxEncodedParamLength < rLength) {
                throw new Error('"r" specified length of "' + rLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
            }

            var rOffset = offset;
            offset += rLength;

            if (signature[offset++] !== ENCODED_TAG_INT) {
                throw new Error('Could not find expected "int" for "s"');
            }

            var sLength = signature[offset++];

            if (inputLength - offset !== sLength) {
                throw new Error('"s" specified length of "' + sLength + '", expected "' + (inputLength - offset) + '"');
            }

            if (maxEncodedParamLength < sLength) {
                throw new Error('"s" specified length of "' + sLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
            }

            var sOffset = offset;
            offset += sLength;

            if (offset !== inputLength) {
                throw new Error('Expected to consume entire buffer, but "' + (inputLength - offset) + '" bytes remain');
            }

            var rPadding = paramBytes - rLength
              , sPadding = paramBytes - sLength;

            var dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);

            for (offset = 0; offset < rPadding; ++offset) {
                dst[offset] = 0;
            }
            signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);

            offset = paramBytes;

            for (var o = offset; offset < o + sPadding; ++offset) {
                dst[offset] = 0;
            }
            signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);

            dst = dst.toString('base64');
            dst = base64Url(dst);

            return dst;
        }

        function countPadding(buf, start, stop) {
            var padding = 0;
            while (start + padding < stop && buf[start + padding] === 0) {
                ++padding;
            }

            var needsSign = buf[start + padding] >= MAX_OCTET;
            if (needsSign) {
                --padding;
            }

            return padding;
        }

        function joseToDer(signature, alg) {
            signature = signatureAsBuffer(signature);
            var paramBytes = getParamBytesForAlg(alg);

            var signatureBytes = signature.length;
            if (signatureBytes !== paramBytes * 2) {
                throw new TypeError('"' + alg + '" signatures must be "' + paramBytes * 2 + '" bytes, saw "' + signatureBytes + '"');
            }

            var rPadding = countPadding(signature, 0, paramBytes);
            var sPadding = countPadding(signature, paramBytes, signature.length);
            var rLength = paramBytes - rPadding;
            var sLength = paramBytes - sPadding;

            var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;

            var shortLength = rsBytes < MAX_OCTET;

            var dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);

            var offset = 0;
            dst[offset++] = ENCODED_TAG_SEQ;
            if (shortLength) {
                // Bit 8 has value "0"
                // bits 7-1 give the length.
                dst[offset++] = rsBytes;
            } else {
                // Bit 8 of first octet has value "1"
                // bits 7-1 give the number of additional length octets.
                dst[offset++] = MAX_OCTET | 1;
                // length, base 256
                dst[offset++] = rsBytes & 0xff;
            }
            dst[offset++] = ENCODED_TAG_INT;
            dst[offset++] = rLength;
            if (rPadding < 0) {
                dst[offset++] = 0;
                offset += signature.copy(dst, offset, 0, paramBytes);
            } else {
                offset += signature.copy(dst, offset, rPadding, paramBytes);
            }
            dst[offset++] = ENCODED_TAG_INT;
            dst[offset++] = sLength;
            if (sPadding < 0) {
                dst[offset++] = 0;
                signature.copy(dst, offset, paramBytes);
            } else {
                signature.copy(dst, offset, paramBytes + sPadding);
            }

            return dst;
        }

        module.exports = {
            derToJose: derToJose,
            joseToDer: joseToDer
        };

        /***/
    }
    ), /* 673 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        function getParamSize(keySize) {
            var result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);
            return result;
        }

        var paramBytesForAlg = {
            ES256: getParamSize(256),
            ES384: getParamSize(384),
            ES512: getParamSize(521)
        };

        function getParamBytesForAlg(alg) {
            var paramBytes = paramBytesForAlg[alg];
            if (paramBytes) {
                return paramBytes;
            }

            throw new Error('Unknown algorithm "' + alg + '"');
        }

        module.exports = getParamBytesForAlg;

        /***/
    }
    ), /* 674 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*global module*/
        var Buffer = __webpack_require__(15).Buffer;
        var DataStream = __webpack_require__(375);
        var jwa = __webpack_require__(380);
        var Stream = __webpack_require__(93);
        var toString = __webpack_require__(413);
        var util = __webpack_require__(159);
        var JWS_REGEX = /^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;

        function isObject(thing) {
            return Object.prototype.toString.call(thing) === '[object Object]';
        }

        function safeJsonParse(thing) {
            if (isObject(thing))
                return thing;
            try {
                return JSON.parse(thing);
            } catch (e) {
                return undefined;
            }
        }

        function headerFromJWS(jwsSig) {
            var encodedHeader = jwsSig.split('.', 1)[0];
            return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));
        }

        function securedInputFromJWS(jwsSig) {
            return jwsSig.split('.', 2).join('.');
        }

        function signatureFromJWS(jwsSig) {
            return jwsSig.split('.')[2];
        }

        function payloadFromJWS(jwsSig, encoding) {
            encoding = encoding || 'utf8';
            var payload = jwsSig.split('.')[1];
            return Buffer.from(payload, 'base64').toString(encoding);
        }

        function isValidJws(string) {
            return JWS_REGEX.test(string) && !!headerFromJWS(string);
        }

        function jwsVerify(jwsSig, algorithm, secretOrKey) {
            if (!algorithm) {
                var err = new Error("Missing algorithm parameter for jws.verify");
                err.code = "MISSING_ALGORITHM";
                throw err;
            }
            jwsSig = toString(jwsSig);
            var signature = signatureFromJWS(jwsSig);
            var securedInput = securedInputFromJWS(jwsSig);
            var algo = jwa(algorithm);
            return algo.verify(securedInput, signature, secretOrKey);
        }

        function jwsDecode(jwsSig, opts) {
            opts = opts || {};
            jwsSig = toString(jwsSig);

            if (!isValidJws(jwsSig))
                return null;

            var header = headerFromJWS(jwsSig);

            if (!header)
                return null;

            var payload = payloadFromJWS(jwsSig);
            if (header.typ === 'JWT' || opts.json)
                payload = JSON.parse(payload, opts.encoding);

            return {
                header: header,
                payload: payload,
                signature: signatureFromJWS(jwsSig)
            };
        }

        function VerifyStream(opts) {
            opts = opts || {};
            var secretOrKey = opts.secret || opts.publicKey || opts.key;
            var secretStream = new DataStream(secretOrKey);
            this.readable = true;
            this.algorithm = opts.algorithm;
            this.encoding = opts.encoding;
            this.secret = this.publicKey = this.key = secretStream;
            this.signature = new DataStream(opts.signature);
            this.secret.once('close', function() {
                if (!this.signature.writable && this.readable)
                    this.verify();
            }
            .bind(this));

            this.signature.once('close', function() {
                if (!this.secret.writable && this.readable)
                    this.verify();
            }
            .bind(this));
        }
        util.inherits(VerifyStream, Stream);
        VerifyStream.prototype.verify = function verify() {
            try {
                var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);
                var obj = jwsDecode(this.signature.buffer, this.encoding);
                this.emit('done', valid, obj);
                this.emit('data', valid);
                this.emit('end');
                this.readable = false;
                return valid;
            } catch (e) {
                this.readable = false;
                this.emit('error', e);
                this.emit('close');
            }
        }
        ;

        VerifyStream.decode = jwsDecode;
        VerifyStream.isValid = isValidJws;
        VerifyStream.verify = jwsVerify;

        module.exports = VerifyStream;

        /***/
    }
    ), /* 675 */
    /***/
    (function(module, exports, __webpack_require__) {

        var JsonWebTokenError = __webpack_require__(164);
        var NotBeforeError = __webpack_require__(414);
        var TokenExpiredError = __webpack_require__(415);
        var decode = __webpack_require__(373);
        var timespan = __webpack_require__(416);
        var PS_SUPPORTED = __webpack_require__(417);
        var jws = __webpack_require__(232);

        var PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512'];
        var RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];
        var HS_ALGS = ['HS256', 'HS384', 'HS512'];

        if (PS_SUPPORTED) {
            PUB_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');
            RSA_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');
        }

        module.exports = function(jwtString, secretOrPublicKey, options, callback) {
            if ((typeof options === 'function') && !callback) {
                callback = options;
                options = {};
            }

            if (!options) {
                options = {};
            }

            //clone this object since we are going to mutate it.
            options = Object.assign({}, options);

            var done;

            if (callback) {
                done = callback;
            } else {
                done = function(err, data) {
                    if (err)
                        throw err;
                    return data;
                }
                ;
            }

            if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {
                return done(new JsonWebTokenError('clockTimestamp must be a number'));
            }

            if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {
                return done(new JsonWebTokenError('nonce must be a non-empty string'));
            }

            var clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);

            if (!jwtString) {
                return done(new JsonWebTokenError('jwt must be provided'));
            }

            if (typeof jwtString !== 'string') {
                return done(new JsonWebTokenError('jwt must be a string'));
            }

            var parts = jwtString.split('.');

            if (parts.length !== 3) {
                return done(new JsonWebTokenError('jwt malformed'));
            }

            var decodedToken;

            try {
                decodedToken = decode(jwtString, {
                    complete: true
                });
            } catch (err) {
                return done(err);
            }

            if (!decodedToken) {
                return done(new JsonWebTokenError('invalid token'));
            }

            var header = decodedToken.header;
            var getSecret;

            if (typeof secretOrPublicKey === 'function') {
                if (!callback) {
                    return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));
                }

                getSecret = secretOrPublicKey;
            } else {
                getSecret = function(header, secretCallback) {
                    return secretCallback(null, secretOrPublicKey);
                }
                ;
            }

            return getSecret(header, function(err, secretOrPublicKey) {
                if (err) {
                    return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));
                }

                var hasSignature = parts[2].trim() !== '';

                if (!hasSignature && secretOrPublicKey) {
                    return done(new JsonWebTokenError('jwt signature is required'));
                }

                if (hasSignature && !secretOrPublicKey) {
                    return done(new JsonWebTokenError('secret or public key must be provided'));
                }

                if (!hasSignature && !options.algorithms) {
                    options.algorithms = ['none'];
                }

                if (!options.algorithms) {
                    options.algorithms = ~secretOrPublicKey.toString().indexOf('BEGIN CERTIFICATE') || ~secretOrPublicKey.toString().indexOf('BEGIN PUBLIC KEY') ? PUB_KEY_ALGS : ~secretOrPublicKey.toString().indexOf('BEGIN RSA PUBLIC KEY') ? RSA_KEY_ALGS : HS_ALGS;

                }

                if (!~options.algorithms.indexOf(decodedToken.header.alg)) {
                    return done(new JsonWebTokenError('invalid algorithm'));
                }

                var valid;

                try {
                    valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);
                } catch (e) {
                    return done(e);
                }

                if (!valid) {
                    return done(new JsonWebTokenError('invalid signature'));
                }

                var payload = decodedToken.payload;

                if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {
                    if (typeof payload.nbf !== 'number') {
                        return done(new JsonWebTokenError('invalid nbf value'));
                    }
                    if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {
                        return done(new NotBeforeError('jwt not active',new Date(payload.nbf * 1000)));
                    }
                }

                if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {
                    if (typeof payload.exp !== 'number') {
                        return done(new JsonWebTokenError('invalid exp value'));
                    }
                    if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {
                        return done(new TokenExpiredError('jwt expired',new Date(payload.exp * 1000)));
                    }
                }

                if (options.audience) {
                    var audiences = Array.isArray(options.audience) ? options.audience : [options.audience];
                    var target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];

                    var match = target.some(function(targetAudience) {
                        return audiences.some(function(audience) {
                            return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;
                        });
                    });

                    if (!match) {
                        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));
                    }
                }

                if (options.issuer) {
                    var invalid_issuer = (typeof options.issuer === 'string' && payload.iss !== options.issuer) || (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);

                    if (invalid_issuer) {
                        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));
                    }
                }

                if (options.subject) {
                    if (payload.sub !== options.subject) {
                        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));
                    }
                }

                if (options.jwtid) {
                    if (payload.jti !== options.jwtid) {
                        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));
                    }
                }

                if (options.nonce) {
                    if (payload.nonce !== options.nonce) {
                        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));
                    }
                }

                if (options.maxAge) {
                    if (typeof payload.iat !== 'number') {
                        return done(new JsonWebTokenError('iat required when maxAge is specified'));
                    }

                    var maxAgeTimestamp = timespan(options.maxAge, payload.iat);
                    if (typeof maxAgeTimestamp === 'undefined') {
                        return done(new JsonWebTokenError('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
                    }
                    if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {
                        return done(new TokenExpiredError('maxAge exceeded',new Date(maxAgeTimestamp * 1000)));
                    }
                }

                if (options.complete === true) {
                    var signature = decodedToken.signature;

                    return done(null, {
                        header: header,
                        payload: payload,
                        signature: signature
                    });
                }

                return done(null, payload);
            });
        }
        ;

        /***/
    }
    ), /* 676 */
    /***/
    (function(module, exports) {

        /**
 * Helpers.
 */

        var s = 1000;
        var m = s * 60;
        var h = m * 60;
        var d = h * 24;
        var w = d * 7;
        var y = d * 365.25;

        /**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

        module.exports = function(val, options) {
            options = options || {};
            var type = typeof val;
            if (type === 'string' && val.length > 0) {
                return parse(val);
            } else if (type === 'number' && isFinite(val)) {
                return options.long ? fmtLong(val) : fmtShort(val);
            }
            throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
        }
        ;

        /**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

        function parse(str) {
            str = String(str);
            if (str.length > 100) {
                return;
            }
            var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
            if (!match) {
                return;
            }
            var n = parseFloat(match[1]);
            var type = (match[2] || 'ms').toLowerCase();
            switch (type) {
            case 'years':
            case 'year':
            case 'yrs':
            case 'yr':
            case 'y':
                return n * y;
            case 'weeks':
            case 'week':
            case 'w':
                return n * w;
            case 'days':
            case 'day':
            case 'd':
                return n * d;
            case 'hours':
            case 'hour':
            case 'hrs':
            case 'hr':
            case 'h':
                return n * h;
            case 'minutes':
            case 'minute':
            case 'mins':
            case 'min':
            case 'm':
                return n * m;
            case 'seconds':
            case 'second':
            case 'secs':
            case 'sec':
            case 's':
                return n * s;
            case 'milliseconds':
            case 'millisecond':
            case 'msecs':
            case 'msec':
            case 'ms':
                return n;
            default:
                return undefined;
            }
        }

        /**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

        function fmtShort(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
                return Math.round(ms / d) + 'd';
            }
            if (msAbs >= h) {
                return Math.round(ms / h) + 'h';
            }
            if (msAbs >= m) {
                return Math.round(ms / m) + 'm';
            }
            if (msAbs >= s) {
                return Math.round(ms / s) + 's';
            }
            return ms + 'ms';
        }

        /**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

        function fmtLong(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
                return plural(ms, msAbs, d, 'day');
            }
            if (msAbs >= h) {
                return plural(ms, msAbs, h, 'hour');
            }
            if (msAbs >= m) {
                return plural(ms, msAbs, m, 'minute');
            }
            if (msAbs >= s) {
                return plural(ms, msAbs, s, 'second');
            }
            return ms + ' ms';
        }

        /**
 * Pluralization helper.
 */

        function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5;
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
        }

        /***/
    }
    ), /* 677 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(process) {
            exports = module.exports = SemVer

            var debug
            /* istanbul ignore next */
            if (typeof process === 'object' && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
                debug = function() {
                    var args = Array.prototype.slice.call(arguments, 0)
                    args.unshift('SEMVER')
                    console.log.apply(console, args)
                }
            } else {
                debug = function() {}
            }

            // Note: this is the semver.org version of the spec that it implements
            // Not necessarily the package version of this code.
            exports.SEMVER_SPEC_VERSION = '2.0.0'

            var MAX_LENGTH = 256
            var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
            9007199254740991

            // Max safe segment length for coercion.
            var MAX_SAFE_COMPONENT_LENGTH = 16

            // The actual regexps go on exports.re
            var re = exports.re = []
            var src = exports.src = []
            var R = 0

            // The following Regular Expressions can be used for tokenizing,
            // validating, and parsing SemVer version strings.

            // ## Numeric Identifier
            // A single `0`, or a non-zero digit followed by zero or more digits.

            var NUMERICIDENTIFIER = R++
            src[NUMERICIDENTIFIER] = '0|[1-9]\\d*'
            var NUMERICIDENTIFIERLOOSE = R++
            src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'

            // ## Non-numeric Identifier
            // Zero or more digits, followed by a letter or hyphen, and then zero or
            // more letters, digits, or hyphens.

            var NONNUMERICIDENTIFIER = R++
            src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

            // ## Main Version
            // Three dot-separated numeric identifiers.

            var MAINVERSION = R++
            src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\.' + '(' + src[NUMERICIDENTIFIER] + ')'

            var MAINVERSIONLOOSE = R++
            src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'

            // ## Pre-release Version Identifier
            // A numeric identifier, or a non-numeric identifier.

            var PRERELEASEIDENTIFIER = R++
            src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')'

            var PRERELEASEIDENTIFIERLOOSE = R++
            src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'

            // ## Pre-release Version
            // Hyphen, followed by one or more dot-separated pre-release version
            // identifiers.

            var PRERELEASE = R++
            src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))'

            var PRERELEASELOOSE = R++
            src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'

            // ## Build Metadata Identifier
            // Any combination of digits, letters, or hyphens.

            var BUILDIDENTIFIER = R++
            src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

            // ## Build Metadata
            // Plus sign, followed by one or more period-separated build metadata
            // identifiers.

            var BUILD = R++
            src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] + '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'

            // ## Full Version String
            // A main version, followed optionally by a pre-release version and
            // build metadata.

            // Note that the only major, minor, patch, and pre-release sections of
            // the version string are capturing groups.  The build metadata is not a
            // capturing group, because it should not ever be used in version
            // comparison.

            var FULL = R++
            var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?'

            src[FULL] = '^' + FULLPLAIN + '$'

            // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
            // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
            // common in the npm registry.
            var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?'

            var LOOSE = R++
            src[LOOSE] = '^' + LOOSEPLAIN + '$'

            var GTLT = R++
            src[GTLT] = '((?:<|>)?=?)'

            // Something like "2.*" or "1.2.x".
            // Note that "x.x" is a valid xRange identifer, meaning "any version"
            // Only the first item is strictly required.
            var XRANGEIDENTIFIERLOOSE = R++
            src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
            var XRANGEIDENTIFIER = R++
            src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*'

            var XRANGEPLAIN = R++
            src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?'

            var XRANGEPLAINLOOSE = R++
            src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?'

            var XRANGE = R++
            src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$'
            var XRANGELOOSE = R++
            src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'

            // Coercion.
            // Extract anything that could conceivably be a part of a valid semver
            var COERCE = R++
            src[COERCE] = '(?:^|[^\\d])' + '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' + '(?:$|[^\\d])'

            // Tilde ranges.
            // Meaning is "reasonably at or greater than"
            var LONETILDE = R++
            src[LONETILDE] = '(?:~>?)'

            var TILDETRIM = R++
            src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+'
            re[TILDETRIM] = new RegExp(src[TILDETRIM],'g')
            var tildeTrimReplace = '$1~'

            var TILDE = R++
            src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'
            var TILDELOOSE = R++
            src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'

            // Caret ranges.
            // Meaning is "at least and backwards compatible with"
            var LONECARET = R++
            src[LONECARET] = '(?:\\^)'

            var CARETTRIM = R++
            src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+'
            re[CARETTRIM] = new RegExp(src[CARETTRIM],'g')
            var caretTrimReplace = '$1^'

            var CARET = R++
            src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'
            var CARETLOOSE = R++
            src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'

            // A simple gt/lt/eq thing, or just "" to indicate "any version"
            var COMPARATORLOOSE = R++
            src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$'
            var COMPARATOR = R++
            src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'

            // An expression to strip any whitespace between the gtlt and the thing
            // it modifies, so that `> 1.2.3` ==> `>1.2.3`
            var COMPARATORTRIM = R++
            src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] + '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'

            // this one has to use the /g flag
            re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM],'g')
            var comparatorTrimReplace = '$1$2$3'

            // Something like `1.2.3 - 1.2.4`
            // Note that these all use the loose form, because they'll be
            // checked against either the strict or loose comparator form
            // later.
            var HYPHENRANGE = R++
            src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\s*$'

            var HYPHENRANGELOOSE = R++
            src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\s+-\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\s*$'

            // Star ranges basically just allow anything at all.
            var STAR = R++
            src[STAR] = '(<|>)?=?\\s*\\*'

            // Compile to actual regexp objects.
            // All are flag-free, unless they were created above with a flag.
            for (var i = 0; i < R; i++) {
                debug(i, src[i])
                if (!re[i]) {
                    re[i] = new RegExp(src[i])
                }
            }

            exports.parse = parse
            function parse(version, options) {
                if (!options || typeof options !== 'object') {
                    options = {
                        loose: !!options,
                        includePrerelease: false
                    }
                }

                if (version instanceof SemVer) {
                    return version
                }

                if (typeof version !== 'string') {
                    return null
                }

                if (version.length > MAX_LENGTH) {
                    return null
                }

                var r = options.loose ? re[LOOSE] : re[FULL]
                if (!r.test(version)) {
                    return null
                }

                try {
                    return new SemVer(version,options)
                } catch (er) {
                    return null
                }
            }

            exports.valid = valid
            function valid(version, options) {
                var v = parse(version, options)
                return v ? v.version : null
            }

            exports.clean = clean
            function clean(version, options) {
                var s = parse(version.trim().replace(/^[=v]+/, ''), options)
                return s ? s.version : null
            }

            exports.SemVer = SemVer

            function SemVer(version, options) {
                if (!options || typeof options !== 'object') {
                    options = {
                        loose: !!options,
                        includePrerelease: false
                    }
                }
                if (version instanceof SemVer) {
                    if (version.loose === options.loose) {
                        return version
                    } else {
                        version = version.version
                    }
                } else if (typeof version !== 'string') {
                    throw new TypeError('Invalid Version: ' + version)
                }

                if (version.length > MAX_LENGTH) {
                    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
                }

                if (!(this instanceof SemVer)) {
                    return new SemVer(version,options)
                }

                debug('SemVer', version, options)
                this.options = options
                this.loose = !!options.loose

                var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])

                if (!m) {
                    throw new TypeError('Invalid Version: ' + version)
                }

                this.raw = version

                // these are actually numbers
                this.major = +m[1]
                this.minor = +m[2]
                this.patch = +m[3]

                if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
                    throw new TypeError('Invalid major version')
                }

                if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
                    throw new TypeError('Invalid minor version')
                }

                if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
                    throw new TypeError('Invalid patch version')
                }

                // numberify any prerelease numeric ids
                if (!m[4]) {
                    this.prerelease = []
                } else {
                    this.prerelease = m[4].split('.').map(function(id) {
                        if (/^[0-9]+$/.test(id)) {
                            var num = +id
                            if (num >= 0 && num < MAX_SAFE_INTEGER) {
                                return num
                            }
                        }
                        return id
                    })
                }

                this.build = m[5] ? m[5].split('.') : []
                this.format()
            }

            SemVer.prototype.format = function() {
                this.version = this.major + '.' + this.minor + '.' + this.patch
                if (this.prerelease.length) {
                    this.version += '-' + this.prerelease.join('.')
                }
                return this.version
            }

            SemVer.prototype.toString = function() {
                return this.version
            }

            SemVer.prototype.compare = function(other) {
                debug('SemVer.compare', this.version, this.options, other)
                if (!(other instanceof SemVer)) {
                    other = new SemVer(other,this.options)
                }

                return this.compareMain(other) || this.comparePre(other)
            }

            SemVer.prototype.compareMain = function(other) {
                if (!(other instanceof SemVer)) {
                    other = new SemVer(other,this.options)
                }

                return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch)
            }

            SemVer.prototype.comparePre = function(other) {
                if (!(other instanceof SemVer)) {
                    other = new SemVer(other,this.options)
                }

                // NOT having a prerelease is > having one
                if (this.prerelease.length && !other.prerelease.length) {
                    return -1
                } else if (!this.prerelease.length && other.prerelease.length) {
                    return 1
                } else if (!this.prerelease.length && !other.prerelease.length) {
                    return 0
                }

                var i = 0
                do {
                    var a = this.prerelease[i]
                    var b = other.prerelease[i]
                    debug('prerelease compare', i, a, b)
                    if (a === undefined && b === undefined) {
                        return 0
                    } else if (b === undefined) {
                        return 1
                    } else if (a === undefined) {
                        return -1
                    } else if (a === b) {
                        continue
                    } else {
                        return compareIdentifiers(a, b)
                    }
                } while (++i)
            }

            // preminor will bump the version up to the next minor release, and immediately
            // down to pre-release. premajor and prepatch work the same way.
            SemVer.prototype.inc = function(release, identifier) {
                switch (release) {
                case 'premajor':
                    this.prerelease.length = 0
                    this.patch = 0
                    this.minor = 0
                    this.major++
                    this.inc('pre', identifier)
                    break
                case 'preminor':
                    this.prerelease.length = 0
                    this.patch = 0
                    this.minor++
                    this.inc('pre', identifier)
                    break
                case 'prepatch':
                    // If this is already a prerelease, it will bump to the next version
                    // drop any prereleases that might already exist, since they are not
                    // relevant at this point.
                    this.prerelease.length = 0
                    this.inc('patch', identifier)
                    this.inc('pre', identifier)
                    break
                    // If the input is a non-prerelease version, this acts the same as
                    // prepatch.
                case 'prerelease':
                    if (this.prerelease.length === 0) {
                        this.inc('patch', identifier)
                    }
                    this.inc('pre', identifier)
                    break

                case 'major':
                    // If this is a pre-major version, bump up to the same major version.
                    // Otherwise increment major.
                    // 1.0.0-5 bumps to 1.0.0
                    // 1.1.0 bumps to 2.0.0
                    if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
                        this.major++
                    }
                    this.minor = 0
                    this.patch = 0
                    this.prerelease = []
                    break
                case 'minor':
                    // If this is a pre-minor version, bump up to the same minor version.
                    // Otherwise increment minor.
                    // 1.2.0-5 bumps to 1.2.0
                    // 1.2.1 bumps to 1.3.0
                    if (this.patch !== 0 || this.prerelease.length === 0) {
                        this.minor++
                    }
                    this.patch = 0
                    this.prerelease = []
                    break
                case 'patch':
                    // If this is not a pre-release version, it will increment the patch.
                    // If it is a pre-release it will bump up to the same patch version.
                    // 1.2.0-5 patches to 1.2.0
                    // 1.2.0 patches to 1.2.1
                    if (this.prerelease.length === 0) {
                        this.patch++
                    }
                    this.prerelease = []
                    break
                    // This probably shouldn't be used publicly.
                    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
                case 'pre':
                    if (this.prerelease.length === 0) {
                        this.prerelease = [0]
                    } else {
                        var i = this.prerelease.length
                        while (--i >= 0) {
                            if (typeof this.prerelease[i] === 'number') {
                                this.prerelease[i]++
                                i = -2
                            }
                        }
                        if (i === -1) {
                            // didn't increment anything
                            this.prerelease.push(0)
                        }
                    }
                    if (identifier) {
                        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
                        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
                        if (this.prerelease[0] === identifier) {
                            if (isNaN(this.prerelease[1])) {
                                this.prerelease = [identifier, 0]
                            }
                        } else {
                            this.prerelease = [identifier, 0]
                        }
                    }
                    break

                default:
                    throw new Error('invalid increment argument: ' + release)
                }
                this.format()
                this.raw = this.version
                return this
            }

            exports.inc = inc
            function inc(version, release, loose, identifier) {
                if (typeof (loose) === 'string') {
                    identifier = loose
                    loose = undefined
                }

                try {
                    return new SemVer(version,loose).inc(release, identifier).version
                } catch (er) {
                    return null
                }
            }

            exports.diff = diff
            function diff(version1, version2) {
                if (eq(version1, version2)) {
                    return null
                } else {
                    var v1 = parse(version1)
                    var v2 = parse(version2)
                    var prefix = ''
                    if (v1.prerelease.length || v2.prerelease.length) {
                        prefix = 'pre'
                        var defaultResult = 'prerelease'
                    }
                    for (var key in v1) {
                        if (key === 'major' || key === 'minor' || key === 'patch') {
                            if (v1[key] !== v2[key]) {
                                return prefix + key
                            }
                        }
                    }
                    return defaultResult
                    // may be undefined
                }
            }

            exports.compareIdentifiers = compareIdentifiers

            var numeric = /^[0-9]+$/
            function compareIdentifiers(a, b) {
                var anum = numeric.test(a)
                var bnum = numeric.test(b)

                if (anum && bnum) {
                    a = +a
                    b = +b
                }

                return a === b ? 0 : (anum && !bnum) ? -1 : (bnum && !anum) ? 1 : a < b ? -1 : 1
            }

            exports.rcompareIdentifiers = rcompareIdentifiers
            function rcompareIdentifiers(a, b) {
                return compareIdentifiers(b, a)
            }

            exports.major = major
            function major(a, loose) {
                return new SemVer(a,loose).major
            }

            exports.minor = minor
            function minor(a, loose) {
                return new SemVer(a,loose).minor
            }

            exports.patch = patch
            function patch(a, loose) {
                return new SemVer(a,loose).patch
            }

            exports.compare = compare
            function compare(a, b, loose) {
                return new SemVer(a,loose).compare(new SemVer(b,loose))
            }

            exports.compareLoose = compareLoose
            function compareLoose(a, b) {
                return compare(a, b, true)
            }

            exports.rcompare = rcompare
            function rcompare(a, b, loose) {
                return compare(b, a, loose)
            }

            exports.sort = sort
            function sort(list, loose) {
                return list.sort(function(a, b) {
                    return exports.compare(a, b, loose)
                })
            }

            exports.rsort = rsort
            function rsort(list, loose) {
                return list.sort(function(a, b) {
                    return exports.rcompare(a, b, loose)
                })
            }

            exports.gt = gt
            function gt(a, b, loose) {
                return compare(a, b, loose) > 0
            }

            exports.lt = lt
            function lt(a, b, loose) {
                return compare(a, b, loose) < 0
            }

            exports.eq = eq
            function eq(a, b, loose) {
                return compare(a, b, loose) === 0
            }

            exports.neq = neq
            function neq(a, b, loose) {
                return compare(a, b, loose) !== 0
            }

            exports.gte = gte
            function gte(a, b, loose) {
                return compare(a, b, loose) >= 0
            }

            exports.lte = lte
            function lte(a, b, loose) {
                return compare(a, b, loose) <= 0
            }

            exports.cmp = cmp
            function cmp(a, op, b, loose) {
                switch (op) {
                case '===':
                    if (typeof a === 'object')
                        a = a.version
                    if (typeof b === 'object')
                        b = b.version
                    return a === b

                case '!==':
                    if (typeof a === 'object')
                        a = a.version
                    if (typeof b === 'object')
                        b = b.version
                    return a !== b

                case '':
                case '=':
                case '==':
                    return eq(a, b, loose)

                case '!=':
                    return neq(a, b, loose)

                case '>':
                    return gt(a, b, loose)

                case '>=':
                    return gte(a, b, loose)

                case '<':
                    return lt(a, b, loose)

                case '<=':
                    return lte(a, b, loose)

                default:
                    throw new TypeError('Invalid operator: ' + op)
                }
            }

            exports.Comparator = Comparator
            function Comparator(comp, options) {
                if (!options || typeof options !== 'object') {
                    options = {
                        loose: !!options,
                        includePrerelease: false
                    }
                }

                if (comp instanceof Comparator) {
                    if (comp.loose === !!options.loose) {
                        return comp
                    } else {
                        comp = comp.value
                    }
                }

                if (!(this instanceof Comparator)) {
                    return new Comparator(comp,options)
                }

                debug('comparator', comp, options)
                this.options = options
                this.loose = !!options.loose
                this.parse(comp)

                if (this.semver === ANY) {
                    this.value = ''
                } else {
                    this.value = this.operator + this.semver.version
                }

                debug('comp', this)
            }

            var ANY = {}
            Comparator.prototype.parse = function(comp) {
                var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
                var m = comp.match(r)

                if (!m) {
                    throw new TypeError('Invalid comparator: ' + comp)
                }

                this.operator = m[1]
                if (this.operator === '=') {
                    this.operator = ''
                }

                // if it literally is just '>' or '' then allow anything.
                if (!m[2]) {
                    this.semver = ANY
                } else {
                    this.semver = new SemVer(m[2],this.options.loose)
                }
            }

            Comparator.prototype.toString = function() {
                return this.value
            }

            Comparator.prototype.test = function(version) {
                debug('Comparator.test', version, this.options.loose)

                if (this.semver === ANY) {
                    return true
                }

                if (typeof version === 'string') {
                    version = new SemVer(version,this.options)
                }

                return cmp(version, this.operator, this.semver, this.options)
            }

            Comparator.prototype.intersects = function(comp, options) {
                if (!(comp instanceof Comparator)) {
                    throw new TypeError('a Comparator is required')
                }

                if (!options || typeof options !== 'object') {
                    options = {
                        loose: !!options,
                        includePrerelease: false
                    }
                }

                var rangeTmp

                if (this.operator === '') {
                    rangeTmp = new Range(comp.value,options)
                    return satisfies(this.value, rangeTmp, options)
                } else if (comp.operator === '') {
                    rangeTmp = new Range(this.value,options)
                    return satisfies(comp.semver, rangeTmp, options)
                }

                var sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>')
                var sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<')
                var sameSemVer = this.semver.version === comp.semver.version
                var differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=')
                var oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && ((this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<'))
                var oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && ((this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>'))

                return sameDirectionIncreasing || sameDirectionDecreasing || (sameSemVer && differentDirectionsInclusive) || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
            }

            exports.Range = Range
            function Range(range, options) {
                if (!options || typeof options !== 'object') {
                    options = {
                        loose: !!options,
                        includePrerelease: false
                    }
                }

                if (range instanceof Range) {
                    if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
                        return range
                    } else {
                        return new Range(range.raw,options)
                    }
                }

                if (range instanceof Comparator) {
                    return new Range(range.value,options)
                }

                if (!(this instanceof Range)) {
                    return new Range(range,options)
                }

                this.options = options
                this.loose = !!options.loose
                this.includePrerelease = !!options.includePrerelease

                // First, split based on boolean or ||
                this.raw = range
                this.set = range.split(/\s*\|\|\s*/).map(function(range) {
                    return this.parseRange(range.trim())
                }, this).filter(function(c) {
                    // throw out any that are not relevant for whatever reason
                    return c.length
                })

                if (!this.set.length) {
                    throw new TypeError('Invalid SemVer Range: ' + range)
                }

                this.format()
            }

            Range.prototype.format = function() {
                this.range = this.set.map(function(comps) {
                    return comps.join(' ').trim()
                }).join('||').trim()
                return this.range
            }

            Range.prototype.toString = function() {
                return this.range
            }

            Range.prototype.parseRange = function(range) {
                var loose = this.options.loose
                range = range.trim()
                // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
                var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]
                range = range.replace(hr, hyphenReplace)
                debug('hyphen replace', range)
                // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
                range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)
                debug('comparator trim', range, re[COMPARATORTRIM])

                // `~ 1.2.3` => `~1.2.3`
                range = range.replace(re[TILDETRIM], tildeTrimReplace)

                // `^ 1.2.3` => `^1.2.3`
                range = range.replace(re[CARETTRIM], caretTrimReplace)

                // normalize spaces
                range = range.split(/\s+/).join(' ')

                // At this point, the range is completely trimmed and
                // ready to be split into comparators.

                var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
                var set = range.split(' ').map(function(comp) {
                    return parseComparator(comp, this.options)
                }, this).join(' ').split(/\s+/)
                if (this.options.loose) {
                    // in loose mode, throw out any that are not valid comparators
                    set = set.filter(function(comp) {
                        return !!comp.match(compRe)
                    })
                }
                set = set.map(function(comp) {
                    return new Comparator(comp,this.options)
                }, this)

                return set
            }

            Range.prototype.intersects = function(range, options) {
                if (!(range instanceof Range)) {
                    throw new TypeError('a Range is required')
                }

                return this.set.some(function(thisComparators) {
                    return thisComparators.every(function(thisComparator) {
                        return range.set.some(function(rangeComparators) {
                            return rangeComparators.every(function(rangeComparator) {
                                return thisComparator.intersects(rangeComparator, options)
                            })
                        })
                    })
                })
            }

            // Mostly just for testing and legacy API reasons
            exports.toComparators = toComparators
            function toComparators(range, options) {
                return new Range(range,options).set.map(function(comp) {
                    return comp.map(function(c) {
                        return c.value
                    }).join(' ').trim().split(' ')
                })
            }

            // comprised of xranges, tildes, stars, and gtlt's at this point.
            // already replaced the hyphen ranges
            // turn into a set of JUST comparators.
            function parseComparator(comp, options) {
                debug('comp', comp, options)
                comp = replaceCarets(comp, options)
                debug('caret', comp)
                comp = replaceTildes(comp, options)
                debug('tildes', comp)
                comp = replaceXRanges(comp, options)
                debug('xrange', comp)
                comp = replaceStars(comp, options)
                debug('stars', comp)
                return comp
            }

            function isX(id) {
                return !id || id.toLowerCase() === 'x' || id === '*'
            }

            // ~, ~> --> * (any, kinda silly)
            // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
            // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
            // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
            // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
            // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
            function replaceTildes(comp, options) {
                return comp.trim().split(/\s+/).map(function(comp) {
                    return replaceTilde(comp, options)
                }).join(' ')
            }

            function replaceTilde(comp, options) {
                var r = options.loose ? re[TILDELOOSE] : re[TILDE]
                return comp.replace(r, function(_, M, m, p, pr) {
                    debug('tilde', comp, _, M, m, p, pr)
                    var ret

                    if (isX(M)) {
                        ret = ''
                    } else if (isX(m)) {
                        ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
                    } else if (isX(p)) {
                        // ~1.2 == >=1.2.0 <1.3.0
                        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
                    } else if (pr) {
                        debug('replaceTilde pr', pr)
                        ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0'
                    } else {
                        // ~1.2.3 == >=1.2.3 <1.3.0
                        ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0'
                    }

                    debug('tilde return', ret)
                    return ret
                })
            }

            // ^ --> * (any, kinda silly)
            // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
            // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
            // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
            // ^1.2.3 --> >=1.2.3 <2.0.0
            // ^1.2.0 --> >=1.2.0 <2.0.0
            function replaceCarets(comp, options) {
                return comp.trim().split(/\s+/).map(function(comp) {
                    return replaceCaret(comp, options)
                }).join(' ')
            }

            function replaceCaret(comp, options) {
                debug('caret', comp, options)
                var r = options.loose ? re[CARETLOOSE] : re[CARET]
                return comp.replace(r, function(_, M, m, p, pr) {
                    debug('caret', comp, _, M, m, p, pr)
                    var ret

                    if (isX(M)) {
                        ret = ''
                    } else if (isX(m)) {
                        ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
                    } else if (isX(p)) {
                        if (M === '0') {
                            ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
                        } else {
                            ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
                        }
                    } else if (pr) {
                        debug('replaceCaret pr', pr)
                        if (M === '0') {
                            if (m === '0') {
                                ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + m + '.' + (+p + 1)
                            } else {
                                ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + M + '.' + (+m + 1) + '.0'
                            }
                        } else {
                            ret = '>=' + M + '.' + m + '.' + p + '-' + pr + ' <' + (+M + 1) + '.0.0'
                        }
                    } else {
                        debug('no pr')
                        if (M === '0') {
                            if (m === '0') {
                                ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1)
                            } else {
                                ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0'
                            }
                        } else {
                            ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0'
                        }
                    }

                    debug('caret return', ret)
                    return ret
                })
            }

            function replaceXRanges(comp, options) {
                debug('replaceXRanges', comp, options)
                return comp.split(/\s+/).map(function(comp) {
                    return replaceXRange(comp, options)
                }).join(' ')
            }

            function replaceXRange(comp, options) {
                comp = comp.trim()
                var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]
                return comp.replace(r, function(ret, gtlt, M, m, p, pr) {
                    debug('xRange', comp, ret, gtlt, M, m, p, pr)
                    var xM = isX(M)
                    var xm = xM || isX(m)
                    var xp = xm || isX(p)
                    var anyX = xp

                    if (gtlt === '=' && anyX) {
                        gtlt = ''
                    }

                    if (xM) {
                        if (gtlt === '>' || gtlt === '<') {
                            // nothing is allowed
                            ret = '<0.0.0'
                        } else {
                            // nothing is forbidden
                            ret = '*'
                        }
                    } else if (gtlt && anyX) {
                        // we know patch is an x, because we have any x at all.
                        // replace X with 0
                        if (xm) {
                            m = 0
                        }
                        p = 0

                        if (gtlt === '>') {
                            // >1 => >=2.0.0
                            // >1.2 => >=1.3.0
                            // >1.2.3 => >= 1.2.4
                            gtlt = '>='
                            if (xm) {
                                M = +M + 1
                                m = 0
                                p = 0
                            } else {
                                m = +m + 1
                                p = 0
                            }
                        } else if (gtlt === '<=') {
                            // <=0.7.x is actually <0.8.0, since any 0.7.x should
                            // pass.  Similarly, <=7.x is actually <8.0.0, etc.
                            gtlt = '<'
                            if (xm) {
                                M = +M + 1
                            } else {
                                m = +m + 1
                            }
                        }

                        ret = gtlt + M + '.' + m + '.' + p
                    } else if (xm) {
                        ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
                    } else if (xp) {
                        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
                    }

                    debug('xRange return', ret)

                    return ret
                })
            }

            // Because * is AND-ed with everything else in the comparator,
            // and '' means "any version", just remove the *s entirely.
            function replaceStars(comp, options) {
                debug('replaceStars', comp, options)
                // Looseness is ignored here.  star is always as loose as it gets!
                return comp.trim().replace(re[STAR], '')
            }

            // This function is passed to string.replace(re[HYPHENRANGE])
            // M, m, patch, prerelease, build
            // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
            // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
            // 1.2 - 3.4 => >=1.2.0 <3.5.0
            function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {
                if (isX(fM)) {
                    from = ''
                } else if (isX(fm)) {
                    from = '>=' + fM + '.0.0'
                } else if (isX(fp)) {
                    from = '>=' + fM + '.' + fm + '.0'
                } else {
                    from = '>=' + from
                }

                if (isX(tM)) {
                    to = ''
                } else if (isX(tm)) {
                    to = '<' + (+tM + 1) + '.0.0'
                } else if (isX(tp)) {
                    to = '<' + tM + '.' + (+tm + 1) + '.0'
                } else if (tpr) {
                    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
                } else {
                    to = '<=' + to
                }

                return (from + ' ' + to).trim()
            }

            // if ANY of the sets match ALL of its comparators, then pass
            Range.prototype.test = function(version) {
                if (!version) {
                    return false
                }

                if (typeof version === 'string') {
                    version = new SemVer(version,this.options)
                }

                for (var i = 0; i < this.set.length; i++) {
                    if (testSet(this.set[i], version, this.options)) {
                        return true
                    }
                }
                return false
            }

            function testSet(set, version, options) {
                for (var i = 0; i < set.length; i++) {
                    if (!set[i].test(version)) {
                        return false
                    }
                }

                if (version.prerelease.length && !options.includePrerelease) {
                    // Find the set of versions that are allowed to have prereleases
                    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
                    // That should allow `1.2.3-pr.2` to pass.
                    // However, `1.2.4-alpha.notready` should NOT be allowed,
                    // even though it's within the range set by the comparators.
                    for (i = 0; i < set.length; i++) {
                        debug(set[i].semver)
                        if (set[i].semver === ANY) {
                            continue
                        }

                        if (set[i].semver.prerelease.length > 0) {
                            var allowed = set[i].semver
                            if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) {
                                return true
                            }
                        }
                    }

                    // Version has a -pre, but it's not one of the ones we like.
                    return false
                }

                return true
            }

            exports.satisfies = satisfies
            function satisfies(version, range, options) {
                try {
                    range = new Range(range,options)
                } catch (er) {
                    return false
                }
                return range.test(version)
            }

            exports.maxSatisfying = maxSatisfying
            function maxSatisfying(versions, range, options) {
                var max = null
                var maxSV = null
                try {
                    var rangeObj = new Range(range,options)
                } catch (er) {
                    return null
                }
                versions.forEach(function(v) {
                    if (rangeObj.test(v)) {
                        // satisfies(v, range, options)
                        if (!max || maxSV.compare(v) === -1) {
                            // compare(max, v, true)
                            max = v
                            maxSV = new SemVer(max,options)
                        }
                    }
                })
                return max
            }

            exports.minSatisfying = minSatisfying
            function minSatisfying(versions, range, options) {
                var min = null
                var minSV = null
                try {
                    var rangeObj = new Range(range,options)
                } catch (er) {
                    return null
                }
                versions.forEach(function(v) {
                    if (rangeObj.test(v)) {
                        // satisfies(v, range, options)
                        if (!min || minSV.compare(v) === 1) {
                            // compare(min, v, true)
                            min = v
                            minSV = new SemVer(min,options)
                        }
                    }
                })
                return min
            }

            exports.minVersion = minVersion
            function minVersion(range, loose) {
                range = new Range(range,loose)

                var minver = new SemVer('0.0.0')
                if (range.test(minver)) {
                    return minver
                }

                minver = new SemVer('0.0.0-0')
                if (range.test(minver)) {
                    return minver
                }

                minver = null
                for (var i = 0; i < range.set.length; ++i) {
                    var comparators = range.set[i]

                    comparators.forEach(function(comparator) {
                        // Clone to avoid manipulating the comparator's semver object.
                        var compver = new SemVer(comparator.semver.version)
                        switch (comparator.operator) {
                        case '>':
                            if (compver.prerelease.length === 0) {
                                compver.patch++
                            } else {
                                compver.prerelease.push(0)
                            }
                            compver.raw = compver.format()
                            /* fallthrough */
                        case '':
                        case '>=':
                            if (!minver || gt(minver, compver)) {
                                minver = compver
                            }
                            break
                        case '<':
                        case '<=':
                            /* Ignore maximum versions */
                            break
                            /* istanbul ignore next */
                        default:
                            throw new Error('Unexpected operation: ' + comparator.operator)
                        }
                    })
                }

                if (minver && range.test(minver)) {
                    return minver
                }

                return null
            }

            exports.validRange = validRange
            function validRange(range, options) {
                try {
                    // Return '*' instead of '' so that truthiness works.
                    // This will throw if it's invalid anyway
                    return new Range(range,options).range || '*'
                } catch (er) {
                    return null
                }
            }

            // Determine if version is less than all the versions possible in the range
            exports.ltr = ltr
            function ltr(version, range, options) {
                return outside(version, range, '<', options)
            }

            // Determine if version is greater than all the versions possible in the range.
            exports.gtr = gtr
            function gtr(version, range, options) {
                return outside(version, range, '>', options)
            }

            exports.outside = outside
            function outside(version, range, hilo, options) {
                version = new SemVer(version,options)
                range = new Range(range,options)

                var gtfn, ltefn, ltfn, comp, ecomp
                switch (hilo) {
                case '>':
                    gtfn = gt
                    ltefn = lte
                    ltfn = lt
                    comp = '>'
                    ecomp = '>='
                    break
                case '<':
                    gtfn = lt
                    ltefn = gte
                    ltfn = gt
                    comp = '<'
                    ecomp = '<='
                    break
                default:
                    throw new TypeError('Must provide a hilo val of "<" or ">"')
                }

                // If it satisifes the range it is not outside
                if (satisfies(version, range, options)) {
                    return false
                }

                // From now on, variable terms are as if we're in "gtr" mode.
                // but note that everything is flipped for the "ltr" function.

                for (var i = 0; i < range.set.length; ++i) {
                    var comparators = range.set[i]

                    var high = null
                    var low = null

                    comparators.forEach(function(comparator) {
                        if (comparator.semver === ANY) {
                            comparator = new Comparator('>=0.0.0')
                        }
                        high = high || comparator
                        low = low || comparator
                        if (gtfn(comparator.semver, high.semver, options)) {
                            high = comparator
                        } else if (ltfn(comparator.semver, low.semver, options)) {
                            low = comparator
                        }
                    })

                    // If the edge version comparator has a operator then our version
                    // isn't outside it
                    if (high.operator === comp || high.operator === ecomp) {
                        return false
                    }

                    // If the lowest version comparator has an operator and our version
                    // is less than it then it isn't higher than the range
                    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {
                        return false
                    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
                        return false
                    }
                }
                return true
            }

            exports.prerelease = prerelease
            function prerelease(version, options) {
                var parsed = parse(version, options)
                return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
            }

            exports.intersects = intersects
            function intersects(r1, r2, options) {
                r1 = new Range(r1,options)
                r2 = new Range(r2,options)
                return r1.intersects(r2)
            }

            exports.coerce = coerce
            function coerce(version) {
                if (version instanceof SemVer) {
                    return version
                }

                if (typeof version !== 'string') {
                    return null
                }

                var match = version.match(re[COERCE])

                if (match == null) {
                    return null
                }

                return parse(match[1] + '.' + (match[2] || '0') + '.' + (match[3] || '0'))
            }

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(44)))

        /***/
    }
    ), /* 678 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            var timespan = __webpack_require__(416);
            var PS_SUPPORTED = __webpack_require__(417);
            var jws = __webpack_require__(232);
            var includes = __webpack_require__(679);
            var isBoolean = __webpack_require__(680);
            var isInteger = __webpack_require__(681);
            var isNumber = __webpack_require__(682);
            var isPlainObject = __webpack_require__(683);
            var isString = __webpack_require__(684);
            var once = __webpack_require__(685);

            var SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none']
            if (PS_SUPPORTED) {
                SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');
            }

            var sign_options_schema = {
                expiresIn: {
                    isValid: function(value) {
                        return isInteger(value) || (isString(value) && value);
                    },
                    message: '"expiresIn" should be a number of seconds or string representing a timespan'
                },
                notBefore: {
                    isValid: function(value) {
                        return isInteger(value) || (isString(value) && value);
                    },
                    message: '"notBefore" should be a number of seconds or string representing a timespan'
                },
                audience: {
                    isValid: function(value) {
                        return isString(value) || Array.isArray(value);
                    },
                    message: '"audience" must be a string or array'
                },
                algorithm: {
                    isValid: includes.bind(null, SUPPORTED_ALGS),
                    message: '"algorithm" must be a valid string enum value'
                },
                header: {
                    isValid: isPlainObject,
                    message: '"header" must be an object'
                },
                encoding: {
                    isValid: isString,
                    message: '"encoding" must be a string'
                },
                issuer: {
                    isValid: isString,
                    message: '"issuer" must be a string'
                },
                subject: {
                    isValid: isString,
                    message: '"subject" must be a string'
                },
                jwtid: {
                    isValid: isString,
                    message: '"jwtid" must be a string'
                },
                noTimestamp: {
                    isValid: isBoolean,
                    message: '"noTimestamp" must be a boolean'
                },
                keyid: {
                    isValid: isString,
                    message: '"keyid" must be a string'
                },
                mutatePayload: {
                    isValid: isBoolean,
                    message: '"mutatePayload" must be a boolean'
                }
            };

            var registered_claims_schema = {
                iat: {
                    isValid: isNumber,
                    message: '"iat" should be a number of seconds'
                },
                exp: {
                    isValid: isNumber,
                    message: '"exp" should be a number of seconds'
                },
                nbf: {
                    isValid: isNumber,
                    message: '"nbf" should be a number of seconds'
                }
            };

            function validate(schema, allowUnknown, object, parameterName) {
                if (!isPlainObject(object)) {
                    throw new Error('Expected "' + parameterName + '" to be a plain object.');
                }
                Object.keys(object).forEach(function(key) {
                    var validator = schema[key];
                    if (!validator) {
                        if (!allowUnknown) {
                            throw new Error('"' + key + '" is not allowed in "' + parameterName + '"');
                        }
                        return;
                    }
                    if (!validator.isValid(object[key])) {
                        throw new Error(validator.message);
                    }
                });
            }

            function validateOptions(options) {
                return validate(sign_options_schema, false, options, 'options');
            }

            function validatePayload(payload) {
                return validate(registered_claims_schema, true, payload, 'payload');
            }

            var options_to_payload = {
                'audience': 'aud',
                'issuer': 'iss',
                'subject': 'sub',
                'jwtid': 'jti'
            };

            var options_for_objects = ['expiresIn', 'notBefore', 'noTimestamp', 'audience', 'issuer', 'subject', 'jwtid', ];

            module.exports = function(payload, secretOrPrivateKey, options, callback) {
                if (typeof options === 'function') {
                    callback = options;
                    options = {};
                } else {
                    options = options || {};
                }

                var isObjectPayload = typeof payload === 'object' && !Buffer.isBuffer(payload);

                var header = Object.assign({
                    alg: options.algorithm || 'HS256',
                    typ: isObjectPayload ? 'JWT' : undefined,
                    kid: options.keyid
                }, options.header);

                function failure(err) {
                    if (callback) {
                        return callback(err);
                    }
                    throw err;
                }

                if (!secretOrPrivateKey && options.algorithm !== 'none') {
                    return failure(new Error('secretOrPrivateKey must have a value'));
                }

                if (typeof payload === 'undefined') {
                    return failure(new Error('payload is required'));
                } else if (isObjectPayload) {
                    try {
                        validatePayload(payload);
                    } catch (error) {
                        return failure(error);
                    }
                    if (!options.mutatePayload) {
                        payload = Object.assign({}, payload);
                    }
                } else {
                    var invalid_options = options_for_objects.filter(function(opt) {
                        return typeof options[opt] !== 'undefined';
                    });

                    if (invalid_options.length > 0) {
                        return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload) + ' payload'));
                    }
                }

                if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {
                    return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));
                }

                if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {
                    return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));
                }

                try {
                    validateOptions(options);
                } catch (error) {
                    return failure(error);
                }

                var timestamp = payload.iat || Math.floor(Date.now() / 1000);

                if (options.noTimestamp) {
                    delete payload.iat;
                } else if (isObjectPayload) {
                    payload.iat = timestamp;
                }

                if (typeof options.notBefore !== 'undefined') {
                    try {
                        payload.nbf = timespan(options.notBefore, timestamp);
                    } catch (err) {
                        return failure(err);
                    }
                    if (typeof payload.nbf === 'undefined') {
                        return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
                    }
                }

                if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {
                    try {
                        payload.exp = timespan(options.expiresIn, timestamp);
                    } catch (err) {
                        return failure(err);
                    }
                    if (typeof payload.exp === 'undefined') {
                        return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
                    }
                }

                Object.keys(options_to_payload).forEach(function(key) {
                    var claim = options_to_payload[key];
                    if (typeof options[key] !== 'undefined') {
                        if (typeof payload[claim] !== 'undefined') {
                            return failure(new Error('Bad "options.' + key + '" option. The payload already has an "' + claim + '" property.'));
                        }
                        payload[claim] = options[key];
                    }
                });

                var encoding = options.encoding || 'utf8';

                if (typeof callback === 'function') {
                    callback = callback && once(callback);

                    jws.createSign({
                        header: header,
                        privateKey: secretOrPrivateKey,
                        payload: payload,
                        encoding: encoding
                    }).once('error', callback).once('done', function(signature) {
                        callback(null, signature);
                    });
                } else {
                    return jws.sign({
                        header: header,
                        payload: payload,
                        secret: secretOrPrivateKey,
                        encoding: encoding
                    });
                }
            }
            ;

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 679 */
    /***/
    (function(module, exports) {

        /**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0
          , MAX_SAFE_INTEGER = 9007199254740991
          , MAX_INTEGER = 1.7976931348623157e+308
          , NAN = 0 / 0;

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]'
          , funcTag = '[object Function]'
          , genTag = '[object GeneratorFunction]'
          , stringTag = '[object String]'
          , symbolTag = '[object Symbol]';

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
        function arrayMap(array, iteratee) {
            var index = -1
              , length = array ? array.length : 0
              , result = Array(length);

            while (++index < length) {
                result[index] = iteratee(array[index], index, array);
            }
            return result;
        }

        /**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length
              , index = fromIndex + (fromRight ? 1 : -1);

            while ((fromRight ? index-- : ++index < length)) {
                if (predicate(array[index], index, array)) {
                    return index;
                }
            }
            return -1;
        }

        /**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
        function baseIndexOf(array, value, fromIndex) {
            if (value !== value) {
                return baseFindIndex(array, baseIsNaN, fromIndex);
            }
            var index = fromIndex - 1
              , length = array.length;

            while (++index < length) {
                if (array[index] === value) {
                    return index;
                }
            }
            return -1;
        }

        /**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
        function baseIsNaN(value) {
            return value !== value;
        }

        /**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
        function baseTimes(n, iteratee) {
            var index = -1
              , result = Array(n);

            while (++index < n) {
                result[index] = iteratee(index);
            }
            return result;
        }

        /**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
        function baseValues(object, props) {
            return arrayMap(props, function(key) {
                return object[key];
            });
        }

        /**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            }
            ;
        }

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /** Built-in value references. */
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeKeys = overArg(Object.keys, Object)
          , nativeMax = Math.max;

        /**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
        function arrayLikeKeys(value, inherited) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            // Safari 9 makes `arguments.length` enumerable in strict mode.
            var result = (isArray(value) || isArguments(value)) ? baseTimes(value.length, String) : [];

            var length = result.length
              , skipIndexes = !!length;

            for (var key in value) {
                if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
                    result.push(key);
                }
            }
            return result;
        }

        /**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
        function baseKeys(object) {
            if (!isPrototype(object)) {
                return nativeKeys(object);
            }
            var result = [];
            for (var key in Object(object)) {
                if (hasOwnProperty.call(object, key) && key != 'constructor') {
                    result.push(key);
                }
            }
            return result;
        }

        /**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
        function isIndex(value, length) {
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (typeof value == 'number' || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
        }

        /**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
        function isPrototype(value) {
            var Ctor = value && value.constructor
              , proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

            return value === proto;
        }

        /**
 * Checks if `value` is in `collection`. If `collection` is a string, it's
 * checked for a substring of `value`, otherwise
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * is used for equality comparisons. If `fromIndex` is negative, it's used as
 * the offset from the end of `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 * _.includes('abcd', 'bc');
 * // => true
 */
        function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

            var length = collection.length;
            if (fromIndex < 0) {
                fromIndex = nativeMax(length + fromIndex, 0);
            }
            return isString(collection) ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1) : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
        }

        /**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
        function isArguments(value) {
            // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
            return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
        }

        /**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
        var isArray = Array.isArray;

        /**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
        function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
        }

        /**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
        function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
        }

        /**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
        function isFunction(value) {
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 8-9 which returns 'object' for typed array and other constructors.
            var tag = isObject(value) ? objectToString.call(value) : '';
            return tag == funcTag || tag == genTag;
        }

        /**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
        function isLength(value) {
            return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }

        /**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
        function isObject(value) {
            var type = typeof value;
            return !!value && (type == 'object' || type == 'function');
        }

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
        function isString(value) {
            return typeof value == 'string' || (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
        }

        /**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
        function isSymbol(value) {
            return typeof value == 'symbol' || (isObjectLike(value) && objectToString.call(value) == symbolTag);
        }

        /**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
        function toFinite(value) {
            if (!value) {
                return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = (value < 0 ? -1 : 1);
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }

        /**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
        function toInteger(value) {
            var result = toFinite(value)
              , remainder = result % 1;

            return result === result ? (remainder ? result - remainder : result) : 0;
        }

        /**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
        function toNumber(value) {
            if (typeof value == 'number') {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? (other + '') : other;
            }
            if (typeof value != 'string') {
                return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, '');
            var isBinary = reIsBinary.test(value);
            return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
        }

        /**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
        function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }

        /**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
        function values(object) {
            return object ? baseValues(object, keys(object)) : [];
        }

        module.exports = includes;

        /***/
    }
    ), /* 680 */
    /***/
    (function(module, exports) {

        /**
 * lodash 3.0.3 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

        /** `Object#toString` result references. */
        var boolTag = '[object Boolean]';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */
        function isBoolean(value) {
            return value === true || value === false || (isObjectLike(value) && objectToString.call(value) == boolTag);
        }

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        module.exports = isBoolean;

        /***/
    }
    ), /* 681 */
    /***/
    (function(module, exports) {

        /**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0
          , MAX_INTEGER = 1.7976931348623157e+308
          , NAN = 0 / 0;

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /**
 * Checks if `value` is an integer.
 *
 * **Note:** This method is based on
 * [`Number.isInteger`](https://mdn.io/Number/isInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
 * @example
 *
 * _.isInteger(3);
 * // => true
 *
 * _.isInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isInteger(Infinity);
 * // => false
 *
 * _.isInteger('3');
 * // => false
 */
        function isInteger(value) {
            return typeof value == 'number' && value == toInteger(value);
        }

        /**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
        function isObject(value) {
            var type = typeof value;
            return !!value && (type == 'object' || type == 'function');
        }

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
        function isSymbol(value) {
            return typeof value == 'symbol' || (isObjectLike(value) && objectToString.call(value) == symbolTag);
        }

        /**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
        function toFinite(value) {
            if (!value) {
                return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = (value < 0 ? -1 : 1);
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }

        /**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
        function toInteger(value) {
            var result = toFinite(value)
              , remainder = result % 1;

            return result === result ? (remainder ? result - remainder : result) : 0;
        }

        /**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
        function toNumber(value) {
            if (typeof value == 'number') {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? (other + '') : other;
            }
            if (typeof value != 'string') {
                return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, '');
            var isBinary = reIsBinary.test(value);
            return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
        }

        module.exports = isInteger;

        /***/
    }
    ), /* 682 */
    /***/
    (function(module, exports) {

        /**
 * lodash 3.0.3 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

        /** `Object#toString` result references. */
        var numberTag = '[object Number]';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
 * as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
        function isNumber(value) {
            return typeof value == 'number' || (isObjectLike(value) && objectToString.call(value) == numberTag);
        }

        module.exports = isNumber;

        /***/
    }
    ), /* 683 */
    /***/
    (function(module, exports) {

        /**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

        /** `Object#toString` result references. */
        var objectTag = '[object Object]';

        /**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
        function isHostObject(value) {
            // Many host objects are `Object` objects that can coerce to strings
            // despite having improperly defined `toString` methods.
            var result = false;
            if (value != null && typeof value.toString != 'function') {
                try {
                    result = !!(value + '');
                } catch (e) {}
            }
            return result;
        }

        /**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            }
            ;
        }

        /** Used for built-in method references. */
        var funcProto = Function.prototype
          , objectProto = Object.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to infer the `Object` constructor. */
        var objectCtorString = funcToString.call(Object);

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /** Built-in value references. */
        var getPrototype = overArg(Object.getPrototypeOf, Object);

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
        function isPlainObject(value) {
            if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
                return false;
            }
            var proto = getPrototype(value);
            if (proto === null) {
                return true;
            }
            var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return (typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
        }

        module.exports = isPlainObject;

        /***/
    }
    ), /* 684 */
    /***/
    (function(module, exports) {

        /**
 * lodash 4.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

        /** `Object#toString` result references. */
        var stringTag = '[object String]';

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @type Function
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
        var isArray = Array.isArray;

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
        function isString(value) {
            return typeof value == 'string' || (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
        }

        module.exports = isString;

        /***/
    }
    ), /* 685 */
    /***/
    (function(module, exports) {

        /**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

        /** Used as the `TypeError` message for "Functions" methods. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0
          , MAX_INTEGER = 1.7976931348623157e+308
          , NAN = 0 / 0;

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
        var objectToString = objectProto.toString;

        /**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */
        function before(n, func) {
            var result;
            if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            n = toInteger(n);
            return function() {
                if (--n > 0) {
                    result = func.apply(this, arguments);
                }
                if (n <= 1) {
                    func = undefined;
                }
                return result;
            }
            ;
        }

        /**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
        function once(func) {
            return before(2, func);
        }

        /**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
        function isObject(value) {
            var type = typeof value;
            return !!value && (type == 'object' || type == 'function');
        }

        /**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
        function isObjectLike(value) {
            return !!value && typeof value == 'object';
        }

        /**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
        function isSymbol(value) {
            return typeof value == 'symbol' || (isObjectLike(value) && objectToString.call(value) == symbolTag);
        }

        /**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
        function toFinite(value) {
            if (!value) {
                return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
                var sign = (value < 0 ? -1 : 1);
                return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
        }

        /**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
        function toInteger(value) {
            var result = toFinite(value)
              , remainder = result % 1;

            return result === result ? (remainder ? result - remainder : result) : 0;
        }

        /**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
        function toNumber(value) {
            if (typeof value == 'number') {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject(value)) {
                var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                value = isObject(other) ? (other + '') : other;
            }
            if (typeof value != 'string') {
                return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, '');
            var isBinary = reIsBinary.test(value);
            return (isBinary || reIsOctal.test(value)) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : (reIsBadHex.test(value) ? NAN : +value);
        }

        module.exports = once;

        /***/
    }
    ), /* 686 */
    /***/
    (function(module) {

        module.exports = JSON.parse("{\"type\":\"service_account\",\"project_id\":\"wcasg-ada-app-dev\",\"private_key_id\":\"c14f778938af640778daa1628e7b6c396e2518d5\",\"private_key\":\"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC25AzdSLmvWAhS\\nhx5h2zn31VO8Cycyv2i/Nj+iSI/iU5NXj32I8rVHOfAPsEZpQIvXYo051AkgYLCs\\nxDEQUZBptHMuIoV58JG1XXMva5d2pItJr/GXfSySu92qmobJXhatK6vllygCL0iv\\nSdok79WhAsSCyfjvCdo9kJsWWoA2tTt/QqPBac/0q6s201tYFUy0cWa11Bu2CEO9\\nbD0SsGN6FFE2+wRzA7CmqRqAe373dfpQeZlghyRs/SBvdRHmL8Oatzf9yNXmBDbd\\nxSq1js39G4ouKYGK1HFl2CnLDvZW+8D2+9qkkXhLgLX/wsdeuYE+xPL/vl/ZbjZV\\neOom6FWLAgMBAAECggEAGRKVguab8iJe7bVxYFf2D/hSZOaghpAAE6qjuaM5+nyb\\np/bXbmVbnbqfIv92/6nmIe50Tve3EpW+0siIs2SDKEKhQbNg2hE1YIhBqMAWwSCY\\nqc7xj2ONL0aLAn7xuHxqHm5sv+pjhT0nOUSmH8czYcHn38hBlL+kiCkhYcShbB5b\\nOCJLnHWlvs8e09Y4En4RkYEyp7xrAcu9cM/YIp8Q/UMl8GOs+LAkagwkCl/s/aDW\\nBgJefXs3MN2hXTGlBswZ0D4z92kaMw79AUSTU87AjWq3Bn/WrpHFANJRUaYDaDNT\\ntO6zMRPT6sDF+l6QQ6UtAd73EXy9rZyvQJJSLy/5+QKBgQD/SekzTqHZpr4i0IVo\\nXLP+cHhsmPueeTwIm/LRnJ7wR7CefzMATPA+DWaaaXw+/bS+4MSgtCriJGAlF2gR\\n1K3D7yrq8ld+GZ7NLeJ84ScXhmEgTCHZB/a+Gr6zMxoZ79L2i9k0q5XfY8E9Ri3O\\nOsMfHcH6IPnnwlh346yPEaeIowKBgQC3ZoARyR+S5/Brx3OptHEEpoKCugrUkGQG\\nAMxhUYiinWviX0qbICG/nHpcAJok/Z7hAJl5o6Kwov/u6Vps1G2mtBwhWL5i5F47\\nDNQ654lIN7Fh/5Thlhm78ERpyWXD0js24svpGGzCawMbzbJ5dIBF+dy/9KuPoUhL\\nmBdqJ+XF+QKBgH5WZIsYoe5ln3j5Otxf7E/B90a/Gt7dXoFgM/XaDaoZwGVfy6yd\\nZtM+rIVEKNG/mqBP+d8R6psJp28Tu1P/rZLmnJWzIutr4HPn/ksQ3di9jvl9085l\\nK43/DFsAsi0dy4hpwy9Wrw/jfTFGtsp1uDSA9ItFoIc6Xa/PQ4l2EjQDAoGAavHS\\nbIyjZL7ra236/FLENLoEEMb72cf5C6cbhwRMcMbrSi3XC25JP7q3fz66pCdgpkP7\\nOvs4u1fRdjeNCzk0V6lfXfKp0nDoofZxK4gofXw8a7Dl2EX266jHvAg811uYPAE0\\ndtBPW2+beHMSR9CvnB5/o0/BWxfpWGtv++8YBcECgYAZjWV5KDU+lnXIQempG6xg\\nKR5R284NnMFtK3qknMM9uFWE0ZqJfpfRTIa5DxzAJiEk76pf1LhZuE6E5tZCQz7B\\nfHjbcpiZqkSfGqRjkUh/4i9K8Itzl3L2XHkUiF58mowK4C1SETZ1PBSO/J/RJ1Cw\\nBPuVYp7A5Kk+GcR1bggK7g==\\n-----END PRIVATE KEY-----\\n\",\"client_email\":\"text2speech-synthesizer@wcasg-ada-app-dev.iam.gserviceaccount.com\",\"client_id\":\"106204823808626188291\",\"auth_uri\":\"https://accounts.google.com/o/oauth2/auth\",\"token_uri\":\"https://oauth2.googleapis.com/token\",\"auth_provider_x509_cert_url\":\"https://www.googleapis.com/oauth2/v1/certs\",\"client_x509_cert_url\":\"https://www.googleapis.com/robot/v1/metadata/x509/text2speech-synthesizer%40wcasg-ada-app-dev.iam.gserviceaccount.com\"}");

        /***/
    }
    ), /* 687 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const kefir_1 = tslib_1.__importDefault(__webpack_require__(418));

        const effects_1 = __webpack_require__(62);

        const actions_1 = __webpack_require__(92);

        const index_1 = __webpack_require__(231);

        let FOCUSED;
        let PREVIOUS_FOCUSED;
        /**
 * Tracks all bubbled blur events in DOM.
 */

        document.addEventListener('blur', e=>{
            PREVIOUS_FOCUSED = undefined;
            FOCUSED = undefined;
        }
        , {
            capture: true,
            passive: true
        });
        /**
 * Tracks all bubbled focus events in DOM.
 */

        document.addEventListener('focus', e=>{
            FOCUSED = e.target;
        }
        , {
            capture: true,
            passive: true
        });
        /**
 * Observable stream for all `focus` actions on document.
 * Only returns value when a newly focused node is set.
 * Interval determines frequency of poll checks.
 *
 * @type {Stream<unknown, unknown>}
 */

        const focusStream = kefir_1.default.fromPoll(config_1.default.focusPollFrequency, ()=>{
            // Check if new focus target
            if (FOCUSED && FOCUSED !== document.body && PREVIOUS_FOCUSED !== FOCUSED) {
                PREVIOUS_FOCUSED = FOCUSED;
                return FOCUSED;
            }
        }
        );
        /**
 * Watches all `focus` events.
 *
 * @returns {Generator<<"CALL", CallEffectDescriptor> | <"FORK", ForkEffectDescriptor>, void, unknown>}
 */

        function *watchFocus() {
            // Convert observable stream to channel
            const channel = yield effects_1.call(index_1.toChannel, focusStream);
            yield effects_1.takeLatest(channel, function*(val) {
                if (val) {
                    yield effects_1.put(actions_1.ActionCreators.focusNode({
                        node: val
                    }));
                }
            });
        }

        exports.watchFocus = watchFocus;

        /***/
    }
    ), /* 688 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const dom_1 = tslib_1.__importDefault(__webpack_require__(227));

        const kefir_1 = tslib_1.__importDefault(__webpack_require__(418));

        const plugin_1 = __webpack_require__(419);

        const effects_1 = __webpack_require__(62);

        const actions_1 = __webpack_require__(92);

        const index_1 = __webpack_require__(231);

        const selectors_1 = __webpack_require__(41);
        /**
 * Observable stream for all `keydown` actions on document.
 *
 * @type {Stream<unknown, unknown>}
 */

        const keyDownStream = kefir_1.default.fromEvents(document, 'keydown');
        /**
 * Watches all `keydown` events.
 *
 * @returns {Generator<<"CALL", CallEffectDescriptor> | <"FORK", ForkEffectDescriptor>, void, unknown>}
 */

        function *watchKeyDown() {
            // Convert observable stream to channel
            const channel = yield effects_1.call(index_1.toChannel, keyDownStream);
            yield effects_1.takeLatest(channel, function*(val) {
                const state = yield effects_1.select();

                if (new selectors_1.Selectors(state).isKeyboardEnabled()) {
                    // Immediately dispatch keyDown action for pressed key.
                    yield effects_1.put(actions_1.ActionCreators.keyDown({
                        key: val.key
                    }));
                    // Check focusing input/text field.

                    const focusedInputNode = dom_1.default.isFocusedNodeInputField();

                    if (!focusedInputNode) {
                        // Handle keyboard navigation
                        yield plugin_1.handleKeyboardNavigation(val);
                    }
                    // // Delay before finalizing
                    // yield delay(2500);
                    // // Placeholder for cleanup logic
                    // yield put({ type: 'placeholder', payload: { id: 'something' } });

                }
            });
        }

        exports.watchKeyDown = watchKeyDown;

        /***/
    }
    ), /* 689 */
    /***/
    (function(module, exports, __webpack_require__) {

        var createFind = __webpack_require__(365)
          , findIndex = __webpack_require__(120);

        /**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
        var find = createFind(findIndex);

        module.exports = find;

        /***/
    }
    ), /* 690 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const store_1 = tslib_1.__importStar(__webpack_require__(691));

        const manager_1 = tslib_1.__importDefault(__webpack_require__(114));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const cloneDeep_1 = tslib_1.__importDefault(__webpack_require__(355));

        const effects_1 = __webpack_require__(62);

        const actions_1 = __webpack_require__(92);

        const selectors_1 = __webpack_require__(41);

        const state_1 = __webpack_require__(230);
        /**
 * Load state data from local storage.
 *
 * @returns {Generator<never, void, unknown>}
 */

        function *loadStateFromLocalStorage() {
            const localState = store_1.default.getFromLocalStorage({
                type: store_1.StorageDataType.All,
                withCompression: config_1.default.useLocalStorageCompression
            });
            // Iterate default plugins and find matches in local storage

            manager_1.default.getInstance().plugins.forEach(plugin=>{
                // Find in localState
                if (localState && localState.plugins) {
                    const match = localState.plugins.find(statePlugin=>statePlugin.id === plugin.id);

                    if (match) {
                        manager_1.default.getInstance().setPluginInstanceState(match);
                    }
                }
            }
            );
            // Remove plugins prop from localState to retain updates

            delete localState.plugins;
            const newState = {
                ...state_1.defaultState,
                ...localState
            };
            return yield effects_1.put(actions_1.ActionCreators.reset({
                newState
            }));
        }

        exports.loadStateFromLocalStorage = loadStateFromLocalStorage;
        /**
 * Save state data to localStorage.
 *
 * @returns {Generator<<"SELECT", SelectEffectDescriptor>, void, unknown>}
 */

        function *saveStateToLocalStorage() {
            const state = yield effects_1.select();

            if (state) {
                const pluginsState = new selectors_1.Selectors(state).getPluginsLocalState();
                const stateCopy = cloneDeep_1.default(state);
                stateCopy.plugins = pluginsState;
                store_1.default.saveToLocalStorage({
                    value: stateCopy,
                    withCompression: config_1.default.useLocalStorageCompression,
                    type: store_1.StorageDataType.All
                });
            }
        }

        exports.saveStateToLocalStorage = saveStateToLocalStorage;

        /***/
    }
    ), /* 691 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const store2_1 = tslib_1.__importDefault(__webpack_require__(692));

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const findIndex_1 = tslib_1.__importDefault(__webpack_require__(120));

        const lz_string_1 = tslib_1.__importDefault(__webpack_require__(693));

        const atob_1 = tslib_1.__importDefault(__webpack_require__(694));

        const btoa_1 = tslib_1.__importDefault(__webpack_require__(695));

        var CompressionType;

        (function(CompressionType) {
            CompressionType[CompressionType["LZString"] = 0] = "LZString";
            CompressionType[CompressionType["Base64"] = 1] = "Base64";
        }
        )(CompressionType || (CompressionType = {}));

        var StorageDataType;

        (function(StorageDataType) {
            StorageDataType[StorageDataType["Plugin"] = 0] = "Plugin";
            StorageDataType[StorageDataType["All"] = 1] = "All";
        }
        )(StorageDataType = exports.StorageDataType || (exports.StorageDataType = {}));

        exports.Store = {
            compress: ({value, compressionType=CompressionType.Base64})=>{
                if (!value) {
                    return;
                }

                if (typeof value !== 'string') {
                    value = JSON.stringify(value);
                }

                if (compressionType === CompressionType.LZString) {
                    return lz_string_1.default.compress(value);
                } else if (compressionType === CompressionType.Base64) {
                    return btoa_1.default(JSON.stringify(value));
                }
            }
            ,
            decompress: ({value, compressionType=CompressionType.Base64})=>{
                if (!value) {
                    return;
                }

                if (compressionType === CompressionType.LZString) {
                    const decompressed = lz_string_1.default.decompress(value);

                    if (decompressed) {
                        return JSON.parse(decompressed);
                    }
                } else if (compressionType === CompressionType.Base64) {
                    console.log(`decompress base64`);
                    console.log(value);
                    console.log(atob_1.default(value));
                    const decompressed = atob_1.default(value);

                    if (decompressed) {
                        return JSON.parse(decompressed);
                    }
                }
            }
            ,
            getFromLocalStorage: ({id, type, withCompression=false})=>{
                let completeStore = store2_1.default(config_1.default.widgetId);

                if (!completeStore) {
                    return;
                }

                if (withCompression) {
                    completeStore = exports.Store.decompress({
                        value: completeStore,
                        compressionType: config_1.default.localCompressionType
                    });
                }

                if (type === StorageDataType.All) {
                    return completeStore;
                }

                if (type === StorageDataType.Plugin) {
                    if (!completeStore.plugins) {
                        return;
                    }

                    if (!id) {
                        // Get all plugins;
                        return completeStore.plugins;
                    }

                    return completeStore.plugins.find(plugin=>plugin.id === id);
                }
            }
            ,
            saveToLocalStorage: ({value, type, withCompression=false})=>{
                if (type === StorageDataType.All) {
                    if (withCompression) {
                        value = exports.Store.compress({
                            value,
                            compressionType: config_1.default.localCompressionType
                        });
                    }

                    store2_1.default.set(config_1.default.widgetId, value);
                } else if (type === StorageDataType.Plugin) {
                    if (!value.id) {
                        return;
                    }

                    let completeStore = exports.Store.getFromLocalStorage({
                        type: StorageDataType.All,
                        withCompression
                    });

                    if (!completeStore) {
                        completeStore = {};
                    }

                    if (!completeStore.plugins) {
                        completeStore.plugins = [];
                    }
                    // Find plugin

                    const pluginIndex = findIndex_1.default(completeStore.plugins, plugin=>plugin.id === value.id);
                    // If value is a full plugin instance, get just the state data

                    if (value.getInstanceState && typeof value.getInstanceState === 'function') {
                        value = value.getInstanceState();
                    }

                    if (pluginIndex === -1) {
                        // Add plugin value.
                        completeStore.plugins.push(value);
                    } else {
                        // Update plugin value.
                        completeStore.plugins[pluginIndex] = value;
                    }
                    // Save

                    store2_1.default.set(config_1.default.widgetId, withCompression ? exports.Store.compress({
                        value: completeStore,
                        compressionType: config_1.default.localCompressionType
                    }) : completeStore);
                }
            }
        };
        exports.default = exports.Store;

        /***/
    }
    ), /* 692 */
    /***/
    (function(module, exports, __webpack_require__) {

        /*! store2 - v2.10.0 - 2019-09-27
* Copyright (c) 2019 Nathan Bubna; Licensed (MIT OR GPL-3.0) */
        ;(function(window, define) {
            var _ = {
                version: "2.10.0",
                areas: {},
                apis: {},

                // utilities
                inherit: function(api, o) {
                    for (var p in api) {
                        if (!o.hasOwnProperty(p)) {
                            Object.defineProperty(o, p, Object.getOwnPropertyDescriptor(api, p));
                        }
                    }
                    return o;
                },
                stringify: function(d) {
                    return d === undefined || typeof d === "function" ? d + '' : JSON.stringify(d);
                },
                parse: function(s) {
                    // if it doesn't parse, return as is
                    try {
                        return JSON.parse(s);
                    } catch (e) {
                        return s;
                    }
                },

                // extension hooks
                fn: function(name, fn) {
                    _.storeAPI[name] = fn;
                    for (var api in _.apis) {
                        _.apis[api][name] = fn;
                    }
                },
                get: function(area, key) {
                    return area.getItem(key);
                },
                set: function(area, key, string) {
                    area.setItem(key, string);
                },
                remove: function(area, key) {
                    area.removeItem(key);
                },
                key: function(area, i) {
                    return area.key(i);
                },
                length: function(area) {
                    return area.length;
                },
                clear: function(area) {
                    area.clear();
                },

                // core functions
                Store: function(id, area, namespace) {
                    var store = _.inherit(_.storeAPI, function(key, data, overwrite) {
                        if (arguments.length === 0) {
                            return store.getAll();
                        }
                        if (typeof data === "function") {
                            return store.transact(key, data, overwrite);
                        }
                        // fn=data, alt=overwrite
                        if (data !== undefined) {
                            return store.set(key, data, overwrite);
                        }
                        if (typeof key === "string" || typeof key === "number") {
                            return store.get(key);
                        }
                        if (typeof key === "function") {
                            return store.each(key);
                        }
                        if (!key) {
                            return store.clear();
                        }
                        return store.setAll(key, data);
                        // overwrite=data, data=key
                    });
                    store._id = id;
                    try {
                        var testKey = '_-bad-_';
                        area.setItem(testKey, 'wolf');
                        store._area = area;
                        area.removeItem(testKey);
                    } catch (e) {}
                    if (!store._area) {
                        store._area = _.storage('fake');
                    }
                    store._ns = namespace || '';
                    if (!_.areas[id]) {
                        _.areas[id] = store._area;
                    }
                    if (!_.apis[store._ns + store._id]) {
                        _.apis[store._ns + store._id] = store;
                    }
                    return store;
                },
                storeAPI: {
                    // admin functions
                    area: function(id, area) {
                        var store = this[id];
                        if (!store || !store.area) {
                            store = _.Store(id, area, this._ns);
                            //new area-specific api in this namespace
                            if (!this[id]) {
                                this[id] = store;
                            }
                        }
                        return store;
                    },
                    namespace: function(namespace, singleArea) {
                        if (!namespace) {
                            return this._ns ? this._ns.substring(0, this._ns.length - 1) : '';
                        }
                        var ns = namespace
                          , store = this[ns];
                        if (!store || !store.namespace) {
                            store = _.Store(this._id, this._area, this._ns + ns + '.');
                            //new namespaced api
                            if (!this[ns]) {
                                this[ns] = store;
                            }
                            if (!singleArea) {
                                for (var name in _.areas) {
                                    store.area(name, _.areas[name]);
                                }
                            }
                        }
                        return store;
                    },
                    isFake: function() {
                        return this._area.name === 'fake';
                    },
                    toString: function() {
                        return 'store' + (this._ns ? '.' + this.namespace() : '') + '[' + this._id + ']';
                    },

                    // storage functions
                    has: function(key) {
                        if (this._area.has) {
                            return this._area.has(this._in(key));
                            //extension hook
                        }
                        return !!(this._in(key)in this._area);
                    },
                    size: function() {
                        return this.keys().length;
                    },
                    each: function(fn, fill) {
                        // fill is used by keys(fillList) and getAll(fillList))
                        for (var i = 0, m = _.length(this._area); i < m; i++) {
                            var key = this._out(_.key(this._area, i));
                            if (key !== undefined) {
                                if (fn.call(this, key, this.get(key), fill) === false) {
                                    break;
                                }
                            }
                            if (m > _.length(this._area)) {
                                m--;
                                i--;
                            }
                            // in case of removeItem
                        }
                        return fill || this;
                    },
                    keys: function(fillList) {
                        return this.each(function(k, v, list) {
                            list.push(k);
                        }, fillList || []);
                    },
                    get: function(key, alt) {
                        var s = _.get(this._area, this._in(key));
                        return s !== null ? _.parse(s) : alt || s;
                        // support alt for easy default mgmt
                    },
                    getAll: function(fillObj) {
                        return this.each(function(k, v, all) {
                            all[k] = v;
                        }, fillObj || {});
                    },
                    transact: function(key, fn, alt) {
                        var val = this.get(key, alt)
                          , ret = fn(val);
                        this.set(key, ret === undefined ? val : ret);
                        return this;
                    },
                    set: function(key, data, overwrite) {
                        var d = this.get(key);
                        if (d != null && overwrite === false) {
                            return data;
                        }
                        return _.set(this._area, this._in(key), _.stringify(data), overwrite) || d;
                    },
                    setAll: function(data, overwrite) {
                        var changed, val;
                        for (var key in data) {
                            val = data[key];
                            if (this.set(key, val, overwrite) !== val) {
                                changed = true;
                            }
                        }
                        return changed;
                    },
                    add: function(key, data) {
                        var d = this.get(key);
                        if (d instanceof Array) {
                            data = d.concat(data);
                        } else if (d !== null) {
                            var type = typeof d;
                            if (type === typeof data && type === 'object') {
                                for (var k in data) {
                                    d[k] = data[k];
                                }
                                data = d;
                            } else {
                                data = d + data;
                            }
                        }
                        _.set(this._area, this._in(key), _.stringify(data));
                        return data;
                    },
                    remove: function(key, alt) {
                        var d = this.get(key, alt);
                        _.remove(this._area, this._in(key));
                        return d;
                    },
                    clear: function() {
                        if (!this._ns) {
                            _.clear(this._area);
                        } else {
                            this.each(function(k) {
                                _.remove(this._area, this._in(k));
                            }, 1);
                        }
                        return this;
                    },
                    clearAll: function() {
                        var area = this._area;
                        for (var id in _.areas) {
                            if (_.areas.hasOwnProperty(id)) {
                                this._area = _.areas[id];
                                this.clear();
                            }
                        }
                        this._area = area;
                        return this;
                    },

                    // internal use functions
                    _in: function(k) {
                        if (typeof k !== "string") {
                            k = _.stringify(k);
                        }
                        return this._ns ? this._ns + k : k;
                    },
                    _out: function(k) {
                        return this._ns ? k && k.indexOf(this._ns) === 0 ? k.substring(this._ns.length) : undefined : // so each() knows to skip it
                        k;
                    }
                },
                // end _.storeAPI
                storage: function(name) {
                    return _.inherit(_.storageAPI, {
                        items: {},
                        name: name
                    });
                },
                storageAPI: {
                    length: 0,
                    has: function(k) {
                        return this.items.hasOwnProperty(k);
                    },
                    key: function(i) {
                        var c = 0;
                        for (var k in this.items) {
                            if (this.has(k) && i === c++) {
                                return k;
                            }
                        }
                    },
                    setItem: function(k, v) {
                        if (!this.has(k)) {
                            this.length++;
                        }
                        this.items[k] = v;
                    },
                    removeItem: function(k) {
                        if (this.has(k)) {
                            delete this.items[k];
                            this.length--;
                        }
                    },
                    getItem: function(k) {
                        return this.has(k) ? this.items[k] : null;
                    },
                    clear: function() {
                        for (var k in this.items) {
                            this.removeItem(k);
                        }
                    }
                }// end _.storageAPI
            };

            var store = // safely set this up (throws error in IE10/32bit mode for local files)
            _.Store("local", (function() {
                try {
                    return localStorage;
                } catch (e) {}
            }
            )());
            store.local = store;
            // for completeness
            store._ = _;
            // for extenders and debuggers...
            // safely setup store.session (throws exception in FF for file:/// urls)
            store.area("session", (function() {
                try {
                    return sessionStorage;
                } catch (e) {}
            }
            )());
            store.area("page", _.storage("page"));

            if (typeof define === 'function' && define.amd !== undefined) {
                define('store2', [], function() {
                    return store;
                });
            } else if (true && module.exports) {
                module.exports = store;
            } else {
                // expose the primary store fn to the global object and save conflicts
                if (window.store) {
                    _.conflict = window.store;
                }
                window.store = store;
            }

        }
        )(this, this && this.define);

        /***/
    }
    ), /* 693 */
    /***/
    (function(module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_RESULT__;
        // Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
        // This work is free. You can redistribute it and/or modify it
        // under the terms of the WTFPL, Version 2
        // For more information see LICENSE.txt or http://www.wtfpl.net/
        //
        // For more information, the home page:
        // http://pieroxy.net/blog/pages/lz-string/testing.html
        //
        // LZ-based compression algorithm, version 1.4.4
        var LZString = (function() {

            // private property
            var f = String.fromCharCode;
            var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
            var baseReverseDic = {};

            function getBaseValue(alphabet, character) {
                if (!baseReverseDic[alphabet]) {
                    baseReverseDic[alphabet] = {};
                    for (var i = 0; i < alphabet.length; i++) {
                        baseReverseDic[alphabet][alphabet.charAt(i)] = i;
                    }
                }
                return baseReverseDic[alphabet][character];
            }

            var LZString = {
                compressToBase64: function(input) {
                    if (input == null)
                        return "";
                    var res = LZString._compress(input, 6, function(a) {
                        return keyStrBase64.charAt(a);
                    });
                    switch (res.length % 4) {
                        // To produce valid Base64
                    default:
                        // When could this happen ?
                    case 0:
                        return res;
                    case 1:
                        return res + "===";
                    case 2:
                        return res + "==";
                    case 3:
                        return res + "=";
                    }
                },

                decompressFromBase64: function(input) {
                    if (input == null)
                        return "";
                    if (input == "")
                        return null;
                    return LZString._decompress(input.length, 32, function(index) {
                        return getBaseValue(keyStrBase64, input.charAt(index));
                    });
                },

                compressToUTF16: function(input) {
                    if (input == null)
                        return "";
                    return LZString._compress(input, 15, function(a) {
                        return f(a + 32);
                    }) + " ";
                },

                decompressFromUTF16: function(compressed) {
                    if (compressed == null)
                        return "";
                    if (compressed == "")
                        return null;
                    return LZString._decompress(compressed.length, 16384, function(index) {
                        return compressed.charCodeAt(index) - 32;
                    });
                },

                //compress into uint8array (UCS-2 big endian format)
                compressToUint8Array: function(uncompressed) {
                    var compressed = LZString.compress(uncompressed);
                    var buf = new Uint8Array(compressed.length * 2);
                    // 2 bytes per character

                    for (var i = 0, TotalLen = compressed.length; i < TotalLen; i++) {
                        var current_value = compressed.charCodeAt(i);
                        buf[i * 2] = current_value >>> 8;
                        buf[i * 2 + 1] = current_value % 256;
                    }
                    return buf;
                },

                //decompress from uint8array (UCS-2 big endian format)
                decompressFromUint8Array: function(compressed) {
                    if (compressed === null || compressed === undefined) {
                        return LZString.decompress(compressed);
                    } else {
                        var buf = new Array(compressed.length / 2);
                        // 2 bytes per character
                        for (var i = 0, TotalLen = buf.length; i < TotalLen; i++) {
                            buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];
                        }

                        var result = [];
                        buf.forEach(function(c) {
                            result.push(f(c));
                        });
                        return LZString.decompress(result.join(''));

                    }

                },

                //compress into a string that is already URI encoded
                compressToEncodedURIComponent: function(input) {
                    if (input == null)
                        return "";
                    return LZString._compress(input, 6, function(a) {
                        return keyStrUriSafe.charAt(a);
                    });
                },

                //decompress from an output of compressToEncodedURIComponent
                decompressFromEncodedURIComponent: function(input) {
                    if (input == null)
                        return "";
                    if (input == "")
                        return null;
                    input = input.replace(/ /g, "+");
                    return LZString._decompress(input.length, 32, function(index) {
                        return getBaseValue(keyStrUriSafe, input.charAt(index));
                    });
                },

                compress: function(uncompressed) {
                    return LZString._compress(uncompressed, 16, function(a) {
                        return f(a);
                    });
                },
                _compress: function(uncompressed, bitsPerChar, getCharFromInt) {
                    if (uncompressed == null)
                        return "";
                    var i, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, // Compensate for the first entry which should not count
                    context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;

                    for (ii = 0; ii < uncompressed.length; ii += 1) {
                        context_c = uncompressed.charAt(ii);
                        if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
                            context_dictionary[context_c] = context_dictSize++;
                            context_dictionaryToCreate[context_c] = true;
                        }

                        context_wc = context_w + context_c;
                        if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {
                            context_w = context_wc;
                        } else {
                            if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                                if (context_w.charCodeAt(0) < 256) {
                                    for (i = 0; i < context_numBits; i++) {
                                        context_data_val = (context_data_val << 1);
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else {
                                            context_data_position++;
                                        }
                                    }
                                    value = context_w.charCodeAt(0);
                                    for (i = 0; i < 8; i++) {
                                        context_data_val = (context_data_val << 1) | (value & 1);
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else {
                                            context_data_position++;
                                        }
                                        value = value >> 1;
                                    }
                                } else {
                                    value = 1;
                                    for (i = 0; i < context_numBits; i++) {
                                        context_data_val = (context_data_val << 1) | value;
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else {
                                            context_data_position++;
                                        }
                                        value = 0;
                                    }
                                    value = context_w.charCodeAt(0);
                                    for (i = 0; i < 16; i++) {
                                        context_data_val = (context_data_val << 1) | (value & 1);
                                        if (context_data_position == bitsPerChar - 1) {
                                            context_data_position = 0;
                                            context_data.push(getCharFromInt(context_data_val));
                                            context_data_val = 0;
                                        } else {
                                            context_data_position++;
                                        }
                                        value = value >> 1;
                                    }
                                }
                                context_enlargeIn--;
                                if (context_enlargeIn == 0) {
                                    context_enlargeIn = Math.pow(2, context_numBits);
                                    context_numBits++;
                                }
                                delete context_dictionaryToCreate[context_w];
                            } else {
                                value = context_dictionary[context_w];
                                for (i = 0; i < context_numBits; i++) {
                                    context_data_val = (context_data_val << 1) | (value & 1);
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else {
                                        context_data_position++;
                                    }
                                    value = value >> 1;
                                }

                            }
                            context_enlargeIn--;
                            if (context_enlargeIn == 0) {
                                context_enlargeIn = Math.pow(2, context_numBits);
                                context_numBits++;
                            }
                            // Add wc to the dictionary.
                            context_dictionary[context_wc] = context_dictSize++;
                            context_w = String(context_c);
                        }
                    }

                    // Output the code for w.
                    if (context_w !== "") {
                        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                            if (context_w.charCodeAt(0) < 256) {
                                for (i = 0; i < context_numBits; i++) {
                                    context_data_val = (context_data_val << 1);
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else {
                                        context_data_position++;
                                    }
                                }
                                value = context_w.charCodeAt(0);
                                for (i = 0; i < 8; i++) {
                                    context_data_val = (context_data_val << 1) | (value & 1);
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else {
                                        context_data_position++;
                                    }
                                    value = value >> 1;
                                }
                            } else {
                                value = 1;
                                for (i = 0; i < context_numBits; i++) {
                                    context_data_val = (context_data_val << 1) | value;
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else {
                                        context_data_position++;
                                    }
                                    value = 0;
                                }
                                value = context_w.charCodeAt(0);
                                for (i = 0; i < 16; i++) {
                                    context_data_val = (context_data_val << 1) | (value & 1);
                                    if (context_data_position == bitsPerChar - 1) {
                                        context_data_position = 0;
                                        context_data.push(getCharFromInt(context_data_val));
                                        context_data_val = 0;
                                    } else {
                                        context_data_position++;
                                    }
                                    value = value >> 1;
                                }
                            }
                            context_enlargeIn--;
                            if (context_enlargeIn == 0) {
                                context_enlargeIn = Math.pow(2, context_numBits);
                                context_numBits++;
                            }
                            delete context_dictionaryToCreate[context_w];
                        } else {
                            value = context_dictionary[context_w];
                            for (i = 0; i < context_numBits; i++) {
                                context_data_val = (context_data_val << 1) | (value & 1);
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else {
                                    context_data_position++;
                                }
                                value = value >> 1;
                            }

                        }
                        context_enlargeIn--;
                        if (context_enlargeIn == 0) {
                            context_enlargeIn = Math.pow(2, context_numBits);
                            context_numBits++;
                        }
                    }

                    // Mark the end of the stream
                    value = 2;
                    for (i = 0; i < context_numBits; i++) {
                        context_data_val = (context_data_val << 1) | (value & 1);
                        if (context_data_position == bitsPerChar - 1) {
                            context_data_position = 0;
                            context_data.push(getCharFromInt(context_data_val));
                            context_data_val = 0;
                        } else {
                            context_data_position++;
                        }
                        value = value >> 1;
                    }

                    // Flush the last char
                    while (true) {
                        context_data_val = (context_data_val << 1);
                        if (context_data_position == bitsPerChar - 1) {
                            context_data.push(getCharFromInt(context_data_val));
                            break;
                        } else
                            context_data_position++;
                    }
                    return context_data.join('');
                },

                decompress: function(compressed) {
                    if (compressed == null)
                        return "";
                    if (compressed == "")
                        return null;
                    return LZString._decompress(compressed.length, 32768, function(index) {
                        return compressed.charCodeAt(index);
                    });
                },

                _decompress: function(length, resetValue, getNextValue) {
                    var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i, w, bits, resb, maxpower, power, c, data = {
                        val: getNextValue(0),
                        position: resetValue,
                        index: 1
                    };

                    for (i = 0; i < 3; i += 1) {
                        dictionary[i] = i;
                    }

                    bits = 0;
                    maxpower = Math.pow(2, 2);
                    power = 1;
                    while (power != maxpower) {
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (data.position == 0) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }

                    switch (next = bits) {
                    case 0:
                        bits = 0;
                        maxpower = Math.pow(2, 8);
                        power = 1;
                        while (power != maxpower) {
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        c = f(bits);
                        break;
                    case 1:
                        bits = 0;
                        maxpower = Math.pow(2, 16);
                        power = 1;
                        while (power != maxpower) {
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        c = f(bits);
                        break;
                    case 2:
                        return "";
                    }
                    dictionary[3] = c;
                    w = c;
                    result.push(c);
                    while (true) {
                        if (data.index > length) {
                            return "";
                        }

                        bits = 0;
                        maxpower = Math.pow(2, numBits);
                        power = 1;
                        while (power != maxpower) {
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }

                        switch (c = bits) {
                        case 0:
                            bits = 0;
                            maxpower = Math.pow(2, 8);
                            power = 1;
                            while (power != maxpower) {
                                resb = data.val & data.position;
                                data.position >>= 1;
                                if (data.position == 0) {
                                    data.position = resetValue;
                                    data.val = getNextValue(data.index++);
                                }
                                bits |= (resb > 0 ? 1 : 0) * power;
                                power <<= 1;
                            }

                            dictionary[dictSize++] = f(bits);
                            c = dictSize - 1;
                            enlargeIn--;
                            break;
                        case 1:
                            bits = 0;
                            maxpower = Math.pow(2, 16);
                            power = 1;
                            while (power != maxpower) {
                                resb = data.val & data.position;
                                data.position >>= 1;
                                if (data.position == 0) {
                                    data.position = resetValue;
                                    data.val = getNextValue(data.index++);
                                }
                                bits |= (resb > 0 ? 1 : 0) * power;
                                power <<= 1;
                            }
                            dictionary[dictSize++] = f(bits);
                            c = dictSize - 1;
                            enlargeIn--;
                            break;
                        case 2:
                            return result.join('');
                        }

                        if (enlargeIn == 0) {
                            enlargeIn = Math.pow(2, numBits);
                            numBits++;
                        }

                        if (dictionary[c]) {
                            entry = dictionary[c];
                        } else {
                            if (c === dictSize) {
                                entry = w + w.charAt(0);
                            } else {
                                return null;
                            }
                        }
                        result.push(entry);

                        // Add w+entry[0] to the dictionary.
                        dictionary[dictSize++] = w + entry.charAt(0);
                        enlargeIn--;

                        w = entry;

                        if (enlargeIn == 0) {
                            enlargeIn = Math.pow(2, numBits);
                            numBits++;
                        }

                    }
                }
            };
            return LZString;
        }
        )();

        if (true) {
            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                return LZString;
            }
            ).call(exports, __webpack_require__, exports, module),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {}

        /***/
    }
    ), /* 694 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer, module) {
            (function(w) {
                "use strict";

                function findBest(atobNative) {
                    // normal window
                    if ('function' === typeof atobNative) {
                        return atobNative;
                    }

                    // browserify (web worker)
                    if ('function' === typeof Buffer) {
                        return function atobBrowserify(a) {
                            //!! Deliberately using an API that's deprecated in node.js because
                            //!! this file is for browsers and we expect them to cope with it.
                            //!! Discussion: github.com/node-browser-compat/atob/pull/9
                            return new Buffer(a,'base64').toString('binary');
                        }
                        ;
                    }

                    // ios web worker with base64js
                    if ('object' === typeof w.base64js) {
                        // bufferToBinaryString
                        // https://git.coolaj86.com/coolaj86/unibabel.js/blob/master/index.js#L50
                        return function atobWebWorker_iOS(a) {
                            var buf = w.base64js.b64ToByteArray(a);
                            return Array.prototype.map.call(buf, function(ch) {
                                return String.fromCharCode(ch);
                            }).join('');
                        }
                        ;
                    }

                    return function() {
                        // ios web worker without base64js
                        throw new Error("You're probably in an old browser or an iOS webworker." + " It might help to include beatgammit's base64-js.");
                    }
                    ;
                }

                var atobBest = findBest(w.atob);
                w.atob = atobBest;

                if ((true) && module && module.exports) {
                    module.exports = atobBest;
                }
            }(window));

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer, __webpack_require__(119)(module)))

        /***/
    }
    ), /* 695 */
    /***/
    (function(module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function(Buffer) {
            (function() {
                "use strict";

                function btoa(str) {
                    var buffer;

                    if (str instanceof Buffer) {
                        buffer = str;
                    } else {
                        buffer = Buffer.from(str.toString(), 'binary');
                    }

                    return buffer.toString('base64');
                }

                module.exports = btoa;
            }());

            /* WEBPACK VAR INJECTION */
        }
        .call(this, __webpack_require__(25).Buffer))

        /***/
    }
    ), /* 696 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const manager_1 = tslib_1.__importDefault(__webpack_require__(114));

        const plugin_1 = tslib_1.__importDefault(__webpack_require__(697));

        const plugin_2 = tslib_1.__importDefault(__webpack_require__(700));

        const plugin_3 = tslib_1.__importDefault(__webpack_require__(703));

        const plugin_4 = tslib_1.__importDefault(__webpack_require__(706));

        const plugin_5 = tslib_1.__importDefault(__webpack_require__(709));

        const plugin_6 = tslib_1.__importDefault(__webpack_require__(711));

        const plugin_7 = tslib_1.__importDefault(__webpack_require__(714));

        const plugin_8 = tslib_1.__importDefault(__webpack_require__(717));

        const plugin_9 = tslib_1.__importDefault(__webpack_require__(720));

        const plugin_10 = tslib_1.__importDefault(__webpack_require__(723));

        const plugin_11 = tslib_1.__importDefault(__webpack_require__(419));

        const plugin_12 = tslib_1.__importDefault(__webpack_require__(726));

        const plugin_13 = tslib_1.__importDefault(__webpack_require__(733));

        const plugin_14 = tslib_1.__importDefault(__webpack_require__(734));

        const plugin_15 = tslib_1.__importDefault(__webpack_require__(735));

        const plugin_16 = tslib_1.__importDefault(__webpack_require__(738));

        const plugin_17 = tslib_1.__importDefault(__webpack_require__(368));

        const plugin_18 = tslib_1.__importDefault(__webpack_require__(740));

        const plugin_19 = tslib_1.__importDefault(__webpack_require__(743));

        const plugin_20 = tslib_1.__importDefault(__webpack_require__(371));

        const plugin_21 = tslib_1.__importDefault(__webpack_require__(746));

        const plugin_22 = tslib_1.__importDefault(__webpack_require__(370));

        manager_1.default.getInstance().add([plugin_1.default, plugin_2.default, plugin_3.default, plugin_4.default, plugin_5.default, plugin_6.default, plugin_7.default, plugin_8.default, plugin_9.default, plugin_10.default, plugin_11.default, plugin_12.default, plugin_13.default, plugin_14.default, plugin_15.default, plugin_16.default, plugin_17.default, plugin_18.default, plugin_19.default, plugin_20.default, plugin_21.default, plugin_22.default]);

        /***/
    }
    ), /* 697 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const action_1 = __webpack_require__(48);

        const class_1 = __webpack_require__(45);

        const style_1 = __webpack_require__(96);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(698));

        const actionClass = new class_1.PluginActionClass({
            name: 'black-and-yellow-action-style',
            klass: [styles_scss_1.default.blackAndYellow],
            query: 'html'
        });
        const actionStyle = new style_1.PluginActionStyle({
            name: 'black-and-yellow-action-background-image',
            style: {
                name: 'background-image',
                manipulationType: action_1.ValueManipulationType.Toggle,
                // Value assigned to property when action is enabled.
                enabledValue: 'none'
            },
            query: ['.btn', '.button', 'a', 'span', 'li', 'button'].join(', ')
        });

        function *onEnable() {
            actionClass.enable();
            actionStyle.enable();
        }

        function *onDisable() {
            actionClass.disable();
            actionStyle.disable();
        }

        exports.pluginObject = {
            id: data_1.Ids.BlackAndYellow,
            title: 'Black and Yellow',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnable]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [onDisable]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 698 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(699);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 699 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh body{color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh address:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh article:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh aside:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh footer:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh header:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh hgroup:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh nav:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh section:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh blockquote:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh dd:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh div:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh dl:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh dt:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh figcaption:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh figure:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h1:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h2:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h3:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h4:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h5:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh h6:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh hr:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh li:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh main:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh ol:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh p:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh pre:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh ul:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh a:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh abbr:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh b:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh bdi:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh bdo:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh br:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh cite:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh code:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh data:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh dfn:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh em:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh i:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh kbd:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh mark:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh q:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh rb:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh rp:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh rt:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh rtc:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh ruby:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh s:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh samp:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh small:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh span:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh strong:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh sub:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh sup:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh time:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh u:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh var:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh wbr:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh details:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh dialog:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh menu:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh menuitem:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh summary:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh area:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh audio:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh img:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh map:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh svg:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh track:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh video:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh caption:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh col:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh colgroup:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh table:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh tbody:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh td:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh tfoot:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh th:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh thead:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh tr:not(IGNORED){color:#f5f203!important;background-color:#000!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh button:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh datalist:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh fieldset:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh form:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh input:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh label:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh legend:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh meter:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh optgroup:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh option:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh output:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh progress:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh select:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}.plugins-black-and-yellow-\\[title\\]__blackAndYellow--1AAhh textarea:not(IGNORED){color:#f5f203!important;background-color:#000!important;outline:2px solid #f5f203!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "blackAndYellow": "plugins-black-and-yellow-[title]__blackAndYellow--1AAhh"
        };
        module.exports = exports;

        /***/
    }
    ), /* 700 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const action_1 = __webpack_require__(48);

        const class_1 = __webpack_require__(45);

        const style_1 = __webpack_require__(96);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(701));

        const actionClass = new class_1.PluginActionClass({
            name: 'dark-contrast-action-style',
            klass: [styles_scss_1.default.darkContrast],
            query: 'html'
        });
        const actionStyle = new style_1.PluginActionStyle({
            name: 'dark-contrast-action-background-image',
            style: {
                name: 'background-image',
                manipulationType: action_1.ValueManipulationType.Toggle,
                // Value assigned to property when action is enabled.
                enabledValue: 'none'
            },
            query: ['.btn', '.button', 'a', 'span', 'li', 'button'].join(', ')
        });

        function *onEnable() {
            actionClass.enable();
            actionStyle.enable();
        }

        function *onDisable() {
            actionClass.disable();
            actionStyle.disable();
        }

        exports.pluginObject = {
            id: data_1.Ids.DarkContrast,
            title: 'Dark Contrast',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnable]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [onDisable]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 701 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(702);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 702 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-dark-contrast-\\[title\\]__darkContrast--3swjm body{color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm address:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm article:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm aside:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm footer:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm header:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm hgroup:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm nav:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm section:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm blockquote:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm dd:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm div:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm dl:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm dt:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm figcaption:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm figure:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h1:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h2:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h3:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h4:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h5:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm h6:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm hr:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm li:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm main:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm ol:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm p:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm pre:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm ul:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm a:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm abbr:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm b:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm bdi:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm bdo:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm br:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm cite:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm code:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm data:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm dfn:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm em:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm i:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm kbd:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm mark:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm q:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm rb:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm rp:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm rt:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm rtc:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm ruby:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm s:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm samp:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm small:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm span:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm strong:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm sub:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm sup:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm time:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm u:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm var:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm wbr:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm details:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm dialog:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm menu:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm menuitem:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm summary:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm area:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm audio:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm img:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm map:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm svg:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm track:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm video:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm caption:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm col:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm colgroup:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm table:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm tbody:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm td:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm tfoot:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm th:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm thead:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm tr:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm button:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm datalist:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm fieldset:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm form:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm input:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm label:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm legend:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm meter:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm optgroup:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm option:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm output:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm progress:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm select:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}.plugins-dark-contrast-\\[title\\]__darkContrast--3swjm textarea:not(IGNORED){color:#f3f3f3!important;background-color:#3a3a3a!important;outline:2px solid rgba(218,214,210,.85)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "darkContrast": "plugins-dark-contrast-[title]__darkContrast--3swjm"
        };
        module.exports = exports;

        /***/
    }
    ), /* 703 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(704));

        const actionClass = new class_1.PluginActionClass({
            name: 'emphasize-hover-action',
            klass: [styles_scss_1.default.emphasizeHover],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.EmphasizeHover,
            title: 'Emphasize Hover',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 704 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(705);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 705 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-emphasize-hover-\\[title\\]__emphasizeHover--2a15B>:not(wcasg-ada-app) :hover{outline:2px solid #ecaa17!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "emphasizeHover": "plugins-emphasize-hover-[title]__emphasizeHover--2a15B"
        };
        module.exports = exports;

        /***/
    }
    ), /* 706 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(707));

        const actionClass = new class_1.PluginActionClass({
            name: 'emphasize-titles-action',
            klass: [styles_scss_1.default.emphasizeTitles],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.EmphasizeTitles,
            title: 'Emphasize Titles',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 707 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(708);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 708 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h1,.plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h2,.plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h3,.plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h4,.plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h5,.plugins-emphasize-titles-\\[title\\]__emphasizeTitles--243N8 h6{outline:2px solid rgba(236,170,23,.5)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "emphasizeTitles": "plugins-emphasize-titles-[title]__emphasizeTitles--243N8"
        };
        module.exports = exports;

        /***/
    }
    ), /* 709 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const TextNodeType_1 = tslib_1.__importDefault(__webpack_require__(421));

        const action_1 = __webpack_require__(48);

        const style_1 = __webpack_require__(96);

        const data_1 = __webpack_require__(24);

        const effects_1 = __webpack_require__(62);

        const selectors_1 = __webpack_require__(41);

        const actionStyle = new style_1.PluginActionStyle({
            name: 'adjust-font-size-action',
            style: {
                name: 'font-size',
                manipulationType: action_1.ValueManipulationType.PercentageScaling
            },
            query: new TextNodeType_1.default().types.join(', ')
        });

        function *onEnableOrChange() {
            var _plugin$scaling;

            const state = yield effects_1.select();
            const selectors = new selectors_1.Selectors(state);
            // Get latest state version.

            const plugin = selectors.getPlugin(exports.pluginObject.id);

            if (!plugin.enabled) {
                return;
            }

            actionStyle.enable({
                factor: (_plugin$scaling = plugin.scaling) === null || _plugin$scaling === void 0 ? void 0 : _plugin$scaling.factor
            });
        }

        exports.pluginObject = {
            id: data_1.Ids.FontSize,
            title: 'Font Size',
            enabled: false,
            options: [],
            scaling: {
                baseFactor: 0,
                factor: 0,
                increment: 0.1,
                type: action_1.ValueManipulationType.PercentageScaling
            },
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.increment,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.decrement,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionStyle.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 710 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        class NodeType {
            constructor() {
                this.id = '';
                this.types = [];
            }
            /**
   * Gets the collection of relevant HTMLElements based on the `types` array.
   *
   * @returns {NodeList<HTMLElement>}
   */

            nodes() {
                return document.querySelectorAll(this.types.join(', '));
            }

        }

        exports.default = NodeType;

        /***/
    }
    ), /* 711 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(712));

        const actionClass = new class_1.PluginActionClass({
            name: 'grayscale-action',
            klass: [styles_scss_1.default.grayscale],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.Grayscale,
            title: 'Grayscale',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 712 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(713);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 713 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-grayscale-\\[title\\]__grayscale--16uZt{-webkit-filter:grayscale(100%);-moz-filter:grayscale(100%);-ms-filter:grayscale(100%);-o-filter:grayscale(100%);filter:grayscale(100%)}", ""]);
        // Exports
        exports.locals = {
            "grayscale": "plugins-grayscale-[title]__grayscale--16uZt"
        };
        module.exports = exports;

        /***/
    }
    ), /* 714 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(715));

        const actionClass = new class_1.PluginActionClass({
            name: 'hide-images-action',
            klass: [styles_scss_1.default.hideImages]
        });
        exports.pluginObject = {
            id: data_1.Ids.HideImages,
            title: 'Hide Images',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 715 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(716);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 716 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-hide-images-\\[title\\]__hideImages--Mm2Zd img,.plugins-hide-images-\\[title\\]__hideImages--Mm2Zd picture,.plugins-hide-images-\\[title\\]__hideImages--Mm2Zd source{visibility:hidden!important}.plugins-hide-images-\\[title\\]__hideImages--Mm2Zd *{background-image:none!important}", ""]);
        // Exports
        exports.locals = {
            "hideImages": "plugins-hide-images-[title]__hideImages--Mm2Zd"
        };
        module.exports = exports;

        /***/
    }
    ), /* 717 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(718));

        const actionClass = new class_1.PluginActionClass({
            name: 'highlight-forms-action',
            klass: [styles_scss_1.default.highlightForms]
        });
        exports.pluginObject = {
            id: data_1.Ids.HighlightForms,
            title: 'Highlight Forms',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 718 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(719);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 719 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-highlight-forms-\\[title\\]__highlightForms--IGOQ0 datalist,.plugins-highlight-forms-\\[title\\]__highlightForms--IGOQ0 input,.plugins-highlight-forms-\\[title\\]__highlightForms--IGOQ0 meter,.plugins-highlight-forms-\\[title\\]__highlightForms--IGOQ0 select,.plugins-highlight-forms-\\[title\\]__highlightForms--IGOQ0 textarea{outline:2px solid rgba(28,236,0,.5)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "highlightForms": "plugins-highlight-forms-[title]__highlightForms--IGOQ0"
        };
        module.exports = exports;

        /***/
    }
    ), /* 720 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(721));

        const css_1 = __webpack_require__(87);

        const data_1 = __webpack_require__(24);

        const effects_1 = __webpack_require__(62);

        const selectors_1 = __webpack_require__(41);

        function *updateStyle() {
            const body = document.querySelectorAll('body')[0];
            const state = yield effects_1.select();
            const selectors = new selectors_1.Selectors(state);
            // Get latest state version.

            const plugin = selectors.getPlugin(exports.pluginObject.id);
            const options = selectors.getPluginOption(plugin.id);
            css_1.Css.removeClass({
                node: body,
                name: styles_scss_1.default.highlightLinksBorder
            });
            css_1.Css.removeClass({
                node: body,
                name: styles_scss_1.default.highlightLinksBlock
            });
            css_1.Css.removeClass({
                node: body,
                name: styles_scss_1.default.highlightLinksBoth
            });

            if (options && plugin.enabled) {
                const selected = options.find(option=>option.selected);

                if (selected) {
                    let styleName = styles_scss_1.default.highlightLinksBoth;

                    switch (selected.value) {
                    case 'block':
                        styleName = styles_scss_1.default.highlightLinksBlock;
                        break;

                    case 'border':
                        styleName = styles_scss_1.default.highlightLinksBorder;
                        break;

                    case 'both':
                        styleName = styles_scss_1.default.highlightLinksBoth;
                        break;

                    default:
                        styleName = styles_scss_1.default.highlightLinksBoth;
                        break;
                    }

                    css_1.Css.addClass({
                        node: body,
                        name: styleName
                    });
                }
            }
        }

        exports.pluginObject = {
            id: data_1.Ids.HighlightLinks,
            title: 'Highlight Links',
            enabled: false,
            options: [{
                id: 0,
                name: 'style',
                text: 'Block',
                value: 'block',
                selected: true
            }, {
                id: 1,
                name: 'style',
                text: 'Border',
                value: 'border'
            }, {
                id: 2,
                name: 'style',
                text: 'Both',
                value: 'both'
            }],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [updateStyle]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [updateStyle]
            }, {
                on: enum_1.PluginActionTypes.selectOption,
                func: [updateStyle]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 721 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(722);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 722 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-highlight-links-\\[title\\]__highlightLinksBlock--1_K9J a,.plugins-highlight-links-\\[title\\]__highlightLinksBlock--1_K9J button,.plugins-highlight-links-\\[title\\]__highlightLinksBlock--1_K9J input[type=image],.plugins-highlight-links-\\[title\\]__highlightLinksBlock--1_K9J input[type=submit],.plugins-highlight-links-\\[title\\]__highlightLinksBlock--1_K9J select{background-color:#56c69f!important}.plugins-highlight-links-\\[title\\]__highlightLinksBorder--2mXdC a,.plugins-highlight-links-\\[title\\]__highlightLinksBorder--2mXdC button,.plugins-highlight-links-\\[title\\]__highlightLinksBorder--2mXdC input[type=image],.plugins-highlight-links-\\[title\\]__highlightLinksBorder--2mXdC input[type=submit],.plugins-highlight-links-\\[title\\]__highlightLinksBorder--2mXdC select{outline:2px solid rgba(198,83,140,.5)!important;outline-offset:1px!important}.plugins-highlight-links-\\[title\\]__highlightLinksBoth--2DGyS a,.plugins-highlight-links-\\[title\\]__highlightLinksBoth--2DGyS button,.plugins-highlight-links-\\[title\\]__highlightLinksBoth--2DGyS input[type=image],.plugins-highlight-links-\\[title\\]__highlightLinksBoth--2DGyS input[type=submit],.plugins-highlight-links-\\[title\\]__highlightLinksBoth--2DGyS select{background-color:#56c69f!important;outline:2px solid rgba(198,83,140,.5)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "highlightLinksBlock": "plugins-highlight-links-[title]__highlightLinksBlock--1_K9J",
            "highlightLinksBorder": "plugins-highlight-links-[title]__highlightLinksBorder--2mXdC",
            "highlightLinksBoth": "plugins-highlight-links-[title]__highlightLinksBoth--2DGyS"
        };
        module.exports = exports;

        /***/
    }
    ), /* 723 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(724));

        const actionClass = new class_1.PluginActionClass({
            name: 'invert-colors-action',
            klass: [styles_scss_1.default.invert],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.InvertColors,
            title: 'Invert Colors',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 724 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(725);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 725 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-invert-colors-\\[title\\]__invert--CBD06{-webkit-filter:invert(100%);-moz-filter:invert(100%);-ms-filter:invert(100%);-o-filter:invert(100%);filter:invert(100%)}", ""]);
        // Exports
        exports.locals = {
            "invert": "plugins-invert-colors-[title]__invert--CBD06"
        };
        module.exports = exports;

        /***/
    }
    ), /* 726 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(727));

        const actionClass = new class_1.PluginActionClass({
            name: 'large-cursor-action',
            klass: [styles_scss_1.default.largeCursor],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.LargeCursor,
            title: 'Large Cursor',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 727 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(728);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 728 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        var ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(729);
        var ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(730);
        var ___CSS_LOADER_URL_IMPORT_1___ = __webpack_require__(731);
        var ___CSS_LOADER_URL_IMPORT_2___ = __webpack_require__(732);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
        var ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);
        var ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);
        // Module
        exports.push([module.i, ".plugins-large-cursor-\\[title\\]__largeCursor--1CMNq,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq *{cursor:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + "),auto!important}.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * code,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * p,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * span{cursor:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") 7 14,auto!important}.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * a,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * a *,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * button,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * button *,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * input,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * input *,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * select,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * select *,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * textarea,.plugins-large-cursor-\\[title\\]__largeCursor--1CMNq * textarea *{cursor:url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") 5 0,auto!important}", ""]);
        // Exports
        exports.locals = {
            "largeCursor": "plugins-large-cursor-[title]__largeCursor--1CMNq"
        };
        module.exports = exports;

        /***/
    }
    ), /* 729 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        module.exports = function(url, options) {
            if (!options) {
                // eslint-disable-next-line no-param-reassign
                options = {};
            }
            // eslint-disable-next-line no-underscore-dangle, no-param-reassign

            url = url && url.__esModule ? url.default : url;

            if (typeof url !== 'string') {
                return url;
            }
            // If url is already wrapped in quotes, remove them

            if (/^['"].*['"]$/.test(url)) {
                // eslint-disable-next-line no-param-reassign
                url = url.slice(1, -1);
            }

            if (options.hash) {
                // eslint-disable-next-line no-param-reassign
                url += options.hash;
            }
            // Should url be wrapped?
            // See https://drafts.csswg.org/css-values-3/#urls

            if (/["'() \t\n]/.test(url) || options.needQuotes) {
                return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, '\\n'), "\"");
            }

            return url;
        }
        ;

        /***/
    }
    ), /* 730 */
    /***/
    (function(module, exports) {

        module.exports = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='28'%3E%3Cpath d='M17.703 16.297a.964.964 0 01.219 1.078A1.002 1.002 0 0117 18h-5.969l3.141 7.438a1.005 1.005 0 01-.531 1.313l-2.766 1.172a1.005 1.005 0 01-1.313-.531l-2.984-7.063-4.875 4.875a.996.996 0 01-.703.297c-.125 0-.266-.031-.375-.078A1.002 1.002 0 010 24.501v-23.5C0 .595.25.235.625.079.734.032.875.001 1 .001c.266 0 .516.094.703.297z'/%3E%3C/svg%3E"

        /***/
    }
    ), /* 731 */
    /***/
    (function(module, exports) {

        module.exports = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='28'%3E%3Cpath d='M13 2C9.687 2 8 3.172 8 5.5V12h2v2H8v8.5c0 2.328 1.687 3.5 5 3.5h1v2h-1c-2.812 0-4.875-.812-6-2.281C5.875 27.188 3.813 28 1 28H0v-2h1c3.313 0 5-1.172 5-3.5V14H4v-2h2V5.5C6 3.172 4.313 2 1 2H0V0h1c2.812 0 4.875.812 6 2.281C8.125.812 10.187 0 13 0h1v2h-1z'/%3E%3C/svg%3E"

        /***/
    }
    ), /* 732 */
    /***/
    (function(module, exports) {

        module.exports = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='26' height='28'%3E%3Cpath d='M10 2c-1.109 0-2 .891-2 2v14l-2.359-3.156A2.125 2.125 0 003.969 14C2.875 14 2 14.922 2 16c0 .438.141.859.406 1.203l6 8c.375.5.969.797 1.594.797h11.219c.453 0 .859-.313.969-.75l1.437-5.75c.25-1 .375-2.016.375-3.031v-3.391c0-.828-.641-1.578-1.5-1.578A1.5 1.5 0 0021 13h-.5v-.953c0-.984-.75-1.797-1.75-1.797-.969 0-1.75.781-1.75 1.75v1h-.5v-1.406c0-1.125-.859-2.094-2-2.094-1.109 0-2 .891-2 2V13H12V4.094C12 2.969 11.141 2 10 2zm0-2c2.234 0 4 1.875 4 4.094v3.437c.172-.016.328-.031.5-.031a3.94 3.94 0 012.703 1.078 3.764 3.764 0 011.547-.328c1.125 0 2.172.5 2.875 1.359.297-.078.578-.109.875-.109 1.969 0 3.5 1.641 3.5 3.578v3.391c0 1.172-.141 2.359-.438 3.516l-1.437 5.75a2.994 2.994 0 01-2.906 2.266H10a4.07 4.07 0 01-3.203-1.594l-6-8A4.041 4.041 0 010 16.001c0-2.188 1.781-4 3.969-4A3.99 3.99 0 016 12.548V4.001c0-2.203 1.797-4 4-4zm2 22v-6h-.5v6h.5zm4 0v-6h-.5v6h.5zm4 0v-6h-.5v6h.5z'/%3E%3C/svg%3E"

        /***/
    }
    ), /* 733 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);
        // import styles from './styles.scss';

        const actionClass = new class_1.PluginActionClass({
            name: 'large-icons-action',
            // klass: [styles.largeCursor],
            query: 'html'
        });
        /**
 * Tags for icons
 * button
 * i
 * svg
 * a
 * span
 */

        /**
 * attributes for icons
 * <span>type</span>
 * <a>type</a>
 * *[class*="type"]
 * *[id*="type"]
 * *[data-item*="type"]
 * *[aria-label*="type"]
 */

        /**
 * ::before { content: "\f030"; }
 *
 */

        const findMatch = ({keyword, tag, attribute})=>{
            const queryString = `${tag}[${attribute}*="${keyword}"]`;
            console.log(queryString);
            return document.querySelectorAll(queryString);
        }
        ;
        // font awesome

        const keywords = ['save', 'close', 'stop', 'pause', 'play'];
        const tags = ['button', 'i', 'svg', 'a', 'span'];
        const attributes = ['class', 'id', 'data-item', 'aria-label'];
        // generate Cartesian products

        const queries = [];
        tags.forEach(tag=>keywords.forEach(keyword=>attributes.forEach(attribute=>queries.push({
            keyword,
            attribute,
            tag
        }))));
        console.log(`large-icons, queries`);
        console.log(queries);
        console.log(queries.reduce((initial,current)=>`${initial ? initial + ', ' : initial}${current.tag}[${current.attribute}*="${current.keyword}"]`, ''));
        exports.pluginObject = {
            id: data_1.Ids.LargeIcons,
            title: 'Large Icons',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 734 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const data_1 = __webpack_require__(24);

        const effects_1 = __webpack_require__(62);

        const TextNodeType_1 = tslib_1.__importDefault(__webpack_require__(421));

        const action_1 = __webpack_require__(48);

        const style_1 = __webpack_require__(96);

        const selectors_1 = __webpack_require__(41);

        const actionStyle = new style_1.PluginActionStyle({
            name: 'adjust-letter-spacing-action',
            style: {
                name: 'letter-spacing',
                manipulationType: action_1.ValueManipulationType.AbsoluteScaling,
                unitType: 'px'
            },
            query: new TextNodeType_1.default().types.join(', ')
        });

        function *onEnableOrChange() {
            var _plugin$scaling;

            const state = yield effects_1.select();
            const selectors = new selectors_1.Selectors(state);
            // Get latest state version.

            const plugin = selectors.getPlugin(exports.pluginObject.id);

            if (!plugin.enabled) {
                return;
            }

            actionStyle.enable({
                factor: (_plugin$scaling = plugin.scaling) === null || _plugin$scaling === void 0 ? void 0 : _plugin$scaling.factor
            });
        }

        exports.pluginObject = {
            id: data_1.Ids.LetterSpacing,
            title: 'Letter Spacing',
            enabled: false,
            options: [],
            scaling: {
                baseFactor: 0,
                factor: 0,
                increment: 1,
                type: action_1.ValueManipulationType.AbsoluteScaling
            },
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.increment,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.decrement,
                func: [onEnableOrChange]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionStyle.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 735 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const action_1 = __webpack_require__(48);

        const class_1 = __webpack_require__(45);

        const style_1 = __webpack_require__(96);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(736));

        const actionClass = new class_1.PluginActionClass({
            name: 'light-contrast-action-style',
            klass: [styles_scss_1.default.lightContrast],
            query: 'html'
        });
        const actionStyle = new style_1.PluginActionStyle({
            name: 'light-contrast-action-background-image',
            style: {
                name: 'background-image',
                manipulationType: action_1.ValueManipulationType.Toggle,
                // Value assigned to property when action is enabled.
                enabledValue: 'none'
            },
            query: ['.btn', '.button', 'a', 'span', 'li', 'button'].join(', ')
        });

        function *onEnable() {
            actionClass.enable();
            actionStyle.enable();
        }

        function *onDisable() {
            actionClass.disable();
            actionStyle.disable();
        }

        exports.pluginObject = {
            id: data_1.Ids.LightContrast,
            title: 'Light Contrast',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnable]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [onDisable]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 736 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(737);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 737 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-light-contrast-\\[title\\]__lightContrast--3JTiR body{color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR address:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR article:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR aside:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR footer:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR header:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR hgroup:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR nav:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR section:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR blockquote:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR dd:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR div:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR dl:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR dt:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR figcaption:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR figure:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h1:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h2:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h3:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h4:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h5:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR h6:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR hr:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR li:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR main:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR ol:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR p:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR pre:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR ul:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR a:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR abbr:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR b:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR bdi:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR bdo:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR br:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR cite:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR code:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR data:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR dfn:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR em:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR i:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR kbd:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR mark:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR q:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR rb:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR rp:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR rt:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR rtc:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR ruby:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR s:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR samp:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR small:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR span:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR strong:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR sub:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR sup:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR time:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR u:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR var:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR wbr:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR details:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR dialog:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR menu:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR menuitem:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR summary:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR area:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR audio:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR img:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR map:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR svg:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR track:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR video:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR caption:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR col:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR colgroup:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR table:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR tbody:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR td:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR tfoot:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR th:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR thead:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR tr:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR button:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR datalist:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR fieldset:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR form:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR input:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR label:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR legend:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR meter:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR optgroup:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR option:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR output:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR progress:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR select:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}.plugins-light-contrast-\\[title\\]__lightContrast--3JTiR textarea:not(IGNORED){color:#121212!important;background-color:#f0f0f0!important;outline:2px solid rgba(14,11,11,.85)!important;outline-offset:1px!important}", ""]);
        // Exports
        exports.locals = {
            "lightContrast": "plugins-light-contrast-[title]__lightContrast--3JTiR"
        };
        module.exports = exports;

        /***/
    }
    ), /* 738 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const enum_1 = __webpack_require__(28);

        const action_1 = __webpack_require__(48);

        const property_1 = __webpack_require__(739);

        const data_1 = __webpack_require__(24);

        const actionProperty = new property_1.PluginActionProperty({
            name: 'mute-audio-action',
            property: {
                name: 'muted',
                manipulationType: action_1.ValueManipulationType.Direct,
                enabledValue: true,
                disabledValue: false
            },
            query: ['audio', 'video'].join(', ')
        });
        exports.pluginObject = {
            id: data_1.Ids.MuteAudio,
            title: 'Mute Audio',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionProperty.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionProperty.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 739 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        const css_1 = tslib_1.__importDefault(__webpack_require__(87));

        const data_1 = tslib_1.__importDefault(__webpack_require__(420));

        const action_1 = __webpack_require__(48);
        /**
 * PluginAction that manipulates CSS styles on DOM nodes.
 */

        class PluginActionProperty extends action_1.PluginAction {
            constructor(params) {
                super(params);
                this.domValueType = action_1.DOMValueType.Property;

                this.initialize = self=>{
                    // Initialize by generating original data attributes for property
                    this.addDataAttributeForProperties();
                }
                ;

                this.property = params.property;
                this.initialize(this);
            }

            enable(params) {
                this.nodeList.forEach(node=>{
                    // If absolute or scaling get calculated value
                    if ([action_1.ValueManipulationType.AbsoluteScaling, action_1.ValueManipulationType.PercentageScaling].includes(this.property.manipulationType)) {
                        const {factor} = params;
                        utility_1.default.setNodeValue({
                            node,
                            name: this.property.name,
                            type: this.domValueType,
                            value: this.getCalculatedPropertyValue(factor, node)
                        });
                    } else if (this.property.manipulationType === action_1.ValueManipulationType.Toggle) {
                        // If toggle, set to enabledValue (or remove if enabledValue is null)
                        if (this.property.enabledValue !== undefined) {
                            utility_1.default.setNodeValue({
                                node,
                                name: this.property.name,
                                type: this.domValueType,
                                value: this.property.enabledValue
                            });
                        } else {
                            utility_1.default.removeNodeValue({
                                node,
                                name: this.property.name,
                                type: this.domValueType
                            });
                        }
                    } else if (this.property.manipulationType === action_1.ValueManipulationType.Direct) {
                        // If direct, set to enabledValue (or remove if enabledValue is null)
                        if (this.property.enabledValue !== undefined) {
                            utility_1.default.setNodeValue({
                                node,
                                name: this.property.name,
                                type: this.domValueType,
                                value: this.property.enabledValue
                            });
                        } else {
                            utility_1.default.removeNodeValue({
                                node,
                                name: this.property.name,
                                type: this.domValueType
                            });
                        }
                    }
                }
                );
            }
            /**
   * Reset all applied properties to original values from saved data attribute
   */

            disable() {
                this.nodeList.forEach(node=>{
                    let value = this.property.disabledValue;
                    // If absolute, scaling, or toggled reset to original value

                    if ([action_1.ValueManipulationType.AbsoluteScaling, action_1.ValueManipulationType.PercentageScaling, action_1.ValueManipulationType.Toggle].includes(this.property.manipulationType)) {
                        // Get original from data attribute
                        value = utility_1.default.getNodeValue({
                            node,
                            name: data_1.default.generateDataAttributeName({
                                name: this.property.name,
                                type: this.domValueType
                            }),
                            type: action_1.DOMValueType.Attribute
                        });
                    }
                    // Set prop to disableValue unless null, then remove property.

                    if (value !== undefined) {
                        utility_1.default.setNodeValue({
                            node,
                            name: this.property.name,
                            type: this.domValueType,
                            value
                        });
                    } else {
                        utility_1.default.removeNodeValue({
                            node,
                            name: this.property.name,
                            type: this.domValueType
                        });
                    }
                }
                );
            }

            addDataAttributeForProperties() {
                data_1.default.createOriginalDataAttribute({
                    node: this.nodeList,
                    name: this.property.name,
                    type: this.domValueType
                });
            }

            getCalculatedPropertyValue(scalingFactor, element) {
                const propertyName = this.property.name;
                const baseValue = this.property.baseValue || '0';
                // Get original data attribute value

                const originalValue = utility_1.default.getNodeValue({
                    node: element,
                    name: data_1.default.generateDataAttributeName({
                        name: propertyName,
                        type: this.domValueType
                    }),
                    type: action_1.DOMValueType.Attribute
                });
                const parsedOriginalValue = parseFloat(originalValue);
                let numericValue = parsedOriginalValue;
                // If original value non-numeric, use base value

                if (isNaN(parsedOriginalValue)) {
                    numericValue = parseFloat(baseValue);
                }

                if (!this.property.unitType) {
                    const unitMatches = css_1.default.getUnitType(originalValue);

                    if (unitMatches) {
                        this.property.unitType = unitMatches[2];
                    }
                }
                // If percentage scaling and original and base value are zero, report

                if (this.property.manipulationType === action_1.ValueManipulationType.PercentageScaling && numericValue === 0 && parseFloat(baseValue) === 0) {
                    utility_1.default.throwError(`Cannot use 'DOMPropertyScalingType.Percentage' for property: ${this.property.name} which has an original and base value of zero.`);
                }
                // If percentage scaling and original and base value are zero, report

                if (this.property.unitType === undefined) {
                    utility_1.default.throwError(`Unable to detect valid unit type for original property value of '${this.property.name}.'  Please explicitly assign expected 'unitType' in configuration.`);
                }
                // Apply scaling

                if (this.property.manipulationType === action_1.ValueManipulationType.AbsoluteScaling) {
                    return `${numericValue + scalingFactor}${this.property.unitType}`;
                } else if (this.property.manipulationType === action_1.ValueManipulationType.PercentageScaling) {
                    // If value is zero scaling will fail, so use base value
                    return `${numericValue * (1 + scalingFactor)}${this.property.unitType}`;
                }
            }

        }

        exports.PluginActionProperty = PluginActionProperty;

        /***/
    }
    ), /* 740 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const action_1 = __webpack_require__(48);

        const class_1 = __webpack_require__(45);

        const style_1 = __webpack_require__(96);

        const data_1 = __webpack_require__(24);

        const effects_1 = __webpack_require__(62);

        const selectors_1 = __webpack_require__(41);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(741));

        const klassList = [];
        const actionClass = new class_1.PluginActionClass({
            name: 'readable-fonts-action',
            klass: [styles_scss_1.default.readableFonts]
        });
        const tags = ['p', 'li', 'label', 'input', 'select', 'textarea', 'legend', 'code', 'pre', 'dd', 'dt', 'span', 'blockquote', 'a', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
        // const actionProperty = new PluginActionProperty({
        //   property: {
        //     name: 'font-family',
        //     manipulationType: ValueManipulationType.Direct,
        //     enabledValue: true,
        //     disabledValue: false
        //   },
        //   query: tags.join(', ')
        // });

        const actionProperty = new style_1.PluginActionStyle({
            style: {
                name: 'font-family',
                manipulationType: action_1.ValueManipulationType.Direct,
                enabledValue: `Arial !important;`
            },
            query: tags.join(', ')
        });

        function *updateFont() {
            const body = document.querySelectorAll('body')[0];
            const state = yield effects_1.select();
            const selectors = new selectors_1.Selectors(state);
            // Get latest state version.

            const plugin = selectors.getPlugin(exports.pluginObject.id);
            const options = selectors.getPluginOption(plugin.id);
            // Css.removeClass({
            //   node: body,
            //   name: styles.highlightLinksBorder
            // });
            // Css.removeClass({
            //   node: body,
            //   name: styles.highlightLinksBlock
            // });
            // Css.removeClass({
            //   node: body,
            //   name: styles.highlightLinksBoth
            // });

            if (options && plugin.enabled) {
                const selected = options.find(option=>option.selected);

                if (selected) {
                    actionProperty.style.enabledValue = `${selected.value}`;
                    actionProperty.enable();
                }
            } else {
                actionProperty.disable();
            }
        }

        exports.pluginObject = {
            id: data_1.Ids.ReadableFonts,
            title: 'Readable Fonts',
            enabled: false,
            options: [{
                id: 0,
                name: 'font',
                text: 'Arial',
                value: 'Arial',
                selected: true
            }, {
                id: 1,
                name: 'font',
                text: 'Montserrat',
                value: 'Montserrat'
            }, {
                id: 2,
                name: 'font',
                text: 'Nunito',
                value: 'Nunito'
            }, {
                id: 3,
                name: 'font',
                text: 'Roboto',
                value: 'Roboto'
            }, {
                id: 4,
                name: 'font',
                text: 'Rubik',
                value: 'Rubik'
            }, {
                id: 5,
                name: 'font',
                text: 'Ubuntu',
                value: 'Ubuntu'
            }],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [updateFont]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [updateFont]
            }, {
                on: enum_1.PluginActionTypes.selectOption,
                func: [updateFont]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 741 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(742);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 742 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Montserrat|Nunito|Roboto|Rubik|Ubuntu&display=swap);"]);
        // Module
        exports.push([module.i, ".plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n a,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n blockquote,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n code,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n dd,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n dt,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h1,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h2,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h3,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h4,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h5,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n h6,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n input,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n label,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n legend,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n li,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n p,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n pre,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n select,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n span,.plugins-readable-fonts-\\[title\\]__readableFonts--35Q1n textarea{font-family:Arial,Helvetica,sans-serif!important}", ""]);
        // Exports
        exports.locals = {
            "readableFonts": "plugins-readable-fonts-[title]__readableFonts--35Q1n"
        };
        module.exports = exports;

        /***/
    }
    ), /* 743 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const class_1 = __webpack_require__(45);

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(744));

        const actionClass = new class_1.PluginActionClass({
            name: 'stop-css-animations-action',
            klass: [styles_scss_1.default.stopGlobalAnimations],
            query: 'html'
        });
        exports.pluginObject = {
            id: data_1.Ids.StopAnimations,
            title: 'Stop Animations',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [()=>actionClass.enable()]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [()=>actionClass.disable()]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 744 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(745);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 745 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-stop-animations-\\[title\\]__stopGlobalAnimations--1-llh *{-webkit-animation:none!important;animation:none!important;-webkit-transition:none!important;transition:none!important}", ""]);
        // Exports
        exports.locals = {
            "stopGlobalAnimations": "plugins-stop-animations-[title]__stopGlobalAnimations--1-llh"
        };
        module.exports = exports;

        /***/
    }
    ), /* 746 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        const tslib_1 = __webpack_require__(11);

        const enum_1 = __webpack_require__(28);

        const utility_1 = tslib_1.__importDefault(__webpack_require__(68));

        const aria_1 = tslib_1.__importDefault(__webpack_require__(154));

        const html_1 = __webpack_require__(747);

        const core_1 = __webpack_require__(752);

        const action_1 = __webpack_require__(48);

        const config_1 = tslib_1.__importDefault(__webpack_require__(57));

        const data_1 = __webpack_require__(24);

        const styles_scss_1 = tslib_1.__importDefault(__webpack_require__(748));
        // @ts-ignore

        const template_html_1 = tslib_1.__importDefault(__webpack_require__(750));

        const LocalState = {
            enabled: false,
            initialized: false,
            mouseEvents: ['mouseenter', 'mouseleave', 'focus', 'blur'],
            popper: undefined,
            queryString: `*[aria-label]:not([aria-label=""]), *[aria-labelledby]:not([aria-labelledby=""]), *[aria-valuetext]:not([aria-valuetext=""]), img[alt]:not([alt=""])`,
            tooltip: undefined
        };

        function createTooltip({target, tooltip}) {
            return core_1.createPopper(target, tooltip, {
                modifiers: [{
                    name: 'offset',
                    options: {
                        offset: [0, 8]
                    }
                }]
            });
        }

        function destroyTooltip({instance}) {
            if (instance) {
                instance.destroy();
            }
        }

        function handleMouseEvent(e) {
            // Ensure plugin is enabled.
            if (!LocalState.enabled) {
                return;
            }

            if (e.type === 'mouseenter' || e.type === 'focus') {
                // Set data-content value to accessible text of element.
                utility_1.default.setNodeValue({
                    type: action_1.DOMValueType.Attribute,
                    name: 'data-content',
                    value: aria_1.default.getElementText({
                        element: e.target
                    }),
                    node: LocalState.tooltip
                });
                // Show tooltip

                utility_1.default.setNodeValue({
                    type: action_1.DOMValueType.Attribute,
                    name: 'data-tooltip-show',
                    value: true,
                    node: LocalState.tooltip
                });
                // Create tooltip positioning

                LocalState.popper = createTooltip({
                    target: e.target,
                    tooltip: LocalState.tooltip
                });
            } else if (e.type === 'mouseleave' || e.type === 'blur') {
                utility_1.default.removeNodeValue({
                    type: action_1.DOMValueType.Attribute,
                    name: 'data-content',
                    node: LocalState.tooltip
                });
                utility_1.default.removeNodeValue({
                    type: action_1.DOMValueType.Attribute,
                    name: 'data-tooltip-show',
                    node: LocalState.tooltip
                });
                destroyTooltip({
                    instance: LocalState.popper
                });
            }
        }

        function initialize() {
            const body = document.getElementsByTagName('body');
            const html = document.getElementsByTagName('html');
            let parent;

            if (body && body[0]) {
                parent = body[0];
            } else if (html && html[0]) {
                parent = html[0];
            }

            if (!parent) {
                return;
            }
            // Create nodes from template string

            const nodes = html_1.Html.rawHtmlToNodes({
                raw: template_html_1.default
            });
            const tooltipId = `${config_1.default.widgetId}-tooltip`;
            // Explicitly set id and class for proper styling from CSS module

            nodes[0].id = tooltipId;
            nodes[0].className = styles_scss_1.default['wcasg-ada-app-tooltip'];
            parent.append(...nodes);
            // Assign to instance for later reference

            LocalState.tooltip = document.getElementById(tooltipId);
            LocalState.initialized = true;
        }

        function *onEnable() {
            LocalState.enabled = true;
            // Initialize, if necessary

            if (!LocalState.initialized) {
                initialize();
            }

            const nodeList = document.querySelectorAll(LocalState.queryString);

            if (!nodeList) {
                return;
            }

            nodeList.forEach(node=>{
                LocalState.mouseEvents.forEach(event=>{
                    if (node && typeof node.addEventListener === 'function') {
                        node.addEventListener(event, handleMouseEvent, {
                            passive: true,
                            capture: true
                        });
                    }
                }
                );
            }
            );
        }

        function *onDisable() {
            LocalState.enabled = false;
            const nodeList = document.querySelectorAll(LocalState.queryString);

            if (!nodeList) {
                return;
            }

            nodeList.forEach(node=>{
                LocalState.mouseEvents.forEach(event=>{
                    if (node && typeof node.addEventListener === 'function') {
                        node.removeEventListener(event, handleMouseEvent, {
                            passive: true,
                            capture: true
                        });
                    }
                }
                );
            }
            );
            // Destroy any active tooltip

            destroyTooltip({
                instance: LocalState.popper
            });
        }

        exports.pluginObject = {
            id: data_1.Ids.Tooltip,
            title: 'Tooltip',
            enabled: false,
            options: [],
            tasks: [{
                on: enum_1.PluginActionTypes.enable,
                func: [onEnable]
            }, {
                on: enum_1.PluginActionTypes.disable,
                func: [onDisable]
            }]
        };
        exports.default = exports.pluginObject;

        /***/
    }
    ), /* 747 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Html = {
            rawHtmlToNodes: ({raw})=>{
                const temp = document.createElement('div');
                temp.innerHTML = raw;

                if (temp.hasChildNodes()) {
                    return temp.childNodes;
                } else {
                    return temp.firstChild;
                }
            }
        };
        exports.default = exports.Html;

        /***/
    }
    ), /* 748 */
    /***/
    (function(module, exports, __webpack_require__) {

        var api = __webpack_require__(31);
        var content = __webpack_require__(749);

        content = content.__esModule ? content.default : content;

        if (typeof content === 'string') {
            content = [[module.i, content, '']];
        }

        var options = {};

        options.insert = "head";
        options.singleton = false;

        var update = api(module.i, content, options);

        var exported = content.locals ? content.locals : {};

        module.exports = exported;

        /***/
    }
    ), /* 749 */
    /***/
    (function(module, exports, __webpack_require__) {

        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(32);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([module.i, ".plugins-tooltip-\\[title\\]__wcasg-ada-app-tooltip--1cRFz{background:#333;border-radius:4px;color:#fff;display:none;font-size:24px;font-weight:700;max-width:200px;padding:4px 8px;z-index:9999}.plugins-tooltip-\\[title\\]__wcasg-ada-app-tooltip--1cRFz:after{content:attr(data-content)}.plugins-tooltip-\\[title\\]__wcasg-ada-app-tooltip--1cRFz[data-tooltip-show]{display:block}", ""]);
        // Exports
        exports.locals = {
            "wcasg-ada-app-tooltip": "plugins-tooltip-[title]__wcasg-ada-app-tooltip--1cRFz"
        };
        module.exports = exports;

        /***/
    }
    ), /* 750 */
    /***/
    (function(module, exports) {

        module.exports = "<div role=tooltip data-content=tooltip-text></div> ";

        /***/
    }
    ), /* 751 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);
        var colors_namespaceObject = {};
        __webpack_require__.r(colors_namespaceObject);
        __webpack_require__.d(colors_namespaceObject, "common", function() {
            return common["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "red", function() {
            return red["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "pink", function() {
            return pink["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "purple", function() {
            return colors_purple;
        });
        __webpack_require__.d(colors_namespaceObject, "deepPurple", function() {
            return colors_deepPurple;
        });
        __webpack_require__.d(colors_namespaceObject, "indigo", function() {
            return indigo["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "blue", function() {
            return blue["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "lightBlue", function() {
            return colors_lightBlue;
        });
        __webpack_require__.d(colors_namespaceObject, "cyan", function() {
            return colors_cyan;
        });
        __webpack_require__.d(colors_namespaceObject, "teal", function() {
            return colors_teal;
        });
        __webpack_require__.d(colors_namespaceObject, "green", function() {
            return green["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "lightGreen", function() {
            return colors_lightGreen;
        });
        __webpack_require__.d(colors_namespaceObject, "lime", function() {
            return colors_lime;
        });
        __webpack_require__.d(colors_namespaceObject, "yellow", function() {
            return colors_yellow;
        });
        __webpack_require__.d(colors_namespaceObject, "amber", function() {
            return colors_amber;
        });
        __webpack_require__.d(colors_namespaceObject, "orange", function() {
            return orange["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "deepOrange", function() {
            return colors_deepOrange;
        });
        __webpack_require__.d(colors_namespaceObject, "brown", function() {
            return colors_brown;
        });
        __webpack_require__.d(colors_namespaceObject, "grey", function() {
            return grey["a"/* default */
            ];
        });
        __webpack_require__.d(colors_namespaceObject, "blueGrey", function() {
            return colors_blueGrey;
        });

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/common.js
        var common = __webpack_require__(79);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/red.js
        var red = __webpack_require__(101);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/pink.js
        var pink = __webpack_require__(100);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/purple.js
        var purple = {
            50: '#f3e5f5',
            100: '#e1bee7',
            200: '#ce93d8',
            300: '#ba68c8',
            400: '#ab47bc',
            500: '#9c27b0',
            600: '#8e24aa',
            700: '#7b1fa2',
            800: '#6a1b9a',
            900: '#4a148c',
            A100: '#ea80fc',
            A200: '#e040fb',
            A400: '#d500f9',
            A700: '#aa00ff'
        };
        /* harmony default export */
        var colors_purple = (purple);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/deepPurple.js
        var deepPurple = {
            50: '#ede7f6',
            100: '#d1c4e9',
            200: '#b39ddb',
            300: '#9575cd',
            400: '#7e57c2',
            500: '#673ab7',
            600: '#5e35b1',
            700: '#512da8',
            800: '#4527a0',
            900: '#311b92',
            A100: '#b388ff',
            A200: '#7c4dff',
            A400: '#651fff',
            A700: '#6200ea'
        };
        /* harmony default export */
        var colors_deepPurple = (deepPurple);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/indigo.js
        var indigo = __webpack_require__(99);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/blue.js
        var blue = __webpack_require__(103);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/lightBlue.js
        var lightBlue = {
            50: '#e1f5fe',
            100: '#b3e5fc',
            200: '#81d4fa',
            300: '#4fc3f7',
            400: '#29b6f6',
            500: '#03a9f4',
            600: '#039be5',
            700: '#0288d1',
            800: '#0277bd',
            900: '#01579b',
            A100: '#80d8ff',
            A200: '#40c4ff',
            A400: '#00b0ff',
            A700: '#0091ea'
        };
        /* harmony default export */
        var colors_lightBlue = (lightBlue);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/cyan.js
        var cyan = {
            50: '#e0f7fa',
            100: '#b2ebf2',
            200: '#80deea',
            300: '#4dd0e1',
            400: '#26c6da',
            500: '#00bcd4',
            600: '#00acc1',
            700: '#0097a7',
            800: '#00838f',
            900: '#006064',
            A100: '#84ffff',
            A200: '#18ffff',
            A400: '#00e5ff',
            A700: '#00b8d4'
        };
        /* harmony default export */
        var colors_cyan = (cyan);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/teal.js
        var teal = {
            50: '#e0f2f1',
            100: '#b2dfdb',
            200: '#80cbc4',
            300: '#4db6ac',
            400: '#26a69a',
            500: '#009688',
            600: '#00897b',
            700: '#00796b',
            800: '#00695c',
            900: '#004d40',
            A100: '#a7ffeb',
            A200: '#64ffda',
            A400: '#1de9b6',
            A700: '#00bfa5'
        };
        /* harmony default export */
        var colors_teal = (teal);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/green.js
        var green = __webpack_require__(104);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/lightGreen.js
        var lightGreen = {
            50: '#f1f8e9',
            100: '#dcedc8',
            200: '#c5e1a5',
            300: '#aed581',
            400: '#9ccc65',
            500: '#8bc34a',
            600: '#7cb342',
            700: '#689f38',
            800: '#558b2f',
            900: '#33691e',
            A100: '#ccff90',
            A200: '#b2ff59',
            A400: '#76ff03',
            A700: '#64dd17'
        };
        /* harmony default export */
        var colors_lightGreen = (lightGreen);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/lime.js
        var lime = {
            50: '#f9fbe7',
            100: '#f0f4c3',
            200: '#e6ee9c',
            300: '#dce775',
            400: '#d4e157',
            500: '#cddc39',
            600: '#c0ca33',
            700: '#afb42b',
            800: '#9e9d24',
            900: '#827717',
            A100: '#f4ff81',
            A200: '#eeff41',
            A400: '#c6ff00',
            A700: '#aeea00'
        };
        /* harmony default export */
        var colors_lime = (lime);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/yellow.js
        var yellow = {
            50: '#fffde7',
            100: '#fff9c4',
            200: '#fff59d',
            300: '#fff176',
            400: '#ffee58',
            500: '#ffeb3b',
            600: '#fdd835',
            700: '#fbc02d',
            800: '#f9a825',
            900: '#f57f17',
            A100: '#ffff8d',
            A200: '#ffff00',
            A400: '#ffea00',
            A700: '#ffd600'
        };
        /* harmony default export */
        var colors_yellow = (yellow);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/amber.js
        var amber = {
            50: '#fff8e1',
            100: '#ffecb3',
            200: '#ffe082',
            300: '#ffd54f',
            400: '#ffca28',
            500: '#ffc107',
            600: '#ffb300',
            700: '#ffa000',
            800: '#ff8f00',
            900: '#ff6f00',
            A100: '#ffe57f',
            A200: '#ffd740',
            A400: '#ffc400',
            A700: '#ffab00'
        };
        /* harmony default export */
        var colors_amber = (amber);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/orange.js
        var orange = __webpack_require__(102);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/deepOrange.js
        var deepOrange = {
            50: '#fbe9e7',
            100: '#ffccbc',
            200: '#ffab91',
            300: '#ff8a65',
            400: '#ff7043',
            500: '#ff5722',
            600: '#f4511e',
            700: '#e64a19',
            800: '#d84315',
            900: '#bf360c',
            A100: '#ff9e80',
            A200: '#ff6e40',
            A400: '#ff3d00',
            A700: '#dd2c00'
        };
        /* harmony default export */
        var colors_deepOrange = (deepOrange);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/brown.js
        var brown = {
            50: '#efebe9',
            100: '#d7ccc8',
            200: '#bcaaa4',
            300: '#a1887f',
            400: '#8d6e63',
            500: '#795548',
            600: '#6d4c41',
            700: '#5d4037',
            800: '#4e342e',
            900: '#3e2723',
            A100: '#d7ccc8',
            A200: '#bcaaa4',
            A400: '#8d6e63',
            A700: '#5d4037'
        };
        /* harmony default export */
        var colors_brown = (brown);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/colors/grey.js
        var grey = __webpack_require__(98);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/blueGrey.js
        var blueGrey = {
            50: '#eceff1',
            100: '#cfd8dc',
            200: '#b0bec5',
            300: '#90a4ae',
            400: '#78909c',
            500: '#607d8b',
            600: '#546e7a',
            700: '#455a64',
            800: '#37474f',
            900: '#263238',
            A100: '#cfd8dc',
            A200: '#b0bec5',
            A400: '#78909c',
            A700: '#455a64'
        };
        /* harmony default export */
        var colors_blueGrey = (blueGrey);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/colors/index.js

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/index.js + 9 modules
        var esm_styles = __webpack_require__(249);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);
        var prop_types_default = /*#__PURE__*/
        __webpack_require__.n(prop_types);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/capitalize.js
        var capitalize = __webpack_require__(7);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Paper/Paper.js
        var Paper = __webpack_require__(761);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/AppBar/AppBar.js

        var AppBar_styles = function styles(theme) {
            var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'flex',
                    flexDirection: 'column',
                    width: '100%',
                    boxSizing: 'border-box',
                    // Prevent padding issue with the Modal and fixed positioned AppBar.
                    zIndex: theme.zIndex.appBar,
                    flexShrink: 0
                },

                /* Styles applied to the root element if `position="fixed"`. */
                positionFixed: {
                    position: 'fixed',
                    top: 0,
                    left: 'auto',
                    right: 0,
                    '@media print': {
                        // Prevent the app bar to be visible on each printed page.
                        position: 'absolute'
                    }
                },

                /* Styles applied to the root element if `position="absolute"`. */
                positionAbsolute: {
                    position: 'absolute',
                    top: 0,
                    left: 'auto',
                    right: 0
                },

                /* Styles applied to the root element if `position="sticky"`. */
                positionSticky: {
                    // ⚠️ sticky is not supported by IE 11.
                    position: 'sticky',
                    top: 0,
                    left: 'auto',
                    right: 0
                },

                /* Styles applied to the root element if `position="static"`. */
                positionStatic: {
                    position: 'static',
                    transform: 'translateZ(0)'// Make sure we can see the elevation.

                },

                /* Styles applied to the root element if `position="relative"`. */
                positionRelative: {
                    position: 'relative'
                },

                /* Styles applied to the root element if `color="default"`. */
                colorDefault: {
                    backgroundColor: backgroundColorDefault,
                    color: theme.palette.getContrastText(backgroundColorDefault)
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    backgroundColor: theme.palette.primary.main,
                    color: theme.palette.primary.contrastText
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    backgroundColor: theme.palette.secondary.main,
                    color: theme.palette.secondary.contrastText
                }
            };
        };
        var AppBar_AppBar = compat_module["default"].forwardRef(function AppBar(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , _props$position = props.position
              , position = _props$position === void 0 ? 'fixed' : _props$position
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "position"]);

            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                square: true,
                component: "header",
                elevation: 4,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["position".concat(Object(capitalize["a"/* default */
                ])(position))], className, color !== 'inherit' && classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], {
                    fixed: 'mui-fixed'
                }[position]),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_AppBar_AppBar = (Object(withStyles["a"/* default */
        ])(AppBar_styles, {
            name: 'MuiAppBar'
        })(AppBar_AppBar));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js
        var createSvgIcon = __webpack_require__(20);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var Person = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
        }), 'Person'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Avatar/Avatar.js

        var Avatar_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    flexShrink: 0,
                    width: 40,
                    height: 40,
                    fontFamily: theme.typography.fontFamily,
                    fontSize: theme.typography.pxToRem(20),
                    lineHeight: 1,
                    borderRadius: '50%',
                    overflow: 'hidden',
                    userSelect: 'none'
                },

                /* Styles applied to the root element if not `src` or `srcSet`. */
                colorDefault: {
                    color: theme.palette.background.default,
                    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
                },

                /* Styles applied to the root element if `variant="circle"`. */
                circle: {},

                /* Styles applied to the root element if `variant="rounded"`. */
                rounded: {
                    borderRadius: theme.shape.borderRadius
                },

                /* Styles applied to the root element if `variant="square"`. */
                square: {
                    borderRadius: 0
                },

                /* Styles applied to the img element if either `src` or `srcSet` is defined. */
                img: {
                    width: '100%',
                    height: '100%',
                    textAlign: 'center',
                    // Handle non-square image. The property isn't supported by IE 11.
                    objectFit: 'cover',
                    // Hide alt text.
                    color: 'transparent',
                    // Hide the image broken icon, only works on Chrome.
                    textIndent: 10000
                },

                /* Styles applied to the fallback icon */
                fallback: {
                    width: '75%',
                    height: '75%'
                }
            };
        };

        function useLoaded(_ref) {
            var src = _ref.src
              , srcSet = _ref.srcSet;

            var _React$useState = compat_module["default"].useState(false)
              , loaded = _React$useState[0]
              , setLoaded = _React$useState[1];

            compat_module["default"].useEffect(function() {
                if (!src && !srcSet) {
                    return undefined;
                }

                setLoaded(false);
                var active = true;
                var image = new Image();
                image.src = src;
                image.srcSet = srcSet;

                image.onload = function() {
                    if (!active) {
                        return;
                    }

                    setLoaded('loaded');
                }
                ;

                image.onerror = function() {
                    if (!active) {
                        return;
                    }

                    setLoaded('error');
                }
                ;

                return function() {
                    active = false;
                }
                ;
            }, [src, srcSet]);
            return loaded;
        }

        var Avatar_Avatar = compat_module["default"].forwardRef(function Avatar(props, ref) {
            var alt = props.alt
              , childrenProp = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , imgProps = props.imgProps
              , sizes = props.sizes
              , src = props.src
              , srcSet = props.srcSet
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'circle' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["alt", "children", "classes", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"]);

            var children = null;
            // Use a hook instead of onError on the img element to support server-side rendering.

            var loaded = useLoaded({
                src: src,
                srcSet: srcSet
            });
            var hasImg = src || srcSet;
            var hasImgNotFailing = hasImg && loaded !== 'error';

            if (hasImgNotFailing) {
                children = compat_module["default"].createElement("img", Object(esm_extends["a"/* default */
                ])({
                    alt: alt,
                    src: src,
                    srcSet: srcSet,
                    sizes: sizes,
                    className: classes.img
                }, imgProps));
            } else if (childrenProp != null) {
                children = childrenProp;
            } else if (hasImg && alt) {
                children = alt[0];
            } else {
                children = compat_module["default"].createElement(Person, {
                    className: classes.fallback
                });
            }

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),
                ref: ref
            }, other), children);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Avatar_Avatar = (Object(withStyles["a"/* default */
        ])(Avatar_styles, {
            name: 'MuiAvatar'
        })(Avatar_Avatar));
        // EXTERNAL MODULE: ../node_modules/react-transition-group/esm/Transition.js + 1 modules
        var Transition = __webpack_require__(765);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/transitions.js
        var transitions = __webpack_require__(22);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/useTheme.js
        var useTheme = __webpack_require__(17);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/transitions/utils.js
        var utils = __webpack_require__(29);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useForkRef.js
        var useForkRef = __webpack_require__(13);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Fade/Fade.js

        var Fade_styles = {
            entering: {
                opacity: 1
            },
            entered: {
                opacity: 1
            }
        };
        var defaultTimeout = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        /**
 * The Fade transition is used by the [Modal](/components/modal/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

        var Fade_Fade = compat_module["default"].forwardRef(function Fade(props, ref) {
            var children = props.children
              , inProp = props.in
              , onEnter = props.onEnter
              , onExit = props.onExit
              , style = props.style
              , _props$timeout = props.timeout
              , timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "in", "onEnter", "onExit", "style", "timeout"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var handleRef = Object(useForkRef["a"/* default */
            ])(children.ref, ref);

            var handleEnter = function handleEnter(node, isAppearing) {
                Object(utils["b"/* reflow */
                ])(node);
                // So the animation always start from the start.

                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'enter'
                });
                node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
                node.style.transition = theme.transitions.create('opacity', transitionProps);

                if (onEnter) {
                    onEnter(node, isAppearing);
                }
            };

            var handleExit = function handleExit(node) {
                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'exit'
                });
                node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);
                node.style.transition = theme.transitions.create('opacity', transitionProps);

                if (onExit) {
                    onExit(node);
                }
            };

            return compat_module["default"].createElement(Transition["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                appear: true,
                in: inProp,
                onEnter: handleEnter,
                onExit: handleExit,
                timeout: timeout
            }, other), function(state, childProps) {
                return compat_module["default"].cloneElement(children, Object(esm_extends["a"/* default */
                ])({
                    style: Object(esm_extends["a"/* default */
                    ])({
                        opacity: 0,
                        visibility: state === 'exited' && !inProp ? 'hidden' : undefined
                    }, Fade_styles[state], {}, style, {}, children.props.style),
                    ref: handleRef
                }, childProps));
            });
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Fade_Fade = (Fade_Fade);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Backdrop/Backdrop.js

        var Backdrop_styles = {
            /* Styles applied to the root element. */
            root: {
                // Improve scrollable dialog support.
                zIndex: -1,
                position: 'fixed',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                right: 0,
                bottom: 0,
                top: 0,
                left: 0,
                backgroundColor: 'rgba(0, 0, 0, 0.5)',
                WebkitTapHighlightColor: 'transparent',
                // Disable scroll capabilities.
                touchAction: 'none'
            },

            /* Styles applied to the root element if `invisible={true}`. */
            invisible: {
                backgroundColor: 'transparent'
            }
        };
        var Backdrop_Backdrop = compat_module["default"].forwardRef(function Backdrop(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$invisible = props.invisible
              , invisible = _props$invisible === void 0 ? false : _props$invisible
              , open = props.open
              , transitionDuration = props.transitionDuration
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "invisible", "open", "transitionDuration"]);

            return compat_module["default"].createElement(esm_Fade_Fade, Object(esm_extends["a"/* default */
            ])({
                in: open,
                timeout: transitionDuration
            }, other), compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, invisible && classes.invisible),
                "aria-hidden": true,
                ref: ref
            }, children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Backdrop_Backdrop = (Object(withStyles["a"/* default */
        ])(Backdrop_styles, {
            name: 'MuiBackdrop'
        })(Backdrop_Backdrop));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Badge/Badge.js

        var RADIUS_STANDARD = 10;
        var RADIUS_DOT = 4;
        var Badge_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    display: 'inline-flex',
                    // For correct alignment with the text.
                    verticalAlign: 'middle',
                    flexShrink: 0
                },

                /* Styles applied to the badge `span` element. */
                badge: {
                    display: 'flex',
                    flexDirection: 'row',
                    flexWrap: 'wrap',
                    justifyContent: 'center',
                    alignContent: 'center',
                    alignItems: 'center',
                    position: 'absolute',
                    boxSizing: 'border-box',
                    fontFamily: theme.typography.fontFamily,
                    fontWeight: theme.typography.fontWeightMedium,
                    fontSize: theme.typography.pxToRem(12),
                    minWidth: RADIUS_STANDARD * 2,
                    lineHeight: 1,
                    padding: '0 6px',
                    height: RADIUS_STANDARD * 2,
                    borderRadius: RADIUS_STANDARD,
                    zIndex: 1,
                    // Render the badge on top of potential ripples.
                    transition: theme.transitions.create('transform', {
                        easing: theme.transitions.easing.easeInOut,
                        duration: theme.transitions.duration.enteringScreen
                    })
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    backgroundColor: theme.palette.primary.main,
                    color: theme.palette.primary.contrastText
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    backgroundColor: theme.palette.secondary.main,
                    color: theme.palette.secondary.contrastText
                },

                /* Styles applied to the root element if `color="error"`. */
                colorError: {
                    backgroundColor: theme.palette.error.main,
                    color: theme.palette.error.contrastText
                },

                /* Styles applied to the root element if `variant="dot"`. */
                dot: {
                    borderRadius: RADIUS_DOT,
                    height: RADIUS_DOT * 2,
                    minWidth: RADIUS_DOT * 2,
                    padding: 0
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="rectangle"`. */
                anchorOriginTopRightRectangle: {
                    top: 0,
                    right: 0,
                    transform: 'scale(1) translate(50%, -50%)',
                    transformOrigin: '100% 0%',
                    '&$invisible': {
                        transform: 'scale(0) translate(50%, -50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="rectangle"`. */
                anchorOriginBottomRightRectangle: {
                    bottom: 0,
                    right: 0,
                    transform: 'scale(1) translate(50%, 50%)',
                    transformOrigin: '100% 100%',
                    '&$invisible': {
                        transform: 'scale(0) translate(50%, 50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="rectangle"`. */
                anchorOriginTopLeftRectangle: {
                    top: 0,
                    left: 0,
                    transform: 'scale(1) translate(-50%, -50%)',
                    transformOrigin: '0% 0%',
                    '&$invisible': {
                        transform: 'scale(0) translate(-50%, -50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="rectangle"`. */
                anchorOriginBottomLeftRectangle: {
                    bottom: 0,
                    left: 0,
                    transform: 'scale(1) translate(-50%, 50%)',
                    transformOrigin: '0% 100%',
                    '&$invisible': {
                        transform: 'scale(0) translate(-50%, 50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap="circle"`. */
                anchorOriginTopRightCircle: {
                    top: '14%',
                    right: '14%',
                    transform: 'scale(1) translate(50%, -50%)',
                    transformOrigin: '100% 0%',
                    '&$invisible': {
                        transform: 'scale(0) translate(50%, -50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap="circle"`. */
                anchorOriginBottomRightCircle: {
                    bottom: '14%',
                    right: '14%',
                    transform: 'scale(1) translate(50%, 50%)',
                    transformOrigin: '100% 100%',
                    '&$invisible': {
                        transform: 'scale(0) translate(50%, 50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap="circle"`. */
                anchorOriginTopLeftCircle: {
                    top: '14%',
                    left: '14%',
                    transform: 'scale(1) translate(-50%, -50%)',
                    transformOrigin: '0% 0%',
                    '&$invisible': {
                        transform: 'scale(0) translate(-50%, -50%)'
                    }
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap="circle"`. */
                anchorOriginBottomLeftCircle: {
                    bottom: '14%',
                    left: '14%',
                    transform: 'scale(1) translate(-50%, 50%)',
                    transformOrigin: '0% 100%',
                    '&$invisible': {
                        transform: 'scale(0) translate(-50%, 50%)'
                    }
                },

                /* Pseudo-class to the badge `span` element if `invisible={true}`. */
                invisible: {
                    transition: theme.transitions.create('transform', {
                        easing: theme.transitions.easing.easeInOut,
                        duration: theme.transitions.duration.leavingScreen
                    })
                }
            };
        };
        var Badge_Badge = compat_module["default"].forwardRef(function Badge(props, ref) {
            var _props$anchorOrigin = props.anchorOrigin
              , anchorOrigin = _props$anchorOrigin === void 0 ? {
                vertical: 'top',
                horizontal: 'right'
            } : _props$anchorOrigin
              , badgeContent = props.badgeContent
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$component = props.component
              , ComponentProp = _props$component === void 0 ? 'span' : _props$component
              , invisibleProp = props.invisible
              , _props$max = props.max
              , max = _props$max === void 0 ? 99 : _props$max
              , _props$overlap = props.overlap
              , overlap = _props$overlap === void 0 ? 'rectangle' : _props$overlap
              , _props$showZero = props.showZero
              , showZero = _props$showZero === void 0 ? false : _props$showZero
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["anchorOrigin", "badgeContent", "children", "classes", "className", "color", "component", "invisible", "max", "overlap", "showZero", "variant"]);

            var invisible = invisibleProp;

            if (invisibleProp == null && (badgeContent === 0 && !showZero || badgeContent == null && variant !== 'dot')) {
                invisible = true;
            }

            var displayValue = '';

            if (variant !== 'dot') {
                displayValue = badgeContent > max ? "".concat(max, "+") : badgeContent;
            }

            return compat_module["default"].createElement(ComponentProp, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), children, compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.badge, classes["".concat(anchorOrigin.horizontal).concat(Object(capitalize["a"/* default */
                ])(anchorOrigin.vertical), "}")], classes["anchorOrigin".concat(Object(capitalize["a"/* default */
                ])(anchorOrigin.vertical)).concat(Object(capitalize["a"/* default */
                ])(anchorOrigin.horizontal)).concat(Object(capitalize["a"/* default */
                ])(overlap))], color !== 'default' && classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], invisible && classes.invisible, {
                    dot: classes.dot
                }[variant])
            }, displayValue));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Badge_Badge = (Object(withStyles["a"/* default */
        ])(Badge_styles, {
            name: 'MuiBadge'
        })(Badge_Badge));
        // EXTERNAL MODULE: ../node_modules/react-is/index.js
        var react_is = __webpack_require__(37);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/BottomNavigation/BottomNavigation.js

        var BottomNavigation_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'flex',
                    justifyContent: 'center',
                    height: 56,
                    backgroundColor: theme.palette.background.paper
                }
            };
        };
        var BottomNavigation_BottomNavigation = compat_module["default"].forwardRef(function BottomNavigation(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , onChange = props.onChange
              , _props$showLabels = props.showLabels
              , showLabels = _props$showLabels === void 0 ? false : _props$showLabels
              , value = props.value
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "component", "onChange", "showLabels", "value"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), compat_module["default"].Children.map(children, function(child, childIndex) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                var childValue = child.props.value === undefined ? childIndex : child.props.value;
                return compat_module["default"].cloneElement(child, {
                    selected: childValue === value,
                    showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,
                    value: childValue,
                    onChange: onChange
                });
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_BottomNavigation_BottomNavigation = (Object(withStyles["a"/* default */
        ])(BottomNavigation_styles, {
            name: 'MuiBottomNavigation'
        })(BottomNavigation_BottomNavigation));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js + 6 modules
        var ButtonBase = __webpack_require__(258);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js

        var BottomNavigationAction_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    transition: theme.transitions.create(['color', 'padding-top'], {
                        duration: theme.transitions.duration.short
                    }),
                    padding: '6px 12px 8px',
                    minWidth: 80,
                    maxWidth: 168,
                    color: theme.palette.text.secondary,
                    flex: '1',
                    '&$iconOnly': {
                        paddingTop: 16
                    },
                    '&$selected': {
                        paddingTop: 6,
                        color: theme.palette.primary.main
                    }
                },

                /* Pseudo-class applied to the root element if selected. */
                selected: {},

                /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */
                iconOnly: {},

                /* Styles applied to the span element that wraps the icon and label. */
                wrapper: {
                    display: 'inline-flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: '100%',
                    flexDirection: 'column'
                },

                /* Styles applied to the label's span element. */
                label: {
                    fontFamily: theme.typography.fontFamily,
                    fontSize: theme.typography.pxToRem(12),
                    opacity: 1,
                    transition: 'font-size 0.2s, opacity 0.2s',
                    transitionDelay: '0.1s',
                    '&$iconOnly': {
                        opacity: 0,
                        transitionDelay: '0s'
                    },
                    '&$selected': {
                        fontSize: theme.typography.pxToRem(14)
                    }
                }
            };
        };
        var BottomNavigationAction_BottomNavigationAction = compat_module["default"].forwardRef(function BottomNavigationAction(props, ref) {
            var classes = props.classes
              , className = props.className
              , icon = props.icon
              , label = props.label
              , onChange = props.onChange
              , onClick = props.onClick
              , selected = props.selected
              , showLabel = props.showLabel
              , value = props.value
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "icon", "label", "onChange", "onClick", "selected", "showLabel", "value"]);

            var handleChange = function handleChange(event) {
                if (onChange) {
                    onChange(event, value);
                }

                if (onClick) {
                    onClick(event);
                }
            };

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),
                focusRipple: true,
                onClick: handleChange
            }, other), compat_module["default"].createElement("span", {
                className: classes.wrapper
            }, icon, compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)
            }, label)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_BottomNavigationAction_BottomNavigationAction = (Object(withStyles["a"/* default */
        ])(BottomNavigationAction_styles, {
            name: 'MuiBottomNavigationAction'
        })(BottomNavigationAction_BottomNavigationAction));
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
        var toConsumableArray = __webpack_require__(21);

        // EXTERNAL MODULE: ../node_modules/@material-ui/utils/esm/deepmerge.js
        var deepmerge = __webpack_require__(329);

        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/merge.js

        function merge(acc, item) {
            if (!item) {
                return acc;
            }

            return Object(deepmerge["a"/* default */
            ])(acc, item, {
                clone: false // No need to clone deep, it's way faster.

            });
        }

        /* harmony default export */
        var esm_merge = (merge);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/css.js

        function omit(input, fields) {
            var output = {};
            Object.keys(input).forEach(function(prop) {
                if (fields.indexOf(prop) === -1) {
                    output[prop] = input[prop];
                }
            });
            return output;
        }

        function css(styleFunction) {
            var newStyleFunction = function newStyleFunction(props) {
                var output = styleFunction(props);

                if (props.css) {
                    return Object(esm_extends["a"/* default */
                    ])({}, esm_merge(output, styleFunction(Object(esm_extends["a"/* default */
                    ])({
                        theme: props.theme
                    }, props.css))), {}, omit(props.css, [styleFunction.filterProps]));
                }

                return output;
            };

            newStyleFunction.propTypes = false ? undefined : {};
            newStyleFunction.filterProps = ['css'].concat(Object(toConsumableArray["a"/* default */
            ])(styleFunction.filterProps));
            return newStyleFunction;
        }

        /* harmony default export */
        var esm_css = (css);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/compose.js

        function compose() {
            for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {
                styles[_key] = arguments[_key];
            }

            var fn = function fn(props) {
                return styles.reduce(function(acc, style) {
                    var output = style(props);

                    if (output) {
                        return esm_merge(acc, output);
                    }

                    return acc;
                }, {});
            };
            // Alternative approach that doesn't yield any performance gain.
            // const handlers = styles.reduce((acc, style) => {
            //   style.filterProps.forEach(prop => {
            //     acc[prop] = style;
            //   });
            //   return acc;
            // }, {});
            // const fn = props => {
            //   return Object.keys(props).reduce((acc, prop) => {
            //     if (handlers[prop]) {
            //       return merge(acc, handlers[prop](props));
            //     }
            //     return acc;
            //   }, {});
            // };

            fn.propTypes = false ? undefined : {};
            fn.filterProps = styles.reduce(function(acc, style) {
                return acc.concat(style.filterProps);
            }, []);
            return fn;
        }

        /* harmony default export */
        var esm_compose = (compose);
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
        var defineProperty = __webpack_require__(10);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
        var esm_typeof = __webpack_require__(58);

        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/breakpoints.js

        // The breakpoint **start** at this value.
        // For instance with the first breakpoint xs: [xs, sm[.

        var values = {
            xs: 0,
            sm: 600,
            md: 960,
            lg: 1280,
            xl: 1920
        };
        var defaultBreakpoints = {
            // Sorted ASC by size. That's important.
            // It can't be configured as it's used statically for propTypes.
            keys: ['xs', 'sm', 'md', 'lg', 'xl'],
            up: function up(key) {
                return "@media (min-width:".concat(values[key], "px)");
            }
        };
        function handleBreakpoints(props, propValue, styleFromPropValue) {
            if (false) {}

            if (Array.isArray(propValue)) {
                var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
                return propValue.reduce(function(acc, item, index) {
                    acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
                    return acc;
                }, {});
            }

            if (Object(esm_typeof["a"/* default */
            ])(propValue) === 'object') {
                var _themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;

                return Object.keys(propValue).reduce(function(acc, breakpoint) {
                    acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);
                    return acc;
                }, {});
            }

            var output = styleFromPropValue(propValue);
            return output;
        }

        function breakpoints(styleFunction) {
            var newStyleFunction = function newStyleFunction(props) {
                var base = styleFunction(props);
                var themeBreakpoints = props.theme.breakpoints || defaultBreakpoints;
                var extended = themeBreakpoints.keys.reduce(function(acc, key) {
                    if (props[key]) {
                        acc = acc || {};
                        acc[themeBreakpoints.up(key)] = styleFunction(Object(esm_extends["a"/* default */
                        ])({
                            theme: props.theme
                        }, props[key]));
                    }

                    return acc;
                }, null);
                return esm_merge(base, extended);
            };

            newStyleFunction.propTypes = false ? undefined : {};
            newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat(Object(toConsumableArray["a"/* default */
            ])(styleFunction.filterProps));
            return newStyleFunction;
        }

        /* harmony default export */
        var esm_breakpoints = (breakpoints);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/style.js

        function getPath(obj, path) {
            if (!path || typeof path !== 'string') {
                return null;
            }

            return path.split('.').reduce(function(acc, item) {
                return acc && acc[item] ? acc[item] : null;
            }, obj);
        }

        function style_style(options) {
            var prop = options.prop
              , _options$cssProperty = options.cssProperty
              , cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty
              , themeKey = options.themeKey
              , transform = options.transform;

            var fn = function fn(props) {
                if (props[prop] == null) {
                    return null;
                }

                var propValue = props[prop];
                var theme = props.theme;
                var themeMapping = getPath(theme, themeKey) || {};

                var styleFromPropValue = function styleFromPropValue(propValueFinal) {
                    var value;

                    if (typeof themeMapping === 'function') {
                        value = themeMapping(propValueFinal);
                    } else if (Array.isArray(themeMapping)) {
                        value = themeMapping[propValueFinal] || propValueFinal;
                    } else {
                        value = getPath(themeMapping, propValueFinal) || propValueFinal;

                        if (transform) {
                            value = transform(value);
                        }
                    }

                    if (cssProperty === false) {
                        return value;
                    }

                    return Object(defineProperty["a"/* default */
                    ])({}, cssProperty, value);
                };

                return handleBreakpoints(props, propValue, styleFromPropValue);
            };

            fn.propTypes = false ? undefined : {};
            fn.filterProps = [prop];
            return fn;
        }

        /* harmony default export */
        var esm_style = (style_style);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/borders.js

        function getBorder(value) {
            if (typeof value !== 'number') {
                return value;
            }

            return "".concat(value, "px solid");
        }

        var border = esm_style({
            prop: 'border',
            themeKey: 'borders',
            transform: getBorder
        });
        var borderTop = esm_style({
            prop: 'borderTop',
            themeKey: 'borders',
            transform: getBorder
        });
        var borderRight = esm_style({
            prop: 'borderRight',
            themeKey: 'borders',
            transform: getBorder
        });
        var borderBottom = esm_style({
            prop: 'borderBottom',
            themeKey: 'borders',
            transform: getBorder
        });
        var borderLeft = esm_style({
            prop: 'borderLeft',
            themeKey: 'borders',
            transform: getBorder
        });
        var borderColor = esm_style({
            prop: 'borderColor',
            themeKey: 'palette'
        });
        var borderRadius = esm_style({
            prop: 'borderRadius',
            themeKey: 'shape'
        });
        var borders = esm_compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);
        /* harmony default export */
        var esm_borders = (borders);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/display.js

        var displayPrint = esm_style({
            prop: 'displayPrint',
            cssProperty: false,
            transform: function transform(value) {
                return {
                    '@media print': {
                        display: value
                    }
                };
            }
        });
        var displayRaw = esm_style({
            prop: 'display'
        });
        var overflow = esm_style({
            prop: 'overflow'
        });
        var textOverflow = esm_style({
            prop: 'textOverflow'
        });
        var visibility = esm_style({
            prop: 'visibility'
        });
        var whiteSpace = esm_style({
            prop: 'whiteSpace'
        });
        /* harmony default export */
        var display = (esm_compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace));
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/flexbox.js

        var flexBasis = esm_style({
            prop: 'flexBasis'
        });
        var flexDirection = esm_style({
            prop: 'flexDirection'
        });
        var flexWrap = esm_style({
            prop: 'flexWrap'
        });
        var justifyContent = esm_style({
            prop: 'justifyContent'
        });
        var flexbox_alignItems = esm_style({
            prop: 'alignItems'
        });
        var flexbox_alignContent = esm_style({
            prop: 'alignContent'
        });
        var order = esm_style({
            prop: 'order'
        });
        var flex = esm_style({
            prop: 'flex'
        });
        var flexGrow = esm_style({
            prop: 'flexGrow'
        });
        var flexShrink = esm_style({
            prop: 'flexShrink'
        });
        var alignSelf = esm_style({
            prop: 'alignSelf'
        });
        var justifyItems = esm_style({
            prop: 'justifyItems'
        });
        var justifySelf = esm_style({
            prop: 'justifySelf'
        });
        var flexbox = esm_compose(flexBasis, flexDirection, flexWrap, justifyContent, flexbox_alignItems, flexbox_alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
        /* harmony default export */
        var esm_flexbox = (flexbox);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/positions.js

        var positions_position = esm_style({
            prop: 'position'
        });
        var zIndex = esm_style({
            prop: 'zIndex',
            themeKey: 'zIndex'
        });
        var positions_top = esm_style({
            prop: 'top'
        });
        var positions_right = esm_style({
            prop: 'right'
        });
        var bottom = esm_style({
            prop: 'bottom'
        });
        var positions_left = esm_style({
            prop: 'left'
        });
        /* harmony default export */
        var positions = (esm_compose(positions_position, zIndex, positions_top, positions_right, bottom, positions_left));
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/palette.js

        var palette_color = esm_style({
            prop: 'color',
            themeKey: 'palette'
        });
        var bgcolor = esm_style({
            prop: 'bgcolor',
            cssProperty: 'backgroundColor',
            themeKey: 'palette'
        });
        var palette = esm_compose(palette_color, bgcolor);
        /* harmony default export */
        var esm_palette = (palette);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/shadows.js

        var boxShadow = esm_style({
            prop: 'boxShadow',
            themeKey: 'shadows'
        });
        /* harmony default export */
        var shadows = (boxShadow);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/sizing.js

        function sizing_transform(value) {
            return value <= 1 ? "".concat(value * 100, "%") : value;
        }

        var sizing_width = esm_style({
            prop: 'width',
            transform: sizing_transform
        });
        var sizing_maxWidth = esm_style({
            prop: 'maxWidth',
            transform: sizing_transform
        });
        var minWidth = esm_style({
            prop: 'minWidth',
            transform: sizing_transform
        });
        var height = esm_style({
            prop: 'height',
            transform: sizing_transform
        });
        var maxHeight = esm_style({
            prop: 'maxHeight',
            transform: sizing_transform
        });
        var minHeight = esm_style({
            prop: 'minHeight',
            transform: sizing_transform
        });
        var sizeWidth = esm_style({
            prop: 'size',
            cssProperty: 'width',
            transform: sizing_transform
        });
        var sizeHeight = esm_style({
            prop: 'size',
            cssProperty: 'height',
            transform: sizing_transform
        });
        var sizing = esm_compose(sizing_width, sizing_maxWidth, minWidth, height, maxHeight, minHeight);
        /* harmony default export */
        var esm_sizing = (sizing);
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
        var slicedToArray = __webpack_require__(42);

        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/memoize.js
        function memoize(fn) {
            var cache = {};
            return function(arg) {
                if (cache[arg] === undefined) {
                    cache[arg] = fn(arg);
                }

                return cache[arg];
            }
            ;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/spacing.js

        var properties = {
            m: 'margin',
            p: 'padding'
        };
        var directions = {
            t: 'Top',
            r: 'Right',
            b: 'Bottom',
            l: 'Left',
            x: ['Left', 'Right'],
            y: ['Top', 'Bottom']
        };
        var aliases = {
            marginX: 'mx',
            marginY: 'my',
            paddingX: 'px',
            paddingY: 'py'
        };
        // memoize() impact:
        // From 300,000 ops/sec
        // To 350,000 ops/sec

        var getCssProperties = memoize(function(prop) {
            // It's not a shorthand notation.
            if (prop.length > 2) {
                if (aliases[prop]) {
                    prop = aliases[prop];
                } else {
                    return [prop];
                }
            }

            var _prop$split = prop.split('')
              , _prop$split2 = Object(slicedToArray["a"/* default */
            ])(_prop$split, 2)
              , a = _prop$split2[0]
              , b = _prop$split2[1];

            var property = properties[a];
            var direction = directions[b] || '';
            return Array.isArray(direction) ? direction.map(function(dir) {
                return property + dir;
            }) : [property + direction];
        });
        var spacingKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];

        function getTransformer(theme) {
            var themeSpacing = theme.spacing || 8;

            if (typeof themeSpacing === 'number') {
                return function(abs) {
                    return themeSpacing * abs;
                }
                ;
            }

            if (Array.isArray(themeSpacing)) {
                return function(abs) {
                    if (false) {}

                    return themeSpacing[abs];
                }
                ;
            }

            if (typeof themeSpacing === 'function') {
                return themeSpacing;
            }

            if (false) {}

            return function() {
                return undefined;
            }
            ;
        }

        function getValue(transformer, propValue) {
            if (typeof propValue === 'string') {
                return propValue;
            }

            var abs = Math.abs(propValue);
            var transformed = transformer(abs);

            if (propValue >= 0) {
                return transformed;
            }

            if (typeof transformed === 'number') {
                return -transformed;
            }

            return "-".concat(transformed);
        }

        function getStyleFromPropValue(cssProperties, transformer) {
            return function(propValue) {
                return cssProperties.reduce(function(acc, cssProperty) {
                    acc[cssProperty] = getValue(transformer, propValue);
                    return acc;
                }, {});
            }
            ;
        }

        function spacing_spacing(props) {
            var theme = props.theme;
            var transformer = getTransformer(theme);
            return Object.keys(props).map(function(prop) {
                // Using a hash computation over an array iteration could be faster, but with only 28 items,
                // it's doesn't worth the bundle size.
                if (spacingKeys.indexOf(prop) === -1) {
                    return null;
                }

                var cssProperties = getCssProperties(prop);
                var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
                var propValue = props[prop];
                return handleBreakpoints(props, propValue, styleFromPropValue);
            }).reduce(esm_merge, {});
        }

        spacing_spacing.propTypes = false ? undefined : {};
        spacing_spacing.filterProps = spacingKeys;
        /* harmony default export */
        var esm_spacing = (spacing_spacing);
        // CONCATENATED MODULE: ../node_modules/@material-ui/system/esm/typography.js

        var fontFamily = esm_style({
            prop: 'fontFamily',
            themeKey: 'typography'
        });
        var typography_fontSize = esm_style({
            prop: 'fontSize',
            themeKey: 'typography'
        });
        var fontStyle = esm_style({
            prop: 'fontStyle',
            themeKey: 'typography'
        });
        var fontWeight = esm_style({
            prop: 'fontWeight',
            themeKey: 'typography'
        });
        var letterSpacing = esm_style({
            prop: 'letterSpacing'
        });
        var lineHeight = esm_style({
            prop: 'lineHeight'
        });
        var textAlign = esm_style({
            prop: 'textAlign'
        });
        var typography = esm_compose(fontFamily, typography_fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);
        /* harmony default export */
        var esm_typography = (typography);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/styled.js + 1 modules
        var styled = __webpack_require__(169);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Box/Box.js

        var Box_styleFunction = esm_css(esm_compose(esm_borders, display, esm_flexbox, positions, esm_palette, shadows, esm_sizing, esm_spacing, esm_typography));
        /**
 * @ignore - do not document.
 */

        var Box = Object(styled["a"/* default */
        ])('div')(Box_styleFunction, {
            name: 'MuiBox'
        });
        /* harmony default export */
        var Box_Box = (Box);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Box/index.js

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Typography/Typography.js
        var Typography = __webpack_require__(250);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/colorManipulator.js
        var colorManipulator = __webpack_require__(9);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var MoreHoriz = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
        }), 'MoreHoriz'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js

        var BreadcrumbCollapsed_styles = function styles(theme) {
            return {
                root: {
                    display: 'flex'
                },
                icon: {
                    width: 24,
                    height: 16,
                    backgroundColor: theme.palette.grey[100],
                    color: theme.palette.grey[700],
                    borderRadius: 2,
                    marginLeft: theme.spacing(0.5),
                    marginRight: theme.spacing(0.5),
                    cursor: 'pointer',
                    '&:hover, &:focus': {
                        backgroundColor: theme.palette.grey[200]
                    },
                    '&:active': {
                        boxShadow: theme.shadows[0],
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(theme.palette.grey[200], 0.12)
                    }
                }
            };
        };
        /**
 * @ignore - internal component.
 */

        function BreadcrumbCollapsed(props) {
            var classes = props.classes
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes"]);

            return compat_module["default"].createElement("li", Object(esm_extends["a"/* default */
            ])({
                className: classes.root
            }, other), compat_module["default"].createElement(MoreHoriz, {
                className: classes.icon
            }));
        }

        false ? undefined : void 0;
        /* harmony default export */
        var Breadcrumbs_BreadcrumbCollapsed = (Object(withStyles["a"/* default */
        ])(BreadcrumbCollapsed_styles, {
            name: 'PrivateBreadcrumbCollapsed'
        })(BreadcrumbCollapsed));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js

        var Breadcrumbs_styles = {
            /* Styles applied to the root element. */
            root: {},

            /* Styles applied to the ol element. */
            ol: {
                display: 'flex',
                flexWrap: 'wrap',
                alignItems: 'center',
                padding: 0,
                // Reset
                margin: 0 // Reset

            },

            /* Styles applied to the li element. */
            li: {
                listStyle: 'none'
            },

            /* Styles applied to the separator element. */
            separator: {
                display: 'flex',
                userSelect: 'none',
                marginLeft: 8,
                marginRight: 8
            }
        };

        function insertSeparators(items, className, separator) {
            return items.reduce(function(acc, current, index) {
                if (index < items.length - 1) {
                    acc = acc.concat(current, compat_module["default"].createElement("li", {
                        "aria-hidden": true,
                        key: "separator-".concat(index),
                        className: className
                    }, separator));
                } else {
                    acc.push(current);
                }

                return acc;
            }, []);
        }

        var Breadcrumbs_Breadcrumbs = compat_module["default"].forwardRef(function Breadcrumbs(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'nav' : _props$component
              , _props$itemsAfterColl = props.itemsAfterCollapse
              , itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl
              , _props$itemsBeforeCol = props.itemsBeforeCollapse
              , itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol
              , _props$maxItems = props.maxItems
              , maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems
              , _props$separator = props.separator
              , separator = _props$separator === void 0 ? '/' : _props$separator
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "component", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"]);

            var _React$useState = compat_module["default"].useState(false)
              , expanded = _React$useState[0]
              , setExpanded = _React$useState[1];

            var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {
                var handleClickExpand = function handleClickExpand() {
                    setExpanded(true);
                };
                // This defends against someone passing weird input, to ensure that if all
                // items would be shown anyway, we just show all items without the EllipsisItem

                if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {
                    if (false) {}

                    return allItems;
                }

                return [].concat(Object(toConsumableArray["a"/* default */
                ])(allItems.slice(0, itemsBeforeCollapse)), [compat_module["default"].createElement(Breadcrumbs_BreadcrumbCollapsed, {
                    key: "ellipsis",
                    onClick: handleClickExpand
                })], Object(toConsumableArray["a"/* default */
                ])(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));
            };

            var allItems = compat_module["default"].Children.toArray(children).filter(function(child) {
                if (false) {}

                return compat_module["default"].isValidElement(child);
            }).map(function(child, index) {
                return compat_module["default"].createElement("li", {
                    className: classes.li,
                    key: "child-".concat(index)
                }, child);
            });
            return compat_module["default"].createElement(Typography["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                component: Component,
                color: "textSecondary",
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className)
            }, other), compat_module["default"].createElement("ol", {
                className: classes.ol
            }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Breadcrumbs_Breadcrumbs = (Object(withStyles["a"/* default */
        ])(Breadcrumbs_styles, {
            name: 'MuiBreadcrumbs'
        })(Breadcrumbs_Breadcrumbs));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Button/Button.js
        var Button = __webpack_require__(330);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js

        // Force a side effect so we don't have any override priority issue.
        // eslint-disable-next-line no-unused-expressions

        Button["a"/* default */
        ].styles;
        var ButtonGroup_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'inline-flex',
                    borderRadius: theme.shape.borderRadius
                },

                /* Styles applied to the root element if `variant="contained"`. */
                contained: {
                    boxShadow: theme.shadows[2]
                },

                /* Pseudo-class applied to child elements if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `fullWidth={true}`. */
                fullWidth: {
                    width: '100%'
                },

                /* Styles applied to the root element if `orientation="vertical"`. */
                vertical: {
                    flexDirection: 'column'
                },

                /* Styles applied to the children. */
                grouped: {
                    minWidth: 40
                },

                /* Styles applied to the children if `orientation="horizontal"`. */
                groupedHorizontal: {
                    '&:not(:first-child)': {
                        borderTopLeftRadius: 0,
                        borderBottomLeftRadius: 0
                    },
                    '&:not(:last-child)': {
                        borderTopRightRadius: 0,
                        borderBottomRightRadius: 0
                    }
                },

                /* Styles applied to the children if `orientation="vertical"`. */
                groupedVertical: {
                    '&:not(:first-child)': {
                        borderTopRightRadius: 0,
                        borderTopLeftRadius: 0
                    },
                    '&:not(:last-child)': {
                        borderBottomRightRadius: 0,
                        borderBottomLeftRadius: 0
                    }
                },

                /* Styles applied to the children if `variant="text"`. */
                groupedText: {},

                /* Styles applied to the children if `variant="text"` and `orientation="horizontal"`. */
                groupedTextHorizontal: {
                    '&:not(:last-child)': {
                        borderRight: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
                    }
                },

                /* Styles applied to the children if `variant="text"` and `orientation="vertical"`. */
                groupedTextVertical: {
                    '&:not(:last-child)': {
                        borderBottom: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')
                    }
                },

                /* Styles applied to the children if `variant="text"` and `color="primary"`. */
                groupedTextPrimary: {
                    '&:not(:last-child)': {
                        borderColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.primary.main, 0.5)
                    }
                },

                /* Styles applied to the children if `variant="text"` and `color="secondary"`. */
                groupedTextSecondary: {
                    '&:not(:last-child)': {
                        borderColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.secondary.main, 0.5)
                    }
                },

                /* Styles applied to the children if `variant="outlined"`. */
                groupedOutlined: {},

                /* Styles applied to the children if `variant="outlined"` and `orientation="horizontal"`. */
                groupedOutlinedHorizontal: {
                    '&:not(:first-child)': {
                        marginLeft: -1
                    },
                    '&:not(:last-child)': {
                        borderRightColor: 'transparent'
                    }
                },

                /* Styles applied to the children if `variant="outlined"` and `orientation="vertical"`. */
                groupedOutlinedVertical: {
                    '&:not(:first-child)': {
                        marginTop: -1
                    },
                    '&:not(:last-child)': {
                        borderBottomColor: 'transparent'
                    }
                },

                /* Styles applied to the children if `variant="outlined"` and `color="primary"`. */
                groupedOutlinedPrimary: {
                    '&:hover': {
                        borderColor: theme.palette.primary.main
                    }
                },

                /* Styles applied to the children if `variant="outlined"` and `color="secondary"`. */
                groupedOutlinedSecondary: {
                    '&:hover': {
                        borderColor: theme.palette.secondary.main
                    }
                },

                /* Styles applied to the children if `variant="contained"`. */
                groupedContained: {
                    boxShadow: 'none'
                },

                /* Styles applied to the children if `variant="contained"` and `orientation="horizontal"`. */
                groupedContainedHorizontal: {
                    '&:not(:last-child)': {
                        borderRight: "1px solid ".concat(theme.palette.grey[400]),
                        '&$disabled': {
                            borderRight: "1px solid ".concat(theme.palette.action.disabled)
                        }
                    }
                },

                /* Styles applied to the children if `variant="contained"` and `orientation="vertical"`. */
                groupedContainedVertical: {
                    '&:not(:last-child)': {
                        borderBottom: "1px solid ".concat(theme.palette.grey[400]),
                        '&$disabled': {
                            borderBottom: "1px solid ".concat(theme.palette.action.disabled)
                        }
                    }
                },

                /* Styles applied to the children if `variant="contained"` and `color="primary"`. */
                groupedContainedPrimary: {
                    '&:not(:last-child)': {
                        borderColor: theme.palette.primary.dark
                    }
                },

                /* Styles applied to the children if `variant="contained"` and `color="secondary"`. */
                groupedContainedSecondary: {
                    '&:not(:last-child)': {
                        borderColor: theme.palette.secondary.dark
                    }
                }
            };
        };
        var ButtonGroup_ButtonGroup = compat_module["default"].forwardRef(function ButtonGroup(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableFocusRi = props.disableFocusRipple
              , disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi
              , _props$disableRipple = props.disableRipple
              , disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'outlined' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "color", "component", "disabled", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"]);

            var buttonClassName = Object(clsx_m["a"/* default */
            ])(classes.grouped, classes["grouped".concat(Object(capitalize["a"/* default */
            ])(orientation))], classes["grouped".concat(Object(capitalize["a"/* default */
            ])(variant))], classes["grouped".concat(Object(capitalize["a"/* default */
            ])(variant)).concat(Object(capitalize["a"/* default */
            ])(orientation))], classes["grouped".concat(Object(capitalize["a"/* default */
            ])(variant)).concat(color !== 'default' ? Object(capitalize["a"/* default */
            ])(color) : '')], disabled && classes.disabled);
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                role: "group",
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, fullWidth && classes.fullWidth, {
                    contained: classes.contained
                }[variant], {
                    vertical: classes.vertical
                }[orientation]),
                ref: ref
            }, other), compat_module["default"].Children.map(children, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                return compat_module["default"].cloneElement(child, {
                    className: Object(clsx_m["a"/* default */
                    ])(buttonClassName, child.props.className),
                    disabled: child.props.disabled || disabled,
                    color: child.props.color || color,
                    disableFocusRipple: disableFocusRipple,
                    disableRipple: disableRipple,
                    fullWidth: fullWidth,
                    size: child.props.size || size,
                    variant: child.props.variant || variant
                });
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ButtonGroup_ButtonGroup = (Object(withStyles["a"/* default */
        ])(ButtonGroup_styles, {
            name: 'MuiButtonGroup'
        })(ButtonGroup_ButtonGroup));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Card/Card.js

        var Card_styles = {
            /* Styles applied to the root element. */
            root: {
                overflow: 'hidden'
            }
        };
        var Card_Card = compat_module["default"].forwardRef(function Card(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$raised = props.raised
              , raised = _props$raised === void 0 ? false : _props$raised
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "raised"]);

            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                elevation: raised ? 8 : 1,
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Card_Card = (Object(withStyles["a"/* default */
        ])(Card_styles, {
            name: 'MuiCard'
        })(Card_Card));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js

        var CardActionArea_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'block',
                    textAlign: 'inherit',
                    width: '100%',
                    '&:hover $focusHighlight': {
                        opacity: theme.palette.action.hoverOpacity
                    },
                    '&$focusVisible $focusHighlight': {
                        opacity: 0.12
                    }
                },

                /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */
                focusVisible: {},

                /* Styles applied to the overlay that covers the action area when it is keyboard focused. */
                focusHighlight: {
                    overflow: 'hidden',
                    pointerEvents: 'none',
                    position: 'absolute',
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0,
                    borderRadius: 'inherit',
                    opacity: 0,
                    backgroundColor: 'currentcolor',
                    transition: theme.transitions.create('opacity', {
                        duration: theme.transitions.duration.short
                    })
                }
            };
        };
        var CardActionArea_CardActionArea = compat_module["default"].forwardRef(function CardActionArea(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , focusVisibleClassName = props.focusVisibleClassName
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "focusVisibleClassName"]);

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                focusVisibleClassName: Object(clsx_m["a"/* default */
                ])(focusVisibleClassName, classes.focusVisible),
                ref: ref
            }, other), children, compat_module["default"].createElement("span", {
                className: classes.focusHighlight
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CardActionArea_CardActionArea = (Object(withStyles["a"/* default */
        ])(CardActionArea_styles, {
            name: 'MuiCardActionArea'
        })(CardActionArea_CardActionArea));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CardActions/CardActions.js

        var CardActions_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                alignItems: 'center',
                padding: 8
            },

            /* Styles applied to the root element if `disableSpacing={false}`. */
            spacing: {
                '& > :not(:first-child)': {
                    marginLeft: 8
                }
            }
        };
        var CardActions_CardActions = compat_module["default"].forwardRef(function CardActions(props, ref) {
            var _props$disableSpacing = props.disableSpacing
              , disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing
              , classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["disableSpacing", "classes", "className"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, !disableSpacing && classes.spacing),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CardActions_CardActions = (Object(withStyles["a"/* default */
        ])(CardActions_styles, {
            name: 'MuiCardActions'
        })(CardActions_CardActions));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CardContent/CardContent.js

        var CardContent_styles = {
            /* Styles applied to the root element. */
            root: {
                padding: 16,
                '&:last-child': {
                    paddingBottom: 24
                }
            }
        };
        var CardContent_CardContent = compat_module["default"].forwardRef(function CardContent(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CardContent_CardContent = (Object(withStyles["a"/* default */
        ])(CardContent_styles, {
            name: 'MuiCardContent'
        })(CardContent_CardContent));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js

        var CardHeader_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                alignItems: 'center',
                padding: 16
            },

            /* Styles applied to the avatar element. */
            avatar: {
                flex: '0 0 auto',
                marginRight: 16
            },

            /* Styles applied to the action element. */
            action: {
                flex: '0 0 auto',
                alignSelf: 'flex-start',
                marginTop: -8,
                marginRight: -8
            },

            /* Styles applied to the content wrapper element. */
            content: {
                flex: '1 1 auto'
            },

            /* Styles applied to the title Typography element. */
            title: {},

            /* Styles applied to the subheader Typography element. */
            subheader: {}
        };
        var CardHeader_CardHeader = compat_module["default"].forwardRef(function CardHeader(props, ref) {
            var action = props.action
              , avatar = props.avatar
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disableTypogra = props.disableTypography
              , disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra
              , subheaderProp = props.subheader
              , subheaderTypographyProps = props.subheaderTypographyProps
              , titleProp = props.title
              , titleTypographyProps = props.titleTypographyProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["action", "avatar", "classes", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"]);

            var title = titleProp;

            if (title != null && title.type !== Typography["a"/* default */
            ] && !disableTypography) {
                title = compat_module["default"].createElement(Typography["a"/* default */
                ], Object(esm_extends["a"/* default */
                ])({
                    variant: avatar ? 'body2' : 'h5',
                    className: classes.title,
                    component: "span",
                    display: "block"
                }, titleTypographyProps), title);
            }

            var subheader = subheaderProp;

            if (subheader != null && subheader.type !== Typography["a"/* default */
            ] && !disableTypography) {
                subheader = compat_module["default"].createElement(Typography["a"/* default */
                ], Object(esm_extends["a"/* default */
                ])({
                    variant: avatar ? 'body2' : 'body1',
                    className: classes.subheader,
                    color: "textSecondary",
                    component: "span",
                    display: "block"
                }, subheaderTypographyProps), subheader);
            }

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), avatar && compat_module["default"].createElement("div", {
                className: classes.avatar
            }, avatar), compat_module["default"].createElement("div", {
                className: classes.content
            }, title, subheader), action && compat_module["default"].createElement("div", {
                className: classes.action
            }, action));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CardHeader_CardHeader = (Object(withStyles["a"/* default */
        ])(CardHeader_styles, {
            name: 'MuiCardHeader'
        })(CardHeader_CardHeader));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js

        var CardMedia_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'block',
                backgroundSize: 'cover',
                backgroundRepeat: 'no-repeat',
                backgroundPosition: 'center'
            },

            /* Styles applied to the root element if `component="video, audio, picture, iframe, or img"`. */
            media: {
                width: '100%'
            },

            /* Styles applied to the root element if `component="picture or img"`. */
            img: {
                // ⚠️ object-fit is not supported by IE 11.
                objectFit: 'cover'
            }
        };
        var MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];
        var CardMedia_CardMedia = compat_module["default"].forwardRef(function CardMedia(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , image = props.image
              , src = props.src
              , style = props.style
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "component", "image", "src", "style"]);

            var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;
            var composedStyle = !isMediaComponent && image ? Object(esm_extends["a"/* default */
            ])({
                backgroundImage: "url(\"".concat(image, "\")")
            }, style) : style;
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, isMediaComponent && classes.media, "picture img".indexOf(Component) !== -1 && classes.img),
                ref: ref,
                style: composedStyle,
                src: isMediaComponent ? image || src : undefined
            }, other), children);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CardMedia_CardMedia = (Object(withStyles["a"/* default */
        ])(CardMedia_styles, {
            name: 'MuiCardMedia'
        })(CardMedia_CardMedia));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/internal/SwitchBase.js
        var SwitchBase = __webpack_require__(105);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var CheckBoxOutlineBlank = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
        }), 'CheckBoxOutlineBlank'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var CheckBox = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
        }), 'CheckBox'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var IndeterminateCheckBox = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
        }), 'IndeterminateCheckBox'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js

        var Checkbox_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    color: theme.palette.text.secondary
                },

                /* Pseudo-class applied to the root element if `checked={true}`. */
                checked: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Pseudo-class applied to the root element if `indeterminate={true}`. */
                indeterminate: {},

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    '&$checked': {
                        color: theme.palette.primary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                            // Reset on touch devices, it doesn't add specificity
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled
                    }
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    '&$checked': {
                        color: theme.palette.secondary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                            // Reset on touch devices, it doesn't add specificity
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled
                    }
                }
            };
        };
        var defaultCheckedIcon = compat_module["default"].createElement(CheckBox, null);
        var defaultIcon = compat_module["default"].createElement(CheckBoxOutlineBlank, null);
        var defaultIndeterminateIcon = compat_module["default"].createElement(IndeterminateCheckBox, null);
        var Checkbox_Checkbox = compat_module["default"].forwardRef(function Checkbox(props, ref) {
            var _props$checkedIcon = props.checkedIcon
              , checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon
              , classes = props.classes
              , _props$color = props.color
              , color = _props$color === void 0 ? 'secondary' : _props$color
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$icon = props.icon
              , icon = _props$icon === void 0 ? defaultIcon : _props$icon
              , _props$indeterminate = props.indeterminate
              , indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate
              , _props$indeterminateI = props.indeterminateIcon
              , indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI
              , inputProps = props.inputProps
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["checkedIcon", "classes", "color", "disabled", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size"]);

            return compat_module["default"].createElement(SwitchBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                type: "checkbox",
                classes: {
                    root: Object(clsx_m["a"/* default */
                    ])(classes.root, classes["color".concat(Object(capitalize["a"/* default */
                    ])(color))], indeterminate && classes.indeterminate),
                    checked: classes.checked,
                    disabled: classes.disabled
                },
                color: color,
                inputProps: Object(esm_extends["a"/* default */
                ])({
                    'data-indeterminate': indeterminate
                }, inputProps),
                icon: compat_module["default"].cloneElement(indeterminate ? indeterminateIcon : icon, {
                    fontSize: size === 'small' ? 'small' : 'default'
                }),
                checkedIcon: compat_module["default"].cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {
                    fontSize: size === 'small' ? 'small' : 'default'
                }),
                ref: ref,
                disabled: disabled
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Checkbox_Checkbox = (Object(withStyles["a"/* default */
        ])(Checkbox_styles, {
            name: 'MuiCheckbox'
        })(Checkbox_Checkbox));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var Cancel = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
        }), 'Cancel'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Chip/Chip.js

        var Chip_styles = function styles(theme) {
            var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];
            var deleteIconColor = Object(colorManipulator["d"/* fade */
            ])(theme.palette.text.primary, 0.26);
            return {
                /* Styles applied to the root element. */
                root: {
                    fontFamily: theme.typography.fontFamily,
                    fontSize: theme.typography.pxToRem(13),
                    display: 'inline-flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    height: 32,
                    color: theme.palette.getContrastText(backgroundColor),
                    backgroundColor: backgroundColor,
                    borderRadius: 32 / 2,
                    whiteSpace: 'nowrap',
                    transition: theme.transitions.create(['background-color', 'box-shadow']),
                    // label will inherit this from root, then `clickable` class overrides this for both
                    cursor: 'default',
                    // We disable the focus ring for mouse, touch and keyboard users.
                    outline: 0,
                    textDecoration: 'none',
                    border: 'none',
                    // Remove `button` border
                    padding: 0,
                    // Remove `button` padding
                    verticalAlign: 'middle',
                    boxSizing: 'border-box',
                    '&$disabled': {
                        opacity: 0.5,
                        pointerEvents: 'none'
                    },
                    '& $avatar': {
                        marginLeft: 5,
                        marginRight: -6,
                        width: 24,
                        height: 24,
                        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
                        fontSize: theme.typography.pxToRem(12)
                    },
                    '& $avatarColorPrimary': {
                        color: theme.palette.primary.contrastText,
                        backgroundColor: theme.palette.primary.dark
                    },
                    '& $avatarColorSecondary': {
                        color: theme.palette.secondary.contrastText,
                        backgroundColor: theme.palette.secondary.dark
                    },
                    '& $avatarSmall': {
                        marginLeft: 4,
                        marginRight: -4,
                        width: 18,
                        height: 18,
                        fontSize: theme.typography.pxToRem(10)
                    }
                },

                /* Styles applied to the root element if `size="small"`. */
                sizeSmall: {
                    height: 24
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    backgroundColor: theme.palette.primary.main,
                    color: theme.palette.primary.contrastText
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    backgroundColor: theme.palette.secondary.main,
                    color: theme.palette.secondary.contrastText
                },

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */
                clickable: {
                    userSelect: 'none',
                    WebkitTapHighlightColor: 'transparent',
                    cursor: 'pointer',
                    '&:hover, &:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(backgroundColor, 0.08)
                    },
                    '&:active': {
                        boxShadow: theme.shadows[1]
                    }
                },

                /* Styles applied to the root element if `onClick` and `color="primary"` is defined or `clickable={true}`. */
                clickableColorPrimary: {
                    '&:hover, &:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(theme.palette.primary.main, 0.08)
                    }
                },

                /* Styles applied to the root element if `onClick` and `color="secondary"` is defined or `clickable={true}`. */
                clickableColorSecondary: {
                    '&:hover, &:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(theme.palette.secondary.main, 0.08)
                    }
                },

                /* Styles applied to the root element if `onDelete` is defined. */
                deletable: {
                    '&:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(backgroundColor, 0.08)
                    }
                },

                /* Styles applied to the root element if `onDelete` and `color="primary"` is defined. */
                deletableColorPrimary: {
                    '&:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(theme.palette.primary.main, 0.2)
                    }
                },

                /* Styles applied to the root element if `onDelete` and `color="secondary"` is defined. */
                deletableColorSecondary: {
                    '&:focus': {
                        backgroundColor: Object(colorManipulator["c"/* emphasize */
                        ])(theme.palette.secondary.main, 0.2)
                    }
                },

                /* Styles applied to the root element if `variant="outlined"`. */
                outlined: {
                    backgroundColor: 'transparent',
                    border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),
                    '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                        backgroundColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.text.primary, theme.palette.action.hoverOpacity)
                    },
                    '& $avatar': {
                        marginLeft: 4
                    },
                    '& $avatarSmall': {
                        marginLeft: 2
                    },
                    '& $icon': {
                        marginLeft: 4
                    },
                    '& $iconSmall': {
                        marginLeft: 2
                    },
                    '& $deleteIcon': {
                        marginRight: 5
                    },
                    '& $deleteIconSmall': {
                        marginRight: 3
                    }
                },

                /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */
                outlinedPrimary: {
                    color: theme.palette.primary.main,
                    border: "1px solid ".concat(theme.palette.primary.main),
                    '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                        backgroundColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.primary.main, theme.palette.action.hoverOpacity)
                    }
                },

                /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */
                outlinedSecondary: {
                    color: theme.palette.secondary.main,
                    border: "1px solid ".concat(theme.palette.secondary.main),
                    '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                        backgroundColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.secondary.main, theme.palette.action.hoverOpacity)
                    }
                },
                // TODO remove in V5

                /* Styles applied to the `avatar` element. */
                avatar: {},

                /* Styles applied to the `avatar` element if `size="small"`. */
                avatarSmall: {},

                /* Styles applied to the `avatar` element if `color="primary"`. */
                avatarColorPrimary: {},

                /* Styles applied to the `avatar` element if `color="secondary"`. */
                avatarColorSecondary: {},

                /* Styles applied to the `icon` element. */
                icon: {
                    color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
                    marginLeft: 5,
                    marginRight: -6
                },

                /* Styles applied to the `icon` element if `size="small"`. */
                iconSmall: {
                    width: 18,
                    height: 18,
                    marginLeft: 4,
                    marginRight: -4
                },

                /* Styles applied to the `icon` element if `color="primary"`. */
                iconColorPrimary: {
                    color: 'inherit'
                },

                /* Styles applied to the `icon` element if `color="secondary"`. */
                iconColorSecondary: {
                    color: 'inherit'
                },

                /* Styles applied to the label `span` element. */
                label: {
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    paddingLeft: 12,
                    paddingRight: 12,
                    whiteSpace: 'nowrap'
                },

                /* Styles applied to the label `span` element if `size="small"`. */
                labelSmall: {
                    paddingLeft: 8,
                    paddingRight: 8
                },

                /* Styles applied to the `deleteIcon` element. */
                deleteIcon: {
                    WebkitTapHighlightColor: 'transparent',
                    color: deleteIconColor,
                    height: 22,
                    width: 22,
                    cursor: 'pointer',
                    margin: '0 5px 0 -6px',
                    '&:hover': {
                        color: Object(colorManipulator["d"/* fade */
                        ])(deleteIconColor, 0.4)
                    }
                },

                /* Styles applied to the `deleteIcon` element if `size="small"`. */
                deleteIconSmall: {
                    height: 16,
                    width: 16,
                    marginRight: 4,
                    marginLeft: -4
                },

                /* Styles applied to the deleteIcon element if `color="primary"` and `variant="default"`. */
                deleteIconColorPrimary: {
                    color: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.primary.contrastText, 0.7),
                    '&:hover, &:active': {
                        color: theme.palette.primary.contrastText
                    }
                },

                /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="default"`. */
                deleteIconColorSecondary: {
                    color: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.secondary.contrastText, 0.7),
                    '&:hover, &:active': {
                        color: theme.palette.secondary.contrastText
                    }
                },

                /* Styles applied to the deleteIcon element if `color="primary"` and `variant="outlined"`. */
                deleteIconOutlinedColorPrimary: {
                    color: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.primary.main, 0.7),
                    '&:hover, &:active': {
                        color: theme.palette.primary.main
                    }
                },

                /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="outlined"`. */
                deleteIconOutlinedColorSecondary: {
                    color: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.secondary.main, 0.7),
                    '&:hover, &:active': {
                        color: theme.palette.secondary.main
                    }
                }
            };
        };
        /**
 * Chips represent complex entities in small blocks, such as a contact.
 */

        var Chip_Chip = compat_module["default"].forwardRef(function Chip(props, ref) {
            var avatarProp = props.avatar
              , classes = props.classes
              , className = props.className
              , clickableProp = props.clickable
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , ComponentProp = props.component
              , deleteIconProp = props.deleteIcon
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , iconProp = props.icon
              , label = props.label
              , onClick = props.onClick
              , onDelete = props.onDelete
              , onKeyUp = props.onKeyUp
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'default' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["avatar", "classes", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyUp", "size", "variant"]);

            var chipRef = compat_module["default"].useRef(null);
            var handleRef = Object(useForkRef["a"/* default */
            ])(chipRef, ref);

            var handleDeleteIconClick = function handleDeleteIconClick(event) {
                // Stop the event from bubbling up to the `Chip`
                event.stopPropagation();

                if (onDelete) {
                    onDelete(event);
                }
            };

            var handleKeyUp = function handleKeyUp(event) {
                if (onKeyUp) {
                    onKeyUp(event);
                }
                // Ignore events from children of `Chip`.

                if (event.currentTarget !== event.target) {
                    return;
                }

                var key = event.key;

                if (onDelete && (key === 'Backspace' || key === 'Delete')) {
                    onDelete(event);
                } else if (key === 'Escape' && chipRef.current) {
                    chipRef.current.blur();
                }
            };

            var clickable = clickableProp !== false && onClick ? true : clickableProp;
            var small = size === 'small';
            var Component = ComponentProp || (clickable ? ButtonBase["a"/* default */
            ] : 'div');
            var moreProps = Component === ButtonBase["a"/* default */
            ] ? {
                component: 'div'
            } : {};
            var deleteIcon = null;

            if (onDelete) {
                var customClasses = Object(clsx_m["a"/* default */
                ])(color !== 'default' && (variant === "default" ? classes["deleteIconColor".concat(Object(capitalize["a"/* default */
                ])(color))] : classes["deleteIconOutlinedColor".concat(Object(capitalize["a"/* default */
                ])(color))]), small && classes.deleteIconSmall);
                deleteIcon = deleteIconProp && compat_module["default"].isValidElement(deleteIconProp) ? compat_module["default"].cloneElement(deleteIconProp, {
                    className: Object(clsx_m["a"/* default */
                    ])(deleteIconProp.props.className, classes.deleteIcon, customClasses),
                    onClick: handleDeleteIconClick
                }) : compat_module["default"].createElement(Cancel, {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.deleteIcon, customClasses),
                    onClick: handleDeleteIconClick
                });
            }

            var avatar = null;

            if (avatarProp && compat_module["default"].isValidElement(avatarProp)) {
                avatar = compat_module["default"].cloneElement(avatarProp, {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes["avatarColor".concat(Object(capitalize["a"/* default */
                    ])(color))])
                });
            }

            var icon = null;

            if (iconProp && compat_module["default"].isValidElement(iconProp)) {
                icon = compat_module["default"].cloneElement(iconProp, {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes["iconColor".concat(Object(capitalize["a"/* default */
                    ])(color))])
                });
            }

            if (false) {}

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                role: clickable || onDelete ? 'button' : undefined,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, color !== 'default' && [classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], clickable && classes["clickableColor".concat(Object(capitalize["a"/* default */
                ])(color))], onDelete && classes["deletableColor".concat(Object(capitalize["a"/* default */
                ])(color))]], variant !== "default" && [classes.outlined, {
                    primary: classes.outlinedPrimary,
                    secondary: classes.outlinedSecondary
                }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),
                "aria-disabled": disabled ? true : undefined,
                tabIndex: clickable || onDelete ? 0 : undefined,
                onClick: onClick,
                onKeyUp: handleKeyUp,
                ref: handleRef
            }, moreProps, other), avatar || icon, compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.label, small && classes.labelSmall)
            }, label), deleteIcon);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Chip_Chip = (Object(withStyles["a"/* default */
        ])(Chip_styles, {
            name: 'MuiChip'
        })(Chip_Chip));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js

        var SIZE = 44;

        function getRelativeValue(value, min, max) {
            return (Math.min(Math.max(min, value), max) - min) / (max - min);
        }

        function easeOut(t) {
            t = getRelativeValue(t, 0, 1);
            // https://gist.github.com/gre/1650294

            t = (t -= 1) * t * t + 1;
            return t;
        }

        function easeIn(t) {
            return t * t;
        }

        var CircularProgress_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'inline-block'
                },

                /* Styles applied to the root element if `variant="static"`. */
                static: {
                    transition: theme.transitions.create('transform')
                },

                /* Styles applied to the root element if `variant="indeterminate"`. */
                indeterminate: {
                    animation: '$circular-rotate 1.4s linear infinite'
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main
                },

                /* Styles applied to the `svg` element. */
                svg: {
                    display: 'block'// Keeps the progress centered

                },

                /* Styles applied to the `circle` svg path. */
                circle: {
                    stroke: 'currentColor'// Use butt to follow the specification, by chance, it's already the default CSS value.
                    // strokeLinecap: 'butt',

                },

                /* Styles applied to the `circle` svg path if `variant="static"`. */
                circleStatic: {
                    transition: theme.transitions.create('stroke-dashoffset')
                },

                /* Styles applied to the `circle` svg path if `variant="indeterminate"`. */
                circleIndeterminate: {
                    animation: '$circular-dash 1.4s ease-in-out infinite',
                    // Some default value that looks fine waiting for the animation to kicks in.
                    strokeDasharray: '80px, 200px',
                    strokeDashoffset: '0px'// Add the unit to fix a Edge 16 and below bug.

                },
                '@keyframes circular-rotate': {
                    '100%': {
                        transform: 'rotate(360deg)'
                    }
                },
                '@keyframes circular-dash': {
                    '0%': {
                        strokeDasharray: '1px, 200px',
                        strokeDashoffset: '0px'
                    },
                    '50%': {
                        strokeDasharray: '100px, 200px',
                        strokeDashoffset: '-15px'
                    },
                    '100%': {
                        strokeDasharray: '100px, 200px',
                        strokeDashoffset: '-125px'
                    }
                },

                /* Styles applied to the `circle` svg path if `disableShrink={true}`. */
                circleDisableShrink: {
                    animation: 'none'
                }
            };
        };
        /**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */

        var CircularProgress_CircularProgress = compat_module["default"].forwardRef(function CircularProgress(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , _props$disableShrink = props.disableShrink
              , disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink
              , _props$size = props.size
              , size = _props$size === void 0 ? 40 : _props$size
              , style = props.style
              , _props$thickness = props.thickness
              , thickness = _props$thickness === void 0 ? 3.6 : _props$thickness
              , _props$value = props.value
              , value = _props$value === void 0 ? 0 : _props$value
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'indeterminate' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "disableShrink", "size", "style", "thickness", "value", "variant"]);

            var circleStyle = {};
            var rootStyle = {};
            var rootProps = {};

            if (variant === 'determinate' || variant === 'static') {
                var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);
                circleStyle.strokeDasharray = circumference.toFixed(3);
                rootProps['aria-valuenow'] = Math.round(value);

                if (variant === 'static') {
                    circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
                    rootStyle.transform = 'rotate(-90deg)';
                } else {
                    circleStyle.strokeDashoffset = "".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), "px");
                    rootStyle.transform = "rotate(".concat((easeOut(value / 70) * 270).toFixed(3), "deg)");
                }
            }

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, color !== 'inherit' && classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], {
                    indeterminate: classes.indeterminate,
                    static: classes.static
                }[variant]),
                style: Object(esm_extends["a"/* default */
                ])({
                    width: size,
                    height: size
                }, rootStyle, {}, style),
                ref: ref,
                role: "progressbar"
            }, rootProps, other), compat_module["default"].createElement("svg", {
                className: classes.svg,
                viewBox: "".concat(SIZE / 2, " ").concat(SIZE / 2, " ").concat(SIZE, " ").concat(SIZE)
            }, compat_module["default"].createElement("circle", {
                className: Object(clsx_m["a"/* default */
                ])(classes.circle, disableShrink && classes.circleDisableShrink, {
                    indeterminate: classes.circleIndeterminate,
                    static: classes.circleStatic
                }[variant]),
                style: circleStyle,
                cx: SIZE,
                cy: SIZE,
                r: (SIZE - thickness) / 2,
                fill: "none",
                strokeWidth: thickness
            })));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_CircularProgress_CircularProgress = (Object(withStyles["a"/* default */
        ])(CircularProgress_styles, {
            name: 'MuiCircularProgress',
            flip: false
        })(CircularProgress_CircularProgress));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/ownerDocument.js
        var ownerDocument = __webpack_require__(23);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/setRef.js
        var setRef = __webpack_require__(33);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useEventCallback.js
        var useEventCallback = __webpack_require__(19);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js

        function mapEventPropToEvent(eventProp) {
            return eventProp.substring(2).toLowerCase();
        }
        /**
 * Listen for click events that occur somewhere in the document, outside of the element itself.
 * For instance, if you need to hide a menu when people click anywhere else on your page.
 */

        var ClickAwayListener_ClickAwayListener = compat_module["default"].forwardRef(function ClickAwayListener(props, ref) {
            var children = props.children
              , _props$mouseEvent = props.mouseEvent
              , mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent
              , _props$touchEvent = props.touchEvent
              , touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent
              , onClickAway = props.onClickAway;
            var movedRef = compat_module["default"].useRef(false);
            var nodeRef = compat_module["default"].useRef(null);
            var mountedRef = compat_module["default"].useRef(false);
            compat_module["default"].useEffect(function() {
                mountedRef.current = true;
                return function() {
                    mountedRef.current = false;
                }
                ;
            }, []);
            var handleNodeRef = Object(useForkRef["a"/* default */
            ])(nodeRef, ref);
            // can be removed once we drop support for non ref forwarding class components

            var handleOwnRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                Object(setRef["a"/* default */
                ])(handleNodeRef, compat_module["default"].findDOMNode(instance));
            }, [handleNodeRef]);
            var handleRef = Object(useForkRef["a"/* default */
            ])(children.ref, handleOwnRef);
            var handleClickAway = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // The handler doesn't take event.defaultPrevented into account:
                //
                // event.preventDefault() is meant to stop default behaviours like
                // clicking a checkbox to check it, hitting a button to submit a form,
                // and hitting left arrow to move the cursor in a text input etc.
                // Only special HTML elements have these default behaviors.
                // IE 11 support, which trigger the handleClickAway even after the unbind
                if (!mountedRef.current) {
                    return;
                }
                // Do not act if user performed touchmove

                if (movedRef.current) {
                    movedRef.current = false;
                    return;
                }
                // The child might render null.

                if (!nodeRef.current) {
                    return;
                }
                // Multi window support

                var doc = Object(ownerDocument["a"/* default */
                ])(nodeRef.current);

                if (doc.documentElement && doc.documentElement.contains(event.target) && !nodeRef.current.contains(event.target)) {
                    onClickAway(event);
                }
            });
            var handleTouchMove = compat_module["default"].useCallback(function() {
                movedRef.current = true;
            }, []);
            compat_module["default"].useEffect(function() {
                if (touchEvent !== false) {
                    var mappedTouchEvent = mapEventPropToEvent(touchEvent);
                    var doc = Object(ownerDocument["a"/* default */
                    ])(nodeRef.current);
                    doc.addEventListener(mappedTouchEvent, handleClickAway);
                    doc.addEventListener('touchmove', handleTouchMove);
                    return function() {
                        doc.removeEventListener(mappedTouchEvent, handleClickAway);
                        doc.removeEventListener('touchmove', handleTouchMove);
                    }
                    ;
                }

                return undefined;
            }, [handleClickAway, handleTouchMove, touchEvent]);
            compat_module["default"].useEffect(function() {
                if (mouseEvent !== false) {
                    var mappedMouseEvent = mapEventPropToEvent(mouseEvent);
                    var doc = Object(ownerDocument["a"/* default */
                    ])(nodeRef.current);
                    doc.addEventListener(mappedMouseEvent, handleClickAway);
                    return function() {
                        doc.removeEventListener(mappedMouseEvent, handleClickAway);
                    }
                    ;
                }

                return undefined;
            }, [handleClickAway, mouseEvent]);
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, compat_module["default"].cloneElement(children, {
                ref: handleRef
            }));
        });
        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        var esm_ClickAwayListener_ClickAwayListener = (ClickAwayListener_ClickAwayListener);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Collapse/Collapse.js

        var Collapse_styles = function styles(theme) {
            return {
                /* Styles applied to the container element. */
                container: {
                    height: 0,
                    overflow: 'hidden',
                    transition: theme.transitions.create('height')
                },

                /* Styles applied to the container element when the transition has entered. */
                entered: {
                    height: 'auto',
                    overflow: 'visible'
                },

                /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */
                hidden: {
                    visibility: 'hidden'
                },

                /* Styles applied to the outer wrapper element. */
                wrapper: {
                    // Hack to get children with a negative margin to not falsify the height computation.
                    display: 'flex'
                },

                /* Styles applied to the inner wrapper element. */
                wrapperInner: {
                    width: '100%'
                }
            };
        };
        /**
 * The Collapse transition is used by the
 * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

        var Collapse_Collapse = compat_module["default"].forwardRef(function Collapse(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$collapsedHeigh = props.collapsedHeight
              , collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , inProp = props.in
              , onEnter = props.onEnter
              , onEntered = props.onEntered
              , onEntering = props.onEntering
              , onExit = props.onExit
              , onExiting = props.onExiting
              , style = props.style
              , _props$timeout = props.timeout
              , timeout = _props$timeout === void 0 ? transitions["b"/* duration */
            ].standard : _props$timeout
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "collapsedHeight", "component", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExiting", "style", "timeout"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var timer = compat_module["default"].useRef();
            var wrapperRef = compat_module["default"].useRef(null);
            var autoTransitionDuration = compat_module["default"].useRef();
            var collapsedHeight = typeof collapsedHeightProp === 'number' ? "".concat(collapsedHeightProp, "px") : collapsedHeightProp;
            compat_module["default"].useEffect(function() {
                return function() {
                    clearTimeout(timer.current);
                }
                ;
            }, []);

            var handleEnter = function handleEnter(node, isAppearing) {
                node.style.height = collapsedHeight;

                if (onEnter) {
                    onEnter(node, isAppearing);
                }
            };

            var handleEntering = function handleEntering(node, isAppearing) {
                var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;

                var _getTransitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'enter'
                })
                  , transitionDuration = _getTransitionProps.duration;

                if (timeout === 'auto') {
                    var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
                    node.style.transitionDuration = "".concat(duration2, "ms");
                    autoTransitionDuration.current = duration2;
                } else {
                    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
                }

                node.style.height = "".concat(wrapperHeight, "px");

                if (onEntering) {
                    onEntering(node, isAppearing);
                }
            };

            var handleEntered = function handleEntered(node, isAppearing) {
                node.style.height = 'auto';

                if (onEntered) {
                    onEntered(node, isAppearing);
                }
            };

            var handleExit = function handleExit(node) {
                var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
                node.style.height = "".concat(wrapperHeight, "px");

                if (onExit) {
                    onExit(node);
                }
            };

            var handleExiting = function handleExiting(node) {
                var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;

                var _getTransitionProps2 = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'exit'
                })
                  , transitionDuration = _getTransitionProps2.duration;

                if (timeout === 'auto') {
                    var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
                    node.style.transitionDuration = "".concat(duration2, "ms");
                    autoTransitionDuration.current = duration2;
                } else {
                    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : "".concat(transitionDuration, "ms");
                }

                node.style.height = collapsedHeight;

                if (onExiting) {
                    onExiting(node);
                }
            };

            var addEndListener = function addEndListener(_, next) {
                if (timeout === 'auto') {
                    timer.current = setTimeout(next, autoTransitionDuration.current || 0);
                }
            };

            return compat_module["default"].createElement(Transition["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                in: inProp,
                onEnter: handleEnter,
                onEntered: handleEntered,
                onEntering: handleEntering,
                onExit: handleExit,
                onExiting: handleExiting,
                addEndListener: addEndListener,
                timeout: timeout === 'auto' ? null : timeout
            }, other), function(state, childProps) {
                return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
                ])({
                    className: Object(clsx_m["a"/* default */
                    ])(classes.container, className, {
                        entered: classes.entered,
                        exited: !inProp && collapsedHeight === '0px' && classes.hidden
                    }[state]),
                    style: Object(esm_extends["a"/* default */
                    ])({
                        minHeight: collapsedHeight
                    }, style),
                    ref: ref
                }, childProps), compat_module["default"].createElement("div", {
                    className: classes.wrapper,
                    ref: wrapperRef
                }, compat_module["default"].createElement("div", {
                    className: classes.wrapperInner
                }, children)));
            });
        });
        false ? undefined : void 0;
        Collapse_Collapse.muiSupportAuto = true;
        /* harmony default export */
        var esm_Collapse_Collapse = (Object(withStyles["a"/* default */
        ])(Collapse_styles, {
            name: 'MuiCollapse'
        })(Collapse_Collapse));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Container/Container.js

        var Container_styles = function styles(theme) {
            var _root;

            return {
                /* Styles applied to the root element. */
                root: (_root = {
                    width: '100%',
                    marginLeft: 'auto',
                    boxSizing: 'border-box',
                    marginRight: 'auto',
                    paddingLeft: theme.spacing(2),
                    paddingRight: theme.spacing(2)
                },
                Object(defineProperty["a"/* default */
                ])(_root, theme.breakpoints.up('sm'), {
                    paddingLeft: theme.spacing(3),
                    paddingRight: theme.spacing(3)
                }),
                Object(defineProperty["a"/* default */
                ])(_root, theme.breakpoints.up('md'), {
                    paddingLeft: theme.spacing(4),
                    paddingRight: theme.spacing(4)
                }),
                _root),

                /* Styles applied to the root element if `disableGutters={true}`. */
                disableGutters: {
                    paddingLeft: 0,
                    paddingRight: 0
                },

                /* Styles applied to the root element if `fixed={true}`. */
                fixed: Object.keys(theme.breakpoints.values).reduce(function(acc, breakpoint) {
                    var value = theme.breakpoints.values[breakpoint];

                    if (value !== 0) {
                        acc[theme.breakpoints.up(breakpoint)] = {
                            maxWidth: value
                        };
                    }

                    return acc;
                }, {}),

                /* Styles applied to the root element if `maxWidth="xs"`. */
                maxWidthXs: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('xs'), {
                    maxWidth: Math.max(theme.breakpoints.values.xs, 444)
                }),

                /* Styles applied to the root element if `maxWidth="sm"`. */
                maxWidthSm: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), {
                    maxWidth: theme.breakpoints.values.sm
                }),

                /* Styles applied to the root element if `maxWidth="md"`. */
                maxWidthMd: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('md'), {
                    maxWidth: theme.breakpoints.values.md
                }),

                /* Styles applied to the root element if `maxWidth="lg"`. */
                maxWidthLg: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('lg'), {
                    maxWidth: theme.breakpoints.values.lg
                }),

                /* Styles applied to the root element if `maxWidth="xl"`. */
                maxWidthXl: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('xl'), {
                    maxWidth: theme.breakpoints.values.xl
                })
            };
        };
        var Container_Container = compat_module["default"].forwardRef(function Container(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disableGutters = props.disableGutters
              , disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters
              , _props$fixed = props.fixed
              , fixed = _props$fixed === void 0 ? false : _props$fixed
              , _props$maxWidth = props.maxWidth
              , maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component", "disableGutters", "fixed", "maxWidth"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes["maxWidth".concat(Object(capitalize["a"/* default */
                ])(String(maxWidth)))]),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Container_Container = (Object(withStyles["a"/* default */
        ])(Container_styles, {
            name: 'MuiContainer'
        })(Container_Container));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/makeStyles.js
        var makeStyles = __webpack_require__(166);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js

        var useStyles = Object(makeStyles["a"/* default */
        ])(function(theme) {
            return {
                '@global': {
                    html: {
                        WebkitFontSmoothing: 'antialiased',
                        // Antialiasing.
                        MozOsxFontSmoothing: 'grayscale',
                        // Antialiasing.
                        // Change from `box-sizing: content-box` so that `width`
                        // is not affected by `padding` or `border`.
                        boxSizing: 'border-box'
                    },
                    '*, *::before, *::after': {
                        boxSizing: 'inherit'
                    },
                    'strong, b': {
                        fontWeight: 'bolder'
                    },
                    body: Object(esm_extends["a"/* default */
                    ])({
                        margin: 0,
                        // Remove the margin in all browsers.
                        color: theme.palette.text.primary
                    }, theme.typography.body2, {
                        backgroundColor: theme.palette.background.default,
                        '@media print': {
                            // Save printer ink.
                            backgroundColor: theme.palette.common.white
                        },
                        // Add support for document.body.requestFullScreen().
                        // Other elements, if background transparent, are not supported.
                        '&::backdrop': {
                            backgroundColor: theme.palette.background.default
                        }
                    })
                }
            };
        }, {
            name: 'MuiCssBaseline'
        });
        /**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */

        function CssBaseline(props) {
            var _props$children = props.children
              , children = _props$children === void 0 ? null : _props$children;
            useStyles();
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, children);
        }

        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        var CssBaseline_CssBaseline = (CssBaseline);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Modal/Modal.js + 2 modules
        var Modal = __webpack_require__(255);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Dialog/Dialog.js

        /* eslint-disable jsx-a11y/click-events-have-key-events */

        var Dialog_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    '@media print': {
                        // Use !important to override the Modal inline-style.
                        position: 'absolute !important'
                    }
                },

                /* Styles applied to the container element if `scroll="paper"`. */
                scrollPaper: {
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center'
                },

                /* Styles applied to the container element if `scroll="body"`. */
                scrollBody: {
                    overflowY: 'auto',
                    overflowX: 'hidden',
                    textAlign: 'center',
                    '&:after': {
                        content: '""',
                        display: 'inline-block',
                        verticalAlign: 'middle',
                        height: '100%',
                        width: '0'
                    }
                },

                /* Styles applied to the container element. */
                container: {
                    height: '100%',
                    '@media print': {
                        height: 'auto'
                    },
                    // We disable the focus ring for mouse, touch and keyboard users.
                    outline: 0
                },

                /* Styles applied to the `Paper` component. */
                paper: {
                    margin: 32,
                    position: 'relative',
                    overflowY: 'auto',
                    // Fix IE 11 issue, to remove at some point.
                    '@media print': {
                        overflowY: 'visible',
                        boxShadow: 'none'
                    }
                },

                /* Styles applied to the `Paper` component if `scroll="paper"`. */
                paperScrollPaper: {
                    display: 'flex',
                    flexDirection: 'column',
                    maxHeight: 'calc(100% - 64px)'
                },

                /* Styles applied to the `Paper` component if `scroll="body"`. */
                paperScrollBody: {
                    display: 'inline-block',
                    verticalAlign: 'middle',
                    textAlign: 'left'// 'initial' doesn't work on IE 11

                },

                /* Styles applied to the `Paper` component if `maxWidth=false`. */
                paperWidthFalse: {
                    maxWidth: 'calc(100% - 64px)'
                },

                /* Styles applied to the `Paper` component if `maxWidth="xs"`. */
                paperWidthXs: {
                    maxWidth: Math.max(theme.breakpoints.values.xs, 444),
                    '&$paperScrollBody': Object(defineProperty["a"/* default */
                    ])({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {
                        maxWidth: 'calc(100% - 64px)'
                    })
                },

                /* Styles applied to the `Paper` component if `maxWidth="sm"`. */
                paperWidthSm: {
                    maxWidth: theme.breakpoints.values.sm,
                    '&$paperScrollBody': Object(defineProperty["a"/* default */
                    ])({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {
                        maxWidth: 'calc(100% - 64px)'
                    })
                },

                /* Styles applied to the `Paper` component if `maxWidth="md"`. */
                paperWidthMd: {
                    maxWidth: theme.breakpoints.values.md,
                    '&$paperScrollBody': Object(defineProperty["a"/* default */
                    ])({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {
                        maxWidth: 'calc(100% - 64px)'
                    })
                },

                /* Styles applied to the `Paper` component if `maxWidth="lg"`. */
                paperWidthLg: {
                    maxWidth: theme.breakpoints.values.lg,
                    '&$paperScrollBody': Object(defineProperty["a"/* default */
                    ])({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {
                        maxWidth: 'calc(100% - 64px)'
                    })
                },

                /* Styles applied to the `Paper` component if `maxWidth="xl"`. */
                paperWidthXl: {
                    maxWidth: theme.breakpoints.values.xl,
                    '&$paperScrollBody': Object(defineProperty["a"/* default */
                    ])({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {
                        maxWidth: 'calc(100% - 64px)'
                    })
                },

                /* Styles applied to the `Paper` component if `fullWidth={true}`. */
                paperFullWidth: {
                    width: 'calc(100% - 64px)'
                },

                /* Styles applied to the `Paper` component if `fullScreen={true}`. */
                paperFullScreen: {
                    margin: 0,
                    width: '100%',
                    maxWidth: '100%',
                    height: '100%',
                    maxHeight: 'none',
                    borderRadius: 0,
                    '&$paperScrollBody': {
                        margin: 0,
                        maxWidth: '100%'
                    }
                }
            };
        };
        var defaultTransitionDuration = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        /**
 * Dialogs are overlaid modal paper based components with a backdrop.
 */

        var Dialog_Dialog = compat_module["default"].forwardRef(function Dialog(props, ref) {
            var BackdropProps = props.BackdropProps
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$disableBackdro = props.disableBackdropClick
              , disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro
              , _props$disableEscapeK = props.disableEscapeKeyDown
              , disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK
              , _props$fullScreen = props.fullScreen
              , fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$maxWidth = props.maxWidth
              , maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth
              , onBackdropClick = props.onBackdropClick
              , onClose = props.onClose
              , onEnter = props.onEnter
              , onEntered = props.onEntered
              , onEntering = props.onEntering
              , onEscapeKeyDown = props.onEscapeKeyDown
              , onExit = props.onExit
              , onExited = props.onExited
              , onExiting = props.onExiting
              , open = props.open
              , _props$PaperComponent = props.PaperComponent
              , PaperComponent = _props$PaperComponent === void 0 ? Paper["a"/* default */
            ] : _props$PaperComponent
              , _props$PaperProps = props.PaperProps
              , PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps
              , _props$scroll = props.scroll
              , scroll = _props$scroll === void 0 ? 'paper' : _props$scroll
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? esm_Fade_Fade : _props$TransitionComp
              , _props$transitionDura = props.transitionDuration
              , transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura
              , TransitionProps = props.TransitionProps
              , ariaDescribedby = props['aria-describedby']
              , ariaLabelledby = props['aria-labelledby']
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["BackdropProps", "children", "classes", "className", "disableBackdropClick", "disableEscapeKeyDown", "fullScreen", "fullWidth", "maxWidth", "onBackdropClick", "onClose", "onEnter", "onEntered", "onEntering", "onEscapeKeyDown", "onExit", "onExited", "onExiting", "open", "PaperComponent", "PaperProps", "scroll", "TransitionComponent", "transitionDuration", "TransitionProps", "aria-describedby", "aria-labelledby"]);

            var mouseDownTarget = compat_module["default"].useRef();

            var handleMouseDown = function handleMouseDown(event) {
                mouseDownTarget.current = event.target;
            };

            var handleBackdropClick = function handleBackdropClick(event) {
                // Ignore the events not coming from the "backdrop"
                // We don't want to close the dialog when clicking the dialog content.
                if (event.target !== event.currentTarget) {
                    return;
                }
                // Make sure the event starts and ends on the same DOM element.

                if (event.target !== mouseDownTarget.current) {
                    return;
                }

                mouseDownTarget.current = null;

                if (onBackdropClick) {
                    onBackdropClick(event);
                }

                if (!disableBackdropClick && onClose) {
                    onClose(event, 'backdropClick');
                }
            };

            return compat_module["default"].createElement(Modal["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                BackdropComponent: esm_Backdrop_Backdrop,
                BackdropProps: Object(esm_extends["a"/* default */
                ])({
                    transitionDuration: transitionDuration
                }, BackdropProps),
                closeAfterTransition: true,
                disableBackdropClick: disableBackdropClick,
                disableEscapeKeyDown: disableEscapeKeyDown,
                onEscapeKeyDown: onEscapeKeyDown,
                onClose: onClose,
                open: open,
                ref: ref
            }, other), compat_module["default"].createElement(TransitionComponent, Object(esm_extends["a"/* default */
            ])({
                appear: true,
                in: open,
                timeout: transitionDuration,
                onEnter: onEnter,
                onEntering: onEntering,
                onEntered: onEntered,
                onExit: onExit,
                onExiting: onExiting,
                onExited: onExited,
                role: "none presentation"
            }, TransitionProps), compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.container, classes["scroll".concat(Object(capitalize["a"/* default */
                ])(scroll))]),
                onClick: handleBackdropClick,
                onMouseDown: handleMouseDown
            }, compat_module["default"].createElement(PaperComponent, Object(esm_extends["a"/* default */
            ])({
                elevation: 24,
                role: "dialog",
                "aria-describedby": ariaDescribedby,
                "aria-labelledby": ariaLabelledby
            }, PaperProps, {
                className: Object(clsx_m["a"/* default */
                ])(classes.paper, classes["paperScroll".concat(Object(capitalize["a"/* default */
                ])(scroll))], classes["paperWidth".concat(Object(capitalize["a"/* default */
                ])(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)
            }), children))));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Dialog_Dialog = (Object(withStyles["a"/* default */
        ])(Dialog_styles, {
            name: 'MuiDialog'
        })(Dialog_Dialog));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js

        var DialogActions_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                alignItems: 'center',
                padding: 8,
                justifyContent: 'flex-end',
                flex: '0 0 auto'
            },

            /* Styles applied to the root element if `disableSpacing={false}`. */
            spacing: {
                '& > :not(:first-child)': {
                    marginLeft: 8
                }
            }
        };
        var DialogActions_DialogActions = compat_module["default"].forwardRef(function DialogActions(props, ref) {
            var _props$disableSpacing = props.disableSpacing
              , disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing
              , classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["disableSpacing", "classes", "className"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, !disableSpacing && classes.spacing),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_DialogActions_DialogActions = (Object(withStyles["a"/* default */
        ])(DialogActions_styles, {
            name: 'MuiDialogActions'
        })(DialogActions_DialogActions));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js

        var DialogContent_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    flex: '1 1 auto',
                    WebkitOverflowScrolling: 'touch',
                    // Add iOS momentum scrolling.
                    overflowY: 'auto',
                    padding: '8px 24px',
                    '&:first-child': {
                        // dialog without title
                        paddingTop: 20
                    }
                },

                /* Styles applied to the root element if `dividers={true}`. */
                dividers: {
                    padding: '16px 24px',
                    borderTop: "1px solid ".concat(theme.palette.divider),
                    borderBottom: "1px solid ".concat(theme.palette.divider)
                }
            };
        };
        var DialogContent_DialogContent = compat_module["default"].forwardRef(function DialogContent(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$dividers = props.dividers
              , dividers = _props$dividers === void 0 ? false : _props$dividers
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "dividers"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, dividers && classes.dividers),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_DialogContent_DialogContent = (Object(withStyles["a"/* default */
        ])(DialogContent_styles, {
            name: 'MuiDialogContent'
        })(DialogContent_DialogContent));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js

        var DialogContentText_styles = {
            /* Styles applied to the root element. */
            root: {
                marginBottom: 12
            }
        };
        var DialogContentText_DialogContentText = compat_module["default"].forwardRef(function DialogContentText(props, ref) {
            return compat_module["default"].createElement(Typography["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                component: "p",
                variant: "body1",
                color: "textSecondary",
                ref: ref
            }, props));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_DialogContentText_DialogContentText = (Object(withStyles["a"/* default */
        ])(DialogContentText_styles, {
            name: 'MuiDialogContentText'
        })(DialogContentText_DialogContentText));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js

        var DialogTitle_styles = {
            /* Styles applied to the root element. */
            root: {
                margin: 0,
                padding: '16px 24px',
                flex: '0 0 auto'
            }
        };
        var DialogTitle_DialogTitle = compat_module["default"].forwardRef(function DialogTitle(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$disableTypogra = props.disableTypography
              , disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "disableTypography"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), disableTypography ? children : compat_module["default"].createElement(Typography["a"/* default */
            ], {
                component: "h2",
                variant: "h6"
            }, children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_DialogTitle_DialogTitle = (Object(withStyles["a"/* default */
        ])(DialogTitle_styles, {
            name: 'MuiDialogTitle'
        })(DialogTitle_DialogTitle));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Divider/Divider.js

        var Divider_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    height: 1,
                    margin: 0,
                    // Reset browser default style.
                    border: 'none',
                    flexShrink: 0,
                    backgroundColor: theme.palette.divider
                },

                /* Styles applied to the root element if `absolute={true}`. */
                absolute: {
                    position: 'absolute',
                    bottom: 0,
                    left: 0,
                    width: '100%'
                },

                /* Styles applied to the root element if `variant="inset"`. */
                inset: {
                    marginLeft: 72
                },

                /* Styles applied to the root element if `light={true}`. */
                light: {
                    backgroundColor: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.divider, 0.08)
                },

                /* Styles applied to the root element if `variant="middle"`. */
                middle: {
                    marginLeft: theme.spacing(2),
                    marginRight: theme.spacing(2)
                },

                /* Styles applied to the root element if `orientation="vertical"`. */
                vertical: {
                    height: '100%',
                    width: 1
                }
            };
        };
        var Divider_Divider = compat_module["default"].forwardRef(function Divider(props, ref) {
            var _props$absolute = props.absolute
              , absolute = _props$absolute === void 0 ? false : _props$absolute
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'hr' : _props$component
              , _props$light = props.light
              , light = _props$light === void 0 ? false : _props$light
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , _props$role = props.role
              , role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'fullWidth' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["absolute", "classes", "className", "component", "light", "orientation", "role", "variant"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, light && classes.light, {
                    vertical: classes.vertical
                }[orientation]),
                role: role,
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Divider_Divider = (Object(withStyles["a"/* default */
        ])(Divider_styles, {
            name: 'MuiDivider'
        })(Divider_Divider));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/debounce.js
        var debounce = __webpack_require__(46);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Slide/Slide.js

        // Translate the node so he can't be seen on the screen.
        // Later, we gonna translate back the node to his original location
        // with `none`.`

        function getTranslateValue(direction, node) {
            var rect = node.getBoundingClientRect();
            var transform;

            if (node.fakeTransform) {
                transform = node.fakeTransform;
            } else {
                var computedStyle = window.getComputedStyle(node);
                transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');
            }

            var offsetX = 0;
            var offsetY = 0;

            if (transform && transform !== 'none' && typeof transform === 'string') {
                var transformValues = transform.split('(')[1].split(')')[0].split(',');
                offsetX = parseInt(transformValues[4], 10);
                offsetY = parseInt(transformValues[5], 10);
            }

            if (direction === 'left') {
                return "translateX(".concat(window.innerWidth, "px) translateX(-").concat(rect.left - offsetX, "px)");
            }

            if (direction === 'right') {
                return "translateX(-".concat(rect.left + rect.width - offsetX, "px)");
            }

            if (direction === 'up') {
                return "translateY(".concat(window.innerHeight, "px) translateY(-").concat(rect.top - offsetY, "px)");
            }
            // direction === 'down'

            return "translateY(-".concat(rect.top + rect.height - offsetY, "px)");
        }

        function setTranslateValue(direction, node) {
            var transform = getTranslateValue(direction, node);

            if (transform) {
                node.style.webkitTransform = transform;
                node.style.transform = transform;
            }
        }
        var Slide_defaultTimeout = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        /**
 * The Slide transition is used by the [Drawer](/components/drawers/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

        var Slide_Slide = compat_module["default"].forwardRef(function Slide(props, ref) {
            var children = props.children
              , _props$direction = props.direction
              , direction = _props$direction === void 0 ? 'down' : _props$direction
              , inProp = props.in
              , onEnter = props.onEnter
              , onEntering = props.onEntering
              , onExit = props.onExit
              , onExited = props.onExited
              , style = props.style
              , _props$timeout = props.timeout
              , timeout = _props$timeout === void 0 ? Slide_defaultTimeout : _props$timeout
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "direction", "in", "onEnter", "onEntering", "onExit", "onExited", "style", "timeout"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var childrenRef = compat_module["default"].useRef(null);
            /**
   * used in cloneElement(children, { ref: handleRef })
   */

            var handleOwnRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                childrenRef.current = compat_module["default"].findDOMNode(instance);
            }, []);
            var handleRefIntermediary = Object(useForkRef["a"/* default */
            ])(children.ref, handleOwnRef);
            var handleRef = Object(useForkRef["a"/* default */
            ])(handleRefIntermediary, ref);

            var handleEnter = function handleEnter(_, isAppearing) {
                var node = childrenRef.current;
                setTranslateValue(direction, node);
                Object(utils["b"/* reflow */
                ])(node);

                if (onEnter) {
                    onEnter(node, isAppearing);
                }
            };

            var handleEntering = function handleEntering(_, isAppearing) {
                var node = childrenRef.current;
                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    timeout: timeout,
                    style: style
                }, {
                    mode: 'enter'
                });
                node.style.webkitTransition = theme.transitions.create('-webkit-transform', Object(esm_extends["a"/* default */
                ])({}, transitionProps, {
                    easing: theme.transitions.easing.easeOut
                }));
                node.style.transition = theme.transitions.create('transform', Object(esm_extends["a"/* default */
                ])({}, transitionProps, {
                    easing: theme.transitions.easing.easeOut
                }));
                node.style.webkitTransform = 'none';
                node.style.transform = 'none';

                if (onEntering) {
                    onEntering(node, isAppearing);
                }
            };

            var handleExit = function handleExit() {
                var node = childrenRef.current;
                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    timeout: timeout,
                    style: style
                }, {
                    mode: 'exit'
                });
                node.style.webkitTransition = theme.transitions.create('-webkit-transform', Object(esm_extends["a"/* default */
                ])({}, transitionProps, {
                    easing: theme.transitions.easing.sharp
                }));
                node.style.transition = theme.transitions.create('transform', Object(esm_extends["a"/* default */
                ])({}, transitionProps, {
                    easing: theme.transitions.easing.sharp
                }));
                setTranslateValue(direction, node);

                if (onExit) {
                    onExit(node);
                }
            };

            var handleExited = function handleExited() {
                var node = childrenRef.current;
                // No need for transitions when the component is hidden

                node.style.webkitTransition = '';
                node.style.transition = '';

                if (onExited) {
                    onExited(node);
                }
            };

            var updatePosition = compat_module["default"].useCallback(function() {
                if (childrenRef.current) {
                    setTranslateValue(direction, childrenRef.current);
                }
            }, [direction]);
            compat_module["default"].useEffect(function() {
                // Skip configuration where the position is screen size invariant.
                if (inProp || direction === 'down' || direction === 'right') {
                    return undefined;
                }

                var handleResize = Object(debounce["a"/* default */
                ])(function() {
                    if (childrenRef.current) {
                        setTranslateValue(direction, childrenRef.current);
                    }
                });
                window.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    window.removeEventListener('resize', handleResize);
                }
                ;
            }, [direction, inProp]);
            compat_module["default"].useEffect(function() {
                if (!inProp) {
                    // We need to update the position of the drawer when the direction change and
                    // when it's hidden.
                    updatePosition();
                }
            }, [inProp, updatePosition]);
            return compat_module["default"].createElement(Transition["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                onEnter: handleEnter,
                onEntering: handleEntering,
                onExit: handleExit,
                onExited: handleExited,
                appear: true,
                in: inProp,
                timeout: timeout
            }, other), function(state, childProps) {
                return compat_module["default"].cloneElement(children, Object(esm_extends["a"/* default */
                ])({
                    ref: handleRef,
                    style: Object(esm_extends["a"/* default */
                    ])({
                        visibility: state === 'exited' && !inProp ? 'hidden' : undefined
                    }, style, {}, children.props.style)
                }, childProps));
            });
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Slide_Slide = (Slide_Slide);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Drawer/Drawer.js

        var Drawer_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {},

                /* Styles applied to the root element if `variant="permanent or persistent"`. */
                docked: {
                    flex: '0 0 auto'
                },

                /* Styles applied to the `Paper` component. */
                paper: {
                    overflowY: 'auto',
                    display: 'flex',
                    flexDirection: 'column',
                    height: '100%',
                    flex: '1 0 auto',
                    zIndex: theme.zIndex.drawer,
                    WebkitOverflowScrolling: 'touch',
                    // Add iOS momentum scrolling.
                    // temporary style
                    position: 'fixed',
                    top: 0,
                    // We disable the focus ring for mouse, touch and keyboard users.
                    // At some point, it would be better to keep it for keyboard users.
                    // :focus-ring CSS pseudo-class will help.
                    outline: 0
                },

                /* Styles applied to the `Paper` component if `anchor="left"`. */
                paperAnchorLeft: {
                    left: 0,
                    right: 'auto'
                },

                /* Styles applied to the `Paper` component if `anchor="right"`. */
                paperAnchorRight: {
                    left: 'auto',
                    right: 0
                },

                /* Styles applied to the `Paper` component if `anchor="top"`. */
                paperAnchorTop: {
                    top: 0,
                    left: 0,
                    bottom: 'auto',
                    right: 0,
                    height: 'auto',
                    maxHeight: '100%'
                },

                /* Styles applied to the `Paper` component if `anchor="bottom"`. */
                paperAnchorBottom: {
                    top: 'auto',
                    left: 0,
                    bottom: 0,
                    right: 0,
                    height: 'auto',
                    maxHeight: '100%'
                },

                /* Styles applied to the `Paper` component if `anchor="left"` and `variant` is not "temporary". */
                paperAnchorDockedLeft: {
                    borderRight: "1px solid ".concat(theme.palette.divider)
                },

                /* Styles applied to the `Paper` component if `anchor="top"` and `variant` is not "temporary". */
                paperAnchorDockedTop: {
                    borderBottom: "1px solid ".concat(theme.palette.divider)
                },

                /* Styles applied to the `Paper` component if `anchor="right"` and `variant` is not "temporary". */
                paperAnchorDockedRight: {
                    borderLeft: "1px solid ".concat(theme.palette.divider)
                },

                /* Styles applied to the `Paper` component if `anchor="bottom"` and `variant` is not "temporary". */
                paperAnchorDockedBottom: {
                    borderTop: "1px solid ".concat(theme.palette.divider)
                },

                /* Styles applied to the `Modal` component. */
                modal: {}
            };
        };
        var oppositeDirection = {
            left: 'right',
            right: 'left',
            top: 'down',
            bottom: 'up'
        };
        function isHorizontal(anchor) {
            return ['left', 'right'].indexOf(anchor) !== -1;
        }
        function getAnchor(theme, anchor) {
            return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;
        }
        var Drawer_defaultTransitionDuration = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        /**
 * The props of the [Modal](/api/modal/) component are available
 * when `variant="temporary"` is set.
 */

        var Drawer_Drawer = compat_module["default"].forwardRef(function Drawer(props, ref) {
            var _props$anchor = props.anchor
              , anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor
              , BackdropProps = props.BackdropProps
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$elevation = props.elevation
              , elevation = _props$elevation === void 0 ? 16 : _props$elevation
              , _props$ModalProps = props.ModalProps;
            _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;

            var BackdropPropsProp = _props$ModalProps.BackdropProps
              , ModalProps = Object(objectWithoutProperties["a"/* default */
            ])(_props$ModalProps, ["BackdropProps"])
              , onClose = props.onClose
              , _props$open = props.open
              , open = _props$open === void 0 ? false : _props$open
              , _props$PaperProps = props.PaperProps
              , PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps
              , SlideProps = props.SlideProps
              , _props$transitionDura = props.transitionDuration
              , transitionDuration = _props$transitionDura === void 0 ? Drawer_defaultTransitionDuration : _props$transitionDura
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'temporary' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["anchor", "BackdropProps", "children", "classes", "className", "elevation", "ModalProps", "onClose", "open", "PaperProps", "SlideProps", "transitionDuration", "variant"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            // Let's assume that the Drawer will always be rendered on user space.
            // We use this state is order to skip the appear transition during the
            // initial mount of the component.

            var mounted = compat_module["default"].useRef(false);
            compat_module["default"].useEffect(function() {
                mounted.current = true;
            }, []);
            var anchor = getAnchor(theme, anchorProp);
            var drawer = compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                elevation: variant === 'temporary' ? elevation : 0,
                square: true
            }, PaperProps, {
                className: Object(clsx_m["a"/* default */
                ])(classes.paper, classes["paperAnchor".concat(Object(capitalize["a"/* default */
                ])(anchor))], PaperProps.className, variant !== 'temporary' && classes["paperAnchorDocked".concat(Object(capitalize["a"/* default */
                ])(anchor))])
            }), children);

            if (variant === 'permanent') {
                return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
                ])({
                    className: Object(clsx_m["a"/* default */
                    ])(classes.root, classes.docked, className),
                    ref: ref
                }, other), drawer);
            }

            var slidingDrawer = compat_module["default"].createElement(esm_Slide_Slide, Object(esm_extends["a"/* default */
            ])({
                in: open,
                direction: oppositeDirection[anchor],
                timeout: transitionDuration,
                appear: mounted.current
            }, SlideProps), drawer);

            if (variant === 'persistent') {
                return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
                ])({
                    className: Object(clsx_m["a"/* default */
                    ])(classes.root, classes.docked, className),
                    ref: ref
                }, other), slidingDrawer);
            }
            // variant === temporary

            return compat_module["default"].createElement(Modal["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                BackdropProps: Object(esm_extends["a"/* default */
                ])({}, BackdropProps, {}, BackdropPropsProp, {
                    transitionDuration: transitionDuration
                }),
                BackdropComponent: esm_Backdrop_Backdrop,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes.modal, className),
                open: open,
                onClose: onClose,
                ref: ref
            }, other, ModalProps), slidingDrawer);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Drawer_Drawer = (Object(withStyles["a"/* default */
        ])(Drawer_styles, {
            name: 'MuiDrawer',
            flip: false
        })(Drawer_Drawer));
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
        var arrayWithHoles = __webpack_require__(179);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/iterableToArray.js
        var iterableToArray = __webpack_require__(173);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
        var nonIterableRest = __webpack_require__(180);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/toArray.js

        function _toArray(arr) {
            return Object(arrayWithHoles["a"/* default */
            ])(arr) || Object(iterableToArray["a"/* default */
            ])(arr) || Object(nonIterableRest["a"/* default */
            ])();
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js

        /**
 * @ignore - internal component.
 * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}
 */

        var ExpansionPanelContext = compat_module["default"].createContext({});

        if (false) {}

        /* harmony default export */
        var ExpansionPanel_ExpansionPanelContext = (ExpansionPanelContext);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/useControlled.js
        var useControlled = __webpack_require__(52);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js

        var ExpansionPanel_styles = function styles(theme) {
            var transition = {
                duration: theme.transitions.duration.shortest
            };
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    transition: theme.transitions.create(['margin'], transition),
                    '&:before': {
                        position: 'absolute',
                        left: 0,
                        top: -1,
                        right: 0,
                        height: 1,
                        content: '""',
                        opacity: 1,
                        backgroundColor: theme.palette.divider,
                        transition: theme.transitions.create(['opacity', 'background-color'], transition)
                    },
                    '&:first-child': {
                        '&:before': {
                            display: 'none'
                        }
                    },
                    '&$expanded': {
                        margin: '16px 0',
                        '&:first-child': {
                            marginTop: 0
                        },
                        '&:last-child': {
                            marginBottom: 0
                        },
                        '&:before': {
                            opacity: 0
                        }
                    },
                    '&$expanded + &': {
                        '&:before': {
                            display: 'none'
                        }
                    },
                    '&$disabled': {
                        backgroundColor: theme.palette.action.disabledBackground
                    }
                },

                /* Styles applied to the root element if `square={false}`. */
                rounded: {
                    borderRadius: 0,
                    '&:first-child': {
                        borderTopLeftRadius: theme.shape.borderRadius,
                        borderTopRightRadius: theme.shape.borderRadius
                    },
                    '&:last-child': {
                        borderBottomLeftRadius: theme.shape.borderRadius,
                        borderBottomRightRadius: theme.shape.borderRadius,
                        // Fix a rendering issue on Edge
                        '@supports (-ms-ime-align: auto)': {
                            borderBottomLeftRadius: 0,
                            borderBottomRightRadius: 0
                        }
                    }
                },

                /* Styles applied to the root element if `expanded={true}`. */
                expanded: {},

                /* Styles applied to the root element if `disabled={true}`. */
                disabled: {}
            };
        };
        var ExpansionPanel_ExpansionPanel = compat_module["default"].forwardRef(function ExpansionPanel(props, ref) {
            var childrenProp = props.children
              , classes = props.classes
              , className = props.className
              , _props$defaultExpande = props.defaultExpanded
              , defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , expandedProp = props.expanded
              , onChange = props.onChange
              , _props$square = props.square
              , square = _props$square === void 0 ? false : _props$square
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? esm_Collapse_Collapse : _props$TransitionComp
              , TransitionProps = props.TransitionProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "defaultExpanded", "disabled", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"]);

            var _useControlled = Object(useControlled["a"/* default */
            ])({
                controlled: expandedProp,
                default: defaultExpanded,
                name: 'ExpansionPanel'
            })
              , _useControlled2 = Object(slicedToArray["a"/* default */
            ])(_useControlled, 2)
              , expanded = _useControlled2[0]
              , setExpandedState = _useControlled2[1];

            var handleChange = compat_module["default"].useCallback(function(event) {
                setExpandedState(!expanded);

                if (onChange) {
                    onChange(event, !expanded);
                }
            }, [expanded, onChange, setExpandedState]);

            var _React$Children$toArr = compat_module["default"].Children.toArray(childrenProp)
              , _React$Children$toArr2 = _toArray(_React$Children$toArr)
              , summary = _React$Children$toArr2[0]
              , children = _React$Children$toArr2.slice(1);

            var contextValue = compat_module["default"].useMemo(function() {
                return {
                    expanded: expanded,
                    disabled: disabled,
                    toggle: handleChange
                };
            }, [expanded, disabled, handleChange]);
            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),
                ref: ref,
                square: square
            }, other), compat_module["default"].createElement(ExpansionPanel_ExpansionPanelContext.Provider, {
                value: contextValue
            }, summary), compat_module["default"].createElement(TransitionComponent, Object(esm_extends["a"/* default */
            ])({
                in: expanded,
                timeout: "auto"
            }, TransitionProps), compat_module["default"].createElement("div", {
                "aria-labelledby": summary.props.id,
                id: summary.props['aria-controls'],
                role: "region"
            }, children)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ExpansionPanel_ExpansionPanel = (Object(withStyles["a"/* default */
        ])(ExpansionPanel_styles, {
            name: 'MuiExpansionPanel'
        })(ExpansionPanel_ExpansionPanel));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ExpansionPanelActions/ExpansionPanelActions.js

        var ExpansionPanelActions_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                alignItems: 'center',
                padding: 8,
                justifyContent: 'flex-end'
            },

            /* Styles applied to the root element if `disableSpacing={false}`. */
            spacing: {
                '& > :not(:first-child)': {
                    marginLeft: 8
                }
            }
        };
        var ExpansionPanelActions_ExpansionPanelActions = compat_module["default"].forwardRef(function ExpansionPanelActions(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$disableSpacing = props.disableSpacing
              , disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "disableSpacing"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, !disableSpacing && classes.spacing),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ExpansionPanelActions_ExpansionPanelActions = (Object(withStyles["a"/* default */
        ])(ExpansionPanelActions_styles, {
            name: 'MuiExpansionPanelActions'
        })(ExpansionPanelActions_ExpansionPanelActions));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js

        var ExpansionPanelDetails_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                padding: '8px 24px 24px'
            }
        };
        var ExpansionPanelDetails_ExpansionPanelDetails = compat_module["default"].forwardRef(function ExpansionPanelDetails(props, ref) {
            var classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ExpansionPanelDetails_ExpansionPanelDetails = (Object(withStyles["a"/* default */
        ])(ExpansionPanelDetails_styles, {
            name: 'MuiExpansionPanelDetails'
        })(ExpansionPanelDetails_ExpansionPanelDetails));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/IconButton/IconButton.js
        var IconButton = __webpack_require__(755);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js

        /* eslint-disable jsx-a11y/aria-role */

        var ExpansionPanelSummary_styles = function styles(theme) {
            var transition = {
                duration: theme.transitions.duration.shortest
            };
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'flex',
                    minHeight: 8 * 6,
                    transition: theme.transitions.create(['min-height', 'background-color'], transition),
                    padding: '0 24px 0 24px',
                    '&:hover:not($disabled)': {
                        cursor: 'pointer'
                    },
                    '&$expanded': {
                        minHeight: 64
                    },
                    '&$focused': {
                        backgroundColor: theme.palette.grey[300]
                    },
                    '&$disabled': {
                        opacity: 0.38
                    }
                },

                /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */
                expanded: {},

                /* Pseudo-class applied to the root element if `focused={true}`. */
                focused: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the children wrapper element. */
                content: {
                    display: 'flex',
                    flexGrow: 1,
                    transition: theme.transitions.create(['margin'], transition),
                    margin: '12px 0',
                    '&$expanded': {
                        margin: '20px 0'
                    }
                },

                /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */
                expandIcon: {
                    transform: 'rotate(0deg)',
                    transition: theme.transitions.create('transform', transition),
                    '&:hover': {
                        // Disable the hover effect for the IconButton,
                        // because a hover effect should apply to the entire Expand button and
                        // not only to the IconButton.
                        backgroundColor: 'transparent'
                    },
                    '&$expanded': {
                        transform: 'rotate(180deg)'
                    }
                }
            };
        };
        var ExpansionPanelSummary_ExpansionPanelSummary = compat_module["default"].forwardRef(function ExpansionPanelSummary(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , expandIcon = props.expandIcon
              , IconButtonProps = props.IconButtonProps
              , onBlur = props.onBlur
              , onClick = props.onClick
              , onFocusVisible = props.onFocusVisible
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "expandIcon", "IconButtonProps", "onBlur", "onClick", "onFocusVisible"]);

            var _React$useState = compat_module["default"].useState(false)
              , focusedState = _React$useState[0]
              , setFocusedState = _React$useState[1];

            var handleFocusVisible = function handleFocusVisible(event) {
                setFocusedState(true);

                if (onFocusVisible) {
                    onFocusVisible(event);
                }
            };

            var handleBlur = function handleBlur(event) {
                setFocusedState(false);

                if (onBlur) {
                    onBlur(event);
                }
            };

            var _React$useContext = compat_module["default"].useContext(ExpansionPanel_ExpansionPanelContext)
              , _React$useContext$dis = _React$useContext.disabled
              , disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis
              , expanded = _React$useContext.expanded
              , toggle = _React$useContext.toggle;

            var handleChange = function handleChange(event) {
                if (toggle) {
                    toggle(event);
                }

                if (onClick) {
                    onClick(event);
                }
            };

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                focusRipple: false,
                disableRipple: true,
                disabled: disabled,
                component: "div",
                "aria-expanded": expanded,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),
                onFocusVisible: handleFocusVisible,
                onBlur: handleBlur,
                onClick: handleChange,
                ref: ref
            }, other), compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.content, expanded && classes.expanded)
            }, children), expandIcon && compat_module["default"].createElement(IconButton["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.expandIcon, expanded && classes.expanded),
                edge: "end",
                component: "div",
                tabIndex: null,
                role: null,
                "aria-hidden": true
            }, IconButtonProps), expandIcon));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ExpansionPanelSummary_ExpansionPanelSummary = (Object(withStyles["a"/* default */
        ])(ExpansionPanelSummary_styles, {
            name: 'MuiExpansionPanelSummary'
        })(ExpansionPanelSummary_ExpansionPanelSummary));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Fab/Fab.js

        var Fab_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(esm_extends["a"/* default */
                ])({}, theme.typography.button, {
                    boxSizing: 'border-box',
                    minHeight: 36,
                    transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {
                        duration: theme.transitions.duration.short
                    }),
                    borderRadius: '50%',
                    padding: 0,
                    minWidth: 0,
                    width: 56,
                    height: 56,
                    boxShadow: theme.shadows[6],
                    '&:active': {
                        boxShadow: theme.shadows[12]
                    },
                    color: theme.palette.getContrastText(theme.palette.grey[300]),
                    backgroundColor: theme.palette.grey[300],
                    '&$focusVisible': {
                        boxShadow: theme.shadows[6]
                    },
                    '&:hover': {
                        backgroundColor: theme.palette.grey.A100,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: theme.palette.grey[300]
                        },
                        '&$disabled': {
                            backgroundColor: theme.palette.action.disabledBackground
                        },
                        textDecoration: 'none'
                    },
                    '&$disabled': {
                        color: theme.palette.action.disabled,
                        boxShadow: theme.shadows[0],
                        backgroundColor: theme.palette.action.disabledBackground
                    }
                }),

                /* Styles applied to the span element that wraps the children. */
                label: {
                    width: '100%',
                    // assure the correct width for iOS Safari
                    display: 'inherit',
                    alignItems: 'inherit',
                    justifyContent: 'inherit'
                },

                /* Styles applied to the root element if `color="primary"`. */
                primary: {
                    color: theme.palette.primary.contrastText,
                    backgroundColor: theme.palette.primary.main,
                    '&:hover': {
                        backgroundColor: theme.palette.primary.dark,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: theme.palette.primary.main
                        }
                    }
                },

                /* Styles applied to the root element if `color="secondary"`. */
                secondary: {
                    color: theme.palette.secondary.contrastText,
                    backgroundColor: theme.palette.secondary.main,
                    '&:hover': {
                        backgroundColor: theme.palette.secondary.dark,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: theme.palette.secondary.main
                        }
                    }
                },

                /* Styles applied to the root element if `variant="extended"`. */
                extended: {
                    borderRadius: 48 / 2,
                    padding: '0 16px',
                    width: 'auto',
                    minHeight: 'auto',
                    minWidth: 48,
                    height: 48,
                    '&$sizeSmall': {
                        width: 'auto',
                        padding: '0 8px',
                        borderRadius: 34 / 2,
                        minWidth: 34,
                        height: 34
                    },
                    '&$sizeMedium': {
                        width: 'auto',
                        padding: '0 16px',
                        borderRadius: 40 / 2,
                        minWidth: 40,
                        height: 40
                    }
                },

                /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */
                focusVisible: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `color="inherit"`. */
                colorInherit: {
                    color: 'inherit'
                },

                /* Styles applied to the root element if `size="small"``. */
                sizeSmall: {
                    width: 40,
                    height: 40
                },

                /* Styles applied to the root element if `size="medium"``. */
                sizeMedium: {
                    width: 48,
                    height: 48
                }
            };
        };
        var Fab_Fab = compat_module["default"].forwardRef(function Fab(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$component = props.component
              , component = _props$component === void 0 ? 'button' : _props$component
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableFocusRi = props.disableFocusRipple
              , disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi
              , focusVisibleClassName = props.focusVisibleClassName
              , _props$size = props.size
              , size = _props$size === void 0 ? 'large' : _props$size
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'round' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "color", "component", "disabled", "disableFocusRipple", "focusVisibleClassName", "size", "variant"]);

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, variant !== "round" && classes.extended, size !== 'large' && classes["size".concat(Object(capitalize["a"/* default */
                ])(size))], disabled && classes.disabled, {
                    primary: classes.primary,
                    secondary: classes.secondary,
                    inherit: classes.colorInherit
                }[color]),
                component: component,
                disabled: disabled,
                focusRipple: !disableFocusRipple,
                focusVisibleClassName: Object(clsx_m["a"/* default */
                ])(classes.focusVisible, focusVisibleClassName),
                ref: ref
            }, other), compat_module["default"].createElement("span", {
                className: classes.label
            }, children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Fab_Fab = (Object(withStyles["a"/* default */
        ])(Fab_styles, {
            name: 'MuiFab'
        })(Fab_Fab));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FilledInput/FilledInput.js
        var FilledInput = __webpack_require__(778);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/FormControl.js
        var FormControl = __webpack_require__(361);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/index.js
        var esm_FormControl = __webpack_require__(88);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js
        var FormControlLabel = __webpack_require__(331);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js
        var FormGroup = __webpack_require__(756);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/formControlState.js
        var formControlState = __webpack_require__(51);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/useFormControl.js
        var useFormControl = __webpack_require__(39);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js

        var FormHelperText_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(esm_extends["a"/* default */
                ])({
                    color: theme.palette.text.secondary
                }, theme.typography.caption, {
                    textAlign: 'left',
                    marginTop: 8,
                    lineHeight: '1em',
                    minHeight: '1em',
                    margin: 0,
                    '&$disabled': {
                        color: theme.palette.text.disabled
                    },
                    '&$error': {
                        color: theme.palette.error.main
                    }
                }),

                /* Pseudo-class applied to the root element if `error={true}`. */
                error: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `margin="dense"`. */
                marginDense: {
                    marginTop: 4
                },

                /* Styles applied to the root element if `variant="filled"` or `variant="outlined"`. */
                contained: {
                    margin: '8px 14px 0'
                },

                /* Pseudo-class applied to the root element if `focused={true}`. */
                focused: {},

                /* Pseudo-class applied to the root element if `filled={true}`. */
                filled: {},

                /* Pseudo-class applied to the root element if `required={true}`. */
                required: {}
            };
        };
        var FormHelperText_FormHelperText = compat_module["default"].forwardRef(function FormHelperText(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'p' : _props$component
              , disabled = props.disabled
              , error = props.error
              , filled = props.filled
              , focused = props.focused
              , margin = props.margin
              , required = props.required
              , variant = props.variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "component", "disabled", "error", "filled", "focused", "margin", "required", "variant"]);

            var muiFormControl = Object(useFormControl["a"/* default */
            ])();
            var fcs = Object(formControlState["a"/* default */
            ])({
                props: props,
                muiFormControl: muiFormControl,
                states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']
            });
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, {
                    dense: classes.marginDense
                }[fcs.margin]),
                ref: ref
            }, other), children === ' ' ? // eslint-disable-next-line react/no-danger
            compat_module["default"].createElement("span", {
                dangerouslySetInnerHTML: {
                    __html: '&#8203;'
                }
            }) : children);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_FormHelperText_FormHelperText = (Object(withStyles["a"/* default */
        ])(FormHelperText_styles, {
            name: 'MuiFormHelperText'
        })(FormHelperText_FormHelperText));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js
        var FormLabel = __webpack_require__(251);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Grid/Grid.js

        // A grid component using the following libs as inspiration.
        //
        // For the implementation:
        // - https://getbootstrap.com/docs/4.3/layout/grid/
        // - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css
        // - https://github.com/roylee0704/react-flexbox-grid
        // - https://material.angularjs.org/latest/layout/introduction
        //
        // Follow this flexbox Guide to better understand the underlying model:
        // - https://css-tricks.com/snippets/css/a-guide-to-flexbox/

        var SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        var GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

        function generateGrid(globalStyles, theme, breakpoint) {
            var styles = {};
            GRID_SIZES.forEach(function(size) {
                var key = "grid-".concat(breakpoint, "-").concat(size);

                if (size === true) {
                    // For the auto layouting
                    styles[key] = {
                        flexBasis: 0,
                        flexGrow: 1,
                        maxWidth: '100%'
                    };
                    return;
                }

                if (size === 'auto') {
                    styles[key] = {
                        flexBasis: 'auto',
                        flexGrow: 0,
                        maxWidth: 'none'
                    };
                    return;
                }
                // Keep 7 significant numbers.

                var width = "".concat(Math.round(size / 12 * 10e7) / 10e5, "%");
                // Close to the bootstrap implementation:
                // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41

                styles[key] = {
                    flexBasis: width,
                    flexGrow: 0,
                    maxWidth: width
                };
            });
            // No need for a media query for the first size.

            if (breakpoint === 'xs') {
                Object(esm_extends["a"/* default */
                ])(globalStyles, styles);
            } else {
                globalStyles[theme.breakpoints.up(breakpoint)] = styles;
            }
        }

        function getOffset(val) {
            var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
            var parse = parseFloat(val);
            return "".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');
        }

        function generateGutter(theme, breakpoint) {
            var styles = {};
            SPACINGS.forEach(function(spacing) {
                var themeSpacing = theme.spacing(spacing);

                if (themeSpacing === 0) {
                    return;
                }

                styles["spacing-".concat(breakpoint, "-").concat(spacing)] = {
                    margin: "-".concat(getOffset(themeSpacing, 2)),
                    width: "calc(100% + ".concat(getOffset(themeSpacing), ")"),
                    '& > $item': {
                        padding: getOffset(themeSpacing, 2)
                    }
                };
            });
            return styles;
        }
        // Default CSS values
        // flex: '0 1 auto',
        // flexDirection: 'row',
        // alignItems: 'flex-start',
        // flexWrap: 'nowrap',
        // justifyContent: 'flex-start',

        var Grid_styles = function styles(theme) {
            return Object(esm_extends["a"/* default */
            ])({
                /* Styles applied to the root element */
                root: {},

                /* Styles applied to the root element if `container={true}`. */
                container: {
                    boxSizing: 'border-box',
                    display: 'flex',
                    flexWrap: 'wrap',
                    width: '100%'
                },

                /* Styles applied to the root element if `item={true}`. */
                item: {
                    boxSizing: 'border-box',
                    margin: '0'// For instance, it's useful when used with a `figure` element.

                },

                /* Styles applied to the root element if `zeroMinWidth={true}`. */
                zeroMinWidth: {
                    minWidth: 0
                },

                /* Styles applied to the root element if `direction="column"`. */
                'direction-xs-column': {
                    flexDirection: 'column'
                },

                /* Styles applied to the root element if `direction="column-reverse"`. */
                'direction-xs-column-reverse': {
                    flexDirection: 'column-reverse'
                },

                /* Styles applied to the root element if `direction="rwo-reverse"`. */
                'direction-xs-row-reverse': {
                    flexDirection: 'row-reverse'
                },

                /* Styles applied to the root element if `wrap="nowrap"`. */
                'wrap-xs-nowrap': {
                    flexWrap: 'nowrap'
                },

                /* Styles applied to the root element if `wrap="reverse"`. */
                'wrap-xs-wrap-reverse': {
                    flexWrap: 'wrap-reverse'
                },

                /* Styles applied to the root element if `alignItems="center"`. */
                'align-items-xs-center': {
                    alignItems: 'center'
                },

                /* Styles applied to the root element if `alignItems="flex-start"`. */
                'align-items-xs-flex-start': {
                    alignItems: 'flex-start'
                },

                /* Styles applied to the root element if `alignItems="flex-end"`. */
                'align-items-xs-flex-end': {
                    alignItems: 'flex-end'
                },

                /* Styles applied to the root element if `alignItems="baseline"`. */
                'align-items-xs-baseline': {
                    alignItems: 'baseline'
                },

                /* Styles applied to the root element if `alignContent="center"`. */
                'align-content-xs-center': {
                    alignContent: 'center'
                },

                /* Styles applied to the root element if `alignContent="flex-start"`. */
                'align-content-xs-flex-start': {
                    alignContent: 'flex-start'
                },

                /* Styles applied to the root element if `alignContent="flex-end"`. */
                'align-content-xs-flex-end': {
                    alignContent: 'flex-end'
                },

                /* Styles applied to the root element if `alignContent="space-between"`. */
                'align-content-xs-space-between': {
                    alignContent: 'space-between'
                },

                /* Styles applied to the root element if `alignContent="space-around"`. */
                'align-content-xs-space-around': {
                    alignContent: 'space-around'
                },

                /* Styles applied to the root element if `justify="center"`. */
                'justify-xs-center': {
                    justifyContent: 'center'
                },

                /* Styles applied to the root element if `justify="flex-end"`. */
                'justify-xs-flex-end': {
                    justifyContent: 'flex-end'
                },

                /* Styles applied to the root element if `justify="space-between"`. */
                'justify-xs-space-between': {
                    justifyContent: 'space-between'
                },

                /* Styles applied to the root element if `justify="space-around"`. */
                'justify-xs-space-around': {
                    justifyContent: 'space-around'
                },

                /* Styles applied to the root element if `justify="space-evenly"`. */
                'justify-xs-space-evenly': {
                    justifyContent: 'space-evenly'
                }
            }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function(accumulator, key) {
                // Use side effect over immutability for better performance.
                generateGrid(accumulator, theme, key);
                return accumulator;
            }, {}));
        };
        var Grid_Grid = compat_module["default"].forwardRef(function Grid(props, ref) {
            var _props$alignContent = props.alignContent
              , alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent
              , _props$alignItems = props.alignItems
              , alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems
              , classes = props.classes
              , classNameProp = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$container = props.container
              , container = _props$container === void 0 ? false : _props$container
              , _props$direction = props.direction
              , direction = _props$direction === void 0 ? 'row' : _props$direction
              , _props$item = props.item
              , item = _props$item === void 0 ? false : _props$item
              , _props$justify = props.justify
              , justify = _props$justify === void 0 ? 'flex-start' : _props$justify
              , _props$lg = props.lg
              , lg = _props$lg === void 0 ? false : _props$lg
              , _props$md = props.md
              , md = _props$md === void 0 ? false : _props$md
              , _props$sm = props.sm
              , sm = _props$sm === void 0 ? false : _props$sm
              , _props$spacing = props.spacing
              , spacing = _props$spacing === void 0 ? 0 : _props$spacing
              , _props$wrap = props.wrap
              , wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap
              , _props$xl = props.xl
              , xl = _props$xl === void 0 ? false : _props$xl
              , _props$xs = props.xs
              , xs = _props$xs === void 0 ? false : _props$xs
              , _props$zeroMinWidth = props.zeroMinWidth
              , zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["alignContent", "alignItems", "classes", "className", "component", "container", "direction", "item", "justify", "lg", "md", "sm", "spacing", "wrap", "xl", "xs", "zeroMinWidth"]);

            var className = Object(clsx_m["a"/* default */
            ])(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes["spacing-xs-".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes["direction-xs-".concat(String(direction))], wrap !== 'wrap' && classes["wrap-xs-".concat(String(wrap))], alignItems !== 'stretch' && classes["align-items-xs-".concat(String(alignItems))], alignContent !== 'stretch' && classes["align-content-xs-".concat(String(alignContent))], justify !== 'flex-start' && classes["justify-xs-".concat(String(justify))], xs !== false && classes["grid-xs-".concat(String(xs))], sm !== false && classes["grid-sm-".concat(String(sm))], md !== false && classes["grid-md-".concat(String(md))], lg !== false && classes["grid-lg-".concat(String(lg))], xl !== false && classes["grid-xl-".concat(String(xl))]);
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: className,
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        var StyledGrid = Object(withStyles["a"/* default */
        ])(Grid_styles, {
            name: 'MuiGrid'
        })(Grid_Grid);

        if (false) {
            var requireProp;
        }

        /* harmony default export */
        var esm_Grid_Grid = (StyledGrid);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/GridList/GridList.js

        var GridList_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                flexWrap: 'wrap',
                overflowY: 'auto',
                listStyle: 'none',
                padding: 0,
                WebkitOverflowScrolling: 'touch'// Add iOS momentum scrolling.

            }
        };
        var GridList_GridList = compat_module["default"].forwardRef(function GridList(props, ref) {
            var _props$cellHeight = props.cellHeight
              , cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$cols = props.cols
              , cols = _props$cols === void 0 ? 2 : _props$cols
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'ul' : _props$component
              , _props$spacing = props.spacing
              , spacing = _props$spacing === void 0 ? 4 : _props$spacing
              , style = props.style
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["cellHeight", "children", "classes", "className", "cols", "component", "spacing", "style"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref,
                style: Object(esm_extends["a"/* default */
                ])({
                    margin: -spacing / 2
                }, style)
            }, other), compat_module["default"].Children.map(children, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                var childCols = child.props.cols || 1;
                var childRows = child.props.rows || 1;
                return compat_module["default"].cloneElement(child, {
                    style: Object(esm_extends["a"/* default */
                    ])({
                        width: "".concat(100 / cols * childCols, "%"),
                        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,
                        padding: spacing / 2
                    }, child.props.style)
                });
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_GridList_GridList = (Object(withStyles["a"/* default */
        ])(GridList_styles, {
            name: 'MuiGridList'
        })(GridList_GridList));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/isMuiElement.js
        var isMuiElement = __webpack_require__(67);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/GridListTile/GridListTile.js

        var GridListTile_styles = {
            /* Styles applied to the root element. */
            root: {
                boxSizing: 'border-box',
                flexShrink: 0
            },

            /* Styles applied to the `div` element that wraps the children. */
            tile: {
                position: 'relative',
                display: 'block',
                // In case it's not rendered with a div.
                height: '100%',
                overflow: 'hidden'
            },

            /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
            imgFullHeight: {
                height: '100%',
                transform: 'translateX(-50%)',
                position: 'relative',
                left: '50%'
            },

            /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
            imgFullWidth: {
                width: '100%',
                position: 'relative',
                transform: 'translateY(-50%)',
                top: '50%'
            }
        };

        var GridListTile_fit = function fit(imgEl, classes) {
            if (!imgEl || !imgEl.complete) {
                return;
            }

            if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {
                var _imgEl$classList, _imgEl$classList2;

                (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, Object(toConsumableArray["a"/* default */
                ])(classes.imgFullWidth.split(' ')));

                (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, Object(toConsumableArray["a"/* default */
                ])(classes.imgFullHeight.split(' ')));
            } else {
                var _imgEl$classList3, _imgEl$classList4;

                (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, Object(toConsumableArray["a"/* default */
                ])(classes.imgFullHeight.split(' ')));

                (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, Object(toConsumableArray["a"/* default */
                ])(classes.imgFullWidth.split(' ')));
            }
        };

        function ensureImageCover(imgEl, classes) {
            if (!imgEl) {
                return;
            }

            if (imgEl.complete) {
                GridListTile_fit(imgEl, classes);
            } else {
                imgEl.addEventListener('load', function() {
                    GridListTile_fit(imgEl, classes);
                });
            }
        }

        var GridListTile_GridListTile = compat_module["default"].forwardRef(function GridListTile(props, ref) {
            // cols rows default values are for docs only
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$cols = props.cols
              , cols = _props$cols === void 0 ? 1 : _props$cols
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'li' : _props$component
              , _props$rows = props.rows
              , rows = _props$rows === void 0 ? 1 : _props$rows
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "cols", "component", "rows"]);

            var imgRef = compat_module["default"].useRef(null);
            compat_module["default"].useEffect(function() {
                ensureImageCover(imgRef.current, classes);
            });
            compat_module["default"].useEffect(function() {
                var handleResize = Object(debounce["a"/* default */
                ])(function() {
                    GridListTile_fit(imgRef.current, classes);
                });
                window.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    window.removeEventListener('resize', handleResize);
                }
                ;
            }, [classes]);
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), compat_module["default"].createElement("div", {
                className: classes.tile
            }, compat_module["default"].Children.map(children, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (child.type === 'img' || Object(isMuiElement["a"/* default */
                ])(child, ['Image'])) {
                    return compat_module["default"].cloneElement(child, {
                        ref: imgRef
                    });
                }

                return child;
            })));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_GridListTile_GridListTile = (Object(withStyles["a"/* default */
        ])(GridListTile_styles, {
            name: 'MuiGridListTile'
        })(GridListTile_GridListTile));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/GridListTileBar/GridListTileBar.js

        var GridListTileBar_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'absolute',
                    left: 0,
                    right: 0,
                    height: 48,
                    background: 'rgba(0, 0, 0, 0.5)',
                    display: 'flex',
                    alignItems: 'center',
                    fontFamily: theme.typography.fontFamily
                },

                /* Styles applied to the root element if `titlePosition="bottom"`. */
                titlePositionBottom: {
                    bottom: 0
                },

                /* Styles applied to the root element if `titlePosition="top"`. */
                titlePositionTop: {
                    top: 0
                },

                /* Styles applied to the root element if a `subtitle` is provided. */
                rootSubtitle: {
                    height: 68
                },

                /* Styles applied to the title and subtitle container element. */
                titleWrap: {
                    flexGrow: 1,
                    marginLeft: 16,
                    marginRight: 16,
                    color: theme.palette.common.white,
                    overflow: 'hidden'
                },

                /* Styles applied to the container element if `actionPosition="left"`. */
                titleWrapActionPosLeft: {
                    marginLeft: 0
                },

                /* Styles applied to the container element if `actionPosition="right"`. */
                titleWrapActionPosRight: {
                    marginRight: 0
                },

                /* Styles applied to the title container element. */
                title: {
                    fontSize: theme.typography.pxToRem(16),
                    lineHeight: '24px',
                    textOverflow: 'ellipsis',
                    overflow: 'hidden',
                    whiteSpace: 'nowrap'
                },

                /* Styles applied to the subtitle container element. */
                subtitle: {
                    fontSize: theme.typography.pxToRem(12),
                    lineHeight: 1,
                    textOverflow: 'ellipsis',
                    overflow: 'hidden',
                    whiteSpace: 'nowrap'
                },

                /* Styles applied to the actionIcon if supplied. */
                actionIcon: {},

                /* Styles applied to the actionIcon if `actionPosition="left"`. */
                actionIconActionPosLeft: {
                    order: -1
                }
            };
        };
        var GridListTileBar_GridListTileBar = compat_module["default"].forwardRef(function GridListTileBar(props, ref) {
            var actionIcon = props.actionIcon
              , _props$actionPosition = props.actionPosition
              , actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition
              , classes = props.classes
              , className = props.className
              , subtitle = props.subtitle
              , title = props.title
              , _props$titlePosition = props.titlePosition
              , titlePosition = _props$titlePosition === void 0 ? 'bottom' : _props$titlePosition
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["actionIcon", "actionPosition", "classes", "className", "subtitle", "title", "titlePosition"]);

            var actionPos = actionIcon && actionPosition;
            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, titlePosition === 'top' ? classes.titlePositionTop : classes.titlePositionBottom, subtitle && classes.rootSubtitle),
                ref: ref
            }, other), compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.titleWrap, {
                    left: classes.titleWrapActionPosLeft,
                    right: classes.titleWrapActionPosRight
                }[actionPos])
            }, compat_module["default"].createElement("div", {
                className: classes.title
            }, title), subtitle ? compat_module["default"].createElement("div", {
                className: classes.subtitle
            }, subtitle) : null), actionIcon ? compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.actionIcon, {
                    left: classes.actionIconActionPosLeft
                }[actionPos])
            }, actionIcon) : null);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_GridListTileBar_GridListTileBar = (Object(withStyles["a"/* default */
        ])(GridListTileBar_styles, {
            name: 'MuiGridListTileBar'
        })(GridListTileBar_GridListTileBar));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Grow/Grow.js
        var Grow = __webpack_require__(760);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js
        var getThemeProps = __webpack_require__(776);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(429);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/
        __webpack_require__.n(hoist_non_react_statics_cjs);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/createBreakpoints.js
        var createBreakpoints = __webpack_require__(59);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/useTheme.js
        var useTheme_useTheme = __webpack_require__(753);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js

        function useMediaQuery(queryInput) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var theme = Object(useTheme_useTheme["a"/* default */
            ])();
            var props = Object(getThemeProps["a"/* default */
            ])({
                theme: theme,
                name: 'MuiUseMediaQuery',
                props: {}
            });

            if (false) {}

            var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;
            query = query.replace(/^@media( ?)/m, '');
            // Wait for jsdom to support the match media feature.
            // All the browsers Material-UI support have this built-in.
            // This defensive check is here for simplicity.
            // Most of the time, the match media logic isn't central to people tests.

            var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';

            var _props$options = Object(esm_extends["a"/* default */
            ])({}, props, {}, options)
              , _props$options$defaul = _props$options.defaultMatches
              , defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul
              , _props$options$matchM = _props$options.matchMedia
              , matchMedia = _props$options$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _props$options$matchM
              , _props$options$noSsr = _props$options.noSsr
              , noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr
              , _props$options$ssrMat = _props$options.ssrMatchMedia
              , ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;

            var _React$useState = compat_module["default"].useState(function() {
                if (noSsr && supportMatchMedia) {
                    return matchMedia(query).matches;
                }

                if (ssrMatchMedia) {
                    return ssrMatchMedia(query).matches;
                }
                // Once the component is mounted, we rely on the
                // event listeners to return the correct matches value.

                return defaultMatches;
            })
              , match = _React$useState[0]
              , setMatch = _React$useState[1];

            compat_module["default"].useEffect(function() {
                var active = true;

                if (!supportMatchMedia) {
                    return undefined;
                }

                var queryList = matchMedia(query);

                var updateMatch = function updateMatch() {
                    // Workaround Safari wrong implementation of matchMedia
                    // TODO can we remove it?
                    // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677
                    if (active) {
                        setMatch(queryList.matches);
                    }
                };

                updateMatch();
                queryList.addListener(updateMatch);
                return function() {
                    active = false;
                    queryList.removeListener(updateMatch);
                }
                ;
            }, [query, matchMedia, supportMatchMedia]);
            return match;
        }

        /* harmony default export */
        var useMediaQuery_useMediaQuery = (useMediaQuery);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/withWidth/withWidth.js

        // By default, returns true if screen width is the same or greater than the given breakpoint.

        var withWidth_isWidthUp = function isWidthUp(breakpoint, width) {
            var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            if (inclusive) {
                return createBreakpoints["b"/* keys */
                ].indexOf(breakpoint) <= createBreakpoints["b"/* keys */
                ].indexOf(width);
            }

            return createBreakpoints["b"/* keys */
            ].indexOf(breakpoint) < createBreakpoints["b"/* keys */
            ].indexOf(width);
        };
        // By default, returns true if screen width is the same or less than the given breakpoint.

        var withWidth_isWidthDown = function isWidthDown(breakpoint, width) {
            var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            if (inclusive) {
                return createBreakpoints["b"/* keys */
                ].indexOf(width) <= createBreakpoints["b"/* keys */
                ].indexOf(breakpoint);
            }

            return createBreakpoints["b"/* keys */
            ].indexOf(width) < createBreakpoints["b"/* keys */
            ].indexOf(breakpoint);
        };
        var useEnhancedEffect = typeof window === 'undefined' ? compat_module["default"].useEffect : compat_module["default"].useLayoutEffect;

        var withWidth_withWidth = function withWidth() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return function(Component) {
                var _options$withTheme = options.withTheme
                  , withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme
                  , _options$noSSR = options.noSSR
                  , noSSR = _options$noSSR === void 0 ? false : _options$noSSR
                  , initialWidthOption = options.initialWidth;

                function WithWidth(props) {
                    var contextTheme = Object(useTheme["a"/* default */
                    ])();
                    var theme = props.theme || contextTheme;

                    var _getThemeProps = Object(getThemeProps["a"/* default */
                    ])({
                        theme: theme,
                        name: 'MuiWithWidth',
                        props: Object(esm_extends["a"/* default */
                        ])({}, props)
                    })
                      , initialWidth = _getThemeProps.initialWidth
                      , width = _getThemeProps.width
                      , other = Object(objectWithoutProperties["a"/* default */
                    ])(_getThemeProps, ["initialWidth", "width"]);

                    var _React$useState = compat_module["default"].useState(false)
                      , mountedState = _React$useState[0]
                      , setMountedState = _React$useState[1];

                    useEnhancedEffect(function() {
                        setMountedState(true);
                    }, []);
                    /**
       * innerWidth |xs      sm      md      lg      xl
       *            |-------|-------|-------|-------|------>
       * width      |  xs   |  sm   |  md   |  lg   |  xl
       */

                    var keys = Object(toConsumableArray["a"/* default */
                    ])(theme.breakpoints.keys).reverse();

                    var widthComputed = keys.reduce(function(output, key) {
                        // eslint-disable-next-line react-hooks/rules-of-hooks
                        var matches = useMediaQuery_useMediaQuery(theme.breakpoints.up(key));
                        return !output && matches ? key : output;
                    }, null);

                    var more = Object(esm_extends["a"/* default */
                    ])({
                        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption
                    }, withThemeOption ? {
                        theme: theme
                    } : {}, {}, other);
                    // When rendering the component on the server,
                    // we have no idea about the client browser screen width.
                    // In order to prevent blinks and help the reconciliation of the React tree
                    // we are not rendering the child component.
                    //
                    // An alternative is to use the `initialWidth` property.

                    if (more.width === undefined) {
                        return null;
                    }

                    return compat_module["default"].createElement(Component, more);
                }

                false ? undefined : void 0;

                if (false) {}

                hoist_non_react_statics_cjs_default()(WithWidth, Component);
                return WithWidth;
            }
            ;
        };

        /* harmony default export */
        var esm_withWidth_withWidth = (withWidth_withWidth);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Hidden/HiddenJs.js

        /**
 * @ignore - internal component.
 */

        function HiddenJs(props) {
            var children = props.children
              , only = props.only
              , width = props.width;
            var theme = Object(useTheme["a"/* default */
            ])();
            var visible = true;
            // `only` check is faster to get out sooner if used.

            if (only) {
                if (Array.isArray(only)) {
                    for (var i = 0; i < only.length; i += 1) {
                        var breakpoint = only[i];

                        if (width === breakpoint) {
                            visible = false;
                            break;
                        }
                    }
                } else if (only && width === only) {
                    visible = false;
                }
            }
            // Allow `only` to be combined with other props. If already hidden, no need to check others.

            if (visible) {
                // determine visibility based on the smallest size up
                for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {
                    var _breakpoint = theme.breakpoints.keys[_i];
                    var breakpointUp = props["".concat(_breakpoint, "Up")];
                    var breakpointDown = props["".concat(_breakpoint, "Down")];

                    if (breakpointUp && withWidth_isWidthUp(_breakpoint, width) || breakpointDown && withWidth_isWidthDown(_breakpoint, width)) {
                        visible = false;
                        break;
                    }
                }
            }

            if (!visible) {
                return null;
            }

            return children;
        }

        HiddenJs.propTypes = {
            /**
   * The content of the component.
   */
            children: prop_types_default.a.node,

            /**
   * @ignore
   */
            className: prop_types_default.a.string,

            /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
            implementation: prop_types_default.a.oneOf(['js', 'css']),

            /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use an heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
            initialWidth: prop_types_default.a.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),

            /**
   * If `true`, screens this size and down will be hidden.
   */
            lgDown: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and up will be hidden.
   */
            lgUp: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and down will be hidden.
   */
            mdDown: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and up will be hidden.
   */
            mdUp: prop_types_default.a.bool,

            /**
   * Hide the given breakpoint(s).
   */
            only: prop_types_default.a.oneOfType([prop_types_default.a.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), prop_types_default.a.arrayOf(prop_types_default.a.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),

            /**
   * If `true`, screens this size and down will be hidden.
   */
            smDown: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and up will be hidden.
   */
            smUp: prop_types_default.a.bool,

            /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
            width: prop_types_default.a.string.isRequired,

            /**
   * If `true`, screens this size and down will be hidden.
   */
            xlDown: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and up will be hidden.
   */
            xlUp: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and down will be hidden.
   */
            xsDown: prop_types_default.a.bool,

            /**
   * If `true`, screens this size and up will be hidden.
   */
            xsUp: prop_types_default.a.bool
        };

        if (false) {}

        /* harmony default export */
        var Hidden_HiddenJs = (esm_withWidth_withWidth()(HiddenJs));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Hidden/HiddenCss.js

        var HiddenCss_styles = function styles(theme) {
            var hidden = {
                display: 'none'
            };
            return theme.breakpoints.keys.reduce(function(acc, key) {
                acc["only".concat(Object(capitalize["a"/* default */
                ])(key))] = Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.only(key), hidden);
                acc["".concat(key, "Up")] = Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up(key), hidden);
                acc["".concat(key, "Down")] = Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.down(key), hidden);
                return acc;
            }, {});
        };
        /**
 * @ignore - internal component.
 */

        function HiddenCss(props) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , only = props.only
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "only"]);

            var theme = Object(useTheme["a"/* default */
            ])();

            if (false) {
                var unknownProps;
            }

            var clsx = [];

            if (className) {
                clsx.push(className);
            }

            for (var i = 0; i < theme.breakpoints.keys.length; i += 1) {
                var breakpoint = theme.breakpoints.keys[i];
                var breakpointUp = props["".concat(breakpoint, "Up")];
                var breakpointDown = props["".concat(breakpoint, "Down")];

                if (breakpointUp) {
                    clsx.push(classes["".concat(breakpoint, "Up")]);
                }

                if (breakpointDown) {
                    clsx.push(classes["".concat(breakpoint, "Down")]);
                }
            }

            if (only) {
                var onlyBreakpoints = Array.isArray(only) ? only : [only];
                onlyBreakpoints.forEach(function(breakpoint) {
                    clsx.push(classes["only".concat(Object(capitalize["a"/* default */
                    ])(breakpoint))]);
                });
            }

            return compat_module["default"].createElement("div", {
                className: clsx.join(' ')
            }, children);
        }

        false ? undefined : void 0;
        /* harmony default export */
        var Hidden_HiddenCss = (Object(withStyles["a"/* default */
        ])(HiddenCss_styles, {
            name: 'PrivateHiddenCss'
        })(HiddenCss));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Hidden/Hidden.js

        /**
 * Responsively hides children based on the selected implementation.
 */

        function Hidden(props) {
            var _props$implementation = props.implementation
              , implementation = _props$implementation === void 0 ? 'js' : _props$implementation
              , _props$lgDown = props.lgDown
              , lgDown = _props$lgDown === void 0 ? false : _props$lgDown
              , _props$lgUp = props.lgUp
              , lgUp = _props$lgUp === void 0 ? false : _props$lgUp
              , _props$mdDown = props.mdDown
              , mdDown = _props$mdDown === void 0 ? false : _props$mdDown
              , _props$mdUp = props.mdUp
              , mdUp = _props$mdUp === void 0 ? false : _props$mdUp
              , _props$smDown = props.smDown
              , smDown = _props$smDown === void 0 ? false : _props$smDown
              , _props$smUp = props.smUp
              , smUp = _props$smUp === void 0 ? false : _props$smUp
              , _props$xlDown = props.xlDown
              , xlDown = _props$xlDown === void 0 ? false : _props$xlDown
              , _props$xlUp = props.xlUp
              , xlUp = _props$xlUp === void 0 ? false : _props$xlUp
              , _props$xsDown = props.xsDown
              , xsDown = _props$xsDown === void 0 ? false : _props$xsDown
              , _props$xsUp = props.xsUp
              , xsUp = _props$xsUp === void 0 ? false : _props$xsUp
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["implementation", "lgDown", "lgUp", "mdDown", "mdUp", "smDown", "smUp", "xlDown", "xlUp", "xsDown", "xsUp"]);

            if (implementation === 'js') {
                return compat_module["default"].createElement(Hidden_HiddenJs, Object(esm_extends["a"/* default */
                ])({
                    lgDown: lgDown,
                    lgUp: lgUp,
                    mdDown: mdDown,
                    mdUp: mdUp,
                    smDown: smDown,
                    smUp: smUp,
                    xlDown: xlDown,
                    xlUp: xlUp,
                    xsDown: xsDown,
                    xsUp: xsUp
                }, other));
            }

            return compat_module["default"].createElement(Hidden_HiddenCss, Object(esm_extends["a"/* default */
            ])({
                lgDown: lgDown,
                lgUp: lgUp,
                mdDown: mdDown,
                mdUp: mdUp,
                smDown: smDown,
                smUp: smUp,
                xlDown: xlDown,
                xlUp: xlUp,
                xsDown: xsDown,
                xsUp: xsUp
            }, other));
        }

        false ? undefined : void 0;
        /* harmony default export */
        var Hidden_Hidden = (Hidden);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Icon/Icon.js

        var Icon_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    userSelect: 'none',
                    fontSize: theme.typography.pxToRem(24),
                    width: '1em',
                    height: '1em',
                    // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541
                    // To remove at some point.
                    overflow: 'hidden',
                    flexShrink: 0
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main
                },

                /* Styles applied to the root element if `color="action"`. */
                colorAction: {
                    color: theme.palette.action.active
                },

                /* Styles applied to the root element if `color="error"`. */
                colorError: {
                    color: theme.palette.error.main
                },

                /* Styles applied to the root element if `color="disabled"`. */
                colorDisabled: {
                    color: theme.palette.action.disabled
                },

                /* Styles applied to the root element if `fontSize="inherit"`. */
                fontSizeInherit: {
                    fontSize: 'inherit'
                },

                /* Styles applied to the root element if `fontSize="small"`. */
                fontSizeSmall: {
                    fontSize: theme.typography.pxToRem(20)
                },

                /* Styles applied to the root element if `fontSize="large"`. */
                fontSizeLarge: {
                    fontSize: theme.typography.pxToRem(36)
                }
            };
        };
        var Icon_Icon = compat_module["default"].forwardRef(function Icon(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'inherit' : _props$color
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'span' : _props$component
              , _props$fontSize = props.fontSize
              , fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "component", "fontSize"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])('material-icons', classes.root, className, color !== 'inherit' && classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], fontSize !== 'default' && classes["fontSize".concat(Object(capitalize["a"/* default */
                ])(fontSize))]),
                "aria-hidden": true,
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        Icon_Icon.muiName = 'Icon';
        /* harmony default export */
        var esm_Icon_Icon = (Object(withStyles["a"/* default */
        ])(Icon_styles, {
            name: 'MuiIcon'
        })(Icon_Icon));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Input/Input.js
        var Input = __webpack_require__(252);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js
        var FormControlContext = __webpack_require__(66);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js

        var InputAdornment_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                height: '0.01em',
                // Fix IE 11 flexbox alignment. To remove at some point.
                maxHeight: '2em',
                alignItems: 'center',
                whiteSpace: 'nowrap'
            },

            /* Styles applied to the root element if `variant="filled"`. */
            filled: {
                '&$positionStart:not($hiddenLabel)': {
                    marginTop: 16
                }
            },

            /* Styles applied to the root element if `position="start"`. */
            positionStart: {
                marginRight: 8
            },

            /* Styles applied to the root element if `position="end"`. */
            positionEnd: {
                marginLeft: 8
            },

            /* Styles applied to the root element if `disablePointerEvents=true`. */
            disablePointerEvents: {
                pointerEvents: 'none'
            },

            /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */
            hiddenLabel: {},

            /* Styles applied if the adornment is used inside <FormControl margin="dense" />. */
            marginDense: {}
        };
        var InputAdornment_InputAdornment = compat_module["default"].forwardRef(function InputAdornment(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disablePointer = props.disablePointerEvents
              , disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer
              , _props$disableTypogra = props.disableTypography
              , disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra
              , position = props.position
              , variantProp = props.variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"]);

            var muiFormControl = Object(FormControlContext["b"/* useFormControl */
            ])() || {};
            var variant = variantProp;

            if (variantProp && muiFormControl.variant) {
                if (false) {}
            }

            if (muiFormControl && !variant) {
                variant = muiFormControl.variant;
            }

            return compat_module["default"].createElement(FormControlContext["a"/* default */
            ].Provider, {
                value: null
            }, compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {
                    filled: classes.filled
                }[variant], {
                    start: classes.positionStart,
                    end: classes.positionEnd
                }[position], {
                    dense: classes.marginDense
                }[muiFormControl.margin]),
                ref: ref
            }, other), typeof children === 'string' && !disableTypography ? compat_module["default"].createElement(Typography["a"/* default */
            ], {
                color: "textSecondary"
            }, children) : children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_InputAdornment_InputAdornment = (Object(withStyles["a"/* default */
        ])(InputAdornment_styles, {
            name: 'MuiInputAdornment'
        })(InputAdornment_InputAdornment));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/InputBase/InputBase.js
        var InputBase = __webpack_require__(435);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js
        var InputLabel = __webpack_require__(362);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js

        var TRANSITION_DURATION = 4;
        // seconds

        var LinearProgress_styles = function styles(theme) {
            var getColor = function getColor(color) {
                return theme.palette.type === 'light' ? Object(colorManipulator["i"/* lighten */
                ])(color, 0.62) : Object(colorManipulator["a"/* darken */
                ])(color, 0.5);
            };

            var backgroundPrimary = getColor(theme.palette.primary.main);
            var backgroundSecondary = getColor(theme.palette.secondary.main);
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    overflow: 'hidden',
                    height: 4
                },

                /* Styles applied to the root and bar2 element if `color="primary"`; bar2 if `variant="buffer"`. */
                colorPrimary: {
                    backgroundColor: backgroundPrimary
                },

                /* Styles applied to the root and bar2 elements if `color="secondary"`; bar2 if `variant="buffer"`. */
                colorSecondary: {
                    backgroundColor: backgroundSecondary
                },

                /* Styles applied to the root element if `variant="determinate"`. */
                determinate: {},

                /* Styles applied to the root element if `variant="indeterminate"`. */
                indeterminate: {},

                /* Styles applied to the root element if `variant="buffer"`. */
                buffer: {
                    backgroundColor: 'transparent'
                },

                /* Styles applied to the root element if `variant="query"`. */
                query: {
                    transform: 'rotate(180deg)'
                },

                /* Styles applied to the additional bar element if `variant="buffer"`. */
                dashed: {
                    position: 'absolute',
                    marginTop: 0,
                    height: '100%',
                    width: '100%',
                    animation: '$buffer 3s infinite linear'
                },

                /* Styles applied to the additional bar element if `variant="buffer"` and `color="primary"`. */
                dashedColorPrimary: {
                    backgroundImage: "radial-gradient(".concat(backgroundPrimary, " 0%, ").concat(backgroundPrimary, " 16%, transparent 42%)"),
                    backgroundSize: '10px 10px',
                    backgroundPosition: '0px -23px'
                },

                /* Styles applied to the additional bar element if `variant="buffer"` and `color="secondary"`. */
                dashedColorSecondary: {
                    backgroundImage: "radial-gradient(".concat(backgroundSecondary, " 0%, ").concat(backgroundSecondary, " 16%, transparent 42%)"),
                    backgroundSize: '10px 10px',
                    backgroundPosition: '0px -23px'
                },

                /* Styles applied to the layered bar1 and bar2 elements. */
                bar: {
                    width: '100%',
                    position: 'absolute',
                    left: 0,
                    bottom: 0,
                    top: 0,
                    transition: 'transform 0.2s linear',
                    transformOrigin: 'left'
                },

                /* Styles applied to the bar elements if `color="primary"`; bar2 if `variant` not "buffer". */
                barColorPrimary: {
                    backgroundColor: theme.palette.primary.main
                },

                /* Styles applied to the bar elements if `color="secondary"`; bar2 if `variant` not "buffer". */
                barColorSecondary: {
                    backgroundColor: theme.palette.secondary.main
                },

                /* Styles applied to the bar1 element if `variant="indeterminate or query"`. */
                bar1Indeterminate: {
                    width: 'auto',
                    animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'
                },

                /* Styles applied to the bar1 element if `variant="determinate"`. */
                bar1Determinate: {
                    transition: "transform .".concat(TRANSITION_DURATION, "s linear")
                },

                /* Styles applied to the bar1 element if `variant="buffer"`. */
                bar1Buffer: {
                    zIndex: 1,
                    transition: "transform .".concat(TRANSITION_DURATION, "s linear")
                },

                /* Styles applied to the bar2 element if `variant="indeterminate or query"`. */
                bar2Indeterminate: {
                    width: 'auto',
                    animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'
                },

                /* Styles applied to the bar2 element if `variant="buffer"`. */
                bar2Buffer: {
                    transition: "transform .".concat(TRANSITION_DURATION, "s linear")
                },
                // Legends:
                // || represents the viewport
                // -  represents a light background
                // x  represents a dark background
                '@keyframes indeterminate1': {
                    //  |-----|---x-||-----||-----|
                    '0%': {
                        left: '-35%',
                        right: '100%'
                    },
                    //  |-----|-----||-----||xxxx-|
                    '60%': {
                        left: '100%',
                        right: '-90%'
                    },
                    '100%': {
                        left: '100%',
                        right: '-90%'
                    }
                },
                '@keyframes indeterminate2': {
                    //  |xxxxx|xxxxx||-----||-----|
                    '0%': {
                        left: '-200%',
                        right: '100%'
                    },
                    //  |-----|-----||-----||-x----|
                    '60%': {
                        left: '107%',
                        right: '-8%'
                    },
                    '100%': {
                        left: '107%',
                        right: '-8%'
                    }
                },
                '@keyframes buffer': {
                    '0%': {
                        opacity: 1,
                        backgroundPosition: '0px -23px'
                    },
                    '50%': {
                        opacity: 0,
                        backgroundPosition: '0px -23px'
                    },
                    '100%': {
                        opacity: 1,
                        backgroundPosition: '-200px -23px'
                    }
                }
            };
        };
        /**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */

        var LinearProgress_LinearProgress = compat_module["default"].forwardRef(function LinearProgress(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , value = props.value
              , valueBuffer = props.valueBuffer
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'indeterminate' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "value", "valueBuffer", "variant"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var rootProps = {};
            var inlineStyles = {
                bar1: {},
                bar2: {}
            };

            if (variant === 'determinate' || variant === 'buffer') {
                if (value !== undefined) {
                    rootProps['aria-valuenow'] = Math.round(value);
                    var transform = value - 100;

                    if (theme.direction === 'rtl') {
                        transform = -transform;
                    }

                    inlineStyles.bar1.transform = "translateX(".concat(transform, "%)");
                } else if (false) {}
            }

            if (variant === 'buffer') {
                if (valueBuffer !== undefined) {
                    var _transform = (valueBuffer || 0) - 100;

                    if (theme.direction === 'rtl') {
                        _transform = -_transform;
                    }

                    inlineStyles.bar2.transform = "translateX(".concat(_transform, "%)");
                } else if (false) {}
            }

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], className, {
                    determinate: classes.determinate,
                    indeterminate: classes.indeterminate,
                    buffer: classes.buffer,
                    query: classes.query
                }[variant]),
                role: "progressbar"
            }, rootProps, {
                ref: ref
            }, other), variant === 'buffer' ? compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.dashed, classes["dashedColor".concat(Object(capitalize["a"/* default */
                ])(color))])
            }) : null, compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.bar, classes["barColor".concat(Object(capitalize["a"/* default */
                ])(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {
                    determinate: classes.bar1Determinate,
                    buffer: classes.bar1Buffer
                }[variant]),
                style: inlineStyles.bar1
            }), variant === 'determinate' ? null : compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], classes.bar2Buffer] : classes["barColor".concat(Object(capitalize["a"/* default */
                ])(color))]),
                style: inlineStyles.bar2
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_LinearProgress_LinearProgress = (Object(withStyles["a"/* default */
        ])(LinearProgress_styles, {
            name: 'MuiLinearProgress'
        })(LinearProgress_LinearProgress));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/focusVisible.js
        var utils_focusVisible = __webpack_require__(72);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Link/Link.js

        var Link_styles = {
            /* Styles applied to the root element. */
            root: {},

            /* Styles applied to the root element if `underline="none"`. */
            underlineNone: {
                textDecoration: 'none'
            },

            /* Styles applied to the root element if `underline="hover"`. */
            underlineHover: {
                textDecoration: 'none',
                '&:hover': {
                    textDecoration: 'underline'
                }
            },

            /* Styles applied to the root element if `underline="always"`. */
            underlineAlways: {
                textDecoration: 'underline'
            },
            // Same reset as ButtonBase.root

            /* Styles applied to the root element if `component="button"`. */
            button: {
                position: 'relative',
                WebkitTapHighlightColor: 'transparent',
                backgroundColor: 'transparent',
                // Reset default value
                // We disable the focus ring for mouse, touch and keyboard users.
                outline: 0,
                border: 0,
                margin: 0,
                // Remove the margin in Safari
                borderRadius: 0,
                padding: 0,
                // Remove the padding in Firefox
                cursor: 'pointer',
                userSelect: 'none',
                verticalAlign: 'middle',
                '-moz-appearance': 'none',
                // Reset
                '-webkit-appearance': 'none',
                // Reset
                '&::-moz-focus-inner': {
                    borderStyle: 'none'// Remove Firefox dotted outline.

                },
                '&$focusVisible': {
                    outline: 'auto'
                }
            },

            /* Pseudo-class applied to the root element if the link is keyboard focused. */
            focusVisible: {}
        };
        var Link_Link = compat_module["default"].forwardRef(function Link(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , _props$component = props.component
              , component = _props$component === void 0 ? 'a' : _props$component
              , onBlur = props.onBlur
              , onFocus = props.onFocus
              , TypographyClasses = props.TypographyClasses
              , _props$underline = props.underline
              , underline = _props$underline === void 0 ? 'hover' : _props$underline
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'inherit' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant"]);

            var _useIsFocusVisible = Object(utils_focusVisible["a"/* useIsFocusVisible */
            ])()
              , isFocusVisible = _useIsFocusVisible.isFocusVisible
              , onBlurVisible = _useIsFocusVisible.onBlurVisible
              , focusVisibleRef = _useIsFocusVisible.ref;

            var _React$useState = compat_module["default"].useState(false)
              , focusVisible = _React$useState[0]
              , setFocusVisible = _React$useState[1];

            var handlerRef = Object(useForkRef["a"/* default */
            ])(ref, focusVisibleRef);

            var handleBlur = function handleBlur(event) {
                if (focusVisible) {
                    onBlurVisible();
                    setFocusVisible(false);
                }

                if (onBlur) {
                    onBlur(event);
                }
            };

            var handleFocus = function handleFocus(event) {
                if (isFocusVisible(event)) {
                    setFocusVisible(true);
                }

                if (onFocus) {
                    onFocus(event);
                }
            };

            return compat_module["default"].createElement(Typography["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["underline".concat(Object(capitalize["a"/* default */
                ])(underline))], className, focusVisible && classes.focusVisible, {
                    button: classes.button
                }[component]),
                classes: TypographyClasses,
                color: color,
                component: component,
                onBlur: handleBlur,
                onFocus: handleFocus,
                ref: handlerRef,
                variant: variant
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Link_Link = (Object(withStyles["a"/* default */
        ])(Link_styles, {
            name: 'MuiLink'
        })(Link_Link));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/List/List.js
        var List = __webpack_require__(763);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/ListItem/ListItem.js
        var ListItem = __webpack_require__(758);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/List/ListContext.js
        var ListContext = __webpack_require__(53);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js

        var ListItemAvatar_styles = {
            /* Styles applied to the root element. */
            root: {
                minWidth: 56,
                flexShrink: 0
            },

            /* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */
            alignItemsFlexStart: {
                marginTop: 8
            }
        };
        /**
 * A simple wrapper to apply `List` styles to an `Avatar`.
 */

        var ListItemAvatar_ListItemAvatar = compat_module["default"].forwardRef(function ListItemAvatar(props, ref) {
            var classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className"]);

            var context = compat_module["default"].useContext(ListContext["a"/* default */
            ]);
            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ListItemAvatar_ListItemAvatar = (Object(withStyles["a"/* default */
        ])(ListItemAvatar_styles, {
            name: 'MuiListItemAvatar'
        })(ListItemAvatar_ListItemAvatar));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js

        var ListItemIcon_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    minWidth: 56,
                    color: theme.palette.action.active,
                    flexShrink: 0,
                    display: 'inline-flex'
                },

                /* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */
                alignItemsFlexStart: {
                    marginTop: 8
                }
            };
        };
        /**
 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
 */

        var ListItemIcon_ListItemIcon = compat_module["default"].forwardRef(function ListItemIcon(props, ref) {
            var classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className"]);

            var context = compat_module["default"].useContext(ListContext["a"/* default */
            ]);
            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ListItemIcon_ListItemIcon = (Object(withStyles["a"/* default */
        ])(ListItemIcon_styles, {
            name: 'MuiListItemIcon'
        })(ListItemIcon_ListItemIcon));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js

        var ListItemSecondaryAction_styles = {
            /* Styles applied to the root element. */
            root: {
                position: 'absolute',
                right: 16,
                top: '50%',
                transform: 'translateY(-50%)'
            }
        };
        /**
 * Must be used as the last child of ListItem to function properly.
 */

        var ListItemSecondaryAction_ListItemSecondaryAction = compat_module["default"].forwardRef(function ListItemSecondaryAction(props, ref) {
            var classes = props.classes
              , className = props.className
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        ListItemSecondaryAction_ListItemSecondaryAction.muiName = 'ListItemSecondaryAction';
        /* harmony default export */
        var esm_ListItemSecondaryAction_ListItemSecondaryAction = (Object(withStyles["a"/* default */
        ])(ListItemSecondaryAction_styles, {
            name: 'MuiListItemSecondaryAction'
        })(ListItemSecondaryAction_ListItemSecondaryAction));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js

        var ListItemText_styles = {
            /* Styles applied to the root element. */
            root: {
                flex: '1 1 auto',
                minWidth: 0,
                marginTop: 4,
                marginBottom: 4
            },

            /* Styles applied to the `Typography` components if primary and secondary are set. */
            multiline: {
                marginTop: 6,
                marginBottom: 6
            },

            /* Styles applied to the `Typography` components if dense. */
            dense: {},

            /* Styles applied to the root element if `inset={true}`. */
            inset: {
                paddingLeft: 56
            },

            /* Styles applied to the primary `Typography` component. */
            primary: {},

            /* Styles applied to the secondary `Typography` component. */
            secondary: {}
        };
        var ListItemText_ListItemText = compat_module["default"].forwardRef(function ListItemText(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$disableTypogra = props.disableTypography
              , disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra
              , _props$inset = props.inset
              , inset = _props$inset === void 0 ? false : _props$inset
              , primaryProp = props.primary
              , primaryTypographyProps = props.primaryTypographyProps
              , secondaryProp = props.secondary
              , secondaryTypographyProps = props.secondaryTypographyProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "disableTypography", "inset", "primary", "primaryTypographyProps", "secondary", "secondaryTypographyProps"]);

            var _React$useContext = compat_module["default"].useContext(ListContext["a"/* default */
            ])
              , dense = _React$useContext.dense;

            var primary = primaryProp != null ? primaryProp : children;

            if (primary != null && primary.type !== Typography["a"/* default */
            ] && !disableTypography) {
                primary = compat_module["default"].createElement(Typography["a"/* default */
                ], Object(esm_extends["a"/* default */
                ])({
                    variant: dense ? 'body2' : 'body1',
                    className: classes.primary,
                    component: "span"
                }, primaryTypographyProps), primary);
            }

            var secondary = secondaryProp;

            if (secondary != null && secondary.type !== Typography["a"/* default */
            ] && !disableTypography) {
                secondary = compat_module["default"].createElement(Typography["a"/* default */
                ], Object(esm_extends["a"/* default */
                ])({
                    variant: "body2",
                    className: classes.secondary,
                    color: "textSecondary"
                }, secondaryTypographyProps), secondary);
            }

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),
                ref: ref
            }, other), primary, secondary);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_ListItemText_ListItemText = (Object(withStyles["a"/* default */
        ])(ListItemText_styles, {
            name: 'MuiListItemText'
        })(ListItemText_ListItemText));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js
        var ListSubheader = __webpack_require__(363);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Menu/Menu.js
        var Menu = __webpack_require__(428);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js
        var MenuItem = __webpack_require__(364);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/MenuList/MenuList.js
        var MenuList = __webpack_require__(762);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/MobileStepper/MobileStepper.js

        var MobileStepper_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'flex',
                    flexDirection: 'row',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    background: theme.palette.background.default,
                    padding: 8
                },

                /* Styles applied to the root element if `position="bottom"`. */
                positionBottom: {
                    position: 'fixed',
                    bottom: 0,
                    left: 0,
                    right: 0,
                    zIndex: theme.zIndex.mobileStepper
                },

                /* Styles applied to the root element if `position="top"`. */
                positionTop: {
                    position: 'fixed',
                    top: 0,
                    left: 0,
                    right: 0,
                    zIndex: theme.zIndex.mobileStepper
                },

                /* Styles applied to the root element if `position="static"`. */
                positionStatic: {},

                /* Styles applied to the dots container if `variant="dots"`. */
                dots: {
                    display: 'flex',
                    flexDirection: 'row'
                },

                /* Styles applied to each dot if `variant="dots"`. */
                dot: {
                    backgroundColor: theme.palette.action.disabled,
                    borderRadius: '50%',
                    width: 8,
                    height: 8,
                    margin: '0 2px'
                },

                /* Styles applied to a dot if `variant="dots"` and this is the active step. */
                dotActive: {
                    backgroundColor: theme.palette.primary.main
                },

                /* Styles applied to the Linear Progress component if `variant="progress"`. */
                progress: {
                    width: '50%'
                }
            };
        };
        var MobileStepper_MobileStepper = compat_module["default"].forwardRef(function MobileStepper(props, ref) {
            var _props$activeStep = props.activeStep
              , activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep
              , backButton = props.backButton
              , classes = props.classes
              , className = props.className
              , LinearProgressProps = props.LinearProgressProps
              , nextButton = props.nextButton
              , _props$position = props.position
              , position = _props$position === void 0 ? 'bottom' : _props$position
              , steps = props.steps
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'dots' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["activeStep", "backButton", "classes", "className", "LinearProgressProps", "nextButton", "position", "steps", "variant"]);

            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                square: true,
                elevation: 0,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["position".concat(Object(capitalize["a"/* default */
                ])(position))], className),
                ref: ref
            }, other), backButton, variant === 'text' && compat_module["default"].createElement(compat_module["default"].Fragment, null, activeStep + 1, " / ", steps), variant === 'dots' && compat_module["default"].createElement("div", {
                className: classes.dots
            }, Object(toConsumableArray["a"/* default */
            ])(new Array(steps)).map(function(_, index) {
                return compat_module["default"].createElement("div", {
                    key: index,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.dot, index === activeStep && classes.dotActive)
                });
            })), variant === 'progress' && compat_module["default"].createElement(esm_LinearProgress_LinearProgress, Object(esm_extends["a"/* default */
            ])({
                className: classes.progress,
                variant: "determinate",
                value: Math.ceil(activeStep / (steps - 1) * 100)
            }, LinearProgressProps)), nextButton);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_MobileStepper_MobileStepper = (Object(withStyles["a"/* default */
        ])(MobileStepper_styles, {
            name: 'MuiMobileStepper'
        })(MobileStepper_MobileStepper));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Modal/index.js
        var esm_Modal = __webpack_require__(91);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/NativeSelect/NativeSelect.js
        var NativeSelect = __webpack_require__(427);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/NoSsr/NoSsr.js
        var NoSsr = __webpack_require__(777);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js + 1 modules
        var OutlinedInput = __webpack_require__(780);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Popover/Popover.js
        var Popover = __webpack_require__(759);

        // EXTERNAL MODULE: ../node_modules/popper.js/dist/esm/popper.js
        var esm_popper = __webpack_require__(430);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Portal/Portal.js
        var Portal = __webpack_require__(779);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/createChainedFunction.js
        var createChainedFunction = __webpack_require__(47);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Popper/Popper.js

        function flipPlacement(placement, theme) {
            var direction = theme && theme.direction || 'ltr';

            if (direction === 'ltr') {
                return placement;
            }

            switch (placement) {
            case 'bottom-end':
                return 'bottom-start';

            case 'bottom-start':
                return 'bottom-end';

            case 'top-end':
                return 'top-start';

            case 'top-start':
                return 'top-end';

            default:
                return placement;
            }
        }

        function getAnchorEl(anchorEl) {
            return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
        }

        var Popper_useEnhancedEffect = typeof window !== 'undefined' ? compat_module["default"].useLayoutEffect : compat_module["default"].useEffect;
        var defaultPopperOptions = {};
        /**
 * Poppers rely on the 3rd party library [Popper.js](https://github.com/FezVrasta/popper.js) for positioning.
 */

        var Popper_Popper = compat_module["default"].forwardRef(function Popper(props, ref) {
            var anchorEl = props.anchorEl
              , children = props.children
              , container = props.container
              , _props$disablePortal = props.disablePortal
              , disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal
              , _props$keepMounted = props.keepMounted
              , keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted
              , modifiers = props.modifiers
              , open = props.open
              , _props$placement = props.placement
              , initialPlacement = _props$placement === void 0 ? 'bottom' : _props$placement
              , _props$popperOptions = props.popperOptions
              , popperOptions = _props$popperOptions === void 0 ? defaultPopperOptions : _props$popperOptions
              , popperRefProp = props.popperRef
              , _props$transition = props.transition
              , transition = _props$transition === void 0 ? false : _props$transition
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["anchorEl", "children", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition"]);

            var tooltipRef = compat_module["default"].useRef(null);
            var ownRef = Object(useForkRef["a"/* default */
            ])(tooltipRef, ref);
            var popperRef = compat_module["default"].useRef(null);
            var handlePopperRef = Object(useForkRef["a"/* default */
            ])(popperRef, popperRefProp);
            var handlePopperRefRef = compat_module["default"].useRef(handlePopperRef);
            Popper_useEnhancedEffect(function() {
                handlePopperRefRef.current = handlePopperRef;
            }, [handlePopperRef]);
            compat_module["default"].useImperativeHandle(popperRefProp, function() {
                return popperRef.current;
            }, []);

            var _React$useState = compat_module["default"].useState(true)
              , exited = _React$useState[0]
              , setExited = _React$useState[1];

            var theme = Object(useTheme_useTheme["a"/* default */
            ])();
            var rtlPlacement = flipPlacement(initialPlacement, theme);
            /**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */

            var _React$useState2 = compat_module["default"].useState(rtlPlacement)
              , placement = _React$useState2[0]
              , setPlacement = _React$useState2[1];

            compat_module["default"].useEffect(function() {
                if (popperRef.current) {
                    popperRef.current.update();
                }
            });
            var handleOpen = compat_module["default"].useCallback(function() {
                if (!tooltipRef.current || !anchorEl || !open) {
                    return;
                }

                if (popperRef.current) {
                    popperRef.current.destroy();
                    handlePopperRefRef.current(null);
                }

                var handlePopperUpdate = function handlePopperUpdate(data) {
                    setPlacement(data.placement);
                };

                var resolvedAnchorEl = getAnchorEl(anchorEl);

                if (false) {
                    var box, containerWindow;
                }

                var popper = new esm_popper["a"/* default */
                ](getAnchorEl(anchorEl),tooltipRef.current,Object(esm_extends["a"/* default */
                ])({
                    placement: rtlPlacement
                }, popperOptions, {
                    modifiers: Object(esm_extends["a"/* default */
                    ])({}, disablePortal ? {} : {
                        // It's using scrollParent by default, we can use the viewport when using a portal.
                        preventOverflow: {
                            boundariesElement: 'window'
                        }
                    }, {}, modifiers, {}, popperOptions.modifiers),
                    // We could have been using a custom modifier like react-popper is doing.
                    // But it seems this is the best public API for this use case.
                    onCreate: Object(createChainedFunction["a"/* default */
                    ])(handlePopperUpdate, popperOptions.onCreate),
                    onUpdate: Object(createChainedFunction["a"/* default */
                    ])(handlePopperUpdate, popperOptions.onUpdate)
                }));
                handlePopperRefRef.current(popper);
            }, [anchorEl, disablePortal, modifiers, open, rtlPlacement, popperOptions]);
            var handleRef = compat_module["default"].useCallback(function(node) {
                Object(setRef["a"/* default */
                ])(ownRef, node);
                handleOpen();
            }, [ownRef, handleOpen]);

            var handleEnter = function handleEnter() {
                setExited(false);
            };

            var handleClose = function handleClose() {
                if (!popperRef.current) {
                    return;
                }

                popperRef.current.destroy();
                handlePopperRefRef.current(null);
            };

            var handleExited = function handleExited() {
                setExited(true);
                handleClose();
            };

            compat_module["default"].useEffect(function() {
                // Let's update the popper position.
                handleOpen();
            }, [handleOpen]);
            compat_module["default"].useEffect(function() {
                return function() {
                    handleClose();
                }
                ;
            }, []);
            compat_module["default"].useEffect(function() {
                if (!open && !transition) {
                    // Otherwise handleExited will call this.
                    handleClose();
                }
            }, [open, transition]);

            if (!keepMounted && !open && (!transition || exited)) {
                return null;
            }

            var childProps = {
                placement: placement
            };

            if (transition) {
                childProps.TransitionProps = {
                    in: open,
                    onEnter: handleEnter,
                    onExited: handleExited
                };
            }

            return compat_module["default"].createElement(Portal["a"/* default */
            ], {
                disablePortal: disablePortal,
                container: container
            }, compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                ref: handleRef,
                role: "tooltip"
            }, other, {
                style: Object(esm_extends["a"/* default */
                ])({
                    // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
                    position: 'fixed',
                    // Fix Popper.js display issue
                    top: 0,
                    left: 0
                }, other.style)
            }), typeof children === 'function' ? children(childProps) : children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Popper_Popper = (Popper_Popper);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Radio/Radio.js + 3 modules
        var Radio = __webpack_require__(424);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js
        var RadioGroup = __webpack_require__(332);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/RadioGroup/index.js
        var esm_RadioGroup = __webpack_require__(142);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/classCallCheck.js
        var classCallCheck = __webpack_require__(106);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/createClass.js
        var createClass = __webpack_require__(65);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
        var assertThisInitialized = __webpack_require__(129);

        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js

        function _possibleConstructorReturn(self, call) {
            if (call && (Object(esm_typeof["a"/* default */
            ])(call) === "object" || typeof call === "function")) {
                return call;
            }

            return Object(assertThisInitialized["a"/* default */
            ])(self);
        }
        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
        function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
            }
            ;
            return _getPrototypeOf(o);
        }
        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
        function _setPrototypeOf(o, p) {
            _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
                o.__proto__ = p;
                return o;
            }
            ;

            return _setPrototypeOf(o, p);
        }
        // CONCATENATED MODULE: ../node_modules/@babel/runtime/helpers/esm/inherits.js

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function");
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass)
                _setPrototypeOf(subClass, superClass);
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/RootRef/RootRef.js

        /**
 * ⚠️⚠️⚠️
 * If you want the DOM element of a Material-UI component check out
 * [FAQ: How can I access the DOM element?](/getting-started/faq/#how-can-i-access-the-dom-element)
 * first.
 *
 * This component uses `findDOMNode` which is deprecated in React.StrictMode.
 *
 * Helper component to allow attaching a ref to a
 * wrapped element to access the underlying DOM element.
 *
 * It's highly inspired by https://github.com/facebook/react/issues/11401#issuecomment-340543801.
 * For example:
 * ```jsx
 * import React from 'react';
 * import RootRef from '@material-ui/core/RootRef';
 *
 * function MyComponent() {
 *   const domRef = React.useRef();
 *
 *   React.useEffect(() => {
 *     console.log(domRef.current); // DOM node
 *   }, []);
 *
 *   return (
 *     <RootRef rootRef={domRef}>
 *       <SomeChildComponent />
 *     </RootRef>
 *   );
 * }
 * ```
 */

        var RootRef_RootRef = /*#__PURE__*/
        function(_React$Component) {
            _inherits(RootRef, _React$Component);

            function RootRef() {
                Object(classCallCheck["a"/* default */
                ])(this, RootRef);

                return _possibleConstructorReturn(this, _getPrototypeOf(RootRef).apply(this, arguments));
            }

            Object(createClass["a"/* default */
            ])(RootRef, [{
                key: "componentDidMount",
                value: function componentDidMount() {
                    this.ref = compat_module["default"].findDOMNode(this);
                    Object(setRef["a"/* default */
                    ])(this.props.rootRef, this.ref);
                }
            }, {
                key: "componentDidUpdate",
                value: function componentDidUpdate(prevProps) {
                    var ref = compat_module["default"].findDOMNode(this);

                    if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {
                        if (prevProps.rootRef !== this.props.rootRef) {
                            Object(setRef["a"/* default */
                            ])(prevProps.rootRef, null);
                        }

                        this.ref = ref;
                        Object(setRef["a"/* default */
                        ])(this.props.rootRef, this.ref);
                    }
                }
            }, {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                    this.ref = null;
                    Object(setRef["a"/* default */
                    ])(this.props.rootRef, null);
                }
            }, {
                key: "render",
                value: function render() {
                    return this.props.children;
                }
            }]);

            return RootRef;
        }(compat_module["default"].Component);

        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        var esm_RootRef_RootRef = (RootRef_RootRef);
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Select/Select.js + 1 modules
        var Select = __webpack_require__(426);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/Slider/Slider.js + 1 modules
        var Slider = __webpack_require__(425);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js

        var SnackbarContent_styles = function styles(theme) {
            var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;
            var backgroundColor = Object(colorManipulator["c"/* emphasize */
            ])(theme.palette.background.default, emphasis);
            return {
                /* Styles applied to the root element. */
                root: Object(esm_extends["a"/* default */
                ])({}, theme.typography.body2, Object(defineProperty["a"/* default */
                ])({
                    color: theme.palette.getContrastText(backgroundColor),
                    backgroundColor: backgroundColor,
                    display: 'flex',
                    alignItems: 'center',
                    flexWrap: 'wrap',
                    padding: '6px 16px',
                    borderRadius: theme.shape.borderRadius,
                    flexGrow: 1
                }, theme.breakpoints.up('sm'), {
                    flexGrow: 'initial',
                    minWidth: 288
                })),

                /* Styles applied to the message wrapper element. */
                message: {
                    padding: '8px 0'
                },

                /* Styles applied to the action wrapper element if `action` is provided. */
                action: {
                    display: 'flex',
                    alignItems: 'center',
                    marginLeft: 'auto',
                    paddingLeft: 16,
                    marginRight: -8
                }
            };
        };
        var SnackbarContent_SnackbarContent = compat_module["default"].forwardRef(function SnackbarContent(props, ref) {
            var action = props.action
              , classes = props.classes
              , className = props.className
              , message = props.message
              , _props$role = props.role
              , role = _props$role === void 0 ? 'alert' : _props$role
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["action", "classes", "className", "message", "role"]);

            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                role: role,
                square: true,
                elevation: 6,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), compat_module["default"].createElement("div", {
                className: classes.message
            }, message), action ? compat_module["default"].createElement("div", {
                className: classes.action
            }, action) : null);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_SnackbarContent_SnackbarContent = (Object(withStyles["a"/* default */
        ])(SnackbarContent_styles, {
            name: 'MuiSnackbarContent'
        })(SnackbarContent_SnackbarContent));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js

        var Snackbar_styles = function styles(theme) {
            var top1 = {
                top: 8
            };
            var bottom1 = {
                bottom: 8
            };
            var right = {
                justifyContent: 'flex-end'
            };
            var left = {
                justifyContent: 'flex-start'
            };
            var top3 = {
                top: 24
            };
            var bottom3 = {
                bottom: 24
            };
            var right3 = {
                right: 24
            };
            var left3 = {
                left: 24
            };
            var center = {
                left: '50%',
                right: 'auto',
                transform: 'translateX(-50%)'
            };
            return {
                /* Styles applied to the root element. */
                root: {
                    zIndex: theme.zIndex.snackbar,
                    position: 'fixed',
                    display: 'flex',
                    left: 8,
                    right: 8,
                    justifyContent: 'center',
                    alignItems: 'center'
                },

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */
                anchorOriginTopCenter: Object(esm_extends["a"/* default */
                ])({}, top1, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({}, top3, {}, center))),

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */
                anchorOriginBottomCenter: Object(esm_extends["a"/* default */
                ])({}, bottom1, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({}, bottom3, {}, center))),

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */
                anchorOriginTopRight: Object(esm_extends["a"/* default */
                ])({}, top1, {}, right, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({
                    left: 'auto'
                }, top3, {}, right3))),

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */
                anchorOriginBottomRight: Object(esm_extends["a"/* default */
                ])({}, bottom1, {}, right, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({
                    left: 'auto'
                }, bottom3, {}, right3))),

                /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */
                anchorOriginTopLeft: Object(esm_extends["a"/* default */
                ])({}, top1, {}, left, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({
                    right: 'auto'
                }, top3, {}, left3))),

                /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */
                anchorOriginBottomLeft: Object(esm_extends["a"/* default */
                ])({}, bottom1, {}, left, Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.up('sm'), Object(esm_extends["a"/* default */
                ])({
                    right: 'auto'
                }, bottom3, {}, left3)))
            };
        };
        var Snackbar_Snackbar = compat_module["default"].forwardRef(function Snackbar(props, ref) {
            var action = props.action
              , _props$anchorOrigin = props.anchorOrigin;
            _props$anchorOrigin = _props$anchorOrigin === void 0 ? {
                vertical: 'bottom',
                horizontal: 'center'
            } : _props$anchorOrigin;

            var vertical = _props$anchorOrigin.vertical
              , horizontal = _props$anchorOrigin.horizontal
              , _props$autoHideDurati = props.autoHideDuration
              , autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati
              , children = props.children
              , classes = props.classes
              , className = props.className
              , ClickAwayListenerProps = props.ClickAwayListenerProps
              , ContentProps = props.ContentProps
              , _props$disableWindowB = props.disableWindowBlurListener
              , disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB
              , message = props.message
              , onClose = props.onClose
              , onEnter = props.onEnter
              , onEntered = props.onEntered
              , onEntering = props.onEntering
              , onExit = props.onExit
              , onExited = props.onExited
              , onExiting = props.onExiting
              , onMouseEnter = props.onMouseEnter
              , onMouseLeave = props.onMouseLeave
              , open = props.open
              , resumeHideDuration = props.resumeHideDuration
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? Grow["a"/* default */
            ] : _props$TransitionComp
              , _props$transitionDura = props.transitionDuration
              , transitionDuration = _props$transitionDura === void 0 ? {
                enter: transitions["b"/* duration */
                ].enteringScreen,
                exit: transitions["b"/* duration */
                ].leavingScreen
            } : _props$transitionDura
              , TransitionProps = props.TransitionProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["action", "anchorOrigin", "autoHideDuration", "children", "classes", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onClose", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"]);

            var timerAutoHide = compat_module["default"].useRef();

            var _React$useState = compat_module["default"].useState(true)
              , exited = _React$useState[0]
              , setExited = _React$useState[1];

            var handleClose = Object(useEventCallback["a"/* default */
            ])(function() {
                if (onClose) {
                    onClose.apply(void 0, arguments);
                }
            });
            var setAutoHideTimer = Object(useEventCallback["a"/* default */
            ])(function(autoHideDurationParam) {
                if (!onClose || autoHideDurationParam == null) {
                    return;
                }

                clearTimeout(timerAutoHide.current);
                timerAutoHide.current = setTimeout(function() {
                    handleClose(null, 'timeout');
                }, autoHideDurationParam);
            });
            compat_module["default"].useEffect(function() {
                if (open) {
                    setAutoHideTimer(autoHideDuration);
                }

                return function() {
                    clearTimeout(timerAutoHide.current);
                }
                ;
            }, [open, autoHideDuration, setAutoHideTimer]);
            // Pause the timer when the user is interacting with the Snackbar
            // or when the user hide the window.

            var handlePause = function handlePause() {
                clearTimeout(timerAutoHide.current);
            };
            // Restart the timer when the user is no longer interacting with the Snackbar
            // or when the window is shown back.

            var handleResume = compat_module["default"].useCallback(function() {
                if (autoHideDuration != null) {
                    setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);
                }
            }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);

            var handleMouseEnter = function handleMouseEnter(event) {
                if (onMouseEnter) {
                    onMouseEnter(event);
                }

                handlePause();
            };

            var handleMouseLeave = function handleMouseLeave(event) {
                if (onMouseLeave) {
                    onMouseLeave(event);
                }

                handleResume();
            };

            var handleClickAway = function handleClickAway(event) {
                if (onClose) {
                    onClose(event, 'clickaway');
                }
            };

            var handleExited = function handleExited() {
                setExited(true);
            };

            var handleEnter = function handleEnter() {
                setExited(false);
            };

            compat_module["default"].useEffect(function() {
                if (!disableWindowBlurListener && open) {
                    window.addEventListener('focus', handleResume);
                    window.addEventListener('blur', handlePause);
                    return function() {
                        window.removeEventListener('focus', handleResume);
                        window.removeEventListener('blur', handlePause);
                    }
                    ;
                }

                return undefined;
            }, [disableWindowBlurListener, handleResume, open]);
            // So we only render active snackbars.

            if (!open && exited) {
                return null;
            }

            return compat_module["default"].createElement(esm_ClickAwayListener_ClickAwayListener, Object(esm_extends["a"/* default */
            ])({
                onClickAway: handleClickAway
            }, ClickAwayListenerProps), compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["anchorOrigin".concat(Object(capitalize["a"/* default */
                ])(vertical)).concat(Object(capitalize["a"/* default */
                ])(horizontal))], className),
                onMouseEnter: handleMouseEnter,
                onMouseLeave: handleMouseLeave,
                ref: ref
            }, other), compat_module["default"].createElement(TransitionComponent, Object(esm_extends["a"/* default */
            ])({
                appear: true,
                in: open,
                onEnter: Object(createChainedFunction["a"/* default */
                ])(handleEnter, onEnter),
                onEntered: onEntered,
                onEntering: onEntering,
                onExit: onExit,
                onExited: Object(createChainedFunction["a"/* default */
                ])(handleExited, onExited),
                onExiting: onExiting,
                timeout: transitionDuration,
                direction: vertical === 'top' ? 'down' : 'up'
            }, TransitionProps), children || compat_module["default"].createElement(esm_SnackbarContent_SnackbarContent, Object(esm_extends["a"/* default */
            ])({
                message: message,
                action: action
            }, ContentProps)))));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Snackbar_Snackbar = (Object(withStyles["a"/* default */
        ])(Snackbar_styles, {
            flip: false,
            name: 'MuiSnackbar'
        })(Snackbar_Snackbar));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Step/Step.js

        var Step_styles = {
            /* Styles applied to the root element. */
            root: {},

            /* Styles applied to the root element if `orientation="horizontal"`. */
            horizontal: {
                paddingLeft: 8,
                paddingRight: 8
            },

            /* Styles applied to the root element if `orientation="vertical"`. */
            vertical: {},

            /* Styles applied to the root element if `alternativeLabel={true}`. */
            alternativeLabel: {
                flex: 1,
                position: 'relative'
            },

            /* Pseudo-class applied to the root element if `completed={true}`. */
            completed: {}
        };
        var Step_Step = compat_module["default"].forwardRef(function Step(props, ref) {
            var _props$active = props.active
              , active = _props$active === void 0 ? false : _props$active
              , alternativeLabel = props.alternativeLabel
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$completed = props.completed
              , completed = _props$completed === void 0 ? false : _props$completed
              , connector = props.connector
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$expanded = props.expanded
              , expanded = _props$expanded === void 0 ? false : _props$expanded
              , index = props.index
              , last = props.last
              , orientation = props.orientation
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "connector", "disabled", "expanded", "index", "last", "orientation"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),
                ref: ref
            }, other), connector && alternativeLabel && index !== 0 && compat_module["default"].cloneElement(connector, {
                orientation: orientation,
                alternativeLabel: alternativeLabel,
                index: index,
                active: active,
                completed: completed,
                disabled: disabled
            }), compat_module["default"].Children.map(children, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                return compat_module["default"].cloneElement(child, Object(esm_extends["a"/* default */
                ])({
                    active: active,
                    alternativeLabel: alternativeLabel,
                    completed: completed,
                    disabled: disabled,
                    expanded: expanded,
                    last: last,
                    icon: index + 1,
                    orientation: orientation
                }, child.props));
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Step_Step = (Object(withStyles["a"/* default */
        ])(Step_styles, {
            name: 'MuiStep'
        })(Step_Step));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var CheckCircle = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z"
        }), 'CheckCircle'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var Warning = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
        }), 'Warning'));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js
        var SvgIcon = __webpack_require__(434);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js

        var StepIcon_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'block',
                    color: theme.palette.text.disabled,
                    '&$completed': {
                        color: theme.palette.primary.main
                    },
                    '&$active': {
                        color: theme.palette.primary.main
                    },
                    '&$error': {
                        color: theme.palette.error.main
                    }
                },

                /* Styles applied to the SVG text element. */
                text: {
                    fill: theme.palette.primary.contrastText,
                    fontSize: theme.typography.caption.fontSize,
                    fontFamily: theme.typography.fontFamily
                },

                /* Pseudo-class applied to the root element if `active={true}`. */
                active: {},

                /* Pseudo-class applied to the root element if `completed={true}`. */
                completed: {},

                /* Pseudo-class applied to the root element if `error={true}`. */
                error: {}
            };
        };

        var StepIcon_ref = compat_module["default"].createElement("circle", {
            cx: "12",
            cy: "12",
            r: "12"
        });

        var StepIcon_StepIcon = compat_module["default"].forwardRef(function StepIcon(props, ref) {
            var _props$completed = props.completed
              , completed = _props$completed === void 0 ? false : _props$completed
              , icon = props.icon
              , _props$active = props.active
              , active = _props$active === void 0 ? false : _props$active
              , _props$error = props.error
              , error = _props$error === void 0 ? false : _props$error
              , classes = props.classes;

            if (typeof icon === 'number' || typeof icon === 'string') {
                var className = Object(clsx_m["a"/* default */
                ])(classes.root, active && classes.active, error && classes.error, completed && classes.completed);

                if (error) {
                    return compat_module["default"].createElement(Warning, {
                        className: className,
                        ref: ref
                    });
                }

                if (completed) {
                    return compat_module["default"].createElement(CheckCircle, {
                        className: className,
                        ref: ref
                    });
                }

                return compat_module["default"].createElement(SvgIcon["a"/* default */
                ], {
                    className: className,
                    ref: ref
                }, StepIcon_ref, compat_module["default"].createElement("text", {
                    className: classes.text,
                    x: "12",
                    y: "16",
                    textAnchor: "middle"
                }, icon));
            }

            return icon;
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_StepIcon_StepIcon = (Object(withStyles["a"/* default */
        ])(StepIcon_styles, {
            name: 'MuiStepIcon'
        })(StepIcon_StepIcon));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js

        var StepLabel_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'flex',
                    alignItems: 'center',
                    '&$alternativeLabel': {
                        flexDirection: 'column'
                    },
                    '&$disabled': {
                        cursor: 'default'
                    }
                },

                /* Styles applied to the root element if `orientation="horizontal". */
                horizontal: {},

                /* Styles applied to the root element if `orientation="vertical". */
                vertical: {},

                /* Styles applied to the `Typography` component which wraps `children`. */
                label: {
                    color: theme.palette.text.secondary,
                    '&$active': {
                        color: theme.palette.text.primary,
                        fontWeight: 500
                    },
                    '&$completed': {
                        color: theme.palette.text.primary,
                        fontWeight: 500
                    },
                    '&$alternativeLabel': {
                        textAlign: 'center',
                        marginTop: 16
                    },
                    '&$error': {
                        color: theme.palette.error.main
                    }
                },

                /* Pseudo-class applied to the `Typography` component if `active={true}`. */
                active: {},

                /* Pseudo-class applied to the `Typography` component if `completed={true}`. */
                completed: {},

                /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */
                error: {},

                /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the `icon` container element. */
                iconContainer: {
                    flexShrink: 0,
                    // Fix IE 11 issue
                    display: 'flex',
                    paddingRight: 8,
                    '&$alternativeLabel': {
                        paddingRight: 0
                    }
                },

                /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */
                alternativeLabel: {},

                /* Styles applied to the container element which wraps `Typography` and `optional`. */
                labelContainer: {
                    width: '100%'
                }
            };
        };
        var StepLabel_StepLabel = compat_module["default"].forwardRef(function StepLabel(props, ref) {
            var _props$active = props.active
              , active = _props$active === void 0 ? false : _props$active
              , _props$alternativeLab = props.alternativeLabel
              , alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$completed = props.completed
              , completed = _props$completed === void 0 ? false : _props$completed
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$error = props.error
              , error = _props$error === void 0 ? false : _props$error
              , expanded = props.expanded
              , icon = props.icon
              , last = props.last
              , optional = props.optional
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , StepIconComponentProp = props.StepIconComponent
              , StepIconProps = props.StepIconProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "disabled", "error", "expanded", "icon", "last", "optional", "orientation", "StepIconComponent", "StepIconProps"]);

            var StepIconComponent = StepIconComponentProp;

            if (icon && !StepIconComponent) {
                StepIconComponent = esm_StepIcon_StepIcon;
            }

            return compat_module["default"].createElement("span", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),
                ref: ref
            }, other), icon || StepIconComponent ? compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.iconContainer, alternativeLabel && classes.alternativeLabel)
            }, compat_module["default"].createElement(StepIconComponent, Object(esm_extends["a"/* default */
            ])({
                completed: completed,
                active: active,
                error: error,
                icon: icon
            }, StepIconProps))) : null, compat_module["default"].createElement("span", {
                className: classes.labelContainer
            }, compat_module["default"].createElement(Typography["a"/* default */
            ], {
                variant: "body2",
                component: "span",
                className: Object(clsx_m["a"/* default */
                ])(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error),
                display: "block"
            }, children), optional));
        });
        false ? undefined : void 0;
        StepLabel_StepLabel.muiName = 'StepLabel';
        /* harmony default export */
        var esm_StepLabel_StepLabel = (Object(withStyles["a"/* default */
        ])(StepLabel_styles, {
            name: 'MuiStepLabel'
        })(StepLabel_StepLabel));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/StepButton/StepButton.js

        var StepButton_styles = {
            /* Styles applied to the root element. */
            root: {
                width: '100%',
                padding: '24px 16px',
                margin: '-24px -16px',
                boxSizing: 'content-box'
            },

            /* Styles applied to the root element if `orientation="horizontal"`. */
            horizontal: {},

            /* Styles applied to the root element if `orientation="vertical"`. */
            vertical: {
                justifyContent: 'flex-start',
                padding: '8px',
                margin: '-8px'
            },

            /* Styles applied to the `ButtonBase` touch-ripple. */
            touchRipple: {
                color: 'rgba(0, 0, 0, 0.3)'
            }
        };
        var StepButton_StepButton = compat_module["default"].forwardRef(function StepButton(props, ref) {
            var active = props.active
              , alternativeLabel = props.alternativeLabel
              , children = props.children
              , classes = props.classes
              , className = props.className
              , completed = props.completed
              , disabled = props.disabled
              , expanded = props.expanded
              , icon = props.icon
              , last = props.last
              , optional = props.optional
              , orientation = props.orientation
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "disabled", "expanded", "icon", "last", "optional", "orientation"]);

            var childProps = {
                active: active,
                alternativeLabel: alternativeLabel,
                completed: completed,
                disabled: disabled,
                icon: icon,
                optional: optional,
                orientation: orientation
            };
            var child = Object(isMuiElement["a"/* default */
            ])(children, ['StepLabel']) ? compat_module["default"].cloneElement(children, childProps) : compat_module["default"].createElement(esm_StepLabel_StepLabel, childProps, children);
            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                disabled: disabled,
                TouchRippleProps: {
                    className: classes.touchRipple
                },
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[orientation], className),
                ref: ref
            }, other), child);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_StepButton_StepButton = (Object(withStyles["a"/* default */
        ])(StepButton_styles, {
            name: 'MuiStepButton'
        })(StepButton_StepButton));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js

        var StepConnector_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    flex: '1 1 auto'
                },

                /* Styles applied to the root element if `orientation="horizontal"`. */
                horizontal: {},

                /* Styles applied to the root element if `orientation="vertical"`. */
                vertical: {
                    marginLeft: 12,
                    // half icon
                    padding: '0 0 8px'
                },

                /* Styles applied to the root element if `alternativeLabel={true}`. */
                alternativeLabel: {
                    position: 'absolute',
                    top: 8 + 4,
                    left: 'calc(-50% + 20px)',
                    right: 'calc(50% + 20px)'
                },

                /* Pseudo-class applied to the root element if `active={true}`. */
                active: {},

                /* Pseudo-class applied to the root element if `completed={true}`. */
                completed: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the line element. */
                line: {
                    display: 'block',
                    borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]
                },

                /* Styles applied to the root element if `orientation="horizontal"`. */
                lineHorizontal: {
                    borderTopStyle: 'solid',
                    borderTopWidth: 1
                },

                /* Styles applied to the root element if `orientation="vertical"`. */
                lineVertical: {
                    borderLeftStyle: 'solid',
                    borderLeftWidth: 1,
                    minHeight: 24
                }
            };
        };
        var StepConnector_StepConnector = compat_module["default"].forwardRef(function StepConnector(props, ref) {
            var active = props.active
              , _props$alternativeLab = props.alternativeLabel
              , alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab
              , classes = props.classes
              , className = props.className
              , completed = props.completed
              , disabled = props.disabled
              , index = props.index
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "alternativeLabel", "classes", "className", "completed", "disabled", "index", "orientation"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),
                ref: ref
            }, other), compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.line, orientation === 'vertical' ? classes.lineVertical : classes.lineHorizontal)
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_StepConnector_StepConnector = (Object(withStyles["a"/* default */
        ])(StepConnector_styles, {
            name: 'MuiStepConnector'
        })(StepConnector_StepConnector));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/StepContent/StepContent.js

        var StepContent_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    marginTop: 8,
                    marginLeft: 12,
                    // half icon
                    paddingLeft: 8 + 12,
                    // margin + half icon
                    paddingRight: 8,
                    borderLeft: "1px solid ".concat(theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600])
                },

                /* Styles applied to the root element if `last={true}` (controlled by `Step`). */
                last: {
                    borderLeft: 'none'
                },

                /* Styles applied to the Transition component. */
                transition: {}
            };
        };
        var StepContent_StepContent = compat_module["default"].forwardRef(function StepContent(props, ref) {
            var active = props.active
              , alternativeLabel = props.alternativeLabel
              , children = props.children
              , classes = props.classes
              , className = props.className
              , completed = props.completed
              , expanded = props.expanded
              , last = props.last
              , optional = props.optional
              , orientation = props.orientation
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? esm_Collapse_Collapse : _props$TransitionComp
              , _props$transitionDura = props.transitionDuration
              , transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura
              , TransitionProps = props.TransitionProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "alternativeLabel", "children", "classes", "className", "completed", "expanded", "last", "optional", "orientation", "TransitionComponent", "transitionDuration", "TransitionProps"]);

            if (false) {}

            var transitionDuration = transitionDurationProp;

            if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
                transitionDuration = undefined;
            }

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, last && classes.last),
                ref: ref
            }, other), compat_module["default"].createElement(TransitionComponent, Object(esm_extends["a"/* default */
            ])({
                in: active || expanded,
                className: classes.transition,
                timeout: transitionDuration,
                unmountOnExit: true
            }, TransitionProps), children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_StepContent_StepContent = (Object(withStyles["a"/* default */
        ])(StepContent_styles, {
            name: 'MuiStepContent'
        })(StepContent_StepContent));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Stepper/Stepper.js

        var Stepper_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                padding: 24
            },

            /* Styles applied to the root element if `orientation="horizontal"`. */
            horizontal: {
                flexDirection: 'row',
                alignItems: 'center'
            },

            /* Styles applied to the root element if `orientation="vertical"`. */
            vertical: {
                flexDirection: 'column'
            },

            /* Styles applied to the root element if `alternativeLabel={true}`. */
            alternativeLabel: {
                alignItems: 'flex-start'
            }
        };
        var defaultConnector = compat_module["default"].createElement(esm_StepConnector_StepConnector, null);
        var Stepper_Stepper = compat_module["default"].forwardRef(function Stepper(props, ref) {
            var _props$activeStep = props.activeStep
              , activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep
              , _props$alternativeLab = props.alternativeLabel
              , alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$connector = props.connector
              , connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector
              , _props$nonLinear = props.nonLinear
              , nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["activeStep", "alternativeLabel", "children", "classes", "className", "connector", "nonLinear", "orientation"]);

            var connector = compat_module["default"].isValidElement(connectorProp) ? compat_module["default"].cloneElement(connectorProp, {
                orientation: orientation
            }) : null;
            var childrenArray = compat_module["default"].Children.toArray(children);
            var steps = childrenArray.map(function(step, index) {
                var controlProps = {
                    alternativeLabel: alternativeLabel,
                    connector: connectorProp,
                    last: index + 1 === childrenArray.length,
                    orientation: orientation
                };
                var state = {
                    index: index,
                    active: false,
                    completed: false,
                    disabled: false
                };

                if (activeStep === index) {
                    state.active = true;
                } else if (!nonLinear && activeStep > index) {
                    state.completed = true;
                } else if (!nonLinear && activeStep < index) {
                    state.disabled = true;
                }

                return [!alternativeLabel && connector && index !== 0 && compat_module["default"].cloneElement(connector, Object(esm_extends["a"/* default */
                ])({
                    key: index
                }, state)), compat_module["default"].cloneElement(step, Object(esm_extends["a"/* default */
                ])({}, controlProps, {}, state, {}, step.props))];
            });
            return compat_module["default"].createElement(Paper["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                square: true,
                elevation: 0,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),
                ref: ref
            }, other), steps);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Stepper_Stepper = (Object(withStyles["a"/* default */
        ])(Stepper_styles, {
            name: 'MuiStepper'
        })(Stepper_Stepper));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js

        var SwipeArea_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'fixed',
                    top: 0,
                    left: 0,
                    bottom: 0,
                    zIndex: theme.zIndex.drawer - 1
                },
                anchorLeft: {
                    right: 'auto'
                },
                anchorRight: {
                    left: 'auto',
                    right: 0
                },
                anchorTop: {
                    bottom: 'auto',
                    right: 0
                },
                anchorBottom: {
                    top: 'auto',
                    bottom: 0,
                    right: 0
                }
            };
        };
        /**
 * @ignore - internal component.
 */

        var SwipeArea_SwipeArea = compat_module["default"].forwardRef(function SwipeArea(props, ref) {
            var anchor = props.anchor
              , classes = props.classes
              , className = props.className
              , width = props.width
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["anchor", "classes", "className", "width"]);

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["anchor".concat(Object(capitalize["a"/* default */
                ])(anchor))], className),
                ref: ref,
                style: Object(defineProperty["a"/* default */
                ])({}, isHorizontal(anchor) ? 'width' : 'height', width)
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var SwipeableDrawer_SwipeArea = (Object(withStyles["a"/* default */
        ])(SwipeArea_styles, {
            name: 'PrivateSwipeArea'
        })(SwipeArea_SwipeArea));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js

        // This value is closed to what browsers are using internally to
        // trigger a native scroll.

        var UNCERTAINTY_THRESHOLD = 3;
        // px
        // We can only have one node at the time claiming ownership for handling the swipe.
        // Otherwise, the UX would be confusing.
        // That's why we use a singleton here.

        var nodeThatClaimedTheSwipe = null;
        // Exported for test purposes.

        function SwipeableDrawer_reset() {
            nodeThatClaimedTheSwipe = null;
        }

        function calculateCurrentX(anchor, touches) {
            return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;
        }

        function calculateCurrentY(anchor, touches) {
            return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;
        }

        function getMaxTranslate(horizontalSwipe, paperInstance) {
            return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;
        }

        function getTranslate(currentTranslate, startLocation, open, maxTranslate) {
            return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);
        }

        function getDomTreeShapes(element, rootNode) {
            // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129
            var domTreeShapes = [];

            while (element && element !== rootNode) {
                var style = window.getComputedStyle(element);

                if (// Ignore the scroll children if the element is absolute positioned.
                style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden
                style.getPropertyValue('overflow-x') === 'hidden') {
                    domTreeShapes = [];
                } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {
                    // Ignore the nodes that have no width.
                    // Keep elements with a scroll
                    domTreeShapes.push(element);
                }

                element = element.parentElement;
            }

            return domTreeShapes;
        }

        function findNativeHandler(_ref) {
            var domTreeShapes = _ref.domTreeShapes
              , start = _ref.start
              , current = _ref.current
              , anchor = _ref.anchor;
            // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175
            var axisProperties = {
                scrollPosition: {
                    x: 'scrollLeft',
                    y: 'scrollTop'
                },
                scrollLength: {
                    x: 'scrollWidth',
                    y: 'scrollHeight'
                },
                clientLength: {
                    x: 'clientWidth',
                    y: 'clientHeight'
                }
            };
            return domTreeShapes.some(function(shape) {
                // Determine if we are going backward or forward.
                var goingForward = current >= start;

                if (anchor === 'top' || anchor === 'left') {
                    goingForward = !goingForward;
                }

                var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';
                var scrollPosition = shape[axisProperties.scrollPosition[axis]];
                var areNotAtStart = scrollPosition > 0;
                var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];

                if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {
                    return shape;
                }

                return null;
            });
        }

        var disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);
        var transitionDurationDefault = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        var SwipeableDrawer_useEnhancedEffect = typeof window !== 'undefined' ? compat_module["default"].useLayoutEffect : compat_module["default"].useEffect;
        var SwipeableDrawer_SwipeableDrawer = compat_module["default"].forwardRef(function SwipeableDrawer(props, ref) {
            var _props$anchor = props.anchor
              , anchor = _props$anchor === void 0 ? 'left' : _props$anchor
              , _props$disableBackdro = props.disableBackdropTransition
              , disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro
              , _props$disableDiscove = props.disableDiscovery
              , disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove
              , _props$disableSwipeTo = props.disableSwipeToOpen
              , disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo
              , hideBackdrop = props.hideBackdrop
              , _props$hysteresis = props.hysteresis
              , hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis
              , _props$minFlingVeloci = props.minFlingVelocity
              , minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci
              , _props$ModalProps = props.ModalProps;
            _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;

            var BackdropProps = _props$ModalProps.BackdropProps
              , ModalPropsProp = Object(objectWithoutProperties["a"/* default */
            ])(_props$ModalProps, ["BackdropProps"])
              , onClose = props.onClose
              , onOpen = props.onOpen
              , open = props.open
              , _props$PaperProps = props.PaperProps
              , PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps
              , SwipeAreaProps = props.SwipeAreaProps
              , _props$swipeAreaWidth = props.swipeAreaWidth
              , swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth
              , _props$transitionDura = props.transitionDuration
              , transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'temporary' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["anchor", "disableBackdropTransition", "disableDiscovery", "disableSwipeToOpen", "hideBackdrop", "hysteresis", "minFlingVelocity", "ModalProps", "onClose", "onOpen", "open", "PaperProps", "SwipeAreaProps", "swipeAreaWidth", "transitionDuration", "variant"]);

            var theme = Object(useTheme["a"/* default */
            ])();

            var _React$useState = compat_module["default"].useState(false)
              , maybeSwiping = _React$useState[0]
              , setMaybeSwiping = _React$useState[1];

            var swipeInstance = compat_module["default"].useRef({
                isSwiping: null
            });
            var swipeAreaRef = compat_module["default"].useRef();
            var backdropRef = compat_module["default"].useRef();
            var paperRef = compat_module["default"].useRef();
            var touchDetected = compat_module["default"].useRef(false);
            // Ref for transition duration based on / to match swipe speed

            var calculatedDurationRef = compat_module["default"].useRef();
            // Use a ref so the open value used is always up to date inside useCallback.

            SwipeableDrawer_useEnhancedEffect(function() {
                calculatedDurationRef.current = null;
            }, [open]);
            var setPosition = compat_module["default"].useCallback(function(translate) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var _options$mode = options.mode
                  , mode = _options$mode === void 0 ? null : _options$mode
                  , _options$changeTransi = options.changeTransition
                  , changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;
                var anchorRtl = getAnchor(theme, anchor);
                var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;
                var horizontalSwipe = isHorizontal(anchor);
                var transform = horizontalSwipe ? "translate(".concat(rtlTranslateMultiplier * translate, "px, 0)") : "translate(0, ".concat(rtlTranslateMultiplier * translate, "px)");
                var drawerStyle = paperRef.current.style;
                drawerStyle.webkitTransform = transform;
                drawerStyle.transform = transform;
                var transition = '';

                if (mode) {
                    transition = theme.transitions.create('all', Object(utils["a"/* getTransitionProps */
                    ])({
                        timeout: transitionDuration
                    }, {
                        mode: mode
                    }));
                }

                if (changeTransition) {
                    drawerStyle.webkitTransition = transition;
                    drawerStyle.transition = transition;
                }

                if (!disableBackdropTransition && !hideBackdrop) {
                    var backdropStyle = backdropRef.current.style;
                    backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);

                    if (changeTransition) {
                        backdropStyle.webkitTransition = transition;
                        backdropStyle.transition = transition;
                    }
                }
            }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);
            var handleBodyTouchEnd = Object(useEventCallback["a"/* default */
            ])(function(event) {
                if (!touchDetected.current) {
                    return;
                }

                nodeThatClaimedTheSwipe = null;
                touchDetected.current = false;
                setMaybeSwiping(false);
                // The swipe wasn't started.

                if (!swipeInstance.current.isSwiping) {
                    swipeInstance.current.isSwiping = null;
                    return;
                }

                swipeInstance.current.isSwiping = null;
                var anchorRtl = getAnchor(theme, anchor);
                var horizontal = isHorizontal(anchor);
                var current;

                if (horizontal) {
                    current = calculateCurrentX(anchorRtl, event.changedTouches);
                } else {
                    current = calculateCurrentY(anchorRtl, event.changedTouches);
                }

                var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;
                var maxTranslate = getMaxTranslate(horizontal, paperRef.current);
                var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);
                var translateRatio = currentTranslate / maxTranslate;

                if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {
                    // Calculate transition duration to match swipe speed
                    calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;
                }

                if (open) {
                    if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {
                        onClose();
                    } else {
                        // Reset the position, the swipe was aborted.
                        setPosition(0, {
                            mode: 'exit'
                        });
                    }

                    return;
                }

                if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {
                    onOpen();
                } else {
                    // Reset the position, the swipe was aborted.
                    setPosition(getMaxTranslate(horizontal, paperRef.current), {
                        mode: 'enter'
                    });
                }
            });
            var handleBodyTouchMove = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // the ref may be null when a parent component updates while swiping
                if (!paperRef.current || !touchDetected.current) {
                    return;
                }
                // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer

                if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {
                    return;
                }

                var anchorRtl = getAnchor(theme, anchor);
                var horizontalSwipe = isHorizontal(anchor);
                var currentX = calculateCurrentX(anchorRtl, event.touches);
                var currentY = calculateCurrentY(anchorRtl, event.touches);

                if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {
                    var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);
                    var nativeHandler = findNativeHandler({
                        domTreeShapes: domTreeShapes,
                        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,
                        current: horizontalSwipe ? currentX : currentY,
                        anchor: anchor
                    });

                    if (nativeHandler) {
                        nodeThatClaimedTheSwipe = nativeHandler;
                        return;
                    }

                    nodeThatClaimedTheSwipe = swipeInstance.current;
                }
                // We don't know yet.

                if (swipeInstance.current.isSwiping == null) {
                    var dx = Math.abs(currentX - swipeInstance.current.startX);
                    var dy = Math.abs(currentY - swipeInstance.current.startY);
                    // We are likely to be swiping, let's prevent the scroll event on iOS.

                    if (dx > dy) {
                        if (event.cancelable) {
                            event.preventDefault();
                        }
                    }

                    var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;

                    if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {
                        swipeInstance.current.isSwiping = definitelySwiping;

                        if (!definitelySwiping) {
                            handleBodyTouchEnd(event);
                            return;
                        }
                        // Shift the starting point.

                        swipeInstance.current.startX = currentX;
                        swipeInstance.current.startY = currentY;
                        // Compensate for the part of the drawer displayed on touch start.

                        if (!disableDiscovery && !open) {
                            if (horizontalSwipe) {
                                swipeInstance.current.startX -= swipeAreaWidth;
                            } else {
                                swipeInstance.current.startY -= swipeAreaWidth;
                            }
                        }
                    }
                }

                if (!swipeInstance.current.isSwiping) {
                    return;
                }

                var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);
                var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;

                if (open && !swipeInstance.current.paperHit) {
                    startLocation = Math.min(startLocation, maxTranslate);
                }

                var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);

                if (open) {
                    if (!swipeInstance.current.paperHit) {
                        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;

                        if (paperHit) {
                            swipeInstance.current.paperHit = true;
                            swipeInstance.current.startX = currentX;
                            swipeInstance.current.startY = currentY;
                        } else {
                            return;
                        }
                    } else if (translate === 0) {
                        swipeInstance.current.startX = currentX;
                        swipeInstance.current.startY = currentY;
                    }
                }

                if (swipeInstance.current.lastTranslate === null) {
                    swipeInstance.current.lastTranslate = translate;
                    swipeInstance.current.lastTime = performance.now() + 1;
                }

                var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;
                // Low Pass filter.

                swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;
                swipeInstance.current.lastTranslate = translate;
                swipeInstance.current.lastTime = performance.now();
                // We are swiping, let's prevent the scroll event on iOS.

                if (event.cancelable) {
                    event.preventDefault();
                }

                setPosition(translate);
            });
            var handleBodyTouchStart = Object(useEventCallback["a"/* default */
            ])(function(event) {
                // We are not supposed to handle this touch move.
                // Example of use case: ignore the event if there is a Slider.
                if (event.defaultPrevented) {
                    return;
                }
                // We can only have one node at the time claiming ownership for handling the swipe.

                if (event.muiHandled) {
                    return;
                }
                // At least one element clogs the drawer interaction zone.

                if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {
                    return;
                }

                var anchorRtl = getAnchor(theme, anchor);
                var horizontalSwipe = isHorizontal(anchor);
                var currentX = calculateCurrentX(anchorRtl, event.touches);
                var currentY = calculateCurrentY(anchorRtl, event.touches);

                if (!open) {
                    if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {
                        return;
                    }

                    if (horizontalSwipe) {
                        if (currentX > swipeAreaWidth) {
                            return;
                        }
                    } else if (currentY > swipeAreaWidth) {
                        return;
                    }
                }

                event.muiHandled = true;
                nodeThatClaimedTheSwipe = null;
                swipeInstance.current.startX = currentX;
                swipeInstance.current.startY = currentY;
                setMaybeSwiping(true);

                if (!open && paperRef.current) {
                    // The ref may be null when a parent component updates while swiping.
                    setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {
                        changeTransition: false
                    });
                }

                swipeInstance.current.velocity = 0;
                swipeInstance.current.lastTime = null;
                swipeInstance.current.lastTranslate = null;
                swipeInstance.current.paperHit = false;
                touchDetected.current = true;
            });
            compat_module["default"].useEffect(function() {
                if (variant === 'temporary') {
                    var doc = Object(ownerDocument["a"/* default */
                    ])(paperRef.current);
                    doc.addEventListener('touchstart', handleBodyTouchStart);
                    doc.addEventListener('touchmove', handleBodyTouchMove, {
                        passive: false
                    });
                    doc.addEventListener('touchend', handleBodyTouchEnd);
                    return function() {
                        doc.removeEventListener('touchstart', handleBodyTouchStart);
                        doc.removeEventListener('touchmove', handleBodyTouchMove, {
                            passive: false
                        });
                        doc.removeEventListener('touchend', handleBodyTouchEnd);
                    }
                    ;
                }

                return undefined;
            }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);
            compat_module["default"].useEffect(function() {
                return function() {
                    // We need to release the lock.
                    if (nodeThatClaimedTheSwipe === swipeInstance.current) {
                        nodeThatClaimedTheSwipe = null;
                    }
                }
                ;
            }, []);
            compat_module["default"].useEffect(function() {
                if (!open) {
                    setMaybeSwiping(false);
                }
            }, [open]);
            var handleBackdropRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                backdropRef.current = compat_module["default"].findDOMNode(instance);
            }, []);
            var handlePaperRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                paperRef.current = compat_module["default"].findDOMNode(instance);
            }, []);
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, compat_module["default"].createElement(esm_Drawer_Drawer, Object(esm_extends["a"/* default */
            ])({
                open: variant === 'temporary' && maybeSwiping ? true : open,
                variant: variant,
                ModalProps: Object(esm_extends["a"/* default */
                ])({
                    BackdropProps: Object(esm_extends["a"/* default */
                    ])({}, BackdropProps, {
                        ref: handleBackdropRef
                    })
                }, ModalPropsProp),
                PaperProps: Object(esm_extends["a"/* default */
                ])({}, PaperProps, {
                    style: Object(esm_extends["a"/* default */
                    ])({
                        pointerEvents: variant === 'temporary' && !open ? 'none' : ''
                    }, PaperProps.style),
                    ref: handlePaperRef
                }),
                anchor: anchor,
                transitionDuration: calculatedDurationRef.current || transitionDuration,
                onClose: onClose,
                ref: ref
            }, other)), !disableSwipeToOpen && variant === 'temporary' && compat_module["default"].createElement(NoSsr["a"/* default */
            ], null, compat_module["default"].createElement(SwipeableDrawer_SwipeArea, Object(esm_extends["a"/* default */
            ])({
                anchor: anchor,
                ref: swipeAreaRef,
                width: swipeAreaWidth
            }, SwipeAreaProps))));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_SwipeableDrawer_SwipeableDrawer = (SwipeableDrawer_SwipeableDrawer);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Switch/Switch.js

        // @inheritedComponent IconButton

        var Switch_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'inline-flex',
                    width: 34 + 12 * 2,
                    height: 14 + 12 * 2,
                    overflow: 'hidden',
                    padding: 12,
                    boxSizing: 'border-box',
                    position: 'relative',
                    flexShrink: 0,
                    zIndex: 0,
                    // Reset the stacking context.
                    verticalAlign: 'middle'// For correct alignment with the text.

                },

                /* Styles applied to the root element if `edge="start"`. */
                edgeStart: {
                    marginLeft: -8
                },

                /* Styles applied to the root element if `edge="end"`. */
                edgeEnd: {
                    marginRight: -8
                },

                /* Styles applied to the internal `SwitchBase` component's `root` class. */
                switchBase: {
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    zIndex: 1,
                    // Render above the focus ripple.
                    color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],
                    transition: theme.transitions.create(['left', 'transform'], {
                        duration: theme.transitions.duration.shortest
                    }),
                    '&$checked': {
                        transform: 'translateX(20px)'
                    },
                    '&$disabled': {
                        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
                    },
                    '&$checked + $track': {
                        opacity: 0.5
                    },
                    '&$disabled + $track': {
                        opacity: theme.palette.type === 'light' ? 0.12 : 0.1
                    }
                },

                /* Styles applied to the internal SwitchBase component's root element if `color="primary"`. */
                colorPrimary: {
                    '&$checked': {
                        color: theme.palette.primary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
                    },
                    '&$checked + $track': {
                        backgroundColor: theme.palette.primary.main
                    },
                    '&$disabled + $track': {
                        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white
                    }
                },

                /* Styles applied to the internal SwitchBase component's root element if `color="secondary"`. */
                colorSecondary: {
                    '&$checked': {
                        color: theme.palette.secondary.main,
                        '&:hover': {
                            backgroundColor: Object(colorManipulator["d"/* fade */
                            ])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                            '@media (hover: none)': {
                                backgroundColor: 'transparent'
                            }
                        }
                    },
                    '&$disabled': {
                        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]
                    },
                    '&$checked + $track': {
                        backgroundColor: theme.palette.secondary.main
                    },
                    '&$disabled + $track': {
                        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white
                    }
                },

                /* Styles applied to the root element if `size="small"`. */
                sizeSmall: {
                    width: 40,
                    height: 24,
                    padding: 7,
                    '& $thumb': {
                        width: 16,
                        height: 16
                    },
                    '& $switchBase': {
                        padding: 4,
                        '&$checked': {
                            transform: 'translateX(16px)'
                        }
                    }
                },

                /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */
                checked: {},

                /* Pseudo-class applied to the internal SwitchBase component's disabled class. */
                disabled: {},

                /* Styles applied to the internal SwitchBase component's input element. */
                input: {
                    left: '-100%',
                    width: '300%'
                },

                /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */
                thumb: {
                    boxShadow: theme.shadows[1],
                    backgroundColor: 'currentColor',
                    width: 20,
                    height: 20,
                    borderRadius: '50%'
                },

                /* Styles applied to the track element. */
                track: {
                    height: '100%',
                    width: '100%',
                    borderRadius: 14 / 2,
                    zIndex: -1,
                    transition: theme.transitions.create(['opacity', 'background-color'], {
                        duration: theme.transitions.duration.shortest
                    }),
                    backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,
                    opacity: theme.palette.type === 'light' ? 0.38 : 0.3
                }
            };
        };
        var Switch_Switch = compat_module["default"].forwardRef(function Switch(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'secondary' : _props$color
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$edge = props.edge
              , edge = _props$edge === void 0 ? false : _props$edge
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "disabled", "edge", "size"]);

            var icon = compat_module["default"].createElement("span", {
                className: classes.thumb
            });
            return compat_module["default"].createElement("span", {
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, {
                    start: classes.edgeStart,
                    end: classes.edgeEnd
                }[edge], {
                    small: classes["size".concat(Object(capitalize["a"/* default */
                    ])(size))]
                }[size])
            }, compat_module["default"].createElement(SwitchBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                type: "checkbox",
                icon: icon,
                checkedIcon: icon,
                classes: {
                    root: Object(clsx_m["a"/* default */
                    ])(classes.switchBase, classes["color".concat(Object(capitalize["a"/* default */
                    ])(color))]),
                    input: classes.input,
                    checked: classes.checked,
                    disabled: classes.disabled
                },
                ref: ref,
                disabled: disabled
            }, other)), compat_module["default"].createElement("span", {
                className: classes.track
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Switch_Switch = (Object(withStyles["a"/* default */
        ])(Switch_styles, {
            name: 'MuiSwitch'
        })(Switch_Switch));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tab/Tab.js

        var Tab_styles = function styles(theme) {
            var _extends2;

            return {
                /* Styles applied to the root element. */
                root: Object(esm_extends["a"/* default */
                ])({}, theme.typography.button, (_extends2 = {
                    maxWidth: 264,
                    minWidth: 72,
                    position: 'relative',
                    boxSizing: 'border-box',
                    minHeight: 48,
                    flexShrink: 0,
                    padding: '6px 12px'
                },
                Object(defineProperty["a"/* default */
                ])(_extends2, theme.breakpoints.up('sm'), {
                    padding: '6px 24px'
                }),
                Object(defineProperty["a"/* default */
                ])(_extends2, "overflow", 'hidden'),
                Object(defineProperty["a"/* default */
                ])(_extends2, "whiteSpace", 'normal'),
                Object(defineProperty["a"/* default */
                ])(_extends2, "textAlign", 'center'),
                Object(defineProperty["a"/* default */
                ])(_extends2, theme.breakpoints.up('sm'), {
                    minWidth: 160
                }),
                _extends2)),

                /* Styles applied to the root element if both `icon` and `label` are provided. */
                labelIcon: {
                    minHeight: 72,
                    paddingTop: 9,
                    '& $wrapper > *:first-child': {
                        marginBottom: 6
                    }
                },

                /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */
                textColorInherit: {
                    color: 'inherit',
                    opacity: 0.7,
                    '&$selected': {
                        opacity: 1
                    },
                    '&$disabled': {
                        opacity: 0.5
                    }
                },

                /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */
                textColorPrimary: {
                    color: theme.palette.text.secondary,
                    '&$selected': {
                        color: theme.palette.primary.main
                    },
                    '&$disabled': {
                        color: theme.palette.text.disabled
                    }
                },

                /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */
                textColorSecondary: {
                    color: theme.palette.text.secondary,
                    '&$selected': {
                        color: theme.palette.secondary.main
                    },
                    '&$disabled': {
                        color: theme.palette.text.disabled
                    }
                },

                /* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */
                selected: {},

                /* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */
                disabled: {},

                /* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */
                fullWidth: {
                    flexShrink: 1,
                    flexGrow: 1,
                    flexBasis: 0,
                    maxWidth: 'none'
                },

                /* Styles applied to the root element if `wrapped={true}`. */
                wrapped: {
                    fontSize: theme.typography.pxToRem(12),
                    lineHeight: 1.5
                },

                /* Styles applied to the `icon` and `label`'s wrapper element. */
                wrapper: {
                    display: 'inline-flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: '100%',
                    flexDirection: 'column'
                }
            };
        };
        var Tab_Tab = compat_module["default"].forwardRef(function Tab(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableFocusRi = props.disableFocusRipple
              , disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi
              , fullWidth = props.fullWidth
              , icon = props.icon
              , indicator = props.indicator
              , label = props.label
              , onChange = props.onChange
              , onClick = props.onClick
              , selected = props.selected
              , _props$textColor = props.textColor
              , textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor
              , value = props.value
              , _props$wrapped = props.wrapped
              , wrapped = _props$wrapped === void 0 ? false : _props$wrapped
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "disabled", "disableFocusRipple", "fullWidth", "icon", "indicator", "label", "onChange", "onClick", "selected", "textColor", "value", "wrapped"]);

            var handleChange = function handleChange(event) {
                if (onChange) {
                    onChange(event, value);
                }

                if (onClick) {
                    onClick(event);
                }
            };

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                focusRipple: !disableFocusRipple,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["textColor".concat(Object(capitalize["a"/* default */
                ])(textColor))], className, disabled && classes.disabled, selected && classes.selected, label && icon && classes.labelIcon, fullWidth && classes.fullWidth, wrapped && classes.wrapped),
                ref: ref,
                role: "tab",
                "aria-selected": selected,
                disabled: disabled,
                onClick: handleChange
            }, other), compat_module["default"].createElement("span", {
                className: classes.wrapper
            }, icon, label), indicator);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Tab_Tab = (Object(withStyles["a"/* default */
        ])(Tab_styles, {
            name: 'MuiTab'
        })(Tab_Tab));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Table/TableContext.js

        /**
 * @ignore - internal component.
 */

        var TableContext = compat_module["default"].createContext();

        if (false) {}

        /* harmony default export */
        var Table_TableContext = (TableContext);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Table/Table.js

        var Table_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    display: 'table',
                    width: '100%',
                    borderCollapse: 'collapse',
                    borderSpacing: 0,
                    '& caption': Object(esm_extends["a"/* default */
                    ])({}, theme.typography.body2, {
                        padding: theme.spacing(2),
                        color: theme.palette.text.secondary,
                        textAlign: 'left',
                        captionSide: 'bottom'
                    })
                },

                /* Styles applied to the root element if `stickyHeader={true}`. */
                stickyHeader: {
                    borderCollapse: 'separate'
                }
            };
        };
        var Table_Table = compat_module["default"].forwardRef(function Table(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'table' : _props$component
              , _props$padding = props.padding
              , padding = _props$padding === void 0 ? 'default' : _props$padding
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , _props$stickyHeader = props.stickyHeader
              , stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component", "padding", "size", "stickyHeader"]);

            var table = compat_module["default"].useMemo(function() {
                return {
                    padding: padding,
                    size: size,
                    stickyHeader: stickyHeader
                };
            }, [padding, size, stickyHeader]);
            return compat_module["default"].createElement(Table_TableContext.Provider, {
                value: table
            }, compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, stickyHeader && classes.stickyHeader)
            }, other)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Table_Table = (Object(withStyles["a"/* default */
        ])(Table_styles, {
            name: 'MuiTable'
        })(Table_Table));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js

        /**
 * @ignore - internal component.
 */

        var Tablelvl2Context = compat_module["default"].createContext();

        if (false) {}

        /* harmony default export */
        var Table_Tablelvl2Context = (Tablelvl2Context);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableBody/TableBody.js

        var TableBody_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'table-row-group'
            }
        };
        var TableBody_tablelvl2 = {
            variant: 'body'
        };
        var TableBody_TableBody = compat_module["default"].forwardRef(function TableBody(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'tbody' : _props$component
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component"]);

            return compat_module["default"].createElement(Table_Tablelvl2Context.Provider, {
                value: TableBody_tablelvl2
            }, compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableBody_TableBody = (Object(withStyles["a"/* default */
        ])(TableBody_styles, {
            name: 'MuiTableBody'
        })(TableBody_TableBody));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableCell/TableCell.js

        var TableCell_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: Object(esm_extends["a"/* default */
                ])({}, theme.typography.body2, {
                    display: 'table-cell',
                    verticalAlign: 'inherit',
                    // Workaround for a rendering bug with spanned columns in Chrome 62.0.
                    // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
                    borderBottom: "1px solid\n    ".concat(theme.palette.type === 'light' ? Object(colorManipulator["i"/* lighten */
                    ])(Object(colorManipulator["d"/* fade */
                    ])(theme.palette.divider, 1), 0.88) : Object(colorManipulator["a"/* darken */
                    ])(Object(colorManipulator["d"/* fade */
                    ])(theme.palette.divider, 1), 0.68)),
                    textAlign: 'left',
                    padding: 16
                }),

                /* Styles applied to the root element if `variant="head"` or `context.table.head`. */
                head: {
                    color: theme.palette.text.primary,
                    lineHeight: theme.typography.pxToRem(24),
                    fontWeight: theme.typography.fontWeightMedium
                },

                /* Styles applied to the root element if `variant="body"` or `context.table.body`. */
                body: {
                    color: theme.palette.text.primary
                },

                /* Styles applied to the root element if `variant="footer"` or `context.table.footer`. */
                footer: {
                    color: theme.palette.text.secondary,
                    lineHeight: theme.typography.pxToRem(21),
                    fontSize: theme.typography.pxToRem(12)
                },

                /* Styles applied to the root element if `size="small"`. */
                sizeSmall: {
                    padding: '6px 24px 6px 16px',
                    '&:last-child': {
                        paddingRight: 16
                    },
                    '&$paddingCheckbox': {
                        width: 24,
                        // prevent the checkbox column from growing
                        padding: '0px 12px 0 16px',
                        '&:last-child': {
                            paddingLeft: 12,
                            paddingRight: 16
                        },
                        '& > *': {
                            padding: 0
                        }
                    }
                },

                /* Styles applied to the root element if `padding="checkbox"`. */
                paddingCheckbox: {
                    width: 48,
                    // prevent the checkbox column from growing
                    padding: '0 0 0 4px',
                    '&:last-child': {
                        paddingLeft: 0,
                        paddingRight: 4
                    }
                },

                /* Styles applied to the root element if `padding="none"`. */
                paddingNone: {
                    padding: 0,
                    '&:last-child': {
                        padding: 0
                    }
                },

                /* Styles applied to the root element if `align="left"`. */
                alignLeft: {
                    textAlign: 'left'
                },

                /* Styles applied to the root element if `align="center"`. */
                alignCenter: {
                    textAlign: 'center'
                },

                /* Styles applied to the root element if `align="right"`. */
                alignRight: {
                    textAlign: 'right',
                    flexDirection: 'row-reverse'
                },

                /* Styles applied to the root element if `align="justify"`. */
                alignJustify: {
                    textAlign: 'justify'
                },

                /* Styles applied to the root element if `context.table.stickyHeader={true}`. */
                stickyHeader: {
                    position: 'sticky',
                    top: 0,
                    left: 0,
                    zIndex: 2,
                    backgroundColor: theme.palette.background.default
                }
            };
        };
        /**
 * The component renders a `<th>` element when the parent context is a header
 * or otherwise a `<td>` element.
 */

        var TableCell_TableCell = compat_module["default"].forwardRef(function TableCell(props, ref) {
            var _props$align = props.align
              , align = _props$align === void 0 ? 'inherit' : _props$align
              , classes = props.classes
              , className = props.className
              , component = props.component
              , paddingProp = props.padding
              , scopeProp = props.scope
              , sizeProp = props.size
              , sortDirection = props.sortDirection
              , variantProp = props.variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["align", "classes", "className", "component", "padding", "scope", "size", "sortDirection", "variant"]);

            var table = compat_module["default"].useContext(Table_TableContext);
            var tablelvl2 = compat_module["default"].useContext(Table_Tablelvl2Context);
            var Component;

            if (component) {
                Component = component;
            } else {
                Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';
            }

            var scope = scopeProp;

            if (!scope && tablelvl2 && tablelvl2.variant === 'head') {
                scope = 'col';
            }

            var padding = paddingProp || (table && table.padding ? table.padding : 'default');
            var size = sizeProp || (table && table.size ? table.size : 'medium');
            var variant = variantProp || tablelvl2 && tablelvl2.variant;
            var ariaSort = null;

            if (sortDirection) {
                ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';
            }

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[variant], className, align !== 'inherit' && classes["align".concat(Object(capitalize["a"/* default */
                ])(align))], padding !== 'default' && classes["padding".concat(Object(capitalize["a"/* default */
                ])(padding))], size !== 'medium' && classes["size".concat(Object(capitalize["a"/* default */
                ])(size))], {
                    head: table && table.stickyHeader && classes.stickyHeader
                }[variant]),
                "aria-sort": ariaSort,
                scope: scope
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableCell_TableCell = (Object(withStyles["a"/* default */
        ])(TableCell_styles, {
            name: 'MuiTableCell'
        })(TableCell_TableCell));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js

        var TableContainer_styles = {
            /* Styles applied to the root element. */
            root: {
                width: '100%',
                overflowX: 'auto'
            }
        };
        var TableContainer_TableContainer = compat_module["default"].forwardRef(function TableContainer(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className)
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableContainer_TableContainer = (Object(withStyles["a"/* default */
        ])(TableContainer_styles, {
            name: 'MuiTableContainer'
        })(TableContainer_TableContainer));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js

        var TableFooter_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'table-footer-group'
            }
        };
        var TableFooter_tablelvl2 = {
            variant: 'footer'
        };
        var TableFooter_TableFooter = compat_module["default"].forwardRef(function TableFooter(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'tfoot' : _props$component
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component"]);

            return compat_module["default"].createElement(Table_Tablelvl2Context.Provider, {
                value: TableFooter_tablelvl2
            }, compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableFooter_TableFooter = (Object(withStyles["a"/* default */
        ])(TableFooter_styles, {
            name: 'MuiTableFooter'
        })(TableFooter_TableFooter));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableHead/TableHead.js

        var TableHead_styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'table-header-group'
            }
        };
        var TableHead_tablelvl2 = {
            variant: 'head'
        };
        var TableHead_TableHead = compat_module["default"].forwardRef(function TableHead(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'thead' : _props$component
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component"]);

            return compat_module["default"].createElement(Table_Tablelvl2Context.Provider, {
                value: TableHead_tablelvl2
            }, compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableHead_TableHead = (Object(withStyles["a"/* default */
        ])(TableHead_styles, {
            name: 'MuiTableHead'
        })(TableHead_TableHead));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js

        var Toolbar_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    display: 'flex',
                    alignItems: 'center'
                },

                /* Styles applied to the root element if `disableGutters={false}`. */
                gutters: Object(defineProperty["a"/* default */
                ])({
                    paddingLeft: theme.spacing(2),
                    paddingRight: theme.spacing(2)
                }, theme.breakpoints.up('sm'), {
                    paddingLeft: theme.spacing(3),
                    paddingRight: theme.spacing(3)
                }),

                /* Styles applied to the root element if `variant="regular"`. */
                regular: theme.mixins.toolbar,

                /* Styles applied to the root element if `variant="dense"`. */
                dense: {
                    minHeight: 48
                }
            };
        };
        var Toolbar_Toolbar = compat_module["default"].forwardRef(function Toolbar(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$disableGutters = props.disableGutters
              , disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'regular' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component", "disableGutters", "variant"]);

            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes[variant], className, !disableGutters && classes.gutters),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Toolbar_Toolbar = (Object(withStyles["a"/* default */
        ])(Toolbar_styles, {
            name: 'MuiToolbar'
        })(Toolbar_Toolbar));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var KeyboardArrowLeft = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
        }), 'KeyboardArrowLeft'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var KeyboardArrowRight = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
        }), 'KeyboardArrowRight'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js

        /**
 * @ignore - internal component.
 */

        var TablePaginationActions_ref = compat_module["default"].createElement(KeyboardArrowRight, null);

        var _ref2 = compat_module["default"].createElement(KeyboardArrowLeft, null);

        var _ref3 = compat_module["default"].createElement(KeyboardArrowLeft, null);

        var _ref4 = compat_module["default"].createElement(KeyboardArrowRight, null);

        var TablePaginationActions_TablePaginationActions = compat_module["default"].forwardRef(function TablePaginationActions(props, ref) {
            var backIconButtonProps = props.backIconButtonProps
              , count = props.count
              , nextIconButtonProps = props.nextIconButtonProps
              , onChangePage = props.onChangePage
              , page = props.page
              , rowsPerPage = props.rowsPerPage
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["backIconButtonProps", "count", "nextIconButtonProps", "onChangePage", "page", "rowsPerPage"]);

            var theme = Object(useTheme["a"/* default */
            ])();

            var handleBackButtonClick = function handleBackButtonClick(event) {
                onChangePage(event, page - 1);
            };

            var handleNextButtonClick = function handleNextButtonClick(event) {
                onChangePage(event, page + 1);
            };

            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                ref: ref
            }, other), compat_module["default"].createElement(IconButton["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                onClick: handleBackButtonClick,
                disabled: page === 0,
                color: "inherit"
            }, backIconButtonProps), theme.direction === 'rtl' ? TablePaginationActions_ref : _ref2), compat_module["default"].createElement(IconButton["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                onClick: handleNextButtonClick,
                disabled: page >= Math.ceil(count / rowsPerPage) - 1,
                color: "inherit"
            }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var TablePagination_TablePaginationActions = (TablePaginationActions_TablePaginationActions);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js

        var TablePagination_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    color: theme.palette.text.primary,
                    fontSize: theme.typography.pxToRem(14),
                    overflow: 'auto',
                    // Increase the specificity to override TableCell.
                    '&:last-child': {
                        padding: 0
                    }
                },

                /* Styles applied to the Toolbar component. */
                toolbar: {
                    minHeight: 52,
                    paddingRight: 2
                },

                /* Styles applied to the spacer element. */
                spacer: {
                    flex: '1 1 100%'
                },

                /* Styles applied to the caption Typography components if `variant="caption"`. */
                caption: {
                    flexShrink: 0
                },

                /* Styles applied to the Select component root element. */
                selectRoot: {
                    // `.selectRoot` should be merged with `.input` in v5.
                    marginRight: 32,
                    marginLeft: 8
                },

                /* Styles applied to the Select component `select` class. */
                select: {
                    paddingLeft: 8,
                    paddingRight: 24,
                    textAlign: 'right',
                    textAlignLast: 'right'// Align <select> on Chrome.

                },

                /* Styles applied to the Select component `icon` class. */
                selectIcon: {
                    top: 1
                },

                /* Styles applied to the `InputBase` component. */
                input: {
                    color: 'inherit',
                    fontSize: 'inherit',
                    flexShrink: 0
                },

                /* Styles applied to the MenuItem component. */
                menuItem: {},

                /* Styles applied to the internal `TablePaginationActions` component. */
                actions: {
                    flexShrink: 0,
                    marginLeft: 20
                }
            };
        };

        var defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {
            var from = _ref.from
              , to = _ref.to
              , count = _ref.count;
            return "".concat(from, "-").concat(to === -1 ? count : to, " of ").concat(count);
        };

        var defaultRowsPerPageOptions = [10, 25, 50, 100];
        /**
 * A `TableCell` based component for placing inside `TableFooter` for pagination.
 */

        var TablePagination_TablePagination = compat_module["default"].forwardRef(function TablePagination(props, ref) {
            var _props$ActionsCompone = props.ActionsComponent
              , ActionsComponent = _props$ActionsCompone === void 0 ? TablePagination_TablePaginationActions : _props$ActionsCompone
              , backIconButtonProps = props.backIconButtonProps
              , _props$backIconButton = props.backIconButtonText
              , backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton
              , classes = props.classes
              , className = props.className
              , colSpanProp = props.colSpan
              , _props$component = props.component
              , Component = _props$component === void 0 ? esm_TableCell_TableCell : _props$component
              , count = props.count
              , _props$labelDisplayed = props.labelDisplayedRows
              , labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed
              , _props$labelRowsPerPa = props.labelRowsPerPage
              , labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa
              , nextIconButtonProps = props.nextIconButtonProps
              , _props$nextIconButton = props.nextIconButtonText
              , nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton
              , onChangePage = props.onChangePage
              , onChangeRowsPerPage = props.onChangeRowsPerPage
              , page = props.page
              , rowsPerPage = props.rowsPerPage
              , _props$rowsPerPageOpt = props.rowsPerPageOptions
              , rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt
              , _props$SelectProps = props.SelectProps
              , SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["ActionsComponent", "backIconButtonProps", "backIconButtonText", "classes", "className", "colSpan", "component", "count", "labelDisplayedRows", "labelRowsPerPage", "nextIconButtonProps", "nextIconButtonText", "onChangePage", "onChangeRowsPerPage", "page", "rowsPerPage", "rowsPerPageOptions", "SelectProps"]);

            var colSpan;

            if (Component === esm_TableCell_TableCell || Component === 'td') {
                colSpan = colSpanProp || 1000;
                // col-span over everything
            }

            var MenuItemComponent = SelectProps.native ? 'option' : MenuItem["a"/* default */
            ];
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                colSpan: colSpan,
                ref: ref
            }, other), compat_module["default"].createElement(esm_Toolbar_Toolbar, {
                className: classes.toolbar
            }, compat_module["default"].createElement("div", {
                className: classes.spacer
            }), rowsPerPageOptions.length > 1 && compat_module["default"].createElement(Typography["a"/* default */
            ], {
                color: "inherit",
                variant: "body2",
                className: classes.caption
            }, labelRowsPerPage), rowsPerPageOptions.length > 1 && compat_module["default"].createElement(Select["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                classes: {
                    select: classes.select,
                    icon: classes.selectIcon
                },
                input: compat_module["default"].createElement(InputBase["a"/* default */
                ], {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.input, classes.selectRoot)
                }),
                value: rowsPerPage,
                onChange: onChangeRowsPerPage
            }, SelectProps), rowsPerPageOptions.map(function(rowsPerPageOption) {
                return compat_module["default"].createElement(MenuItemComponent, {
                    className: classes.menuItem,
                    key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,
                    value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
                }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);
            })), compat_module["default"].createElement(Typography["a"/* default */
            ], {
                color: "inherit",
                variant: "body2",
                className: classes.caption
            }, labelDisplayedRows({
                from: count === 0 ? 0 : page * rowsPerPage + 1,
                to: Math.min(count, (page + 1) * rowsPerPage),
                count: count,
                page: page
            })), compat_module["default"].createElement(ActionsComponent, {
                className: classes.actions,
                backIconButtonProps: Object(esm_extends["a"/* default */
                ])({
                    title: backIconButtonText,
                    'aria-label': backIconButtonText
                }, backIconButtonProps),
                count: count,
                nextIconButtonProps: Object(esm_extends["a"/* default */
                ])({
                    title: nextIconButtonText,
                    'aria-label': nextIconButtonText
                }, nextIconButtonProps),
                onChangePage: onChangePage,
                page: page,
                rowsPerPage: rowsPerPage
            })));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TablePagination_TablePagination = (Object(withStyles["a"/* default */
        ])(TablePagination_styles, {
            name: 'MuiTablePagination'
        })(TablePagination_TablePagination));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableRow/TableRow.js

        var TableRow_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    color: 'inherit',
                    display: 'table-row',
                    verticalAlign: 'middle',
                    // We disable the focus ring for mouse, touch and keyboard users.
                    outline: 0,
                    '&$hover:hover': {
                        backgroundColor: theme.palette.action.hover
                    },
                    '&$selected,&$selected:hover': {
                        backgroundColor: Object(colorManipulator["d"/* fade */
                        ])(theme.palette.secondary.main, theme.palette.action.selectedOpacity)
                    }
                },

                /* Pseudo-class applied to the root element if `selected={true}`. */
                selected: {},

                /* Pseudo-class applied to the root element if `hover={true}`. */
                hover: {},

                /* Styles applied to the root element if table variant="head". */
                head: {},

                /* Styles applied to the root element if table variant="footer". */
                footer: {}
            };
        };
        /**
 * Will automatically set dynamic row height
 * based on the material table element parent (head, body, etc).
 */

        var TableRow_TableRow = compat_module["default"].forwardRef(function TableRow(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'tr' : _props$component
              , _props$hover = props.hover
              , hover = _props$hover === void 0 ? false : _props$hover
              , _props$selected = props.selected
              , selected = _props$selected === void 0 ? false : _props$selected
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "component", "hover", "selected"]);

            var tablelvl2 = compat_module["default"].useContext(Table_Tablelvl2Context);
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                ref: ref,
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, tablelvl2 && {
                    head: classes.head,
                    footer: classes.footer
                }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableRow_TableRow = (Object(withStyles["a"/* default */
        ])(TableRow_styles, {
            name: 'MuiTableRow'
        })(TableRow_TableRow));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js

        /**
 * @ignore - internal component.
 */

        /* harmony default export */
        var ArrowDownward = (Object(createSvgIcon["a"/* default */
        ])(compat_module["default"].createElement("path", {
            d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
        }), 'ArrowDownward'));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js

        var TableSortLabel_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    cursor: 'pointer',
                    display: 'inline-flex',
                    justifyContent: 'flex-start',
                    flexDirection: 'inherit',
                    alignItems: 'center',
                    '&:focus': {
                        color: theme.palette.text.secondary
                    },
                    '&:hover': {
                        color: theme.palette.text.secondary,
                        '& $icon': {
                            opacity: 0.5
                        }
                    },
                    '&$active': {
                        color: theme.palette.text.primary,
                        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045
                        '&& $icon': {
                            opacity: 1,
                            color: theme.palette.text.secondary
                        }
                    }
                },

                /* Pseudo-class applied to the root element if `active={true}`. */
                active: {},

                /* Styles applied to the icon component. */
                icon: {
                    fontSize: 18,
                    marginRight: 4,
                    marginLeft: 4,
                    opacity: 0,
                    transition: theme.transitions.create(['opacity', 'transform'], {
                        duration: theme.transitions.duration.shorter
                    }),
                    userSelect: 'none'
                },

                /* Styles applied to the icon component if `direction="desc"`. */
                iconDirectionDesc: {
                    transform: 'rotate(0deg)'
                },

                /* Styles applied to the icon component if `direction="asc"`. */
                iconDirectionAsc: {
                    transform: 'rotate(180deg)'
                }
            };
        };
        /**
 * A button based label for placing inside `TableCell` for column sorting.
 */

        var TableSortLabel_TableSortLabel = compat_module["default"].forwardRef(function TableSortLabel(props, ref) {
            var _props$active = props.active
              , active = _props$active === void 0 ? false : _props$active
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$direction = props.direction
              , direction = _props$direction === void 0 ? 'asc' : _props$direction
              , _props$hideSortIcon = props.hideSortIcon
              , hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon
              , _props$IconComponent = props.IconComponent
              , IconComponent = _props$IconComponent === void 0 ? ArrowDownward : _props$IconComponent
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["active", "children", "classes", "className", "direction", "hideSortIcon", "IconComponent"]);

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, active && classes.active),
                component: "span",
                disableRipple: true,
                ref: ref
            }, other), children, hideSortIcon && !active ? null : compat_module["default"].createElement(IconComponent, {
                className: Object(clsx_m["a"/* default */
                ])(classes.icon, classes["iconDirection".concat(Object(capitalize["a"/* default */
                ])(direction))])
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TableSortLabel_TableSortLabel = (Object(withStyles["a"/* default */
        ])(TableSortLabel_styles, {
            name: 'MuiTableSortLabel'
        })(TableSortLabel_TableSortLabel));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/ownerWindow.js
        var ownerWindow = __webpack_require__(73);

        // CONCATENATED MODULE: ../node_modules/normalize-scroll-left/esm/main.js
        // Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js
        var inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
        var cachedType;
        function _setScrollType(type) {
            cachedType = type;
        }
        // Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type
        function detectScrollType() {
            if (cachedType) {
                return cachedType;
            }
            if (!inDOM || !window.document.body) {
                return 'indeterminate';
            }
            var dummy = window.document.createElement('div');
            dummy.appendChild(document.createTextNode('ABCD'));
            dummy.dir = 'rtl';
            dummy.style.fontSize = '14px';
            dummy.style.width = '4px';
            dummy.style.height = '1px';
            dummy.style.position = 'absolute';
            dummy.style.top = '-1000px';
            dummy.style.overflow = 'scroll';
            document.body.appendChild(dummy);
            cachedType = 'reverse';
            if (dummy.scrollLeft > 0) {
                cachedType = 'default';
            } else {
                dummy.scrollLeft = 1;
                if (dummy.scrollLeft === 0) {
                    cachedType = 'negative';
                }
            }
            document.body.removeChild(dummy);
            return cachedType;
        }
        // Based on https://stackoverflow.com/a/24394376
        function getNormalizedScrollLeft(element, direction) {
            var scrollLeft = element.scrollLeft;
            // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
            if (direction !== 'rtl') {
                return scrollLeft;
            }
            var type = detectScrollType();
            if (type === 'indeterminate') {
                return Number.NaN;
            }
            switch (type) {
            case 'negative':
                return element.scrollWidth - element.clientWidth + scrollLeft;
            case 'reverse':
                return element.scrollWidth - element.clientWidth - scrollLeft;
            }
            return scrollLeft;
        }
        function setNormalizedScrollLeft(element, scrollLeft, direction) {
            // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior
            if (direction !== 'rtl') {
                element.scrollLeft = scrollLeft;
                return;
            }
            var type = detectScrollType();
            if (type === 'indeterminate') {
                return;
            }
            switch (type) {
            case 'negative':
                element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;
                break;
            case 'reverse':
                element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;
                break;
            default:
                element.scrollLeft = scrollLeft;
                break;
            }
        }

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/internal/animate.js
        function easeInOutSin(time) {
            return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;
        }

        function animate(property, element, to) {
            var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
            var cb = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function() {}
            ;
            var _options$ease = options.ease
              , ease = _options$ease === void 0 ? easeInOutSin : _options$ease
              , _options$duration = options.duration
              , duration = _options$duration === void 0 ? 300 : _options$duration;
            var start = null;
            var from = element[property];
            var cancelled = false;

            var cancel = function cancel() {
                cancelled = true;
            };

            var step = function step(timestamp) {
                if (cancelled) {
                    cb(new Error('Animation cancelled'));
                    return;
                }

                if (start === null) {
                    start = timestamp;
                }

                var time = Math.min(1, (timestamp - start) / duration);
                element[property] = ease(time) * (to - from) + from;

                if (time >= 1) {
                    requestAnimationFrame(function() {
                        cb(null);
                    });
                    return;
                }

                requestAnimationFrame(step);
            };

            if (from === to) {
                cb(new Error('Element already at target position'));
                return cancel;
            }

            requestAnimationFrame(step);
            return cancel;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js

        var ScrollbarSize_styles = {
            width: 99,
            height: 99,
            position: 'absolute',
            top: -9999,
            overflow: 'scroll'
        };
        /**
 * @ignore - internal component.
 * The component is originates from https://github.com/STORIS/react-scrollbar-size.
 * It has been moved into the core in order to minimize the bundle size.
 */

        function ScrollbarSize(props) {
            var onChange = props.onChange
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["onChange"]);

            var scrollbarHeight = compat_module["default"].useRef();
            var nodeRef = compat_module["default"].useRef(null);

            var setMeasurements = function setMeasurements() {
                scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;
            };

            compat_module["default"].useEffect(function() {
                var handleResize = Object(debounce["a"/* default */
                ])(function() {
                    var prevHeight = scrollbarHeight.current;
                    setMeasurements();

                    if (prevHeight !== scrollbarHeight.current) {
                        onChange(scrollbarHeight.current);
                    }
                });
                window.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    window.removeEventListener('resize', handleResize);
                }
                ;
            }, [onChange]);
            compat_module["default"].useEffect(function() {
                setMeasurements();
                onChange(scrollbarHeight.current);
            }, [onChange]);
            return compat_module["default"].createElement("div", Object(esm_extends["a"/* default */
            ])({
                style: ScrollbarSize_styles,
                ref: nodeRef
            }, other));
        }
        false ? undefined : void 0;
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tabs/TabIndicator.js

        var TabIndicator_styles = function styles(theme) {
            return {
                root: {
                    position: 'absolute',
                    height: 2,
                    bottom: 0,
                    width: '100%',
                    transition: theme.transitions.create()
                },
                colorPrimary: {
                    backgroundColor: theme.palette.primary.main
                },
                colorSecondary: {
                    backgroundColor: theme.palette.secondary.main
                },
                vertical: {
                    height: '100%',
                    width: 2,
                    right: 0
                }
            };
        };
        /**
 * @ignore - internal component.
 */

        var TabIndicator_TabIndicator = compat_module["default"].forwardRef(function TabIndicator(props, ref) {
            var classes = props.classes
              , className = props.className
              , color = props.color
              , orientation = props.orientation
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "color", "orientation"]);

            return compat_module["default"].createElement("span", Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, classes["color".concat(Object(capitalize["a"/* default */
                ])(color))], className, {
                    vertical: classes.vertical
                }[orientation]),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var Tabs_TabIndicator = (Object(withStyles["a"/* default */
        ])(TabIndicator_styles, {
            name: 'PrivateTabIndicator'
        })(TabIndicator_TabIndicator));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js

        /* eslint-disable jsx-a11y/aria-role */

        var TabScrollButton_styles = {
            root: {
                width: 40,
                flexShrink: 0
            },
            vertical: {
                width: '100%',
                height: 40,
                '& svg': {
                    transform: 'rotate(90deg)'
                }
            }
        };
        /**
 * @ignore - internal component.
 */

        var TabScrollButton_ref = compat_module["default"].createElement(KeyboardArrowLeft, {
            fontSize: "small"
        });

        var TabScrollButton_ref2 = compat_module["default"].createElement(KeyboardArrowRight, {
            fontSize: "small"
        });

        var TabScrollButton_TabScrollButton = compat_module["default"].forwardRef(function TabScrollButton(props, ref) {
            var classes = props.classes
              , classNameProp = props.className
              , direction = props.direction
              , orientation = props.orientation
              , visible = props.visible
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "className", "direction", "orientation", "visible"]);

            var className = Object(clsx_m["a"/* default */
            ])(classes.root, classNameProp, {
                vertical: classes.vertical
            }[orientation]);

            if (!visible) {
                return compat_module["default"].createElement("div", {
                    className: className
                });
            }

            return compat_module["default"].createElement(ButtonBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                component: "div",
                className: className,
                ref: ref,
                role: null,
                tabIndex: null
            }, other), direction === 'left' ? TabScrollButton_ref : TabScrollButton_ref2);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var Tabs_TabScrollButton = (Object(withStyles["a"/* default */
        ])(TabScrollButton_styles, {
            name: 'PrivateTabScrollButton'
        })(TabScrollButton_TabScrollButton));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tabs/Tabs.js

        var Tabs_styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    overflow: 'hidden',
                    minHeight: 48,
                    WebkitOverflowScrolling: 'touch',
                    // Add iOS momentum scrolling.
                    display: 'flex'
                },

                /* Styles applied to the root element if `orientation="vertical"`. */
                vertical: {
                    flexDirection: 'column'
                },

                /* Styles applied to the flex container element. */
                flexContainer: {
                    display: 'flex'
                },

                /* Styles applied to the flex container element if `orientation="vertical"`. */
                flexContainerVertical: {
                    flexDirection: 'column'
                },

                /* Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */
                centered: {
                    justifyContent: 'center'
                },

                /* Styles applied to the tablist element. */
                scroller: {
                    position: 'relative',
                    display: 'inline-block',
                    flex: '1 1 auto',
                    whiteSpace: 'nowrap'
                },

                /* Styles applied to the tablist element if `!variant="scrollable"`. */
                fixed: {
                    overflowX: 'hidden',
                    width: '100%'
                },

                /* Styles applied to the tablist element if `variant="scrollable"`. */
                scrollable: {
                    overflowX: 'scroll',
                    // Hide dimensionless scrollbar on MacOS
                    scrollbarWidth: 'none',
                    // Firefox
                    '&::-webkit-scrollbar': {
                        display: 'none'// Safari + Chrome

                    }
                },

                /* Styles applied to the `ScrollButtonComponent` component. */
                scrollButtons: {},

                /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons="auto"` or scrollButtons="desktop"`. */
                scrollButtonsDesktop: Object(defineProperty["a"/* default */
                ])({}, theme.breakpoints.down('xs'), {
                    display: 'none'
                }),

                /* Styles applied to the `TabIndicator` component. */
                indicator: {}
            };
        };
        var Tabs_Tabs = compat_module["default"].forwardRef(function Tabs(props, ref) {
            var action = props.action
              , _props$centered = props.centered
              , centered = _props$centered === void 0 ? false : _props$centered
              , childrenProp = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$indicatorColor = props.indicatorColor
              , indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor
              , onChange = props.onChange
              , _props$orientation = props.orientation
              , orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation
              , _props$ScrollButtonCo = props.ScrollButtonComponent
              , ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? Tabs_TabScrollButton : _props$ScrollButtonCo
              , _props$scrollButtons = props.scrollButtons
              , scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons
              , _props$TabIndicatorPr = props.TabIndicatorProps
              , TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr
              , _props$textColor = props.textColor
              , textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor
              , value = props.value
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["action", "centered", "children", "classes", "className", "component", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "TabIndicatorProps", "textColor", "value", "variant"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var scrollable = variant === 'scrollable';
            var isRtl = theme.direction === 'rtl';
            var vertical = orientation === 'vertical';
            var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';
            var start = vertical ? 'top' : 'left';
            var end = vertical ? 'bottom' : 'right';
            var clientSize = vertical ? 'clientHeight' : 'clientWidth';
            var size = vertical ? 'height' : 'width';

            if (false) {}

            var _React$useState = compat_module["default"].useState(false)
              , mounted = _React$useState[0]
              , setMounted = _React$useState[1];

            var _React$useState2 = compat_module["default"].useState({})
              , indicatorStyle = _React$useState2[0]
              , setIndicatorStyle = _React$useState2[1];

            var _React$useState3 = compat_module["default"].useState({
                start: false,
                end: false
            })
              , displayScroll = _React$useState3[0]
              , setDisplayScroll = _React$useState3[1];

            var _React$useState4 = compat_module["default"].useState({
                overflow: 'hidden',
                marginBottom: null
            })
              , scrollerStyle = _React$useState4[0]
              , setScrollerStyle = _React$useState4[1];

            var valueToIndex = new Map();
            var tabsRef = compat_module["default"].useRef(null);
            var childrenWrapperRef = compat_module["default"].useRef(null);

            var getTabsMeta = function getTabsMeta() {
                var tabsNode = tabsRef.current;
                var tabsMeta;

                if (tabsNode) {
                    var rect = tabsNode.getBoundingClientRect();
                    // create a new object with ClientRect class props + scrollLeft

                    tabsMeta = {
                        clientWidth: tabsNode.clientWidth,
                        scrollLeft: tabsNode.scrollLeft,
                        scrollTop: tabsNode.scrollTop,
                        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),
                        scrollWidth: tabsNode.scrollWidth,
                        top: rect.top,
                        bottom: rect.bottom,
                        left: rect.left,
                        right: rect.right
                    };
                }

                var tabMeta;

                if (tabsNode && value !== false) {
                    var _children = childrenWrapperRef.current.children;

                    if (_children.length > 0) {
                        var tab = _children[valueToIndex.get(value)];

                        if (false) {}

                        tabMeta = tab ? tab.getBoundingClientRect() : null;
                    }
                }

                return {
                    tabsMeta: tabsMeta,
                    tabMeta: tabMeta
                };
            };

            var updateIndicatorState = Object(useEventCallback["a"/* default */
            ])(function() {
                var _newIndicatorStyle;

                var _getTabsMeta = getTabsMeta()
                  , tabsMeta = _getTabsMeta.tabsMeta
                  , tabMeta = _getTabsMeta.tabMeta;

                var startValue = 0;

                if (tabMeta && tabsMeta) {
                    if (vertical) {
                        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
                    } else {
                        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
                        startValue = tabMeta.left - tabsMeta.left + correction;
                    }
                }

                var newIndicatorStyle = (_newIndicatorStyle = {},
                Object(defineProperty["a"/* default */
                ])(_newIndicatorStyle, start, startValue),
                Object(defineProperty["a"/* default */
                ])(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0),
                _newIndicatorStyle);

                if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {
                    setIndicatorStyle(newIndicatorStyle);
                } else {
                    var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);
                    var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);

                    if (dStart >= 1 || dSize >= 1) {
                        setIndicatorStyle(newIndicatorStyle);
                    }
                }
            });

            var scroll = function scroll(scrollValue) {
                animate(scrollStart, tabsRef.current, scrollValue);
            };

            var moveTabsScroll = function moveTabsScroll(delta) {
                var scrollValue = tabsRef.current[scrollStart];

                if (vertical) {
                    scrollValue += delta;
                } else {
                    scrollValue += delta * (isRtl ? -1 : 1);
                    // Fix for Edge

                    scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;
                }

                scroll(scrollValue);
            };

            var handleStartScrollClick = function handleStartScrollClick() {
                moveTabsScroll(-tabsRef.current[clientSize]);
            };

            var handleEndScrollClick = function handleEndScrollClick() {
                moveTabsScroll(tabsRef.current[clientSize]);
            };

            var handleScrollbarSizeChange = compat_module["default"].useCallback(function(scrollbarHeight) {
                setScrollerStyle({
                    overflow: null,
                    marginBottom: -scrollbarHeight
                });
            }, []);

            var getConditionalElements = function getConditionalElements() {
                var conditionalElements = {};
                conditionalElements.scrollbarSizeListener = scrollable ? compat_module["default"].createElement(ScrollbarSize, {
                    className: classes.scrollable,
                    onChange: handleScrollbarSizeChange
                }) : null;
                var scrollButtonsActive = displayScroll.start || displayScroll.end;
                var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');
                conditionalElements.scrollButtonStart = showScrollButtons ? compat_module["default"].createElement(ScrollButtonComponent, {
                    orientation: orientation,
                    direction: isRtl ? 'right' : 'left',
                    onClick: handleStartScrollClick,
                    visible: displayScroll.start,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
                }) : null;
                conditionalElements.scrollButtonEnd = showScrollButtons ? compat_module["default"].createElement(ScrollButtonComponent, {
                    orientation: orientation,
                    direction: isRtl ? 'left' : 'right',
                    onClick: handleEndScrollClick,
                    visible: displayScroll.end,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
                }) : null;
                return conditionalElements;
            };

            var scrollSelectedIntoView = Object(useEventCallback["a"/* default */
            ])(function() {
                var _getTabsMeta2 = getTabsMeta()
                  , tabsMeta = _getTabsMeta2.tabsMeta
                  , tabMeta = _getTabsMeta2.tabMeta;

                if (!tabMeta || !tabsMeta) {
                    return;
                }

                if (tabMeta[start] < tabsMeta[start]) {
                    // left side of button is out of view
                    var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);
                    scroll(nextScrollStart);
                } else if (tabMeta[end] > tabsMeta[end]) {
                    // right side of button is out of view
                    var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);

                    scroll(_nextScrollStart);
                }
            });
            var updateScrollButtonState = Object(useEventCallback["a"/* default */
            ])(function() {
                if (scrollable && scrollButtons !== 'off') {
                    var _tabsRef$current = tabsRef.current
                      , scrollTop = _tabsRef$current.scrollTop
                      , scrollHeight = _tabsRef$current.scrollHeight
                      , clientHeight = _tabsRef$current.clientHeight
                      , scrollWidth = _tabsRef$current.scrollWidth
                      , clientWidth = _tabsRef$current.clientWidth;
                    var showStartScroll;
                    var showEndScroll;

                    if (vertical) {
                        showStartScroll = scrollTop > 1;
                        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;
                    } else {
                        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction);
                        // use 1 for the potential rounding error with browser zooms.

                        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
                        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
                    }

                    if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {
                        setDisplayScroll({
                            start: showStartScroll,
                            end: showEndScroll
                        });
                    }
                }
            });
            compat_module["default"].useEffect(function() {
                var handleResize = Object(debounce["a"/* default */
                ])(function() {
                    updateIndicatorState();
                    updateScrollButtonState();
                });
                var win = Object(ownerWindow["a"/* default */
                ])(tabsRef.current);
                win.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    win.removeEventListener('resize', handleResize);
                }
                ;
            }, [updateIndicatorState, updateScrollButtonState]);
            var handleTabsScroll = compat_module["default"].useCallback(Object(debounce["a"/* default */
            ])(function() {
                updateScrollButtonState();
            }));
            compat_module["default"].useEffect(function() {
                return function() {
                    handleTabsScroll.clear();
                }
                ;
            }, [handleTabsScroll]);
            compat_module["default"].useEffect(function() {
                setMounted(true);
            }, []);
            compat_module["default"].useEffect(function() {
                updateIndicatorState();
                updateScrollButtonState();
            });
            compat_module["default"].useEffect(function() {
                scrollSelectedIntoView();
            }, [scrollSelectedIntoView, indicatorStyle]);
            compat_module["default"].useImperativeHandle(action, function() {
                return {
                    updateIndicator: updateIndicatorState,
                    updateScrollButtons: updateScrollButtonState
                };
            }, [updateIndicatorState, updateScrollButtonState]);
            var indicator = compat_module["default"].createElement(Tabs_TabIndicator, Object(esm_extends["a"/* default */
            ])({
                className: classes.indicator,
                orientation: orientation,
                color: indicatorColor
            }, TabIndicatorProps, {
                style: Object(esm_extends["a"/* default */
                ])({}, indicatorStyle, {}, TabIndicatorProps.style)
            }));
            var childIndex = 0;
            var children = compat_module["default"].Children.map(childrenProp, function(child) {
                if (!compat_module["default"].isValidElement(child)) {
                    return null;
                }

                if (false) {}

                var childValue = child.props.value === undefined ? childIndex : child.props.value;
                valueToIndex.set(childValue, childIndex);
                var selected = childValue === value;
                childIndex += 1;
                return compat_module["default"].cloneElement(child, {
                    fullWidth: variant === 'fullWidth',
                    indicator: selected && !mounted && indicator,
                    selected: selected,
                    onChange: onChange,
                    textColor: textColor,
                    value: childValue
                });
            });
            var conditionalElements = getConditionalElements();
            return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className, vertical && classes.vertical),
                ref: ref
            }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.scroller, scrollable ? classes.scrollable : classes.fixed),
                style: scrollerStyle,
                ref: tabsRef,
                onScroll: handleTabsScroll
            }, compat_module["default"].createElement("div", {
                className: Object(clsx_m["a"/* default */
                ])(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),
                ref: childrenWrapperRef,
                role: "tablist"
            }, children), mounted && indicator), conditionalElements.scrollButtonEnd);
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Tabs_Tabs = (Object(withStyles["a"/* default */
        ])(Tabs_styles, {
            name: 'MuiTabs'
        })(Tabs_Tabs));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/TextField/TextField.js

        var variantComponent = {
            standard: Input["a"/* default */
            ],
            filled: FilledInput["a"/* default */
            ],
            outlined: OutlinedInput["a"/* default */
            ]
        };
        var TextField_styles = {
            /* Styles applied to the root element. */
            root: {}
        };
        /**
 * The `TextField` is a convenience wrapper for the most common cases (80%).
 * It cannot be all things to all people, otherwise the API would grow out of control.
 *
 * ## Advanced Configuration
 *
 * It's important to understand that the text field is a simple abstraction
 * on top of the following components:
 *
 * - [FormControl](/api/form-control/)
 * - [InputLabel](/api/input-label/)
 * - [FilledInput](/api/filled-input/)
 * - [OutlinedInput](/api/outlined-input/)
 * - [Input](/api/input/)
 * - [FormHelperText](/api/form-helper-text/)
 *
 * If you wish to alter the props applied to the `input` element, you can do so as follows:
 *
 * ```jsx
 * const inputProps = {
 *   step: 300,
 * };
 *
 * return <TextField id="time" type="time" inputProps={inputProps} />;
 * ```
 *
 * For advanced cases, please look at the source of TextField by clicking on the
 * "Edit this page" button above. Consider either:
 *
 * - using the upper case props for passing values directly to the components
 * - using the underlying components directly as shown in the demos
 */

        var TextField_TextField = compat_module["default"].forwardRef(function TextField(props, ref) {
            var autoComplete = props.autoComplete
              , _props$autoFocus = props.autoFocus
              , autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'primary' : _props$color
              , defaultValue = props.defaultValue
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$error = props.error
              , error = _props$error === void 0 ? false : _props$error
              , FormHelperTextProps = props.FormHelperTextProps
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , helperText = props.helperText
              , hiddenLabel = props.hiddenLabel
              , id = props.id
              , InputLabelProps = props.InputLabelProps
              , inputProps = props.inputProps
              , InputProps = props.InputProps
              , inputRef = props.inputRef
              , label = props.label
              , _props$multiline = props.multiline
              , multiline = _props$multiline === void 0 ? false : _props$multiline
              , name = props.name
              , onBlur = props.onBlur
              , onChange = props.onChange
              , onFocus = props.onFocus
              , placeholder = props.placeholder
              , _props$required = props.required
              , required = _props$required === void 0 ? false : _props$required
              , rows = props.rows
              , rowsMax = props.rowsMax
              , _props$select = props.select
              , select = _props$select === void 0 ? false : _props$select
              , SelectProps = props.SelectProps
              , type = props.type
              , value = props.value
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'standard' : _props$variant
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["autoComplete", "autoFocus", "children", "classes", "className", "color", "defaultValue", "disabled", "error", "FormHelperTextProps", "fullWidth", "helperText", "hiddenLabel", "id", "InputLabelProps", "inputProps", "InputProps", "inputRef", "label", "multiline", "name", "onBlur", "onChange", "onFocus", "placeholder", "required", "rows", "rowsMax", "select", "SelectProps", "type", "value", "variant"]);

            if (false) {}

            var InputMore = {};

            if (variant === 'outlined') {
                if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {
                    InputMore.notched = InputLabelProps.shrink;
                }

                InputMore.label = label ? compat_module["default"].createElement(compat_module["default"].Fragment, null, label, required && "\xA0*") : label;
            }

            if (select) {
                // unset defaults from textbox inputs
                if (!SelectProps || !SelectProps.native) {
                    InputMore.id = undefined;
                }

                InputMore['aria-describedby'] = undefined;
            }

            var helperTextId = helperText && id ? "".concat(id, "-helper-text") : undefined;
            var inputLabelId = label && id ? "".concat(id, "-label") : undefined;
            var InputComponent = variantComponent[variant];
            var InputElement = compat_module["default"].createElement(InputComponent, Object(esm_extends["a"/* default */
            ])({
                "aria-describedby": helperTextId,
                autoComplete: autoComplete,
                autoFocus: autoFocus,
                defaultValue: defaultValue,
                fullWidth: fullWidth,
                multiline: multiline,
                name: name,
                rows: rows,
                rowsMax: rowsMax,
                type: type,
                value: value,
                id: id,
                inputRef: inputRef,
                onBlur: onBlur,
                onChange: onChange,
                onFocus: onFocus,
                placeholder: placeholder,
                inputProps: inputProps
            }, InputMore, InputProps));
            return compat_module["default"].createElement(FormControl["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                disabled: disabled,
                error: error,
                fullWidth: fullWidth,
                hiddenLabel: hiddenLabel,
                ref: ref,
                required: required,
                color: color,
                variant: variant
            }, other), label && compat_module["default"].createElement(InputLabel["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                htmlFor: id,
                id: inputLabelId
            }, InputLabelProps), label), select ? compat_module["default"].createElement(Select["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                "aria-describedby": helperTextId,
                id: id,
                labelId: inputLabelId,
                value: value,
                input: InputElement
            }, SelectProps), children) : InputElement, helperText && compat_module["default"].createElement(esm_FormHelperText_FormHelperText, Object(esm_extends["a"/* default */
            ])({
                id: helperTextId
            }, FormHelperTextProps), helperText));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_TextField_TextField = (Object(withStyles["a"/* default */
        ])(TextField_styles, {
            name: 'MuiTextField'
        })(TextField_TextField));
        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js
        var TextareaAutosize = __webpack_require__(757);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Tooltip/Tooltip.js

        function round(value) {
            return Math.round(value * 1e5) / 1e5;
        }

        function arrowGenerator() {
            return {
                '&[x-placement*="bottom"] $arrow': {
                    flip: false,
                    top: 0,
                    left: 0,
                    marginTop: '-0.95em',
                    marginLeft: 4,
                    marginRight: 4,
                    width: '2em',
                    height: '1em',
                    '&::before': {
                        flip: false,
                        borderWidth: '0 1em 1em 1em',
                        borderColor: 'transparent transparent currentcolor transparent'
                    }
                },
                '&[x-placement*="top"] $arrow': {
                    flip: false,
                    bottom: 0,
                    left: 0,
                    marginBottom: '-0.95em',
                    marginLeft: 4,
                    marginRight: 4,
                    width: '2em',
                    height: '1em',
                    '&::before': {
                        flip: false,
                        borderWidth: '1em 1em 0 1em',
                        borderColor: 'currentcolor transparent transparent transparent'
                    }
                },
                '&[x-placement*="right"] $arrow': {
                    flip: false,
                    left: 0,
                    marginLeft: '-0.95em',
                    marginTop: 4,
                    marginBottom: 4,
                    height: '2em',
                    width: '1em',
                    '&::before': {
                        flip: false,
                        borderWidth: '1em 1em 1em 0',
                        borderColor: 'transparent currentcolor transparent transparent'
                    }
                },
                '&[x-placement*="left"] $arrow': {
                    flip: false,
                    right: 0,
                    marginRight: '-0.95em',
                    marginTop: 4,
                    marginBottom: 4,
                    height: '2em',
                    width: '1em',
                    '&::before': {
                        flip: false,
                        borderWidth: '1em 0 1em 1em',
                        borderColor: 'transparent transparent transparent currentcolor'
                    }
                }
            };
        }

        var Tooltip_styles = function styles(theme) {
            return {
                /* Styles applied to the Popper component. */
                popper: {
                    zIndex: theme.zIndex.tooltip,
                    pointerEvents: 'none',
                    flip: false // disable jss-rtl plugin

                },

                /* Styles applied to the Popper component if `interactive={true}`. */
                popperInteractive: {
                    pointerEvents: 'auto'
                },

                /* Styles applied to the Popper component if `arrow={true}`. */
                popperArrow: arrowGenerator(),

                /* Styles applied to the tooltip (label wrapper) element. */
                tooltip: {
                    backgroundColor: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.grey[700], 0.9),
                    borderRadius: theme.shape.borderRadius,
                    color: theme.palette.common.white,
                    fontFamily: theme.typography.fontFamily,
                    padding: '4px 8px',
                    fontSize: theme.typography.pxToRem(10),
                    lineHeight: "".concat(round(14 / 10), "em"),
                    maxWidth: 300,
                    wordWrap: 'break-word',
                    fontWeight: theme.typography.fontWeightMedium
                },

                /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */
                tooltipArrow: {
                    position: 'relative',
                    margin: '0'
                },

                /* Styles applied to the arrow element. */
                arrow: {
                    position: 'absolute',
                    fontSize: 6,
                    color: Object(colorManipulator["d"/* fade */
                    ])(theme.palette.grey[700], 0.9),
                    '&::before': {
                        content: '""',
                        margin: 'auto',
                        display: 'block',
                        width: 0,
                        height: 0,
                        borderStyle: 'solid'
                    }
                },

                /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */
                touch: {
                    padding: '8px 16px',
                    fontSize: theme.typography.pxToRem(14),
                    lineHeight: "".concat(round(16 / 14), "em"),
                    fontWeight: theme.typography.fontWeightRegular
                },

                /* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */
                tooltipPlacementLeft: Object(defineProperty["a"/* default */
                ])({
                    transformOrigin: 'right center',
                    margin: '0 24px '
                }, theme.breakpoints.up('sm'), {
                    margin: '0 14px'
                }),

                /* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */
                tooltipPlacementRight: Object(defineProperty["a"/* default */
                ])({
                    transformOrigin: 'left center',
                    margin: '0 24px'
                }, theme.breakpoints.up('sm'), {
                    margin: '0 14px'
                }),

                /* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */
                tooltipPlacementTop: Object(defineProperty["a"/* default */
                ])({
                    transformOrigin: 'center bottom',
                    margin: '24px 0'
                }, theme.breakpoints.up('sm'), {
                    margin: '14px 0'
                }),

                /* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */
                tooltipPlacementBottom: Object(defineProperty["a"/* default */
                ])({
                    transformOrigin: 'center top',
                    margin: '24px 0'
                }, theme.breakpoints.up('sm'), {
                    margin: '14px 0'
                })
            };
        };
        var hystersisOpen = false;
        var hystersisTimer = null;
        function testReset() {
            hystersisOpen = false;
            clearTimeout(hystersisTimer);
        }
        var Tooltip_Tooltip = compat_module["default"].forwardRef(function Tooltip(props, ref) {
            var _props$arrow = props.arrow
              , arrow = _props$arrow === void 0 ? false : _props$arrow
              , children = props.children
              , classes = props.classes
              , _props$disableFocusLi = props.disableFocusListener
              , disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi
              , _props$disableHoverLi = props.disableHoverListener
              , disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi
              , _props$disableTouchLi = props.disableTouchListener
              , disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi
              , _props$enterDelay = props.enterDelay
              , enterDelay = _props$enterDelay === void 0 ? 0 : _props$enterDelay
              , _props$enterTouchDela = props.enterTouchDelay
              , enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela
              , idProp = props.id
              , _props$interactive = props.interactive
              , interactive = _props$interactive === void 0 ? false : _props$interactive
              , _props$leaveDelay = props.leaveDelay
              , leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay
              , _props$leaveTouchDela = props.leaveTouchDelay
              , leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela
              , onClose = props.onClose
              , onOpen = props.onOpen
              , openProp = props.open
              , _props$placement = props.placement
              , placement = _props$placement === void 0 ? 'bottom' : _props$placement
              , PopperProps = props.PopperProps
              , title = props.title
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? Grow["a"/* default */
            ] : _props$TransitionComp
              , TransitionProps = props.TransitionProps
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["arrow", "children", "classes", "disableFocusListener", "disableHoverListener", "disableTouchListener", "enterDelay", "enterTouchDelay", "id", "interactive", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperProps", "title", "TransitionComponent", "TransitionProps"]);

            var theme = Object(useTheme["a"/* default */
            ])();

            var _React$useState = compat_module["default"].useState()
              , childNode = _React$useState[0]
              , setChildNode = _React$useState[1];

            var _React$useState2 = compat_module["default"].useState(null)
              , arrowRef = _React$useState2[0]
              , setArrowRef = _React$useState2[1];

            var ignoreNonTouchEvents = compat_module["default"].useRef(false);
            var closeTimer = compat_module["default"].useRef();
            var enterTimer = compat_module["default"].useRef();
            var leaveTimer = compat_module["default"].useRef();
            var touchTimer = compat_module["default"].useRef();

            var _useControlled = Object(useControlled["a"/* default */
            ])({
                controlled: openProp,
                default: false,
                name: 'Tooltip'
            })
              , _useControlled2 = Object(slicedToArray["a"/* default */
            ])(_useControlled, 2)
              , openState = _useControlled2[0]
              , setOpenState = _useControlled2[1];

            var open = openState;

            if (false) {
                var _React$useRef, isControlled;
            }

            var _React$useState3 = compat_module["default"].useState()
              , defaultId = _React$useState3[0]
              , setDefaultId = _React$useState3[1];

            var id = idProp || defaultId;
            compat_module["default"].useEffect(function() {
                if (!open || defaultId) {
                    return;
                }
                // Fallback to this default id when possible.
                // Use the random value for client-side rendering only.
                // We can't use it server-side.

                setDefaultId("mui-tooltip-".concat(Math.round(Math.random() * 1e5)));
            }, [open, defaultId]);
            compat_module["default"].useEffect(function() {
                return function() {
                    clearTimeout(closeTimer.current);
                    clearTimeout(enterTimer.current);
                    clearTimeout(leaveTimer.current);
                    clearTimeout(touchTimer.current);
                }
                ;
            }, []);

            var handleOpen = function handleOpen(event) {
                clearTimeout(hystersisTimer);
                hystersisOpen = true;
                // The mouseover event will trigger for every nested element in the tooltip.
                // We can skip rerendering when the tooltip is already open.
                // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.

                setOpenState(true);

                if (onOpen) {
                    onOpen(event);
                }
            };

            var handleEnter = function handleEnter(event) {
                var childrenProps = children.props;

                if (event.type === 'mouseover' && childrenProps.onMouseOver && event.currentTarget === childNode) {
                    childrenProps.onMouseOver(event);
                }

                if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {
                    return;
                }
                // Remove the title ahead of time.
                // We don't want to wait for the next render commit.
                // We would risk displaying two tooltips at the same time (native + this one).

                if (childNode) {
                    childNode.removeAttribute('title');
                }

                clearTimeout(enterTimer.current);
                clearTimeout(leaveTimer.current);

                if (enterDelay && !hystersisOpen) {
                    event.persist();
                    enterTimer.current = setTimeout(function() {
                        handleOpen(event);
                    }, enterDelay);
                } else {
                    handleOpen(event);
                }
            };

            var _useIsFocusVisible = Object(utils_focusVisible["a"/* useIsFocusVisible */
            ])()
              , isFocusVisible = _useIsFocusVisible.isFocusVisible
              , onBlurVisible = _useIsFocusVisible.onBlurVisible
              , focusVisibleRef = _useIsFocusVisible.ref;

            var _React$useState4 = compat_module["default"].useState(false)
              , childIsFocusVisible = _React$useState4[0]
              , setChildIsFocusVisible = _React$useState4[1];

            var handleBlur = function handleBlur() {
                if (childIsFocusVisible) {
                    setChildIsFocusVisible(false);
                    onBlurVisible();
                }
            };

            var handleFocus = function handleFocus(event) {
                // Workaround for https://github.com/facebook/react/issues/7769
                // The autoFocus of React might trigger the event before the componentDidMount.
                // We need to account for this eventuality.
                if (!childNode) {
                    setChildNode(event.currentTarget);
                }

                if (isFocusVisible(event)) {
                    setChildIsFocusVisible(true);
                    handleEnter(event);
                }

                var childrenProps = children.props;

                if (childrenProps.onFocus && event.currentTarget === childNode) {
                    childrenProps.onFocus(event);
                }
            };

            var handleClose = function handleClose(event) {
                clearTimeout(hystersisTimer);
                hystersisTimer = setTimeout(function() {
                    hystersisOpen = false;
                }, 500);
                // Use 500 ms per https://github.com/reach/reach-ui/blob/3b5319027d763a3082880be887d7a29aee7d3afc/packages/tooltip/src/index.js#L214

                setOpenState(false);

                if (onClose) {
                    onClose(event);
                }

                clearTimeout(closeTimer.current);
                closeTimer.current = setTimeout(function() {
                    ignoreNonTouchEvents.current = false;
                }, theme.transitions.duration.shortest);
            };

            var handleLeave = function handleLeave(event) {
                var childrenProps = children.props;

                if (event.type === 'blur') {
                    if (childrenProps.onBlur && event.currentTarget === childNode) {
                        childrenProps.onBlur(event);
                    }

                    handleBlur(event);
                }

                if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {
                    childrenProps.onMouseLeave(event);
                }

                clearTimeout(enterTimer.current);
                clearTimeout(leaveTimer.current);
                event.persist();
                leaveTimer.current = setTimeout(function() {
                    handleClose(event);
                }, leaveDelay);
            };

            var handleTouchStart = function handleTouchStart(event) {
                ignoreNonTouchEvents.current = true;
                var childrenProps = children.props;

                if (childrenProps.onTouchStart) {
                    childrenProps.onTouchStart(event);
                }

                clearTimeout(leaveTimer.current);
                clearTimeout(closeTimer.current);
                clearTimeout(touchTimer.current);
                event.persist();
                touchTimer.current = setTimeout(function() {
                    handleEnter(event);
                }, enterTouchDelay);
            };

            var handleTouchEnd = function handleTouchEnd(event) {
                if (children.props.onTouchEnd) {
                    children.props.onTouchEnd(event);
                }

                clearTimeout(touchTimer.current);
                clearTimeout(leaveTimer.current);
                event.persist();
                leaveTimer.current = setTimeout(function() {
                    handleClose(event);
                }, leaveTouchDelay);
            };

            var handleUseRef = Object(useForkRef["a"/* default */
            ])(setChildNode, ref);
            var handleFocusRef = Object(useForkRef["a"/* default */
            ])(focusVisibleRef, handleUseRef);
            // can be removed once we drop support for non ref forwarding class components

            var handleOwnRef = compat_module["default"].useCallback(function(instance) {
                // #StrictMode ready
                Object(setRef["a"/* default */
                ])(handleFocusRef, compat_module["default"].findDOMNode(instance));
            }, [handleFocusRef]);
            var handleRef = Object(useForkRef["a"/* default */
            ])(children.ref, handleOwnRef);
            // There is no point in displaying an empty tooltip.

            if (title === '') {
                open = false;
            }
            // For accessibility and SEO concerns, we render the title to the DOM node when
            // the tooltip is hidden. However, we have made a tradeoff when
            // `disableHoverListener` is set. This title logic is disabled.
            // It's allowing us to keep the implementation size minimal.
            // We are open to change the tradeoff.

            var shouldShowNativeTitle = !open && !disableHoverListener;

            var childrenProps = Object(esm_extends["a"/* default */
            ])({
                'aria-describedby': open ? id : null,
                title: shouldShowNativeTitle && typeof title === 'string' ? title : null
            }, other, {}, children.props, {
                className: Object(clsx_m["a"/* default */
                ])(other.className, children.props.className)
            });

            if (!disableTouchListener) {
                childrenProps.onTouchStart = handleTouchStart;
                childrenProps.onTouchEnd = handleTouchEnd;
            }

            if (!disableHoverListener) {
                childrenProps.onMouseOver = handleEnter;
                childrenProps.onMouseLeave = handleLeave;
            }

            if (!disableFocusListener) {
                childrenProps.onFocus = handleFocus;
                childrenProps.onBlur = handleLeave;
            }

            var interactiveWrapperListeners = interactive ? {
                onMouseOver: childrenProps.onMouseOver,
                onMouseLeave: childrenProps.onMouseLeave,
                onFocus: childrenProps.onFocus,
                onBlur: childrenProps.onBlur
            } : {};

            if (false) {}
            // Avoid the creation of a new Popper.js instance at each render.

            var popperOptions = compat_module["default"].useMemo(function() {
                return {
                    modifiers: {
                        arrow: {
                            enabled: Boolean(arrowRef),
                            element: arrowRef
                        }
                    }
                };
            }, [arrowRef]);
            return compat_module["default"].createElement(compat_module["default"].Fragment, null, compat_module["default"].cloneElement(children, Object(esm_extends["a"/* default */
            ])({
                ref: handleRef
            }, childrenProps)), compat_module["default"].createElement(esm_Popper_Popper, Object(esm_extends["a"/* default */
            ])({
                className: Object(clsx_m["a"/* default */
                ])(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),
                placement: placement,
                anchorEl: childNode,
                open: childNode ? open : false,
                id: childrenProps['aria-describedby'],
                transition: true,
                popperOptions: popperOptions
            }, interactiveWrapperListeners, PopperProps), function(_ref) {
                var placementInner = _ref.placement
                  , TransitionPropsInner = _ref.TransitionProps;
                return compat_module["default"].createElement(TransitionComponent, Object(esm_extends["a"/* default */
                ])({
                    timeout: theme.transitions.duration.shorter
                }, TransitionPropsInner, TransitionProps), compat_module["default"].createElement("div", {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.tooltip, classes["tooltipPlacement".concat(Object(capitalize["a"/* default */
                    ])(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)
                }, title, arrow ? compat_module["default"].createElement("span", {
                    className: classes.arrow,
                    ref: setArrowRef
                }) : null));
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Tooltip_Tooltip = (Object(withStyles["a"/* default */
        ])(Tooltip_styles, {
            name: 'MuiTooltip'
        })(Tooltip_Tooltip));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/useScrollTrigger/useScrollTrigger.js

        function getScrollY(ref) {
            return ref.pageYOffset !== undefined ? ref.pageYOffset : ref.scrollTop;
        }

        function defaultTrigger(event, store, options) {
            var _options$disableHyste = options.disableHysteresis
              , disableHysteresis = _options$disableHyste === void 0 ? false : _options$disableHyste
              , _options$threshold = options.threshold
              , threshold = _options$threshold === void 0 ? 100 : _options$threshold;
            var previous = store.current;
            store.current = event ? getScrollY(event.currentTarget) : previous;

            if (!disableHysteresis && previous !== undefined) {
                if (store.current < previous) {
                    return false;
                }
            }

            return store.current > threshold;
        }

        var defaultTarget = typeof window !== 'undefined' ? window : null;
        function useScrollTrigger() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            var _options$getTrigger = options.getTrigger
              , getTrigger = _options$getTrigger === void 0 ? defaultTrigger : _options$getTrigger
              , _options$target = options.target
              , target = _options$target === void 0 ? defaultTarget : _options$target
              , other = Object(objectWithoutProperties["a"/* default */
            ])(options, ["getTrigger", "target"]);

            var store = compat_module["default"].useRef();

            var _React$useState = compat_module["default"].useState(function() {
                return getTrigger(null, store, other);
            })
              , trigger = _React$useState[0]
              , setTrigger = _React$useState[1];

            compat_module["default"].useEffect(function() {
                var handleScroll = function handleScroll(event) {
                    setTrigger(getTrigger(event, store, other));
                };

                handleScroll(null);
                // Re-evaluate trigger when dependencies change

                target.addEventListener('scroll', handleScroll);
                return function() {
                    target.removeEventListener('scroll', handleScroll);
                }
                ;
                // See Option 3. https://github.com/facebook/react/issues/14476#issuecomment-471199055
                // eslint-disable-next-line react-hooks/exhaustive-deps
            }, [target, getTrigger, JSON.stringify(other)]);
            return trigger;
        }
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/withMobileDialog/withMobileDialog.js

        /**
 * Dialog will responsively be full screen *at or below* the given breakpoint
 * (defaults to 'sm' for mobile devices).
 * Notice that this Higher-order Component is incompatible with server-side rendering.
 */

        var withMobileDialog_withMobileDialog = function withMobileDialog() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return function(Component) {
                var _options$breakpoint = options.breakpoint
                  , breakpoint = _options$breakpoint === void 0 ? 'sm' : _options$breakpoint;

                function WithMobileDialog(props) {
                    return compat_module["default"].createElement(Component, Object(esm_extends["a"/* default */
                    ])({
                        fullScreen: withWidth_isWidthDown(breakpoint, props.width)
                    }, props));
                }

                false ? undefined : void 0;
                return esm_withWidth_withWidth()(WithMobileDialog);
            }
            ;
        };

        /* harmony default export */
        var esm_withMobileDialog_withMobileDialog = (withMobileDialog_withMobileDialog);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/withWidth/index.js

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/Zoom/Zoom.js

        var Zoom_styles = {
            entering: {
                transform: 'none'
            },
            entered: {
                transform: 'none'
            }
        };
        var Zoom_defaultTimeout = {
            enter: transitions["b"/* duration */
            ].enteringScreen,
            exit: transitions["b"/* duration */
            ].leavingScreen
        };
        /**
 * The Zoom transition can be used for the floating variant of the
 * [Button](/components/buttons/#floating-action-buttons) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

        var Zoom_Zoom = compat_module["default"].forwardRef(function Zoom(props, ref) {
            var children = props.children
              , inProp = props.in
              , onEnter = props.onEnter
              , onExit = props.onExit
              , style = props.style
              , _props$timeout = props.timeout
              , timeout = _props$timeout === void 0 ? Zoom_defaultTimeout : _props$timeout
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "in", "onEnter", "onExit", "style", "timeout"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var handleRef = Object(useForkRef["a"/* default */
            ])(children.ref, ref);

            var handleEnter = function handleEnter(node, isAppearing) {
                Object(utils["b"/* reflow */
                ])(node);
                // So the animation always start from the start.

                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'enter'
                });
                node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
                node.style.transition = theme.transitions.create('transform', transitionProps);

                if (onEnter) {
                    onEnter(node, isAppearing);
                }
            };

            var handleExit = function handleExit(node) {
                var transitionProps = Object(utils["a"/* getTransitionProps */
                ])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'exit'
                });
                node.style.webkitTransition = theme.transitions.create('transform', transitionProps);
                node.style.transition = theme.transitions.create('transform', transitionProps);

                if (onExit) {
                    onExit(node);
                }
            };

            return compat_module["default"].createElement(Transition["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                appear: true,
                in: inProp,
                onEnter: handleEnter,
                onExit: handleExit,
                timeout: timeout
            }, other), function(state, childProps) {
                return compat_module["default"].cloneElement(children, Object(esm_extends["a"/* default */
                ])({
                    style: Object(esm_extends["a"/* default */
                    ])({
                        transform: 'scale(0)',
                        visibility: state === 'exited' && !inProp ? 'hidden' : undefined
                    }, Zoom_styles[state], {}, style, {}, children.props.style),
                    ref: handleRef
                }, childProps));
            });
        });
        false ? undefined : void 0;
        /* harmony default export */
        var esm_Zoom_Zoom = (Zoom_Zoom);
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/index.js
        /* concated harmony reexport colors */
        __webpack_require__.d(__webpack_exports__, "colors", function() {
            return colors_namespaceObject;
        });
        /* concated harmony reexport hexToRgb */
        __webpack_require__.d(__webpack_exports__, "hexToRgb", function() {
            return esm_styles["hexToRgb"];
        });
        /* concated harmony reexport rgbToHex */
        __webpack_require__.d(__webpack_exports__, "rgbToHex", function() {
            return esm_styles["rgbToHex"];
        });
        /* concated harmony reexport hslToRgb */
        __webpack_require__.d(__webpack_exports__, "hslToRgb", function() {
            return esm_styles["hslToRgb"];
        });
        /* concated harmony reexport decomposeColor */
        __webpack_require__.d(__webpack_exports__, "decomposeColor", function() {
            return esm_styles["decomposeColor"];
        });
        /* concated harmony reexport recomposeColor */
        __webpack_require__.d(__webpack_exports__, "recomposeColor", function() {
            return esm_styles["recomposeColor"];
        });
        /* concated harmony reexport getContrastRatio */
        __webpack_require__.d(__webpack_exports__, "getContrastRatio", function() {
            return esm_styles["getContrastRatio"];
        });
        /* concated harmony reexport getLuminance */
        __webpack_require__.d(__webpack_exports__, "getLuminance", function() {
            return esm_styles["getLuminance"];
        });
        /* concated harmony reexport emphasize */
        __webpack_require__.d(__webpack_exports__, "emphasize", function() {
            return esm_styles["emphasize"];
        });
        /* concated harmony reexport fade */
        __webpack_require__.d(__webpack_exports__, "fade", function() {
            return esm_styles["fade"];
        });
        /* concated harmony reexport darken */
        __webpack_require__.d(__webpack_exports__, "darken", function() {
            return esm_styles["darken"];
        });
        /* concated harmony reexport lighten */
        __webpack_require__.d(__webpack_exports__, "lighten", function() {
            return esm_styles["lighten"];
        });
        /* concated harmony reexport createMuiTheme */
        __webpack_require__.d(__webpack_exports__, "createMuiTheme", function() {
            return esm_styles["createMuiTheme"];
        });
        /* concated harmony reexport createStyles */
        __webpack_require__.d(__webpack_exports__, "createStyles", function() {
            return esm_styles["createStyles"];
        });
        /* concated harmony reexport makeStyles */
        __webpack_require__.d(__webpack_exports__, "makeStyles", function() {
            return esm_styles["makeStyles"];
        });
        /* concated harmony reexport responsiveFontSizes */
        __webpack_require__.d(__webpack_exports__, "responsiveFontSizes", function() {
            return esm_styles["responsiveFontSizes"];
        });
        /* concated harmony reexport styled */
        __webpack_require__.d(__webpack_exports__, "styled", function() {
            return esm_styles["styled"];
        });
        /* concated harmony reexport easing */
        __webpack_require__.d(__webpack_exports__, "easing", function() {
            return esm_styles["easing"];
        });
        /* concated harmony reexport duration */
        __webpack_require__.d(__webpack_exports__, "duration", function() {
            return esm_styles["duration"];
        });
        /* concated harmony reexport useTheme */
        __webpack_require__.d(__webpack_exports__, "useTheme", function() {
            return esm_styles["useTheme"];
        });
        /* concated harmony reexport withStyles */
        __webpack_require__.d(__webpack_exports__, "withStyles", function() {
            return esm_styles["withStyles"];
        });
        /* concated harmony reexport withTheme */
        __webpack_require__.d(__webpack_exports__, "withTheme", function() {
            return esm_styles["withTheme"];
        });
        /* concated harmony reexport createGenerateClassName */
        __webpack_require__.d(__webpack_exports__, "createGenerateClassName", function() {
            return esm_styles["createGenerateClassName"];
        });
        /* concated harmony reexport jssPreset */
        __webpack_require__.d(__webpack_exports__, "jssPreset", function() {
            return esm_styles["jssPreset"];
        });
        /* concated harmony reexport ServerStyleSheets */
        __webpack_require__.d(__webpack_exports__, "ServerStyleSheets", function() {
            return esm_styles["ServerStyleSheets"];
        });
        /* concated harmony reexport StylesProvider */
        __webpack_require__.d(__webpack_exports__, "StylesProvider", function() {
            return esm_styles["StylesProvider"];
        });
        /* concated harmony reexport MuiThemeProvider */
        __webpack_require__.d(__webpack_exports__, "MuiThemeProvider", function() {
            return esm_styles["MuiThemeProvider"];
        });
        /* concated harmony reexport ThemeProvider */
        __webpack_require__.d(__webpack_exports__, "ThemeProvider", function() {
            return esm_styles["ThemeProvider"];
        });
        /* concated harmony reexport AppBar */
        __webpack_require__.d(__webpack_exports__, "AppBar", function() {
            return esm_AppBar_AppBar;
        });
        /* concated harmony reexport Avatar */
        __webpack_require__.d(__webpack_exports__, "Avatar", function() {
            return esm_Avatar_Avatar;
        });
        /* concated harmony reexport Backdrop */
        __webpack_require__.d(__webpack_exports__, "Backdrop", function() {
            return esm_Backdrop_Backdrop;
        });
        /* concated harmony reexport Badge */
        __webpack_require__.d(__webpack_exports__, "Badge", function() {
            return esm_Badge_Badge;
        });
        /* concated harmony reexport BottomNavigation */
        __webpack_require__.d(__webpack_exports__, "BottomNavigation", function() {
            return esm_BottomNavigation_BottomNavigation;
        });
        /* concated harmony reexport BottomNavigationAction */
        __webpack_require__.d(__webpack_exports__, "BottomNavigationAction", function() {
            return esm_BottomNavigationAction_BottomNavigationAction;
        });
        /* concated harmony reexport Box */
        __webpack_require__.d(__webpack_exports__, "Box", function() {
            return Box_Box;
        });
        /* concated harmony reexport styleFunction */
        __webpack_require__.d(__webpack_exports__, "styleFunction", function() {
            return Box_styleFunction;
        });
        /* concated harmony reexport Breadcrumbs */
        __webpack_require__.d(__webpack_exports__, "Breadcrumbs", function() {
            return esm_Breadcrumbs_Breadcrumbs;
        });
        /* concated harmony reexport Button */
        __webpack_require__.d(__webpack_exports__, "Button", function() {
            return Button["a"/* default */
            ];
        });
        /* concated harmony reexport ButtonBase */
        __webpack_require__.d(__webpack_exports__, "ButtonBase", function() {
            return ButtonBase["a"/* default */
            ];
        });
        /* concated harmony reexport ButtonGroup */
        __webpack_require__.d(__webpack_exports__, "ButtonGroup", function() {
            return esm_ButtonGroup_ButtonGroup;
        });
        /* concated harmony reexport Card */
        __webpack_require__.d(__webpack_exports__, "Card", function() {
            return esm_Card_Card;
        });
        /* concated harmony reexport CardActionArea */
        __webpack_require__.d(__webpack_exports__, "CardActionArea", function() {
            return esm_CardActionArea_CardActionArea;
        });
        /* concated harmony reexport CardActions */
        __webpack_require__.d(__webpack_exports__, "CardActions", function() {
            return esm_CardActions_CardActions;
        });
        /* concated harmony reexport CardContent */
        __webpack_require__.d(__webpack_exports__, "CardContent", function() {
            return esm_CardContent_CardContent;
        });
        /* concated harmony reexport CardHeader */
        __webpack_require__.d(__webpack_exports__, "CardHeader", function() {
            return esm_CardHeader_CardHeader;
        });
        /* concated harmony reexport CardMedia */
        __webpack_require__.d(__webpack_exports__, "CardMedia", function() {
            return esm_CardMedia_CardMedia;
        });
        /* concated harmony reexport Checkbox */
        __webpack_require__.d(__webpack_exports__, "Checkbox", function() {
            return esm_Checkbox_Checkbox;
        });
        /* concated harmony reexport Chip */
        __webpack_require__.d(__webpack_exports__, "Chip", function() {
            return esm_Chip_Chip;
        });
        /* concated harmony reexport CircularProgress */
        __webpack_require__.d(__webpack_exports__, "CircularProgress", function() {
            return esm_CircularProgress_CircularProgress;
        });
        /* concated harmony reexport ClickAwayListener */
        __webpack_require__.d(__webpack_exports__, "ClickAwayListener", function() {
            return esm_ClickAwayListener_ClickAwayListener;
        });
        /* concated harmony reexport Collapse */
        __webpack_require__.d(__webpack_exports__, "Collapse", function() {
            return esm_Collapse_Collapse;
        });
        /* concated harmony reexport Container */
        __webpack_require__.d(__webpack_exports__, "Container", function() {
            return esm_Container_Container;
        });
        /* concated harmony reexport CssBaseline */
        __webpack_require__.d(__webpack_exports__, "CssBaseline", function() {
            return CssBaseline_CssBaseline;
        });
        /* concated harmony reexport Dialog */
        __webpack_require__.d(__webpack_exports__, "Dialog", function() {
            return esm_Dialog_Dialog;
        });
        /* concated harmony reexport DialogActions */
        __webpack_require__.d(__webpack_exports__, "DialogActions", function() {
            return esm_DialogActions_DialogActions;
        });
        /* concated harmony reexport DialogContent */
        __webpack_require__.d(__webpack_exports__, "DialogContent", function() {
            return esm_DialogContent_DialogContent;
        });
        /* concated harmony reexport DialogContentText */
        __webpack_require__.d(__webpack_exports__, "DialogContentText", function() {
            return esm_DialogContentText_DialogContentText;
        });
        /* concated harmony reexport DialogTitle */
        __webpack_require__.d(__webpack_exports__, "DialogTitle", function() {
            return esm_DialogTitle_DialogTitle;
        });
        /* concated harmony reexport Divider */
        __webpack_require__.d(__webpack_exports__, "Divider", function() {
            return esm_Divider_Divider;
        });
        /* concated harmony reexport Drawer */
        __webpack_require__.d(__webpack_exports__, "Drawer", function() {
            return esm_Drawer_Drawer;
        });
        /* concated harmony reexport ExpansionPanel */
        __webpack_require__.d(__webpack_exports__, "ExpansionPanel", function() {
            return esm_ExpansionPanel_ExpansionPanel;
        });
        /* concated harmony reexport ExpansionPanelActions */
        __webpack_require__.d(__webpack_exports__, "ExpansionPanelActions", function() {
            return esm_ExpansionPanelActions_ExpansionPanelActions;
        });
        /* concated harmony reexport ExpansionPanelDetails */
        __webpack_require__.d(__webpack_exports__, "ExpansionPanelDetails", function() {
            return esm_ExpansionPanelDetails_ExpansionPanelDetails;
        });
        /* concated harmony reexport ExpansionPanelSummary */
        __webpack_require__.d(__webpack_exports__, "ExpansionPanelSummary", function() {
            return esm_ExpansionPanelSummary_ExpansionPanelSummary;
        });
        /* concated harmony reexport Fab */
        __webpack_require__.d(__webpack_exports__, "Fab", function() {
            return esm_Fab_Fab;
        });
        /* concated harmony reexport Fade */
        __webpack_require__.d(__webpack_exports__, "Fade", function() {
            return esm_Fade_Fade;
        });
        /* concated harmony reexport FilledInput */
        __webpack_require__.d(__webpack_exports__, "FilledInput", function() {
            return FilledInput["a"/* default */
            ];
        });
        /* concated harmony reexport FormControl */
        __webpack_require__.d(__webpack_exports__, "FormControl", function() {
            return FormControl["a"/* default */
            ];
        });
        /* concated harmony reexport useFormControl */
        __webpack_require__.d(__webpack_exports__, "useFormControl", function() {
            return esm_FormControl["useFormControl"];
        });
        /* concated harmony reexport FormControlLabel */
        __webpack_require__.d(__webpack_exports__, "FormControlLabel", function() {
            return FormControlLabel["a"/* default */
            ];
        });
        /* concated harmony reexport FormGroup */
        __webpack_require__.d(__webpack_exports__, "FormGroup", function() {
            return FormGroup["a"/* default */
            ];
        });
        /* concated harmony reexport FormHelperText */
        __webpack_require__.d(__webpack_exports__, "FormHelperText", function() {
            return esm_FormHelperText_FormHelperText;
        });
        /* concated harmony reexport FormLabel */
        __webpack_require__.d(__webpack_exports__, "FormLabel", function() {
            return FormLabel["a"/* default */
            ];
        });
        /* concated harmony reexport Grid */
        __webpack_require__.d(__webpack_exports__, "Grid", function() {
            return esm_Grid_Grid;
        });
        /* concated harmony reexport GridList */
        __webpack_require__.d(__webpack_exports__, "GridList", function() {
            return esm_GridList_GridList;
        });
        /* concated harmony reexport GridListTile */
        __webpack_require__.d(__webpack_exports__, "GridListTile", function() {
            return esm_GridListTile_GridListTile;
        });
        /* concated harmony reexport GridListTileBar */
        __webpack_require__.d(__webpack_exports__, "GridListTileBar", function() {
            return esm_GridListTileBar_GridListTileBar;
        });
        /* concated harmony reexport Grow */
        __webpack_require__.d(__webpack_exports__, "Grow", function() {
            return Grow["a"/* default */
            ];
        });
        /* concated harmony reexport Hidden */
        __webpack_require__.d(__webpack_exports__, "Hidden", function() {
            return Hidden_Hidden;
        });
        /* concated harmony reexport Icon */
        __webpack_require__.d(__webpack_exports__, "Icon", function() {
            return esm_Icon_Icon;
        });
        /* concated harmony reexport IconButton */
        __webpack_require__.d(__webpack_exports__, "IconButton", function() {
            return IconButton["a"/* default */
            ];
        });
        /* concated harmony reexport Input */
        __webpack_require__.d(__webpack_exports__, "Input", function() {
            return Input["a"/* default */
            ];
        });
        /* concated harmony reexport InputAdornment */
        __webpack_require__.d(__webpack_exports__, "InputAdornment", function() {
            return esm_InputAdornment_InputAdornment;
        });
        /* concated harmony reexport InputBase */
        __webpack_require__.d(__webpack_exports__, "InputBase", function() {
            return InputBase["a"/* default */
            ];
        });
        /* concated harmony reexport InputLabel */
        __webpack_require__.d(__webpack_exports__, "InputLabel", function() {
            return InputLabel["a"/* default */
            ];
        });
        /* concated harmony reexport LinearProgress */
        __webpack_require__.d(__webpack_exports__, "LinearProgress", function() {
            return esm_LinearProgress_LinearProgress;
        });
        /* concated harmony reexport Link */
        __webpack_require__.d(__webpack_exports__, "Link", function() {
            return esm_Link_Link;
        });
        /* concated harmony reexport List */
        __webpack_require__.d(__webpack_exports__, "List", function() {
            return List["a"/* default */
            ];
        });
        /* concated harmony reexport ListItem */
        __webpack_require__.d(__webpack_exports__, "ListItem", function() {
            return ListItem["a"/* default */
            ];
        });
        /* concated harmony reexport ListItemAvatar */
        __webpack_require__.d(__webpack_exports__, "ListItemAvatar", function() {
            return esm_ListItemAvatar_ListItemAvatar;
        });
        /* concated harmony reexport ListItemIcon */
        __webpack_require__.d(__webpack_exports__, "ListItemIcon", function() {
            return esm_ListItemIcon_ListItemIcon;
        });
        /* concated harmony reexport ListItemSecondaryAction */
        __webpack_require__.d(__webpack_exports__, "ListItemSecondaryAction", function() {
            return esm_ListItemSecondaryAction_ListItemSecondaryAction;
        });
        /* concated harmony reexport ListItemText */
        __webpack_require__.d(__webpack_exports__, "ListItemText", function() {
            return esm_ListItemText_ListItemText;
        });
        /* concated harmony reexport ListSubheader */
        __webpack_require__.d(__webpack_exports__, "ListSubheader", function() {
            return ListSubheader["a"/* default */
            ];
        });
        /* concated harmony reexport Menu */
        __webpack_require__.d(__webpack_exports__, "Menu", function() {
            return Menu["a"/* default */
            ];
        });
        /* concated harmony reexport MenuItem */
        __webpack_require__.d(__webpack_exports__, "MenuItem", function() {
            return MenuItem["a"/* default */
            ];
        });
        /* concated harmony reexport MenuList */
        __webpack_require__.d(__webpack_exports__, "MenuList", function() {
            return MenuList["a"/* default */
            ];
        });
        /* concated harmony reexport MobileStepper */
        __webpack_require__.d(__webpack_exports__, "MobileStepper", function() {
            return esm_MobileStepper_MobileStepper;
        });
        /* concated harmony reexport Modal */
        __webpack_require__.d(__webpack_exports__, "Modal", function() {
            return Modal["a"/* default */
            ];
        });
        /* concated harmony reexport ModalManager */
        __webpack_require__.d(__webpack_exports__, "ModalManager", function() {
            return esm_Modal["a"/* ModalManager */
            ];
        });
        /* concated harmony reexport NativeSelect */
        __webpack_require__.d(__webpack_exports__, "NativeSelect", function() {
            return NativeSelect["a"/* default */
            ];
        });
        /* concated harmony reexport NoSsr */
        __webpack_require__.d(__webpack_exports__, "NoSsr", function() {
            return NoSsr["a"/* default */
            ];
        });
        /* concated harmony reexport OutlinedInput */
        __webpack_require__.d(__webpack_exports__, "OutlinedInput", function() {
            return OutlinedInput["a"/* default */
            ];
        });
        /* concated harmony reexport Paper */
        __webpack_require__.d(__webpack_exports__, "Paper", function() {
            return Paper["a"/* default */
            ];
        });
        /* concated harmony reexport Popover */
        __webpack_require__.d(__webpack_exports__, "Popover", function() {
            return Popover["a"/* default */
            ];
        });
        /* concated harmony reexport Popper */
        __webpack_require__.d(__webpack_exports__, "Popper", function() {
            return esm_Popper_Popper;
        });
        /* concated harmony reexport Portal */
        __webpack_require__.d(__webpack_exports__, "Portal", function() {
            return Portal["a"/* default */
            ];
        });
        /* concated harmony reexport Radio */
        __webpack_require__.d(__webpack_exports__, "Radio", function() {
            return Radio["a"/* default */
            ];
        });
        /* concated harmony reexport RadioGroup */
        __webpack_require__.d(__webpack_exports__, "RadioGroup", function() {
            return RadioGroup["a"/* default */
            ];
        });
        /* concated harmony reexport useRadioGroup */
        __webpack_require__.d(__webpack_exports__, "useRadioGroup", function() {
            return esm_RadioGroup["useRadioGroup"];
        });
        /* concated harmony reexport RootRef */
        __webpack_require__.d(__webpack_exports__, "RootRef", function() {
            return esm_RootRef_RootRef;
        });
        /* concated harmony reexport Select */
        __webpack_require__.d(__webpack_exports__, "Select", function() {
            return Select["a"/* default */
            ];
        });
        /* concated harmony reexport Slide */
        __webpack_require__.d(__webpack_exports__, "Slide", function() {
            return esm_Slide_Slide;
        });
        /* concated harmony reexport Slider */
        __webpack_require__.d(__webpack_exports__, "Slider", function() {
            return Slider["a"/* default */
            ];
        });
        /* concated harmony reexport Snackbar */
        __webpack_require__.d(__webpack_exports__, "Snackbar", function() {
            return esm_Snackbar_Snackbar;
        });
        /* concated harmony reexport SnackbarContent */
        __webpack_require__.d(__webpack_exports__, "SnackbarContent", function() {
            return esm_SnackbarContent_SnackbarContent;
        });
        /* concated harmony reexport Step */
        __webpack_require__.d(__webpack_exports__, "Step", function() {
            return esm_Step_Step;
        });
        /* concated harmony reexport StepButton */
        __webpack_require__.d(__webpack_exports__, "StepButton", function() {
            return esm_StepButton_StepButton;
        });
        /* concated harmony reexport StepConnector */
        __webpack_require__.d(__webpack_exports__, "StepConnector", function() {
            return esm_StepConnector_StepConnector;
        });
        /* concated harmony reexport StepContent */
        __webpack_require__.d(__webpack_exports__, "StepContent", function() {
            return esm_StepContent_StepContent;
        });
        /* concated harmony reexport StepIcon */
        __webpack_require__.d(__webpack_exports__, "StepIcon", function() {
            return esm_StepIcon_StepIcon;
        });
        /* concated harmony reexport StepLabel */
        __webpack_require__.d(__webpack_exports__, "StepLabel", function() {
            return esm_StepLabel_StepLabel;
        });
        /* concated harmony reexport Stepper */
        __webpack_require__.d(__webpack_exports__, "Stepper", function() {
            return esm_Stepper_Stepper;
        });
        /* concated harmony reexport SvgIcon */
        __webpack_require__.d(__webpack_exports__, "SvgIcon", function() {
            return SvgIcon["a"/* default */
            ];
        });
        /* concated harmony reexport SwipeableDrawer */
        __webpack_require__.d(__webpack_exports__, "SwipeableDrawer", function() {
            return esm_SwipeableDrawer_SwipeableDrawer;
        });
        /* concated harmony reexport Switch */
        __webpack_require__.d(__webpack_exports__, "Switch", function() {
            return esm_Switch_Switch;
        });
        /* concated harmony reexport Tab */
        __webpack_require__.d(__webpack_exports__, "Tab", function() {
            return esm_Tab_Tab;
        });
        /* concated harmony reexport Table */
        __webpack_require__.d(__webpack_exports__, "Table", function() {
            return esm_Table_Table;
        });
        /* concated harmony reexport TableBody */
        __webpack_require__.d(__webpack_exports__, "TableBody", function() {
            return esm_TableBody_TableBody;
        });
        /* concated harmony reexport TableCell */
        __webpack_require__.d(__webpack_exports__, "TableCell", function() {
            return esm_TableCell_TableCell;
        });
        /* concated harmony reexport TableContainer */
        __webpack_require__.d(__webpack_exports__, "TableContainer", function() {
            return esm_TableContainer_TableContainer;
        });
        /* concated harmony reexport TableFooter */
        __webpack_require__.d(__webpack_exports__, "TableFooter", function() {
            return esm_TableFooter_TableFooter;
        });
        /* concated harmony reexport TableHead */
        __webpack_require__.d(__webpack_exports__, "TableHead", function() {
            return esm_TableHead_TableHead;
        });
        /* concated harmony reexport TablePagination */
        __webpack_require__.d(__webpack_exports__, "TablePagination", function() {
            return esm_TablePagination_TablePagination;
        });
        /* concated harmony reexport TableRow */
        __webpack_require__.d(__webpack_exports__, "TableRow", function() {
            return esm_TableRow_TableRow;
        });
        /* concated harmony reexport TableSortLabel */
        __webpack_require__.d(__webpack_exports__, "TableSortLabel", function() {
            return esm_TableSortLabel_TableSortLabel;
        });
        /* concated harmony reexport Tabs */
        __webpack_require__.d(__webpack_exports__, "Tabs", function() {
            return esm_Tabs_Tabs;
        });
        /* concated harmony reexport TextField */
        __webpack_require__.d(__webpack_exports__, "TextField", function() {
            return esm_TextField_TextField;
        });
        /* concated harmony reexport TextareaAutosize */
        __webpack_require__.d(__webpack_exports__, "TextareaAutosize", function() {
            return TextareaAutosize["a"/* default */
            ];
        });
        /* concated harmony reexport Toolbar */
        __webpack_require__.d(__webpack_exports__, "Toolbar", function() {
            return esm_Toolbar_Toolbar;
        });
        /* concated harmony reexport Tooltip */
        __webpack_require__.d(__webpack_exports__, "Tooltip", function() {
            return esm_Tooltip_Tooltip;
        });
        /* concated harmony reexport Typography */
        __webpack_require__.d(__webpack_exports__, "Typography", function() {
            return Typography["a"/* default */
            ];
        });
        /* concated harmony reexport useMediaQuery */
        __webpack_require__.d(__webpack_exports__, "useMediaQuery", function() {
            return useMediaQuery_useMediaQuery;
        });
        /* concated harmony reexport useScrollTrigger */
        __webpack_require__.d(__webpack_exports__, "useScrollTrigger", function() {
            return useScrollTrigger;
        });
        /* concated harmony reexport withMobileDialog */
        __webpack_require__.d(__webpack_exports__, "withMobileDialog", function() {
            return esm_withMobileDialog_withMobileDialog;
        });
        /* concated harmony reexport withWidth */
        __webpack_require__.d(__webpack_exports__, "withWidth", function() {
            return esm_withWidth_withWidth;
        });
        /* concated harmony reexport isWidthUp */
        __webpack_require__.d(__webpack_exports__, "isWidthUp", function() {
            return withWidth_isWidthUp;
        });
        /* concated harmony reexport isWidthDown */
        __webpack_require__.d(__webpack_exports__, "isWidthDown", function() {
            return withWidth_isWidthDown;
        });
        /* concated harmony reexport Zoom */
        __webpack_require__.d(__webpack_exports__, "Zoom", function() {
            return esm_Zoom_Zoom;
        });
        /** @license Material-UI v4.9.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        /* eslint-disable import/export */

        /***/
    }
    ), /* 752 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        __webpack_require__.r(__webpack_exports__);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/index.js
        var lib = __webpack_require__(254);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindow.js
        var getWindow = __webpack_require__(26);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/eventListeners.js

        var passive = {
            passive: true
        };

        function effect(_ref) {
            var state = _ref.state
              , instance = _ref.instance
              , options = _ref.options;
            var _options$scroll = options.scroll
              , scroll = _options$scroll === void 0 ? true : _options$scroll
              , _options$resize = options.resize
              , resize = _options$resize === void 0 ? true : _options$resize;
            var window = Object(getWindow["a"/* default */
            ])(state.elements.popper);
            var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

            if (scroll) {
                scrollParents.forEach(function(scrollParent) {
                    scrollParent.addEventListener('scroll', instance.update, passive);
                });
            }

            if (resize) {
                window.addEventListener('resize', instance.update, passive);
            }

            return function() {
                if (scroll) {
                    scrollParents.forEach(function(scrollParent) {
                        scrollParent.removeEventListener('scroll', instance.update, passive);
                    });
                }

                if (resize) {
                    window.removeEventListener('resize', instance.update, passive);
                }
            }
            ;
        }

        /* harmony default export */
        var eventListeners = ({
            name: 'eventListeners',
            enabled: true,
            phase: 'write',
            fn: function fn() {},
            effect: effect,
            data: {}
        });
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/utils/getBasePlacement.js
        var getBasePlacement = __webpack_require__(34);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getVariation.js
        function getVariation(placement) {
            return placement.split('-')[1];
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
        function getMainAxisFromPlacement(placement) {
            return ['top', 'bottom'].includes(placement) ? 'x' : 'y';
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/enums.js
        var enums = __webpack_require__(8);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/computeOffsets.js

        function computeOffsets(_ref) {
            var reference = _ref.reference
              , element = _ref.element
              , placement = _ref.placement;
            var basePlacement = placement ? Object(getBasePlacement["a"/* default */
            ])(placement) : null;
            var variation = placement ? getVariation(placement) : null;
            var commonX = reference.x + reference.width / 2 - element.width / 2;
            var commonY = reference.y + reference.height / 2 - element.height / 2;
            var offsets;

            switch (basePlacement) {
            case enums["m"/* top */
            ]:
                offsets = {
                    x: commonX,
                    y: reference.y - element.height
                };
                break;

            case enums["c"/* bottom */
            ]:
                offsets = {
                    x: commonX,
                    y: reference.y + reference.height
                };
                break;

            case enums["k"/* right */
            ]:
                offsets = {
                    x: reference.x + reference.width,
                    y: commonY
                };
                break;

            case enums["f"/* left */
            ]:
                offsets = {
                    x: reference.x - element.width,
                    y: commonY
                };
                break;

            default:
                offsets = {
                    x: reference.x,
                    y: reference.y
                };
            }

            var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

            if (mainAxis != null) {
                var len = mainAxis === 'y' ? 'height' : 'width';

                switch (variation) {
                case enums["l"/* start */
                ]:
                    offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);
                    break;

                case enums["e"/* end */
                ]:
                    offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);
                    break;

                default:
                }
            }

            return offsets;
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js

        function popperOffsets_popperOffsets(_ref) {
            var state = _ref.state
              , name = _ref.name;
            // Offsets are the actual position the popper needs to have to be
            // properly positioned near its reference element
            // This is the most basic placement, and will be adjusted by
            // the modifiers in the next step
            state.modifiersData[name] = computeOffsets({
                reference: state.rects.reference,
                element: state.rects.popper,
                strategy: 'absolute',
                placement: state.placement
            });
        }

        /* harmony default export */
        var modifiers_popperOffsets = ({
            name: 'popperOffsets',
            enabled: true,
            phase: 'read',
            fn: popperOffsets_popperOffsets,
            data: {}
        });
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js + 1 modules
        var getOffsetParent = __webpack_require__(109);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
        function getDocumentElement(element) {
            // $FlowFixMe: assume body is always available
            return element.ownerDocument.documentElement;
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/computeStyles.js

        var unsetSides = {
            top: 'auto',
            right: 'auto',
            bottom: 'auto',
            left: 'auto'
        };
        // Round the offsets to the nearest suitable subpixel based on the DPR.
        // Zooming can change the DPR, but it seems to report a value that will
        // cleanly divide the values into the appropriate subpixels.

        function roundOffsets(_ref) {
            var x = _ref.x
              , y = _ref.y;
            var dpr = window.devicePixelRatio || 1;
            return {
                x: Math.round(x * dpr) / dpr || 0,
                y: Math.round(y * dpr) / dpr || 0
            };
        }

        function mapToStyles(_ref2) {
            var _Object$assign2;

            var popper = _ref2.popper
              , popperRect = _ref2.popperRect
              , placement = _ref2.placement
              , offsets = _ref2.offsets
              , position = _ref2.position
              , gpuAcceleration = _ref2.gpuAcceleration
              , adaptive = _ref2.adaptive;

            var _roundOffsets = roundOffsets(offsets)
              , x = _roundOffsets.x
              , y = _roundOffsets.y;

            var hasX = offsets.hasOwnProperty('x');
            var hasY = offsets.hasOwnProperty('y');
            var sideX = enums["f"/* left */
            ];
            var sideY = enums["m"/* top */
            ];

            if (adaptive) {
                var offsetParent = Object(getOffsetParent["a"/* default */
                ])(popper);

                if (offsetParent === Object(getWindow["a"/* default */
                ])(popper)) {
                    offsetParent = getDocumentElement(popper);
                }

                if (placement === enums["m"/* top */
                ]) {
                    y = y - offsetParent.clientHeight + popperRect.height;
                    sideY = enums["c"/* bottom */
                    ];
                }

                if (placement === enums["f"/* left */
                ]) {
                    x = x - offsetParent.clientWidth + popperRect.width;
                    sideX = enums["k"/* right */
                    ];
                }
            }

            var commonStyles = Object.assign({
                position: position
            }, adaptive && unsetSides);

            if (gpuAcceleration) {
                var _Object$assign;

                return Object.assign({}, commonStyles, (_Object$assign = {},
                _Object$assign[sideY] = hasY ? '0' : '',
                _Object$assign[sideX] = hasX ? '0' : '',
                _Object$assign.transform = (window.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)",
                _Object$assign));
            }

            return Object.assign({}, commonStyles, (_Object$assign2 = {},
            _Object$assign2[sideY] = hasY ? y + "px" : '',
            _Object$assign2[sideX] = hasX ? x + "px" : '',
            _Object$assign2.transform = '',
            _Object$assign2));
        }

        function computeStyles(_ref3) {
            var state = _ref3.state
              , options = _ref3.options;
            var _options$gpuAccelerat = options.gpuAcceleration
              , gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat
              , _options$adaptive = options.adaptive
              , adaptive = _options$adaptive === void 0 ? true : _options$adaptive;
            var commonStyles = {
                placement: Object(getBasePlacement["a"/* default */
                ])(state.placement),
                popper: state.elements.popper,
                popperRect: state.rects.popper,
                gpuAcceleration: gpuAcceleration
            };
            // popper offsets are always available

            state.styles.popper = Object.assign({}, state.styles.popper, {}, mapToStyles(Object.assign({}, commonStyles, {
                offsets: state.modifiersData.popperOffsets,
                position: state.options.strategy,
                adaptive: adaptive
            })));
            // arrow offsets may not be available

            if (state.modifiersData.arrow != null) {
                state.styles.arrow = Object.assign({}, state.styles.arrow, {}, mapToStyles(Object.assign({}, commonStyles, {
                    offsets: state.modifiersData.arrow,
                    position: 'absolute',
                    adaptive: false
                })));
            }

            state.attributes.popper = Object.assign({}, state.attributes.popper, {
                'data-popper-placement': state.placement
            });
        }

        /* harmony default export */
        var modifiers_computeStyles = ({
            name: 'computeStyles',
            enabled: true,
            phase: 'beforeWrite',
            fn: computeStyles,
            data: {}
        });
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
        var getNodeName = __webpack_require__(38);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
        var instanceOf = __webpack_require__(27);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/applyStyles.js

        // This modifier takes the styles prepared by the `computeStyles` modifier
        // and applies them to the HTMLElements such as popper and arrow

        function applyStyles(_ref) {
            var state = _ref.state;
            Object.keys(state.elements).forEach(function(name) {
                var style = state.styles[name] || {};
                var attributes = state.attributes[name] || {};
                var element = state.elements[name];
                // arrow is optional + virtual elements

                if (!Object(instanceOf["b"/* isHTMLElement */
                ])(element) || !Object(getNodeName["a"/* default */
                ])(element)) {
                    return;
                }
                // Flow doesn't support to extend this property, but it's the most
                // effective way to apply styles to an HTMLElement
                // $FlowFixMe

                Object.assign(element.style, style);
                Object.entries(attributes).forEach(function(_ref2) {
                    var name = _ref2[0]
                      , value = _ref2[1];

                    if (value === false) {
                        element.removeAttribute(name);
                    } else {
                        element.setAttribute(name, value === true ? '' : value);
                    }
                });
            });
        }

        function applyStyles_effect(_ref3) {
            var state = _ref3.state;
            var initialStyles = {
                position: 'absolute',
                left: '0',
                top: '0',
                margin: '0'
            };
            Object.assign(state.elements.popper.style, initialStyles);
            return function() {
                Object.keys(state.elements).forEach(function(name) {
                    var element = state.elements[name];
                    var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? Object.assign({}, state.styles[name]) : initialStyles);
                    var attributes = state.attributes[name] || {};
                    // Set all values to an empty string to unset them

                    var style = styleProperties.reduce(function(style, property) {
                        var _Object$assign;

                        return Object.assign({}, style, (_Object$assign = {},
                        _Object$assign[String(property)] = '',
                        _Object$assign));
                    }, {});
                    // arrow is optional + virtual elements

                    if (!Object(instanceOf["b"/* isHTMLElement */
                    ])(element) || !Object(getNodeName["a"/* default */
                    ])(element)) {
                        return;
                    }
                    // Flow doesn't support to extend this property, but it's the most
                    // effective way to apply styles to an HTMLElement
                    // $FlowFixMe

                    Object.assign(element.style, style);
                    Object.keys(attributes).forEach(function(attribute) {
                        return element.removeAttribute(attribute);
                    });
                });
            }
            ;
        }

        /* harmony default export */
        var modifiers_applyStyles = ({
            name: 'applyStyles',
            enabled: true,
            phase: 'write',
            fn: applyStyles,
            effect: applyStyles_effect,
            requires: ['computeStyles']
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/offset.js

        function distanceAndSkiddingToXY(placement, rects, offset) {
            var basePlacement = Object(getBasePlacement["a"/* default */
            ])(placement);
            var invertDistance = [enums["f"/* left */
            ], enums["m"/* top */
            ]].includes(basePlacement) ? -1 : 1;

            var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
                placement: placement
            })) : offset
              , skidding = _ref[0]
              , distance = _ref[1];

            skidding = skidding || 0;
            distance = (distance || 0) * invertDistance;
            return [enums["f"/* left */
            ], enums["k"/* right */
            ]].includes(basePlacement) ? {
                x: distance,
                y: skidding
            } : {
                x: skidding,
                y: distance
            };
        }

        function offset_offset(_ref2) {
            var state = _ref2.state
              , options = _ref2.options
              , name = _ref2.name;
            var _options$offset = options.offset
              , offset = _options$offset === void 0 ? [0, 0] : _options$offset;
            var data = enums["h"/* placements */
            ].reduce(function(acc, placement) {
                acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
                return acc;
            }, {});
            var _data$state$placement = data[state.placement]
              , x = _data$state$placement.x
              , y = _data$state$placement.y;
            state.modifiersData.popperOffsets.x += x;
            state.modifiersData.popperOffsets.y += y;
            state.modifiersData[name] = data;
        }

        /* harmony default export */
        var modifiers_offset = ({
            name: 'offset',
            enabled: true,
            phase: 'main',
            requires: ['popperOffsets'],
            fn: offset_offset
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
        var hash = {
            left: 'right',
            right: 'left',
            bottom: 'top',
            top: 'bottom'
        };
        function getOppositePlacement(placement) {
            return placement.replace(/left|right|bottom|top/g, function(matched) {
                return hash[matched];
            });
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
        var getOppositeVariationPlacement_hash = {
            start: 'end',
            end: 'start'
        };
        function getOppositeVariationPlacement(placement) {
            return placement.replace(/start|end/g, function(matched) {
                return getOppositeVariationPlacement_hash[matched];
            });
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
        var getBoundingClientRect = __webpack_require__(81);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js

        function getViewportRect(element) {
            var win = Object(getWindow["a"/* default */
            ])(element);
            return {
                width: win.innerWidth,
                height: win.innerHeight,
                x: 0,
                y: 0
            };
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js + 2 modules
        var getCompositeRect = __webpack_require__(186);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
        var getWindowScroll = __webpack_require__(184);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js

        function getDocumentRect(element) {
            var win = Object(getWindow["a"/* default */
            ])(element);
            var winScroll = Object(getWindowScroll["a"/* default */
            ])(element);
            var documentRect = Object(getCompositeRect["a"/* default */
            ])(getDocumentElement(element), win);
            documentRect.height = Math.max(documentRect.height, win.innerHeight);
            documentRect.width = Math.max(documentRect.width, win.innerWidth);
            documentRect.x = -winScroll.scrollLeft;
            documentRect.y = -winScroll.scrollTop;
            return documentRect;
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js + 2 modules
        var listScrollParents = __webpack_require__(130);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
        var getComputedStyle = __webpack_require__(64);

        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getBorders.js
        var getBorders = __webpack_require__(185);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getDecorations.js

        // Borders + scrollbars

        function getDecorations(element) {
            var borders = Object(getBorders["a"/* default */
            ])(element);
            var win = Object(getWindow["a"/* default */
            ])(element);
            var right = element.offsetWidth - element.clientWidth - borders.right;
            var bottom = element.offsetHeight - element.clientHeight - borders.bottom;

            if (Object(getNodeName["a"/* default */
            ])(element) === 'html') {
                right = win.innerWidth - element.clientWidth;
                bottom = win.innerHeight - element.clientHeight;
            }

            return {
                top: borders.top,
                right: right,
                bottom: bottom,
                left: borders.left
            };
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/contains.js
        function contains(parent, child) {
            // $FlowFixMe: hasOwnProperty doesn't seem to work in tests
            var isShadow = Boolean(child.getRootNode && child.getRootNode().host);
            // First, attempt with faster native method

            if (parent.contains(child)) {
                return true;
            }// then fallback to custom implementation with Shadow DOM support
            else if (isShadow) {
                var next = child;

                do {
                    if (next && next.isSameNode(parent)) {
                        return true;
                    }
                    // $FlowFixMe: need a better way to handle this...

                    next = next.parentNode || next.host;
                } while (next);
            }
            // Give up, the result is false

            return false;
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/rectToClientRect.js
        function rectToClientRect(rect) {
            return Object.assign({}, rect, {
                left: rect.x,
                top: rect.y,
                right: rect.x + rect.width,
                bottom: rect.y + rect.height
            });
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js

        function getClientRectFromMixedType(element, clippingParent) {
            return clippingParent === enums["o"/* viewport */
            ] ? rectToClientRect(getViewportRect(element)) : Object(instanceOf["b"/* isHTMLElement */
            ])(clippingParent) ? Object(getBoundingClientRect["a"/* default */
            ])(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
        }
        // A "clipping parent" is an overflowable container with the characteristic of
        // clipping (or hiding) overflowing elements with a position different from
        // `initial`

        function getClippingParents(element) {
            var clippingParents = Object(listScrollParents["a"/* default */
            ])(element);
            var canEscapeClipping = ['absolute', 'fixed'].includes(Object(getComputedStyle["a"/* default */
            ])(element).position);
            var clipperElement = canEscapeClipping && Object(instanceOf["b"/* isHTMLElement */
            ])(element) ? Object(getOffsetParent["a"/* default */
            ])(element) : element;

            if (!Object(instanceOf["a"/* isElement */
            ])(clipperElement)) {
                return [];
            }

            return clippingParents.filter(function(clippingParent) {
                return Object(instanceOf["a"/* isElement */
                ])(clippingParent) && contains(clippingParent, clipperElement);
            });
        }
        // Gets the maximum area that the element is visible in due to any number of
        // clipping parents

        function getClippingRect(element, boundary, rootBoundary) {
            var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
            var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
            var firstClippingParent = clippingParents[0];
            var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {
                var rect = getClientRectFromMixedType(element, clippingParent);
                var decorations = getDecorations(Object(instanceOf["b"/* isHTMLElement */
                ])(clippingParent) ? clippingParent : getDocumentElement(element));
                accRect.top = Math.max(rect.top + decorations.top, accRect.top);
                accRect.right = Math.min(rect.right - decorations.right, accRect.right);
                accRect.bottom = Math.min(rect.bottom - decorations.bottom, accRect.bottom);
                accRect.left = Math.max(rect.left + decorations.left, accRect.left);
                return accRect;
            }, getClientRectFromMixedType(element, firstClippingParent));
            clippingRect.width = clippingRect.right - clippingRect.left;
            clippingRect.height = clippingRect.bottom - clippingRect.top;
            clippingRect.x = clippingRect.left;
            clippingRect.y = clippingRect.top;
            return clippingRect;
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
        function getFreshSideObject() {
            return {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0
            };
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

        function mergePaddingObject(paddingObject) {
            return Object.assign({}, getFreshSideObject(), {}, paddingObject);
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/expandToHashMap.js
        function expandToHashMap(value, keys) {
            return keys.reduce(function(hashMap, key) {
                hashMap[key] = value;
                return hashMap;
            }, {});
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/detectOverflow.js

        function detectOverflow(state, options) {
            if (options === void 0) {
                options = {};
            }

            var _options = options
              , _options$placement = _options.placement
              , placement = _options$placement === void 0 ? state.placement : _options$placement
              , _options$boundary = _options.boundary
              , boundary = _options$boundary === void 0 ? enums["d"/* clippingParents */
            ] : _options$boundary
              , _options$rootBoundary = _options.rootBoundary
              , rootBoundary = _options$rootBoundary === void 0 ? enums["o"/* viewport */
            ] : _options$rootBoundary
              , _options$elementConte = _options.elementContext
              , elementContext = _options$elementConte === void 0 ? enums["i"/* popper */
            ] : _options$elementConte
              , _options$altBoundary = _options.altBoundary
              , altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary
              , _options$padding = _options.padding
              , padding = _options$padding === void 0 ? 0 : _options$padding;
            var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, enums["b"/* basePlacements */
            ]));
            var altContext = elementContext === enums["i"/* popper */
            ] ? enums["j"/* reference */
            ] : enums["i"/* popper */
            ];
            var referenceElement = state.elements.reference;
            var popperRect = state.rects.popper;
            var element = state.elements[altBoundary ? altContext : elementContext];
            var clippingClientRect = getClippingRect(Object(instanceOf["a"/* isElement */
            ])(element) ? element : getDocumentElement(state.elements.popper), boundary, rootBoundary);
            var referenceClientRect = Object(getBoundingClientRect["a"/* default */
            ])(referenceElement);
            var popperOffsets = computeOffsets({
                reference: referenceClientRect,
                element: popperRect,
                strategy: 'absolute',
                placement: placement
            });
            var popperClientRect = rectToClientRect(Object.assign({}, popperRect, {}, popperOffsets));
            var elementClientRect = elementContext === enums["i"/* popper */
            ] ? popperClientRect : referenceClientRect;
            // positive = overflowing the clipping rect
            // 0 or negative = within the clipping rect

            var overflowOffsets = {
                top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
                bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
                left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
                right: elementClientRect.right - clippingClientRect.right + paddingObject.right
            };
            var offsetData = state.modifiersData.offset;
            // Offsets can be applied only to the popper element

            if (elementContext === enums["i"/* popper */
            ] && offsetData) {
                var offset = offsetData[placement];
                Object.keys(overflowOffsets).forEach(function(key) {
                    var multiply = [enums["k"/* right */
                    ], enums["c"/* bottom */
                    ]].includes(key) ? 1 : -1;
                    var axis = [enums["m"/* top */
                    ], enums["c"/* bottom */
                    ]].includes(key) ? 'y' : 'x';
                    overflowOffsets[key] += offset[axis] * multiply;
                });
            }

            return overflowOffsets;
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js

        function computeAutoPlacement(state, options) {
            if (options === void 0) {
                options = {};
            }

            var _options = options
              , placement = _options.placement
              , boundary = _options.boundary
              , rootBoundary = _options.rootBoundary
              , padding = _options.padding
              , flipVariations = _options.flipVariations;
            var variation = getVariation(placement);
            var placements = variation ? flipVariations ? enums["n"/* variationPlacements */
            ] : enums["n"/* variationPlacements */
            ].filter(function(placement) {
                return placement.includes(variation);
            }) : enums["b"/* basePlacements */
            ];
            // $FlowFixMe: Flow seems to have problems with two array unions...

            var overflows = placements.reduce(function(acc, placement) {
                acc[placement] = detectOverflow(state, {
                    placement: placement,
                    boundary: boundary,
                    rootBoundary: rootBoundary,
                    padding: padding
                })[Object(getBasePlacement["a"/* default */
                ])(placement)];
                return acc;
            }, {});
            return Object.keys(overflows).sort(function(a, b) {
                return overflows[a] - overflows[b];
            });
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/utils/uniqueBy.js
        var uniqueBy = __webpack_require__(253);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/flip.js

        function getExpandedFallbackPlacements(placement) {
            if (Object(getBasePlacement["a"/* default */
            ])(placement) === enums["a"/* auto */
            ]) {
                return [];
            }

            var oppositePlacement = getOppositePlacement(placement);
            return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
        }

        function flip(_ref) {
            var state = _ref.state
              , options = _ref.options
              , name = _ref.name;

            if (state.modifiersData[name]._skip) {
                return;
            }

            var specifiedFallbackPlacements = options.fallbackPlacements
              , padding = options.padding
              , boundary = options.boundary
              , rootBoundary = options.rootBoundary
              , _options$flipVariatio = options.flipVariations
              , flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio;
            var preferredPlacement = state.options.placement;
            var basePlacement = Object(getBasePlacement["a"/* default */
            ])(preferredPlacement);
            var isBasePlacement = basePlacement === preferredPlacement;
            var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
            var placements = Object(uniqueBy["a"/* default */
            ])([preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement) {
                return Object(getBasePlacement["a"/* default */
                ])(placement) === enums["a"/* auto */
                ] ? acc.concat(computeAutoPlacement(state, {
                    placement: placement,
                    boundary: boundary,
                    rootBoundary: rootBoundary,
                    padding: padding,
                    flipVariations: flipVariations
                })) : acc.concat(placement);
            }, []), function(placement) {
                return placement;
            });
            var referenceRect = state.rects.reference;
            var popperRect = state.rects.popper;
            var checksMap = new Map();
            var makeFallbackChecks = true;
            var firstFittingPlacement = placements[0];

            for (var i = 0; i < placements.length; i++) {
                var placement = placements[i];

                var _basePlacement = Object(getBasePlacement["a"/* default */
                ])(placement);

                var isStartVariation = getVariation(placement) === enums["l"/* start */
                ];
                var isVertical = [enums["m"/* top */
                ], enums["c"/* bottom */
                ]].includes(_basePlacement);
                var len = isVertical ? 'width' : 'height';
                var overflow = detectOverflow(state, {
                    placement: placement,
                    boundary: boundary,
                    rootBoundary: rootBoundary,
                    padding: padding
                });
                var mainVariationSide = isVertical ? isStartVariation ? enums["k"/* right */
                ] : enums["f"/* left */
                ] : isStartVariation ? enums["c"/* bottom */
                ] : enums["m"/* top */
                ];

                if (referenceRect[len] > popperRect[len]) {
                    mainVariationSide = getOppositePlacement(mainVariationSide);
                }

                var altVariationSide = getOppositePlacement(mainVariationSide);
                var checks = [overflow[_basePlacement] <= 0, overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0];

                if (checks.every(function(check) {
                    return check;
                })) {
                    firstFittingPlacement = placement;
                    makeFallbackChecks = false;
                    break;
                }

                checksMap.set(placement, checks);
            }

            if (makeFallbackChecks) {
                // `2` may be desired in some cases – research later
                var numberOfChecks = flipVariations ? 3 : 1;

                var _loop = function _loop(_i) {
                    var fittingPlacement = placements.find(function(placement) {
                        var checks = checksMap.get(placement);

                        if (checks) {
                            return checks.slice(0, _i).every(function(check) {
                                return check;
                            });
                        }
                    });

                    if (fittingPlacement) {
                        firstFittingPlacement = fittingPlacement;
                        return "break";
                    }
                };

                for (var _i = numberOfChecks; _i > 0; _i--) {
                    var _ret = _loop(_i);

                    if (_ret === "break")
                        break;
                }
            }

            if (state.placement !== firstFittingPlacement) {
                state.modifiersData[name]._skip = true;
                state.placement = firstFittingPlacement;
                state.reset = true;
            }
        }

        /* harmony default export */
        var modifiers_flip = ({
            name: 'flip',
            enabled: true,
            phase: 'main',
            fn: flip,
            requiresIfExists: ['offset'],
            data: {
                _skip: false
            }
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/getAltAxis.js
        function getAltAxis(axis) {
            return axis === 'x' ? 'y' : 'x';
        }
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/utils/within.js
        function within(min, value, max) {
            return Math.max(min, Math.min(value, max));
        }
        // EXTERNAL MODULE: ../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
        var getLayoutRect = __webpack_require__(108);

        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js

        function preventOverflow(_ref) {
            var state = _ref.state
              , options = _ref.options
              , name = _ref.name;
            var _options$mainAxis = options.mainAxis
              , checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis
              , _options$altAxis = options.altAxis
              , checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis
              , boundary = options.boundary
              , rootBoundary = options.rootBoundary
              , padding = options.padding
              , _options$tether = options.tether
              , tether = _options$tether === void 0 ? true : _options$tether
              , _options$tetherOffset = options.tetherOffset
              , tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
            var overflow = detectOverflow(state, {
                boundary: boundary,
                rootBoundary: rootBoundary,
                padding: padding
            });
            var basePlacement = Object(getBasePlacement["a"/* default */
            ])(state.placement);
            var variation = getVariation(state.placement);
            var isBasePlacement = !variation;
            var mainAxis = getMainAxisFromPlacement(basePlacement);
            var altAxis = getAltAxis(mainAxis);
            var popperOffsets = state.modifiersData.popperOffsets;
            var referenceRect = state.rects.reference;
            var popperRect = state.rects.popper;
            var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
                placement: state.placement
            })) : tetherOffset;
            var data = {
                x: 0,
                y: 0
            };

            if (checkMainAxis) {
                var mainSide = mainAxis === 'y' ? enums["m"/* top */
                ] : enums["f"/* left */
                ];
                var altSide = mainAxis === 'y' ? enums["c"/* bottom */
                ] : enums["k"/* right */
                ];
                var len = mainAxis === 'y' ? 'height' : 'width';
                var offset = popperOffsets[mainAxis];
                var min = popperOffsets[mainAxis] + overflow[mainSide];
                var max = popperOffsets[mainAxis] - overflow[altSide];
                var additive = tether ? -popperRect[len] / 2 : 0;
                var minLen = variation === enums["l"/* start */
                ] ? referenceRect[len] : popperRect[len];
                var maxLen = variation === enums["l"/* start */
                ] ? -popperRect[len] : -referenceRect[len];
                // We need to include the arrow in the calculation so the arrow doesn't go
                // outside the reference bounds

                var arrowElement = state.elements.arrow;
                var arrowRect = tether && arrowElement ? Object(getLayoutRect["a"/* default */
                ])(arrowElement) : {
                    width: 0,
                    height: 0
                };
                var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
                var arrowPaddingMin = arrowPaddingObject[mainSide];
                var arrowPaddingMax = arrowPaddingObject[altSide];
                // If the reference length is smaller than the arrow length, we don't want
                // to include its full size in the calculation. If the reference is small
                // and near the edge of a boundary, the popper can overflow even if the
                // reference is not overflowing as well (e.g. virtual elements with no
                // width or height)

                var arrowLen = within(0, Math.abs(referenceRect[len] - arrowRect[len]), arrowRect[len]);
                var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
                var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
                var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
                var tetherMin = state.modifiersData.popperOffsets[mainAxis] + minOffset - offsetModifierValue;
                var tetherMax = state.modifiersData.popperOffsets[mainAxis] + maxOffset - offsetModifierValue;
                var preventedOffset = within(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);
                state.modifiersData.popperOffsets[mainAxis] = preventedOffset;
                data[mainAxis] = preventedOffset - offset;
            }

            if (checkAltAxis) {
                var _mainSide = mainAxis === 'x' ? enums["m"/* top */
                ] : enums["f"/* left */
                ];

                var _altSide = mainAxis === 'x' ? enums["c"/* bottom */
                ] : enums["k"/* right */
                ];

                var _offset = popperOffsets[altAxis];

                var _min = _offset + overflow[_mainSide];

                var _max = _offset - overflow[_altSide];

                var _preventedOffset = within(_min, _offset, _max);

                state.modifiersData.popperOffsets[altAxis] = _preventedOffset;
                data[altAxis] = _preventedOffset - _offset;
            }

            state.modifiersData[name] = data;
        }

        /* harmony default export */
        var modifiers_preventOverflow = ({
            name: 'preventOverflow',
            enabled: true,
            phase: 'main',
            fn: preventOverflow,
            requiresIfExists: ['offset']
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/arrow.js

        function arrow(_ref) {
            var _state$modifiersData$;

            var state = _ref.state
              , name = _ref.name;
            var arrowElement = state.elements.arrow;
            var popperOffsets = state.modifiersData.popperOffsets;
            var basePlacement = Object(getBasePlacement["a"/* default */
            ])(state.placement);
            var axis = getMainAxisFromPlacement(basePlacement);
            var isVertical = [enums["f"/* left */
            ], enums["k"/* right */
            ]].includes(basePlacement);
            var len = isVertical ? 'height' : 'width';

            if (!arrowElement) {
                return;
            }

            var paddingObject = state.modifiersData[name + "#persistent"].padding;
            var arrowRect = Object(getLayoutRect["a"/* default */
            ])(arrowElement);
            var minProp = axis === 'y' ? enums["m"/* top */
            ] : enums["f"/* left */
            ];
            var maxProp = axis === 'y' ? enums["c"/* bottom */
            ] : enums["k"/* right */
            ];
            var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
            var startDiff = popperOffsets[axis] - state.rects.reference[axis];
            var centerToReference = endDiff / 2 - startDiff / 2;
            // Make sure the arrow doesn't overflow the popper if the center point is
            // outside of the popper bounds

            var center = within(paddingObject[minProp], state.rects.popper[len] / 2 - arrowRect[len] / 2 + centerToReference, state.rects.popper[len] - arrowRect[len] - paddingObject[maxProp]);
            // Prevents breaking syntax highlighting...

            var axisProp = axis;
            state.modifiersData[name] = (_state$modifiersData$ = {},
            _state$modifiersData$[axisProp] = center,
            _state$modifiersData$);
        }

        function arrow_effect(_ref2) {
            var state = _ref2.state
              , options = _ref2.options
              , name = _ref2.name;
            var _options$element = options.element
              , arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element
              , _options$padding = options.padding
              , padding = _options$padding === void 0 ? 0 : _options$padding;
            // CSS selector

            if (typeof arrowElement === 'string') {
                arrowElement = state.elements.popper.querySelector(arrowElement);

                if (!arrowElement) {
                    return;
                }
            }

            if (!contains(state.elements.popper, arrowElement)) {
                if (false) {}

                return;
            }

            state.elements.arrow = arrowElement;
            state.modifiersData[name + "#persistent"] = {
                padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, enums["b"/* basePlacements */
                ]))
            };
        }

        /* harmony default export */
        var modifiers_arrow = ({
            name: 'arrow',
            enabled: true,
            phase: 'main',
            fn: arrow,
            effect: arrow_effect,
            requires: ['popperOffsets'],
            requiresIfExists: ['preventOverflow']
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/modifiers/hide.js

        function getSideOffsets(overflow, rect, preventedOffsets) {
            if (preventedOffsets === void 0) {
                preventedOffsets = {
                    x: 0,
                    y: 0
                };
            }

            return {
                top: overflow.top - rect.height - preventedOffsets.y,
                right: overflow.right - rect.width + preventedOffsets.x,
                bottom: overflow.bottom - rect.height + preventedOffsets.y,
                left: overflow.left - rect.width - preventedOffsets.x
            };
        }

        function isAnySideFullyClipped(overflow) {
            return [enums["m"/* top */
            ], enums["k"/* right */
            ], enums["c"/* bottom */
            ], enums["f"/* left */
            ]].some(function(side) {
                return overflow[side] >= 0;
            });
        }

        function hide(_ref) {
            var state = _ref.state
              , name = _ref.name;
            var referenceRect = state.rects.reference;
            var popperRect = state.rects.popper;
            var preventedOffsets = state.modifiersData.preventOverflow;
            var referenceOverflow = detectOverflow(state, {
                elementContext: 'reference'
            });
            var popperAltOverflow = detectOverflow(state, {
                altBoundary: true
            });
            var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
            var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
            var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
            var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
            state.modifiersData[name] = {
                referenceClippingOffsets: referenceClippingOffsets,
                popperEscapeOffsets: popperEscapeOffsets,
                isReferenceHidden: isReferenceHidden,
                hasPopperEscaped: hasPopperEscaped
            };
            state.attributes.popper = Object.assign({}, state.attributes.popper, {
                'data-popper-reference-hidden': isReferenceHidden,
                'data-popper-escaped': hasPopperEscaped
            });
        }

        /* harmony default export */
        var modifiers_hide = ({
            name: 'hide',
            enabled: true,
            phase: 'main',
            requiresIfExists: ['preventOverflow'],
            fn: hide
        });
        // CONCATENATED MODULE: ../node_modules/@popperjs/core/lib/popper.js
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "createPopper", function() {
            return createPopper;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "defaultModifiers", function() {
            return defaultModifiers;
        });
        /* concated harmony reexport popperGenerator */
        __webpack_require__.d(__webpack_exports__, "popperGenerator", function() {
            return lib["popperGenerator"];
        });

        var defaultModifiers = [eventListeners, modifiers_popperOffsets, modifiers_computeStyles, modifiers_applyStyles, modifiers_offset, modifiers_flip, modifiers_preventOverflow, modifiers_arrow, modifiers_hide];
        var createPopper = /*#__PURE__*/
        Object(lib["popperGenerator"])({
            defaultModifiers: defaultModifiers
        });
        // eslint-disable-next-line import/no-unused-modules

        /***/
    }
    ), /* 753 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return useTheme;
        });
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var _ThemeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(172);

        function useTheme() {
            return react__WEBPACK_IMPORTED_MODULE_0__["default"].useContext(_ThemeContext__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"]);
        }

        /***/
    }
    ), /* 754 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return createGenerateClassName;
        });
        /* harmony import */
        var _ThemeProvider_nested__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);

        /**
 * This is the list of the style rule name we use as drop in replacement for the built-in
 * pseudo classes (:checked, :disabled, :focused, etc.).
 *
 * Why do they exist in the first place?
 * These classes are used at a specificity of 2.
 * It allows them to override previously definied styles as well as
 * being untouched by simple user overrides.
 */

        var pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];
        // Returns a function which generates unique class names based on counters.
        // When new generator function is created, rule counter is reset.
        // We need to reset the rule counter for SSR for each request.
        //
        // It's inspired by
        // https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

        function createGenerateClassName() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var _options$disableGloba = options.disableGlobal
              , disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba
              , _options$productionPr = options.productionPrefix
              , productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr
              , _options$seed = options.seed
              , seed = _options$seed === void 0 ? '' : _options$seed;
            var seedPrefix = seed === '' ? '' : "".concat(seed, "-");
            var ruleCounter = 0;
            return function(rule, styleSheet) {
                ruleCounter += 1;

                if (false) {}

                var name = styleSheet.options.name;
                // Is a global static MUI style?

                if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {
                    // We can use a shorthand class name, we never use the keys to style the components.
                    if (pseudoClasses.indexOf(rule.key) !== -1) {
                        return "Mui-".concat(rule.key);
                    }

                    var prefix = "".concat(seedPrefix).concat(name, "-").concat(rule.key);

                    if (!styleSheet.options.theme[_ThemeProvider_nested__WEBPACK_IMPORTED_MODULE_0__[/* default */
                    "a"]] || seed !== '') {
                        return prefix;
                    }

                    return "".concat(prefix, "-").concat(ruleCounter);
                }

                if (true) {
                    return "".concat(seedPrefix).concat(productionPrefix).concat(ruleCounter);
                }

                var suffix = "".concat(rule.key, "-").concat(ruleCounter);
                // Help with debuggability.

                if (styleSheet.options.classNamePrefix) {
                    return "".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, "-").concat(suffix);
                }

                return "".concat(seedPrefix).concat(suffix);
            }
            ;
        }

        /***/
    }
    ), /* 755 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);
        /* harmony import */
        var _ButtonBase__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(258);
        /* harmony import */
        var _utils_capitalize__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(7);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    textAlign: 'center',
                    flex: '0 0 auto',
                    fontSize: theme.typography.pxToRem(24),
                    padding: 12,
                    borderRadius: '50%',
                    overflow: 'visible',
                    // Explicitly set the default value to solve a bug on IE 11.
                    color: theme.palette.action.active,
                    transition: theme.transitions.create('background-color', {
                        duration: theme.transitions.duration.shortest
                    }),
                    '&:hover': {
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.action.active, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    },
                    '&$disabled': {
                        backgroundColor: 'transparent',
                        color: theme.palette.action.disabled
                    }
                },

                /* Styles applied to the root element if `edge="start"`. */
                edgeStart: {
                    marginLeft: -12,
                    '$sizeSmall&': {
                        marginLeft: -3
                    }
                },

                /* Styles applied to the root element if `edge="end"`. */
                edgeEnd: {
                    marginRight: -12,
                    '$sizeSmall&': {
                        marginRight: -3
                    }
                },

                /* Styles applied to the root element if `color="inherit"`. */
                colorInherit: {
                    color: 'inherit'
                },

                /* Styles applied to the root element if `color="primary"`. */
                colorPrimary: {
                    color: theme.palette.primary.main,
                    '&:hover': {
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.primary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Styles applied to the root element if `color="secondary"`. */
                colorSecondary: {
                    color: theme.palette.secondary.main,
                    '&:hover': {
                        backgroundColor: Object(_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__[/* fade */
                        "d"])(theme.palette.secondary.main, theme.palette.action.hoverOpacity),
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `size="small"`. */
                sizeSmall: {
                    padding: 3,
                    fontSize: theme.typography.pxToRem(18)
                },

                /* Styles applied to the children container element. */
                label: {
                    width: '100%',
                    display: 'flex',
                    alignItems: 'inherit',
                    justifyContent: 'inherit'
                }
            };
        };
        /**
 * Refer to the [Icons](/components/icons/) section of the documentation
 * regarding the available icon options.
 */

        var IconButton = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function IconButton(props, ref) {
            var _props$edge = props.edge
              , edge = _props$edge === void 0 ? false : _props$edge
              , children = props.children
              , classes = props.classes
              , className = props.className
              , _props$color = props.color
              , color = _props$color === void 0 ? 'default' : _props$color
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableFocusRi = props.disableFocusRipple
              , disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi
              , _props$size = props.size
              , size = _props$size === void 0 ? 'medium' : _props$size
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["edge", "children", "classes", "className", "color", "disabled", "disableFocusRipple", "size"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_ButtonBase__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, color !== 'default' && classes["color".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(color))], disabled && classes.disabled, {
                    small: classes["size".concat(Object(_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__[/* default */
                    "a"])(size))]
                }[size], {
                    start: classes.edgeStart,
                    end: classes.edgeEnd
                }[edge]),
                centerRipple: true,
                focusRipple: !disableFocusRipple,
                disabled: disabled,
                ref: ref
            }, other), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("span", {
                className: classes.label
            }, children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiIconButton'
        })(IconButton));

        /***/
    }
    ), /* 756 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);

        var styles = {
            /* Styles applied to the root element. */
            root: {
                display: 'flex',
                flexDirection: 'column',
                flexWrap: 'wrap'
            },

            /* Styles applied to the root element if `row={true}`. */
            row: {
                flexDirection: 'row'
            }
        };
        /**
 * `FormGroup` wraps controls such as `Checkbox` and `Switch`.
 * It provides compact row layout.
 * For the `Radio`, you should be using the `RadioGroup` component instead of this one.
 */

        var FormGroup = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function FormGroup(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$row = props.row
              , row = _props$row === void 0 ? false : _props$row
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["classes", "className", "row"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("div", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, row && classes.row),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiFormGroup'
        })(FormGroup));

        /***/
    }
    ), /* 757 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var _utils_debounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13);

        function getStyleValue(computedStyle, property) {
            return parseInt(computedStyle[property], 10) || 0;
        }

        var useEnhancedEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__["default"].useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect;
        var styles = {
            /* Styles applied to the shadow textarea element. */
            shadow: {
                // Visibility needed to hide the extra text area on iPads
                visibility: 'hidden',
                // Remove from the content flow
                position: 'absolute',
                // Ignore the scrollbar width
                overflow: 'hidden',
                height: 0,
                top: 0,
                left: 0,
                // Create a new layer, increase the isolation of the computed values
                transform: 'translateZ(0)'
            }
        };
        var TextareaAutosize = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function TextareaAutosize(props, ref) {
            var onChange = props.onChange
              , rows = props.rows
              , rowsMax = props.rowsMax
              , _props$rowsMin = props.rowsMin
              , rowsMinProp = _props$rowsMin === void 0 ? 1 : _props$rowsMin
              , style = props.style
              , value = props.value
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["onChange", "rows", "rowsMax", "rowsMin", "style", "value"]);

            var rowsMin = rows || rowsMinProp;

            var _React$useRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(value != null)
              , isControlled = _React$useRef.current;

            var inputRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);
            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])(ref, inputRef);
            var shadowRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_2__["default"].useState({})
              , state = _React$useState[0]
              , setState = _React$useState[1];

            var syncHeight = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function() {
                var input = inputRef.current;
                var computedStyle = window.getComputedStyle(input);
                var inputShallow = shadowRef.current;
                inputShallow.style.width = computedStyle.width;
                inputShallow.value = input.value || props.placeholder || 'x';
                var boxSizing = computedStyle['box-sizing'];
                var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');
                var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width');
                // The height of the inner content

                var innerHeight = inputShallow.scrollHeight - padding;
                // Measure height of a textarea with a single row

                inputShallow.value = 'x';
                var singleRowHeight = inputShallow.scrollHeight - padding;
                // The height of the outer content

                var outerHeight = innerHeight;

                if (rowsMin) {
                    outerHeight = Math.max(Number(rowsMin) * singleRowHeight, outerHeight);
                }

                if (rowsMax) {
                    outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);
                }

                outerHeight = Math.max(outerHeight, singleRowHeight);
                // Take the box sizing into account for applying this value as a style.

                var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);
                var overflow = Math.abs(outerHeight - innerHeight) <= 1;
                setState(function(prevState) {
                    // Need a large enough different to update the height.
                    // This prevents infinite rendering loop.
                    if (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow) {
                        return {
                            overflow: overflow,
                            outerHeightStyle: outerHeightStyle
                        };
                    }

                    return prevState;
                });
            }, [rowsMax, rowsMin, props.placeholder]);
            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                var handleResize = Object(_utils_debounce__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(function() {
                    syncHeight();
                });
                window.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    window.removeEventListener('resize', handleResize);
                }
                ;
            }, [syncHeight]);
            useEnhancedEffect(function() {
                syncHeight();
            });

            var handleChange = function handleChange(event) {
                if (!isControlled) {
                    syncHeight();
                }

                if (onChange) {
                    onChange(event);
                }
            };

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(react__WEBPACK_IMPORTED_MODULE_2__["default"].Fragment, null, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("textarea", Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                value: value,
                onChange: handleChange,
                ref: handleRef // Apply the rows prop to get a "correct" first SSR paint
                ,
                rows: rowsMin,
                style: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    height: state.outerHeightStyle,
                    // Need a large enough different to allow scrolling.
                    // This prevents infinite rendering loop.
                    overflow: state.overflow ? 'hidden' : null
                }, style)
            }, other)), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement("textarea", {
                "aria-hidden": true,
                className: props.className,
                readOnly: true,
                ref: shadowRef,
                tabIndex: -1,
                style: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({}, styles.shadow, {}, style)
            }));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (TextareaAutosize);

        /***/
    }
    ), /* 758 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _ButtonBase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(258);
        /* harmony import */
        var _utils_isMuiElement__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13);
        /* harmony import */
        var _List_ListContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(53);

        var styles = function styles(theme) {
            return {
                /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */
                root: {
                    display: 'flex',
                    justifyContent: 'flex-start',
                    alignItems: 'center',
                    position: 'relative',
                    textDecoration: 'none',
                    width: '100%',
                    boxSizing: 'border-box',
                    textAlign: 'left',
                    paddingTop: 8,
                    paddingBottom: 8,
                    '&$focusVisible': {
                        backgroundColor: theme.palette.action.selected
                    },
                    '&$selected, &$selected:hover': {
                        backgroundColor: theme.palette.action.selected
                    },
                    '&$disabled': {
                        opacity: 0.5
                    }
                },

                /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */
                container: {
                    position: 'relative'
                },

                /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */
                focusVisible: {},

                /* Styles applied to the `component` element if dense. */
                dense: {
                    paddingTop: 4,
                    paddingBottom: 4
                },

                /* Styles applied to the `component` element if `alignItems="flex-start"`. */
                alignItemsFlexStart: {
                    alignItems: 'flex-start'
                },

                /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the inner `component` element if `divider={true}`. */
                divider: {
                    borderBottom: "1px solid ".concat(theme.palette.divider),
                    backgroundClip: 'padding-box'
                },

                /* Styles applied to the inner `component` element if `disableGutters={false}`. */
                gutters: {
                    paddingLeft: 16,
                    paddingRight: 16
                },

                /* Styles applied to the inner `component` element if `button={true}`. */
                button: {
                    transition: theme.transitions.create('background-color', {
                        duration: theme.transitions.duration.shortest
                    }),
                    '&:hover': {
                        textDecoration: 'none',
                        backgroundColor: theme.palette.action.hover,
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: 'transparent'
                        }
                    }
                },

                /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */
                secondaryAction: {
                    // Add some space to avoid collision as `ListItemSecondaryAction`
                    // is absolutely positioned.
                    paddingRight: 48
                },

                /* Pseudo-class applied to the root element if `selected={true}`. */
                selected: {}
            };
        };
        var useEnhancedEffect = typeof window === 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect : react__WEBPACK_IMPORTED_MODULE_2__["default"].useLayoutEffect;
        /**
 * Uses an additional container component if `ListItemSecondaryAction` is the last child.
 */

        var ListItem = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function ListItem(props, ref) {
            var _props$alignItems = props.alignItems
              , alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems
              , _props$autoFocus = props.autoFocus
              , autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus
              , _props$button = props.button
              , button = _props$button === void 0 ? false : _props$button
              , childrenProp = props.children
              , classes = props.classes
              , className = props.className
              , componentProp = props.component
              , _props$ContainerCompo = props.ContainerComponent
              , ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo
              , _props$ContainerProps = props.ContainerProps;
            _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;

            var ContainerClassName = _props$ContainerProps.className
              , ContainerProps = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(_props$ContainerProps, ["className"])
              , _props$dense = props.dense
              , dense = _props$dense === void 0 ? false : _props$dense
              , _props$disabled = props.disabled
              , disabled = _props$disabled === void 0 ? false : _props$disabled
              , _props$disableGutters = props.disableGutters
              , disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters
              , _props$divider = props.divider
              , divider = _props$divider === void 0 ? false : _props$divider
              , focusVisibleClassName = props.focusVisibleClassName
              , _props$selected = props.selected
              , selected = _props$selected === void 0 ? false : _props$selected
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["alignItems", "autoFocus", "button", "children", "classes", "className", "component", "ContainerComponent", "ContainerProps", "dense", "disabled", "disableGutters", "divider", "focusVisibleClassName", "selected"]);

            var context = react__WEBPACK_IMPORTED_MODULE_2__["default"].useContext(_List_ListContext__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"]);
            var childContext = {
                dense: dense || context.dense || false,
                alignItems: alignItems
            };
            var listItemRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);
            useEnhancedEffect(function() {
                if (autoFocus) {
                    if (listItemRef.current) {
                        listItemRef.current.focus();
                    } else if (false) {}
                }
            }, [autoFocus]);
            var children = react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.toArray(childrenProp);
            var hasSecondaryAction = children.length && Object(_utils_isMuiElement__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"])(children[children.length - 1], ['ListItemSecondaryAction']);
            var handleOwnRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(instance) {
                // #StrictMode ready
                listItemRef.current = react__WEBPACK_IMPORTED_MODULE_2__["default"].findDOMNode(instance);
            }, []);
            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"])(handleOwnRef, ref);

            var componentProps = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== "center" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),
                disabled: disabled
            }, other);

            var Component = componentProp || 'li';

            if (button) {
                componentProps.component = componentProp || 'div';
                componentProps.focusVisibleClassName = Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.focusVisible, focusVisibleClassName);
                Component = _ButtonBase__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"];
            }

            if (hasSecondaryAction) {
                // Use div by default.
                Component = !componentProps.component && !componentProp ? 'div' : Component;
                // Avoid nesting of li > li.

                if (ContainerComponent === 'li') {
                    if (Component === 'li') {
                        Component = 'div';
                    } else if (componentProps.component === 'li') {
                        componentProps.component = 'div';
                    }
                }

                return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_List_ListContext__WEBPACK_IMPORTED_MODULE_9__[/* default */
                "a"].Provider, {
                    value: childContext
                }, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(ContainerComponent, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                    "a"])(classes.container, ContainerClassName),
                    ref: handleRef
                }, ContainerProps), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, componentProps, children), children.pop()));
            }

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_List_ListContext__WEBPACK_IMPORTED_MODULE_9__[/* default */
            "a"].Provider, {
                value: childContext
            }, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                ref: handleRef
            }, componentProps), children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiListItem'
        })(ListItem));

        /***/
    }
    ), /* 759 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export getOffsetTop */
        /* unused harmony export getOffsetLeft */
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var _utils_debounce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);
        /* harmony import */
        var _utils_ownerDocument__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23);
        /* harmony import */
        var _utils_ownerWindow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(73);
        /* harmony import */
        var _utils_createChainedFunction__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(47);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(4);
        /* harmony import */
        var _Modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(255);
        /* harmony import */
        var _Grow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(760);
        /* harmony import */
        var _Paper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(761);

        function getOffsetTop(rect, vertical) {
            var offset = 0;

            if (typeof vertical === 'number') {
                offset = vertical;
            } else if (vertical === 'center') {
                offset = rect.height / 2;
            } else if (vertical === 'bottom') {
                offset = rect.height;
            }

            return offset;
        }
        function getOffsetLeft(rect, horizontal) {
            var offset = 0;

            if (typeof horizontal === 'number') {
                offset = horizontal;
            } else if (horizontal === 'center') {
                offset = rect.width / 2;
            } else if (horizontal === 'right') {
                offset = rect.width;
            }

            return offset;
        }

        function getTransformOriginValue(transformOrigin) {
            return [transformOrigin.horizontal, transformOrigin.vertical].map(function(n) {
                return typeof n === 'number' ? "".concat(n, "px") : n;
            }).join(' ');
        }
        // Sum the scrollTop between two elements.

        function getScrollParent(parent, child) {
            var element = child;
            var scrollTop = 0;

            while (element && element !== parent) {
                element = element.parentElement;
                scrollTop += element.scrollTop;
            }

            return scrollTop;
        }

        function getAnchorEl(anchorEl) {
            return typeof anchorEl === 'function' ? anchorEl() : anchorEl;
        }

        var styles = {
            /* Styles applied to the root element */
            root: {},

            /* Styles applied to the `Paper` component. */
            paper: {
                position: 'absolute',
                overflowY: 'auto',
                overflowX: 'hidden',
                // So we see the popover when it's empty.
                // It's most likely on issue on userland.
                minWidth: 16,
                minHeight: 16,
                maxWidth: 'calc(100% - 32px)',
                maxHeight: 'calc(100% - 32px)',
                // We disable the focus ring for mouse, touch and keyboard users.
                outline: 0
            }
        };
        var Popover = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Popover(props, ref) {
            var action = props.action
              , anchorEl = props.anchorEl
              , _props$anchorOrigin = props.anchorOrigin
              , anchorOrigin = _props$anchorOrigin === void 0 ? {
                vertical: 'top',
                horizontal: 'left'
            } : _props$anchorOrigin
              , anchorPosition = props.anchorPosition
              , _props$anchorReferenc = props.anchorReference
              , anchorReference = _props$anchorReferenc === void 0 ? 'anchorEl' : _props$anchorReferenc
              , children = props.children
              , classes = props.classes
              , className = props.className
              , containerProp = props.container
              , _props$elevation = props.elevation
              , elevation = _props$elevation === void 0 ? 8 : _props$elevation
              , getContentAnchorEl = props.getContentAnchorEl
              , _props$marginThreshol = props.marginThreshold
              , marginThreshold = _props$marginThreshol === void 0 ? 16 : _props$marginThreshol
              , onEnter = props.onEnter
              , onEntered = props.onEntered
              , onEntering = props.onEntering
              , onExit = props.onExit
              , onExited = props.onExited
              , onExiting = props.onExiting
              , open = props.open
              , _props$PaperProps = props.PaperProps
              , PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps
              , _props$transformOrigi = props.transformOrigin
              , transformOrigin = _props$transformOrigi === void 0 ? {
                vertical: 'top',
                horizontal: 'left'
            } : _props$transformOrigi
              , _props$TransitionComp = props.TransitionComponent
              , TransitionComponent = _props$TransitionComp === void 0 ? _Grow__WEBPACK_IMPORTED_MODULE_11__[/* default */
            "a"] : _props$TransitionComp
              , _props$transitionDura = props.transitionDuration
              , transitionDurationProp = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura
              , _props$TransitionProp = props.TransitionProps
              , TransitionProps = _props$TransitionProp === void 0 ? {} : _props$TransitionProp
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["action", "anchorEl", "anchorOrigin", "anchorPosition", "anchorReference", "children", "classes", "className", "container", "elevation", "getContentAnchorEl", "marginThreshold", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "open", "PaperProps", "transformOrigin", "TransitionComponent", "transitionDuration", "TransitionProps"]);

            var paperRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef();
            // Returns the top/left offset of the position
            // to attach to on the anchor element (or body if none is provided)

            var getAnchorOffset = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(contentAnchorOffset) {
                if (anchorReference === 'anchorPosition') {
                    if (false) {}

                    return anchorPosition;
                }

                var resolvedAnchorEl = getAnchorEl(anchorEl);
                var containerWindow = Object(_utils_ownerWindow__WEBPACK_IMPORTED_MODULE_7__[/* default */
                "a"])(resolvedAnchorEl);
                // If an anchor element wasn't provided, just use the parent body element of this Popover

                var anchorElement = resolvedAnchorEl instanceof containerWindow.Element ? resolvedAnchorEl : Object(_utils_ownerDocument__WEBPACK_IMPORTED_MODULE_6__[/* default */
                "a"])(paperRef.current).body;
                var anchorRect = anchorElement.getBoundingClientRect();

                if (false) {
                    var box;
                }

                var anchorVertical = contentAnchorOffset === 0 ? anchorOrigin.vertical : 'center';
                return {
                    top: anchorRect.top + getOffsetTop(anchorRect, anchorVertical),
                    left: anchorRect.left + getOffsetLeft(anchorRect, anchorOrigin.horizontal)
                };
            }, [anchorEl, anchorOrigin.horizontal, anchorOrigin.vertical, anchorPosition, anchorReference]);
            // Returns the vertical offset of inner content to anchor the transform on if provided

            var getContentAnchorOffset = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(element) {
                var contentAnchorOffset = 0;

                if (getContentAnchorEl && anchorReference === 'anchorEl') {
                    var contentAnchorEl = getContentAnchorEl(element);

                    if (contentAnchorEl && element.contains(contentAnchorEl)) {
                        var scrollTop = getScrollParent(element, contentAnchorEl);
                        contentAnchorOffset = contentAnchorEl.offsetTop + contentAnchorEl.clientHeight / 2 - scrollTop || 0;
                    }
                    // != the default value

                    if (false) {}
                }

                return contentAnchorOffset;
            }, [anchorOrigin.vertical, anchorReference, getContentAnchorEl]);
            // Return the base transform origin using the element
            // and taking the content anchor offset into account if in use

            var getTransformOrigin = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(elemRect) {
                var contentAnchorOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                return {
                    vertical: getOffsetTop(elemRect, transformOrigin.vertical) + contentAnchorOffset,
                    horizontal: getOffsetLeft(elemRect, transformOrigin.horizontal)
                };
            }, [transformOrigin.horizontal, transformOrigin.vertical]);
            var getPositioningStyle = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(element) {
                // Check if the parent has requested anchoring on an inner content node
                var contentAnchorOffset = getContentAnchorOffset(element);
                var elemRect = {
                    width: element.offsetWidth,
                    height: element.offsetHeight
                };
                // Get the transform origin point on the element itself

                var elemTransformOrigin = getTransformOrigin(elemRect, contentAnchorOffset);

                if (anchorReference === 'none') {
                    return {
                        top: null,
                        left: null,
                        transformOrigin: getTransformOriginValue(elemTransformOrigin)
                    };
                }
                // Get the offset of of the anchoring element

                var anchorOffset = getAnchorOffset(contentAnchorOffset);
                // Calculate element positioning

                var top = anchorOffset.top - elemTransformOrigin.vertical;
                var left = anchorOffset.left - elemTransformOrigin.horizontal;
                var bottom = top + elemRect.height;
                var right = left + elemRect.width;
                // Use the parent window of the anchorEl if provided

                var containerWindow = Object(_utils_ownerWindow__WEBPACK_IMPORTED_MODULE_7__[/* default */
                "a"])(getAnchorEl(anchorEl));
                // Window thresholds taking required margin into account

                var heightThreshold = containerWindow.innerHeight - marginThreshold;
                var widthThreshold = containerWindow.innerWidth - marginThreshold;
                // Check if the vertical axis needs shifting

                if (top < marginThreshold) {
                    var diff = top - marginThreshold;
                    top -= diff;
                    elemTransformOrigin.vertical += diff;
                } else if (bottom > heightThreshold) {
                    var _diff = bottom - heightThreshold;

                    top -= _diff;
                    elemTransformOrigin.vertical += _diff;
                }

                if (false) {}
                // Check if the horizontal axis needs shifting

                if (left < marginThreshold) {
                    var _diff2 = left - marginThreshold;

                    left -= _diff2;
                    elemTransformOrigin.horizontal += _diff2;
                } else if (right > widthThreshold) {
                    var _diff3 = right - widthThreshold;

                    left -= _diff3;
                    elemTransformOrigin.horizontal += _diff3;
                }

                return {
                    top: "".concat(Math.round(top), "px"),
                    left: "".concat(Math.round(left), "px"),
                    transformOrigin: getTransformOriginValue(elemTransformOrigin)
                };
            }, [anchorEl, anchorReference, getAnchorOffset, getContentAnchorOffset, getTransformOrigin, marginThreshold]);
            var setPositioningStyles = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function() {
                var element = paperRef.current;

                if (!element) {
                    return;
                }

                var positioning = getPositioningStyle(element);

                if (positioning.top !== null) {
                    element.style.top = positioning.top;
                }

                if (positioning.left !== null) {
                    element.style.left = positioning.left;
                }

                element.style.transformOrigin = positioning.transformOrigin;
            }, [getPositioningStyle]);

            var handleEntering = function handleEntering(element, isAppearing) {
                if (onEntering) {
                    onEntering(element, isAppearing);
                }

                setPositioningStyles();
            };

            var handlePaperRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(instance) {
                // #StrictMode ready
                paperRef.current = react__WEBPACK_IMPORTED_MODULE_2__["default"].findDOMNode(instance);
            }, []);
            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                if (open) {
                    setPositioningStyles();
                }
            });
            react__WEBPACK_IMPORTED_MODULE_2__["default"].useImperativeHandle(action, function() {
                return open ? {
                    updatePosition: function updatePosition() {
                        setPositioningStyles();
                    }
                } : null;
            }, [open, setPositioningStyles]);
            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                if (!open) {
                    return undefined;
                }

                var handleResize = Object(_utils_debounce__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(function() {
                    setPositioningStyles();
                });
                window.addEventListener('resize', handleResize);
                return function() {
                    handleResize.clear();
                    window.removeEventListener('rezise', handleResize);
                }
                ;
            }, [open, setPositioningStyles]);
            var transitionDuration = transitionDurationProp;

            if (transitionDurationProp === 'auto' && !TransitionComponent.muiSupportAuto) {
                transitionDuration = undefined;
            }
            // If the container prop is provided, use that
            // If the anchorEl prop is provided, use its parent body element as the container
            // If neither are provided let the Modal take care of choosing the container

            var container = containerProp || (anchorEl ? Object(_utils_ownerDocument__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"])(getAnchorEl(anchorEl)).body : undefined);
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_Modal__WEBPACK_IMPORTED_MODULE_10__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                container: container,
                open: open,
                ref: ref,
                BackdropProps: {
                    invisible: true
                },
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(classes.root, className)
            }, other), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(TransitionComponent, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                appear: true,
                in: open,
                onEnter: onEnter,
                onEntered: onEntered,
                onExit: onExit,
                onExited: onExited,
                onExiting: onExiting,
                timeout: transitionDuration
            }, TransitionProps, {
                onEntering: Object(_utils_createChainedFunction__WEBPACK_IMPORTED_MODULE_8__[/* default */
                "a"])(handleEntering, TransitionProps.onEntering)
            }), react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_Paper__WEBPACK_IMPORTED_MODULE_12__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                elevation: elevation,
                ref: handlePaperRef
            }, PaperProps, {
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(classes.paper, PaperProps.className)
            }), children)));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_9__[/* default */
        "a"])(styles, {
            name: 'MuiPopover'
        })(Popover));

        /***/
    }
    ), /* 760 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var react_transition_group__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(765);
        /* harmony import */
        var _styles_useTheme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(17);
        /* harmony import */
        var _transitions_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(29);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(13);

        function getScale(value) {
            return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
        }

        var styles = {
            entering: {
                opacity: 1,
                transform: getScale(1)
            },
            entered: {
                opacity: 1,
                transform: 'none'
            }
        };
        /**
 * The Grow transition is used by the [Tooltip](/components/tooltips/) and
 * [Popover](/components/popover/) components.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

        var Grow = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Grow(props, ref) {
            var children = props.children
              , inProp = props.in
              , onEnter = props.onEnter
              , onExit = props.onExit
              , style = props.style
              , _props$timeout = props.timeout
              , timeout = _props$timeout === void 0 ? 'auto' : _props$timeout
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "in", "onEnter", "onExit", "style", "timeout"]);

            var timer = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef();
            var autoTimeout = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef();
            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_7__[/* default */
            "a"])(children.ref, ref);
            var theme = Object(_styles_useTheme__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"])();

            var handleEnter = function handleEnter(node, isAppearing) {
                Object(_transitions_utils__WEBPACK_IMPORTED_MODULE_6__[/* reflow */
                "b"])(node);
                // So the animation always start from the start.

                var _getTransitionProps = Object(_transitions_utils__WEBPACK_IMPORTED_MODULE_6__[/* getTransitionProps */
                "a"])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'enter'
                })
                  , transitionDuration = _getTransitionProps.duration
                  , delay = _getTransitionProps.delay;

                var duration;

                if (timeout === 'auto') {
                    duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
                    autoTimeout.current = duration;
                } else {
                    duration = transitionDuration;
                }

                node.style.transition = [theme.transitions.create('opacity', {
                    duration: duration,
                    delay: delay
                }), theme.transitions.create('transform', {
                    duration: duration * 0.666,
                    delay: delay
                })].join(',');

                if (onEnter) {
                    onEnter(node, isAppearing);
                }
            };

            var handleExit = function handleExit(node) {
                var _getTransitionProps2 = Object(_transitions_utils__WEBPACK_IMPORTED_MODULE_6__[/* getTransitionProps */
                "a"])({
                    style: style,
                    timeout: timeout
                }, {
                    mode: 'exit'
                })
                  , transitionDuration = _getTransitionProps2.duration
                  , delay = _getTransitionProps2.delay;

                var duration;

                if (timeout === 'auto') {
                    duration = theme.transitions.getAutoHeightDuration(node.clientHeight);
                    autoTimeout.current = duration;
                } else {
                    duration = transitionDuration;
                }

                node.style.transition = [theme.transitions.create('opacity', {
                    duration: duration,
                    delay: delay
                }), theme.transitions.create('transform', {
                    duration: duration * 0.666,
                    delay: delay || duration * 0.333
                })].join(',');
                node.style.opacity = '0';
                node.style.transform = getScale(0.75);

                if (onExit) {
                    onExit(node);
                }
            };

            var addEndListener = function addEndListener(_, next) {
                if (timeout === 'auto') {
                    timer.current = setTimeout(next, autoTimeout.current || 0);
                }
            };

            react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect(function() {
                return function() {
                    clearTimeout(timer.current);
                }
                ;
            }, []);
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_4__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                appear: true,
                in: inProp,
                onEnter: handleEnter,
                onExit: handleExit,
                addEndListener: addEndListener,
                timeout: timeout === 'auto' ? null : timeout
            }, other), function(state, childProps) {
                return react__WEBPACK_IMPORTED_MODULE_2__["default"].cloneElement(children, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({
                    style: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                    "a"])({
                        opacity: 0,
                        transform: getScale(0.75),
                        visibility: state === 'exited' && !inProp ? 'hidden' : undefined
                    }, styles[state], {}, style, {}, children.props.style),
                    ref: handleRef
                }, childProps));
            });
        });
        false ? undefined : void 0;
        Grow.muiSupportAuto = true;
        /* harmony default export */
        __webpack_exports__["a"] = (Grow);

        /***/
    }
    ), /* 761 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);

        var styles = function styles(theme) {
            var elevations = {};
            theme.shadows.forEach(function(shadow, index) {
                elevations["elevation".concat(index)] = {
                    boxShadow: shadow
                };
            });
            return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])({
                /* Styles applied to the root element. */
                root: {
                    backgroundColor: theme.palette.background.paper,
                    color: theme.palette.text.primary,
                    transition: theme.transitions.create('box-shadow')
                },

                /* Styles applied to the root element if `square={false}`. */
                rounded: {
                    borderRadius: theme.shape.borderRadius
                },

                /* Styles applied to the root element if `variant="outlined"` */
                outlined: {
                    border: "1px solid ".concat(theme.palette.divider)
                }
            }, elevations);
        };
        var Paper = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function Paper(props, ref) {
            var classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'div' : _props$component
              , _props$square = props.square
              , square = _props$square === void 0 ? false : _props$square
              , _props$elevation = props.elevation
              , elevation = _props$elevation === void 0 ? 1 : _props$elevation
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'elevation' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])(props, ["classes", "className", "component", "square", "elevation", "variant"]);

            if (false) {}

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, variant === 'outlined' ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
                ref: ref
            }, other));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiPaper'
        })(Paper));

        /***/
    }
    ), /* 762 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var react_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37);
        /* harmony import */
        var react_is__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
        /* harmony import */
        var _utils_ownerDocument__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(23);
        /* harmony import */
        var _List__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(763);
        /* harmony import */
        var _utils_getScrollbarSize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(183);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(13);

        function nextItem(list, item, disableListWrap) {
            if (list === item) {
                return list.firstChild;
            }

            if (item && item.nextElementSibling) {
                return item.nextElementSibling;
            }

            return disableListWrap ? null : list.firstChild;
        }

        function previousItem(list, item, disableListWrap) {
            if (list === item) {
                return disableListWrap ? list.firstChild : list.lastChild;
            }

            if (item && item.previousElementSibling) {
                return item.previousElementSibling;
            }

            return disableListWrap ? null : list.lastChild;
        }

        function textCriteriaMatches(nextFocus, textCriteria) {
            if (textCriteria === undefined) {
                return true;
            }

            var text = nextFocus.innerText;

            if (text === undefined) {
                // jsdom doesn't support innerText
                text = nextFocus.textContent;
            }

            text = text.trim().toLowerCase();

            if (text.length === 0) {
                return false;
            }

            if (textCriteria.repeating) {
                return text[0] === textCriteria.keys[0];
            }

            return text.indexOf(textCriteria.keys.join('')) === 0;
        }

        function moveFocus(list, currentFocus, disableListWrap, traversalFunction, textCriteria) {
            var wrappedOnce = false;
            var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);

            while (nextFocus) {
                // Prevent infinite loop.
                if (nextFocus === list.firstChild) {
                    if (wrappedOnce) {
                        return false;
                    }

                    wrappedOnce = true;
                }
                // Move to the next element.

                if (!nextFocus.hasAttribute('tabindex') || nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true' || !textCriteriaMatches(nextFocus, textCriteria)) {
                    nextFocus = traversalFunction(list, nextFocus, disableListWrap);
                } else {
                    nextFocus.focus();
                    return true;
                }
            }

            return false;
        }

        var useEnhancedEffect = typeof window === 'undefined' ? react__WEBPACK_IMPORTED_MODULE_2__["default"].useEffect : react__WEBPACK_IMPORTED_MODULE_2__["default"].useLayoutEffect;
        /**
 * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton
 * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */

        var MenuList = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function MenuList(props, ref) {
            var actions = props.actions
              , _props$autoFocus = props.autoFocus
              , autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus
              , _props$autoFocusItem = props.autoFocusItem
              , autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem
              , children = props.children
              , className = props.className
              , onKeyDown = props.onKeyDown
              , _props$disableListWra = props.disableListWrap
              , disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra
              , _props$variant = props.variant
              , variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["actions", "autoFocus", "autoFocusItem", "children", "className", "onKeyDown", "disableListWrap", "variant"]);

            var listRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef(null);
            var textCriteriaRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useRef({
                keys: [],
                repeating: true,
                previousKeyMatched: true,
                lastTime: null
            });
            useEnhancedEffect(function() {
                if (autoFocus) {
                    listRef.current.focus();
                }
            }, [autoFocus]);
            react__WEBPACK_IMPORTED_MODULE_2__["default"].useImperativeHandle(actions, function() {
                return {
                    adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {
                        // Let's ignore that piece of logic if users are already overriding the width
                        // of the menu.
                        var noExplicitWidth = !listRef.current.style.width;

                        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {
                            var scrollbarSize = "".concat(Object(_utils_getScrollbarSize__WEBPACK_IMPORTED_MODULE_7__[/* default */
                            "a"])(true), "px");
                            listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;
                            listRef.current.style.width = "calc(100% + ".concat(scrollbarSize, ")");
                        }

                        return listRef.current;
                    }
                };
            }, []);

            var handleKeyDown = function handleKeyDown(event) {
                var list = listRef.current;
                var key = event.key;
                /**
     * @type {Element} - will always be defined since we are in a keydown handler
     * attached to an element. A keydown event is either dispatched to the activeElement
     * or document.body or document.documentElement. Only the first case will
     * trigger this specific handler.
     */

                var currentFocus = Object(_utils_ownerDocument__WEBPACK_IMPORTED_MODULE_5__[/* default */
                "a"])(list).activeElement;

                if (key === 'ArrowDown') {
                    // Prevent scroll of the page
                    event.preventDefault();
                    moveFocus(list, currentFocus, disableListWrap, nextItem);
                } else if (key === 'ArrowUp') {
                    event.preventDefault();
                    moveFocus(list, currentFocus, disableListWrap, previousItem);
                } else if (key === 'Home') {
                    event.preventDefault();
                    moveFocus(list, null, disableListWrap, nextItem);
                } else if (key === 'End') {
                    event.preventDefault();
                    moveFocus(list, null, disableListWrap, previousItem);
                } else if (key.length === 1) {
                    var criteria = textCriteriaRef.current;
                    var lowerKey = key.toLowerCase();
                    var currTime = performance.now();

                    if (criteria.keys.length > 0) {
                        // Reset
                        if (currTime - criteria.lastTime > 500) {
                            criteria.keys = [];
                            criteria.repeating = true;
                            criteria.previousKeyMatched = true;
                        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {
                            criteria.repeating = false;
                        }
                    }

                    criteria.lastTime = currTime;
                    criteria.keys.push(lowerKey);
                    var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);

                    if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, nextItem, criteria))) {
                        event.preventDefault();
                    } else {
                        criteria.previousKeyMatched = false;
                    }
                }

                if (onKeyDown) {
                    onKeyDown(event);
                }
            };

            var handleOwnRef = react__WEBPACK_IMPORTED_MODULE_2__["default"].useCallback(function(instance) {
                // #StrictMode ready
                listRef.current = react__WEBPACK_IMPORTED_MODULE_2__["default"].findDOMNode(instance);
            }, []);
            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__[/* default */
            "a"])(handleOwnRef, ref);
            /**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */

            var activeItemIndex = -1;
            // since we inject focus related props into children we have to do a lookahead
            // to check if there is a `selected` item. We're looking for the last `selected`
            // item and use the first valid item as a fallback

            react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.forEach(children, function(child, index) {
                if (!react__WEBPACK_IMPORTED_MODULE_2__["default"].isValidElement(child)) {
                    return;
                }

                if (false) {}

                if (!child.props.disabled) {
                    if (variant === 'selectedMenu' && child.props.selected) {
                        activeItemIndex = index;
                    } else if (activeItemIndex === -1) {
                        activeItemIndex = index;
                    }
                }
            });
            var items = react__WEBPACK_IMPORTED_MODULE_2__["default"].Children.map(children, function(child, index) {
                if (index === activeItemIndex) {
                    var newChildProps = {};

                    if (autoFocusItem) {
                        newChildProps.autoFocus = true;
                    }

                    if (child.props.tabIndex === undefined && variant === 'selectedMenu') {
                        newChildProps.tabIndex = 0;
                    }

                    if (newChildProps !== null) {
                        return react__WEBPACK_IMPORTED_MODULE_2__["default"].cloneElement(child, newChildProps);
                    }
                }

                return child;
            });
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_List__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                role: "menu",
                ref: handleRef,
                className: className,
                onKeyDown: handleKeyDown,
                tabIndex: autoFocus ? 0 : -1
            }, other), items);
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (MenuList);

        /***/
    }
    ), /* 763 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);
        /* harmony import */
        var _ListContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(53);

        var styles = {
            /* Styles applied to the root element. */
            root: {
                listStyle: 'none',
                margin: 0,
                padding: 0,
                position: 'relative'
            },

            /* Styles applied to the root element if `disablePadding={false}`. */
            padding: {
                paddingTop: 8,
                paddingBottom: 8
            },

            /* Styles applied to the root element if dense. */
            dense: {},

            /* Styles applied to the root element if a `subheader` is provided. */
            subheader: {
                paddingTop: 0
            }
        };
        var List = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function List(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , _props$component = props.component
              , Component = _props$component === void 0 ? 'ul' : _props$component
              , _props$dense = props.dense
              , dense = _props$dense === void 0 ? false : _props$dense
              , _props$disablePadding = props.disablePadding
              , disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding
              , subheader = props.subheader
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "classes", "className", "component", "dense", "disablePadding", "subheader"]);

            var context = react__WEBPACK_IMPORTED_MODULE_2__["default"].useMemo(function() {
                return {
                    dense: dense
                };
            }, [dense]);
            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_ListContext__WEBPACK_IMPORTED_MODULE_6__[/* default */
            "a"].Provider, {
                value: context
            }, react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(Component, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                className: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                "a"])(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),
                ref: ref
            }, other), subheader, children));
        });
        false ? undefined : void 0;
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__[/* default */
        "a"])(styles, {
            name: 'MuiList'
        })(List));

        /***/
    }
    ), /* 764 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/jss/dist/jss.esm.js + 1 modules
        var jss_esm = __webpack_require__(35);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js
        var mergeClasses = __webpack_require__(774);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/makeStyles/multiKeyStore.js
        // Used https://github.com/thinkloop/multi-key-cache as inspiration
        var multiKeyStore = {
            set: function set(cache, key1, key2, value) {
                var subCache = cache.get(key1);

                if (!subCache) {
                    subCache = new Map();
                    cache.set(key1, subCache);
                }

                subCache.set(key2, value);
            },
            get: function get(cache, key1, key2) {
                var subCache = cache.get(key1);
                return subCache ? subCache.get(key2) : undefined;
            },
            delete: function _delete(cache, key1, key2) {
                var subCache = cache.get(key1);
                subCache.delete(key2);
            }
        };
        /* harmony default export */
        var makeStyles_multiKeyStore = (multiKeyStore);
        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/useTheme/useTheme.js
        var useTheme = __webpack_require__(753);

        // EXTERNAL MODULE: ../node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js
        var StylesProvider = __webpack_require__(775);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js
        /* eslint-disable import/prefer-default-export */
        // Global index counter to preserve source order.
        // We create the style sheet during at the creation of the component,
        // children are handled after the parents, so the order of style elements would be parent->child.
        // It is a problem though when a parent passes a className
        // which needs to override any child's styles.
        // StyleSheet of the child has a higher specificity, because of the source order.
        // So our solution is to render sheets them in the reverse order child->sheet, so
        // that parent has a higher specificity.
        var indexCounter = -1e9;
        function increment() {
            indexCounter += 1;

            if (false) {}

            return indexCounter;
        }
        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/typeof.js
        var esm_typeof = __webpack_require__(58);

        // EXTERNAL MODULE: ../node_modules/@material-ui/utils/esm/deepmerge.js
        var deepmerge = __webpack_require__(329);

        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js

        function getStylesCreator(stylesOrCreator) {
            var themingEnabled = typeof stylesOrCreator === 'function';

            if (false) {}

            return {
                create: function create(theme, name) {
                    var styles;

                    try {
                        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
                    } catch (err) {
                        if (false) {}

                        throw err;
                    }

                    if (!name || !theme.overrides || !theme.overrides[name]) {
                        return styles;
                    }

                    var overrides = theme.overrides[name];

                    var stylesWithOverrides = Object(esm_extends["a"/* default */
                    ])({}, styles);

                    Object.keys(overrides).forEach(function(key) {
                        if (false) {}

                        stylesWithOverrides[key] = Object(deepmerge["a"/* default */
                        ])(stylesWithOverrides[key], overrides[key]);
                    });
                    return stylesWithOverrides;
                },
                options: {}
            };
        }

        /* harmony default export */
        var getStylesCreator_getStylesCreator = (getStylesCreator);
        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js
        // We use the same empty object to ref count the styles that don't need a theme object.
        var noopTheme = {};
        /* harmony default export */
        var getStylesCreator_noopTheme = (noopTheme);
        // CONCATENATED MODULE: ../node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js

        function getClasses(_ref, classes, Component) {
            var state = _ref.state
              , stylesOptions = _ref.stylesOptions;

            if (stylesOptions.disableGeneration) {
                return classes || {};
            }

            if (!state.cacheClasses) {
                state.cacheClasses = {
                    // Cache for the finalized classes value.
                    value: null,
                    // Cache for the last used classes prop pointer.
                    lastProp: null,
                    // Cache for the last used rendered classes pointer.
                    lastJSS: {}
                };
            }
            // Tracks if either the rendered classes or classes prop has changed,
            // requiring the generation of a new finalized classes object.

            var generate = false;

            if (state.classes !== state.cacheClasses.lastJSS) {
                state.cacheClasses.lastJSS = state.classes;
                generate = true;
            }

            if (classes !== state.cacheClasses.lastProp) {
                state.cacheClasses.lastProp = classes;
                generate = true;
            }

            if (generate) {
                state.cacheClasses.value = Object(mergeClasses["a"/* default */
                ])({
                    baseClasses: state.cacheClasses.lastJSS,
                    newClasses: classes,
                    Component: Component
                });
            }

            return state.cacheClasses.value;
        }

        function attach(_ref2, props) {
            var state = _ref2.state
              , theme = _ref2.theme
              , stylesOptions = _ref2.stylesOptions
              , stylesCreator = _ref2.stylesCreator
              , name = _ref2.name;

            if (stylesOptions.disableGeneration) {
                return;
            }

            var sheetManager = makeStyles_multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);

            if (!sheetManager) {
                sheetManager = {
                    refs: 0,
                    staticSheet: null,
                    dynamicStyles: null
                };
                makeStyles_multiKeyStore.set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);
            }

            var options = Object(esm_extends["a"/* default */
            ])({}, stylesCreator.options, {}, stylesOptions, {
                theme: theme,
                flip: typeof stylesOptions.flip === 'boolean' ? stylesOptions.flip : theme.direction === 'rtl'
            });

            options.generateId = options.serverGenerateClassName || options.generateClassName;
            var sheetsRegistry = stylesOptions.sheetsRegistry;

            if (sheetManager.refs === 0) {
                var staticSheet;

                if (stylesOptions.sheetsCache) {
                    staticSheet = makeStyles_multiKeyStore.get(stylesOptions.sheetsCache, stylesCreator, theme);
                }

                var styles = stylesCreator.create(theme, name);

                if (!staticSheet) {
                    staticSheet = stylesOptions.jss.createStyleSheet(styles, Object(esm_extends["a"/* default */
                    ])({
                        link: false
                    }, options));
                    staticSheet.attach();

                    if (stylesOptions.sheetsCache) {
                        makeStyles_multiKeyStore.set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);
                    }
                }

                if (sheetsRegistry) {
                    sheetsRegistry.add(staticSheet);
                }

                sheetManager.staticSheet = staticSheet;
                sheetManager.dynamicStyles = Object(jss_esm["e"/* getDynamicStyles */
                ])(styles);
            }

            if (sheetManager.dynamicStyles) {
                var dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, Object(esm_extends["a"/* default */
                ])({
                    link: true
                }, options));
                dynamicSheet.update(props);
                dynamicSheet.attach();
                state.dynamicSheet = dynamicSheet;
                state.classes = Object(mergeClasses["a"/* default */
                ])({
                    baseClasses: sheetManager.staticSheet.classes,
                    newClasses: dynamicSheet.classes
                });

                if (sheetsRegistry) {
                    sheetsRegistry.add(dynamicSheet);
                }
            } else {
                state.classes = sheetManager.staticSheet.classes;
            }

            sheetManager.refs += 1;
        }

        function update(_ref3, props) {
            var state = _ref3.state;

            if (state.dynamicSheet) {
                state.dynamicSheet.update(props);
            }
        }

        function detach(_ref4) {
            var state = _ref4.state
              , theme = _ref4.theme
              , stylesOptions = _ref4.stylesOptions
              , stylesCreator = _ref4.stylesCreator;

            if (stylesOptions.disableGeneration) {
                return;
            }

            var sheetManager = makeStyles_multiKeyStore.get(stylesOptions.sheetsManager, stylesCreator, theme);
            sheetManager.refs -= 1;
            var sheetsRegistry = stylesOptions.sheetsRegistry;

            if (sheetManager.refs === 0) {
                makeStyles_multiKeyStore.delete(stylesOptions.sheetsManager, stylesCreator, theme);
                stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);

                if (sheetsRegistry) {
                    sheetsRegistry.remove(sheetManager.staticSheet);
                }
            }

            if (state.dynamicSheet) {
                stylesOptions.jss.removeStyleSheet(state.dynamicSheet);

                if (sheetsRegistry) {
                    sheetsRegistry.remove(state.dynamicSheet);
                }
            }
        }

        function useSynchronousEffect(func, values) {
            var key = compat_module["default"].useRef([]);
            var output;
            // Store "generation" key. Just returns a new object every time

            var currentKey = compat_module["default"].useMemo(function() {
                return {};
            }, values);
            // eslint-disable-line react-hooks/exhaustive-deps
            // "the first render", or "memo dropped the value"

            if (key.current !== currentKey) {
                key.current = currentKey;
                output = func();
            }

            compat_module["default"].useEffect(function() {
                return function() {
                    if (output) {
                        output();
                    }
                }
                ;
            }, [currentKey]// eslint-disable-line react-hooks/exhaustive-deps
            );
        }

        function makeStyles(stylesOrCreator) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var name = options.name
              , classNamePrefixOption = options.classNamePrefix
              , Component = options.Component
              , _options$defaultTheme = options.defaultTheme
              , defaultTheme = _options$defaultTheme === void 0 ? getStylesCreator_noopTheme : _options$defaultTheme
              , stylesOptions2 = Object(objectWithoutProperties["a"/* default */
            ])(options, ["name", "classNamePrefix", "Component", "defaultTheme"]);

            var stylesCreator = getStylesCreator_getStylesCreator(stylesOrCreator);
            var classNamePrefix = name || classNamePrefixOption || 'makeStyles';
            stylesCreator.options = {
                index: increment(),
                name: name,
                meta: classNamePrefix,
                classNamePrefix: classNamePrefix
            };
            return function() {
                var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                var theme = Object(useTheme["a"/* default */
                ])() || defaultTheme;

                var stylesOptions = Object(esm_extends["a"/* default */
                ])({}, compat_module["default"].useContext(StylesProvider["a"/* StylesContext */
                ]), {}, stylesOptions2);

                var instance = compat_module["default"].useRef();
                var shouldUpdate = compat_module["default"].useRef();
                useSynchronousEffect(function() {
                    var current = {
                        name: name,
                        state: {},
                        stylesCreator: stylesCreator,
                        stylesOptions: stylesOptions,
                        theme: theme
                    };
                    attach(current, props);
                    shouldUpdate.current = false;
                    instance.current = current;
                    return function() {
                        detach(current);
                    }
                    ;
                }, [theme, stylesCreator]);
                compat_module["default"].useEffect(function() {
                    if (shouldUpdate.current) {
                        update(instance.current, props);
                    }

                    shouldUpdate.current = true;
                });
                return getClasses(instance.current, props.classes, Component);
            }
            ;
        }

        /* harmony default export */
        var makeStyles_makeStyles = __webpack_exports__["a"] = (makeStyles);

        /***/
    }
    ), /* 765 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        var objectWithoutPropertiesLoose = __webpack_require__(176);

        // EXTERNAL MODULE: ../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
        var inheritsLoose = __webpack_require__(177);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // CONCATENATED MODULE: ../node_modules/react-transition-group/esm/config.js
        /* harmony default export */
        var config = ({
            disabled: false
        });
        // EXTERNAL MODULE: ../node_modules/react-transition-group/esm/TransitionGroupContext.js
        var TransitionGroupContext = __webpack_require__(83);

        // CONCATENATED MODULE: ../node_modules/react-transition-group/esm/Transition.js
        /* unused harmony export UNMOUNTED */
        /* unused harmony export EXITED */
        /* unused harmony export ENTERING */
        /* unused harmony export ENTERED */
        /* unused harmony export EXITING */

        var UNMOUNTED = 'unmounted';
        var EXITED = 'exited';
        var ENTERING = 'entering';
        var ENTERED = 'entered';
        var EXITING = 'exiting';
        /**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

        var Transition_Transition = /*#__PURE__*/
        function(_React$Component) {
            Object(inheritsLoose["a"/* default */
            ])(Transition, _React$Component);

            function Transition(props, context) {
                var _this;

                _this = _React$Component.call(this, props, context) || this;
                var parentGroup = context;
                // In the context of a TransitionGroup all enters are really appears

                var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
                var initialStatus;
                _this.appearStatus = null;

                if (props.in) {
                    if (appear) {
                        initialStatus = EXITED;
                        _this.appearStatus = ENTERING;
                    } else {
                        initialStatus = ENTERED;
                    }
                } else {
                    if (props.unmountOnExit || props.mountOnEnter) {
                        initialStatus = UNMOUNTED;
                    } else {
                        initialStatus = EXITED;
                    }
                }

                _this.state = {
                    status: initialStatus
                };
                _this.nextCallback = null;
                return _this;
            }

            Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
                var nextIn = _ref.in;

                if (nextIn && prevState.status === UNMOUNTED) {
                    return {
                        status: EXITED
                    };
                }

                return null;
            }
            ;
            // getSnapshotBeforeUpdate(prevProps) {
            //   let nextStatus = null
            //   if (prevProps !== this.props) {
            //     const { status } = this.state
            //     if (this.props.in) {
            //       if (status !== ENTERING && status !== ENTERED) {
            //         nextStatus = ENTERING
            //       }
            //     } else {
            //       if (status === ENTERING || status === ENTERED) {
            //         nextStatus = EXITING
            //       }
            //     }
            //   }
            //   return { nextStatus }
            // }

            var _proto = Transition.prototype;

            _proto.componentDidMount = function componentDidMount() {
                this.updateStatus(true, this.appearStatus);
            }
            ;

            _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
                var nextStatus = null;

                if (prevProps !== this.props) {
                    var status = this.state.status;

                    if (this.props.in) {
                        if (status !== ENTERING && status !== ENTERED) {
                            nextStatus = ENTERING;
                        }
                    } else {
                        if (status === ENTERING || status === ENTERED) {
                            nextStatus = EXITING;
                        }
                    }
                }

                this.updateStatus(false, nextStatus);
            }
            ;

            _proto.componentWillUnmount = function componentWillUnmount() {
                this.cancelNextCallback();
            }
            ;

            _proto.getTimeouts = function getTimeouts() {
                var timeout = this.props.timeout;
                var exit, enter, appear;
                exit = enter = appear = timeout;

                if (timeout != null && typeof timeout !== 'number') {
                    exit = timeout.exit;
                    enter = timeout.enter;
                    // TODO: remove fallback for next major

                    appear = timeout.appear !== undefined ? timeout.appear : enter;
                }

                return {
                    exit: exit,
                    enter: enter,
                    appear: appear
                };
            }
            ;

            _proto.updateStatus = function updateStatus(mounting, nextStatus) {
                if (mounting === void 0) {
                    mounting = false;
                }

                if (nextStatus !== null) {
                    // nextStatus will always be ENTERING or EXITING.
                    this.cancelNextCallback();
                    var node = compat_module["default"].findDOMNode(this);

                    if (nextStatus === ENTERING) {
                        this.performEnter(node, mounting);
                    } else {
                        this.performExit(node);
                    }
                } else if (this.props.unmountOnExit && this.state.status === EXITED) {
                    this.setState({
                        status: UNMOUNTED
                    });
                }
            }
            ;

            _proto.performEnter = function performEnter(node, mounting) {
                var _this2 = this;

                var enter = this.props.enter;
                var appearing = this.context ? this.context.isMounting : mounting;
                var timeouts = this.getTimeouts();
                var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
                // no enter animation skip right to ENTERED
                // if we are mounting and running this it means appear _must_ be set

                if (!mounting && !enter || config.disabled) {
                    this.safeSetState({
                        status: ENTERED
                    }, function() {
                        _this2.props.onEntered(node);
                    });
                    return;
                }

                this.props.onEnter(node, appearing);
                this.safeSetState({
                    status: ENTERING
                }, function() {
                    _this2.props.onEntering(node, appearing);

                    _this2.onTransitionEnd(node, enterTimeout, function() {
                        _this2.safeSetState({
                            status: ENTERED
                        }, function() {
                            _this2.props.onEntered(node, appearing);
                        });
                    });
                });
            }
            ;

            _proto.performExit = function performExit(node) {
                var _this3 = this;

                var exit = this.props.exit;
                var timeouts = this.getTimeouts();
                // no exit animation skip right to EXITED

                if (!exit || config.disabled) {
                    this.safeSetState({
                        status: EXITED
                    }, function() {
                        _this3.props.onExited(node);
                    });
                    return;
                }

                this.props.onExit(node);
                this.safeSetState({
                    status: EXITING
                }, function() {
                    _this3.props.onExiting(node);

                    _this3.onTransitionEnd(node, timeouts.exit, function() {
                        _this3.safeSetState({
                            status: EXITED
                        }, function() {
                            _this3.props.onExited(node);
                        });
                    });
                });
            }
            ;

            _proto.cancelNextCallback = function cancelNextCallback() {
                if (this.nextCallback !== null) {
                    this.nextCallback.cancel();
                    this.nextCallback = null;
                }
            }
            ;

            _proto.safeSetState = function safeSetState(nextState, callback) {
                // This shouldn't be necessary, but there are weird race conditions with
                // setState callbacks and unmounting in testing, so always make sure that
                // we can cancel any pending setState callbacks after we unmount.
                callback = this.setNextCallback(callback);
                this.setState(nextState, callback);
            }
            ;

            _proto.setNextCallback = function setNextCallback(callback) {
                var _this4 = this;

                var active = true;

                this.nextCallback = function(event) {
                    if (active) {
                        active = false;
                        _this4.nextCallback = null;
                        callback(event);
                    }
                }
                ;

                this.nextCallback.cancel = function() {
                    active = false;
                }
                ;

                return this.nextCallback;
            }
            ;

            _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
                this.setNextCallback(handler);
                var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

                if (!node || doesNotHaveTimeoutOrListener) {
                    setTimeout(this.nextCallback, 0);
                    return;
                }

                if (this.props.addEndListener) {
                    this.props.addEndListener(node, this.nextCallback);
                }

                if (timeout != null) {
                    setTimeout(this.nextCallback, timeout);
                }
            }
            ;

            _proto.render = function render() {
                var status = this.state.status;

                if (status === UNMOUNTED) {
                    return null;
                }

                var _this$props = this.props
                  , children = _this$props.children
                  , childProps = Object(objectWithoutPropertiesLoose["a"/* default */
                ])(_this$props, ["children"]);
                // filter props for Transtition

                delete childProps.in;
                delete childProps.mountOnEnter;
                delete childProps.unmountOnExit;
                delete childProps.appear;
                delete childProps.enter;
                delete childProps.exit;
                delete childProps.timeout;
                delete childProps.addEndListener;
                delete childProps.onEnter;
                delete childProps.onEntering;
                delete childProps.onEntered;
                delete childProps.onExit;
                delete childProps.onExiting;
                delete childProps.onExited;

                if (typeof children === 'function') {
                    // allows for nested Transitions
                    return compat_module["default"].createElement(TransitionGroupContext["a"/* default */
                    ].Provider, {
                        value: null
                    }, children(status, childProps));
                }

                var child = compat_module["default"].Children.only(children);
                return (// allows for nested Transitions
                compat_module["default"].createElement(TransitionGroupContext["a"/* default */
                ].Provider, {
                    value: null
                }, compat_module["default"].cloneElement(child, childProps)));
            }
            ;

            return Transition;
        }(compat_module["default"].Component);

        Transition_Transition.contextType = TransitionGroupContext["a"/* default */
        ];
        Transition_Transition.propTypes = false ? undefined : {};

        function noop() {}

        Transition_Transition.defaultProps = {
            in: false,
            mountOnEnter: false,
            unmountOnExit: false,
            appear: false,
            enter: true,
            exit: true,
            onEnter: noop,
            onEntering: noop,
            onEntered: noop,
            onExit: noop,
            onExiting: noop,
            onExited: noop
        };
        Transition_Transition.UNMOUNTED = 0;
        Transition_Transition.EXITED = 1;
        Transition_Transition.ENTERING = 2;
        Transition_Transition.ENTERED = 3;
        Transition_Transition.EXITING = 4;
        /* harmony default export */
        var esm_Transition = __webpack_exports__["a"] = (Transition_Transition);

        /***/
    }
    ), /* 766 */
    , /* 767 */
    , /* 768 */
    , /* 769 */
    , /* 770 */
    , /* 771 */
    , /* 772 */
    , /* 773 */
    , /* 774 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);

        function mergeClasses() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var baseClasses = options.baseClasses
              , newClasses = options.newClasses
              , Component = options.Component;

            if (!newClasses) {
                return baseClasses;
            }

            var nextClasses = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({}, baseClasses);

            if (false) {}

            Object.keys(newClasses).forEach(function(key) {
                if (false) {}

                if (newClasses[key]) {
                    nextClasses[key] = "".concat(baseClasses[key], " ").concat(newClasses[key]);
                }
            });
            return nextClasses;
        }

        /* harmony default export */
        __webpack_exports__["a"] = (mergeClasses);

        /***/
    }
    ), /* 775 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export sheetsManager */
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function() {
            return StylesContext;
        });
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var _createGenerateClassName__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(754);
        /* harmony import */
        var jss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(35);
        /* harmony import */
        var _jssPreset__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(436);

        // Default JSS instance.

        var jss = Object(jss__WEBPACK_IMPORTED_MODULE_5__[/* create */
        "c"])(Object(_jssPreset__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])());
        // Use a singleton or the provided one by the context.
        //
        // The counter-based approach doesn't tolerate any mistake.
        // It's much safer to use the same counter everywhere.

        var generateClassName = Object(_createGenerateClassName__WEBPACK_IMPORTED_MODULE_4__[/* default */
        "a"])();
        // Exported for test purposes

        var sheetsManager = new Map();
        var defaultOptions = {
            disableGeneration: false,
            generateClassName: generateClassName,
            jss: jss,
            sheetsCache: null,
            sheetsManager: sheetsManager,
            sheetsRegistry: null
        };
        var StylesContext = react__WEBPACK_IMPORTED_MODULE_2__["default"].createContext(defaultOptions);

        if (false) {}

        var injectFirstNode;

        function StylesProvider(props) {
            var children = props.children
              , _props$injectFirst = props.injectFirst
              , injectFirst = _props$injectFirst === void 0 ? false : _props$injectFirst
              , _props$disableGenerat = props.disableGeneration
              , disableGeneration = _props$disableGenerat === void 0 ? false : _props$disableGenerat
              , localOptions = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["children", "injectFirst", "disableGeneration"]);

            var outerOptions = react__WEBPACK_IMPORTED_MODULE_2__["default"].useContext(StylesContext);

            var context = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({}, outerOptions, {
                disableGeneration: disableGeneration
            }, localOptions);

            if (false) {}

            if (false) {}

            if (false) {}

            if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {
                if (!injectFirstNode) {
                    var head = document.head;
                    injectFirstNode = document.createComment('mui-inject-first');
                    head.insertBefore(injectFirstNode, head.firstChild);
                }

                context.jss = Object(jss__WEBPACK_IMPORTED_MODULE_5__[/* create */
                "c"])({
                    plugins: Object(_jssPreset__WEBPACK_IMPORTED_MODULE_6__[/* default */
                    "a"])().plugins,
                    insertionPoint: injectFirstNode
                });
            }

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(StylesContext.Provider, {
                value: context
            }, children);
        }

        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        __webpack_exports__["b"] = (StylesProvider);

        /***/
    }
    ), /* 776 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* eslint-disable no-restricted-syntax */
        function getThemeProps(params) {
            var theme = params.theme
              , name = params.name
              , props = params.props;

            if (!theme || !theme.props || !theme.props[name]) {
                return props;
            }
            // Resolve default props, code borrow from React source.
            // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221

            var defaultProps = theme.props[name];
            var propName;

            for (propName in defaultProps) {
                if (props[propName] === undefined) {
                    props[propName] = defaultProps[propName];
                }
            }

            return props;
        }

        /* harmony default export */
        __webpack_exports__["a"] = (getThemeProps);

        /***/
    }
    ), /* 777 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);

        var useEnhancedEffect = typeof window !== 'undefined' && "production" !== 'test' ? react__WEBPACK_IMPORTED_MODULE_0__["default"].useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__["default"].useEffect;
        /**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 * - Escape hatch for broken dependencies not supporting SSR.
 * - Improve the time-to-first paint on the client by only rendering above the fold.
 * - Reduce the rendering time on the server.
 * - Under too heavy server load, you can turn on service degradation.
 */

        function NoSsr(props) {
            var children = props.children
              , _props$defer = props.defer
              , defer = _props$defer === void 0 ? false : _props$defer
              , _props$fallback = props.fallback
              , fallback = _props$fallback === void 0 ? null : _props$fallback;

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__["default"].useState(false)
              , mountedState = _React$useState[0]
              , setMountedState = _React$useState[1];

            useEnhancedEffect(function() {
                if (!defer) {
                    setMountedState(true);
                }
            }, [defer]);
            react__WEBPACK_IMPORTED_MODULE_0__["default"].useEffect(function() {
                if (defer) {
                    setMountedState(true);
                }
            }, [defer]);
            // We need the Fragment here to force react-docgen to recognise NoSsr as a component.

            return react__WEBPACK_IMPORTED_MODULE_0__["default"].createElement(react__WEBPACK_IMPORTED_MODULE_0__["default"].Fragment, null, mountedState ? children : fallback);
        }

        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        __webpack_exports__["a"] = (NoSsr);

        /***/
    }
    ), /* 778 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* unused harmony export styles */
        /* harmony import */
        var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
        /* harmony import */
        var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
        /* harmony import */
        var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);
        /* harmony import */
        var _InputBase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(435);
        /* harmony import */
        var _styles_withStyles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4);

        var styles = function styles(theme) {
            var light = theme.palette.type === 'light';
            var bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';
            var backgroundColor = light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)';
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    backgroundColor: backgroundColor,
                    borderTopLeftRadius: theme.shape.borderRadius,
                    borderTopRightRadius: theme.shape.borderRadius,
                    transition: theme.transitions.create('background-color', {
                        duration: theme.transitions.duration.shorter,
                        easing: theme.transitions.easing.easeOut
                    }),
                    '&:hover': {
                        backgroundColor: light ? 'rgba(0, 0, 0, 0.13)' : 'rgba(255, 255, 255, 0.13)',
                        // Reset on touch devices, it doesn't add specificity
                        '@media (hover: none)': {
                            backgroundColor: backgroundColor
                        }
                    },
                    '&$focused': {
                        backgroundColor: light ? 'rgba(0, 0, 0, 0.09)' : 'rgba(255, 255, 255, 0.09)'
                    },
                    '&$disabled': {
                        backgroundColor: light ? 'rgba(0, 0, 0, 0.12)' : 'rgba(255, 255, 255, 0.12)'
                    }
                },

                /* Styles applied to the root element if color secondary. */
                colorSecondary: {
                    '&$underline:after': {
                        borderBottomColor: theme.palette.secondary.main
                    }
                },

                /* Styles applied to the root element if `disableUnderline={false}`. */
                underline: {
                    '&:after': {
                        borderBottom: "2px solid ".concat(theme.palette.primary.main),
                        left: 0,
                        bottom: 0,
                        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                        content: '""',
                        position: 'absolute',
                        right: 0,
                        transform: 'scaleX(0)',
                        transition: theme.transitions.create('transform', {
                            duration: theme.transitions.duration.shorter,
                            easing: theme.transitions.easing.easeOut
                        }),
                        pointerEvents: 'none'// Transparent to the hover style.

                    },
                    '&$focused:after': {
                        transform: 'scaleX(1)'
                    },
                    '&$error:after': {
                        borderBottomColor: theme.palette.error.main,
                        transform: 'scaleX(1)'// error is always underlined in red

                    },
                    '&:before': {
                        borderBottom: "1px solid ".concat(bottomLineColor),
                        left: 0,
                        bottom: 0,
                        // Doing the other way around crash on IE 11 "''" https://github.com/cssinjs/jss/issues/242
                        content: '"\\00a0"',
                        position: 'absolute',
                        right: 0,
                        transition: theme.transitions.create('border-bottom-color', {
                            duration: theme.transitions.duration.shorter
                        }),
                        pointerEvents: 'none'// Transparent to the hover style.

                    },
                    '&:hover:before': {
                        borderBottom: "1px solid ".concat(theme.palette.text.primary)
                    },
                    '&$disabled:before': {
                        borderBottomStyle: 'dotted'
                    }
                },

                /* Pseudo-class applied to the root element if the component is focused. */
                focused: {},

                /* Pseudo-class applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `startAdornment` is provided. */
                adornedStart: {
                    paddingLeft: 12
                },

                /* Styles applied to the root element if `endAdornment` is provided. */
                adornedEnd: {
                    paddingRight: 12
                },

                /* Styles applied to the root element if `error={true}`. */
                error: {},

                /* Styles applied to the `input` element if `margin="dense"`. */
                marginDense: {},

                /* Styles applied to the root element if `multiline={true}`. */
                multiline: {
                    padding: '27px 12px 10px',
                    '&$marginDense': {
                        paddingTop: 23,
                        paddingBottom: 6
                    }
                },

                /* Styles applied to the `input` element. */
                input: {
                    padding: '27px 12px 10px',
                    '&:-webkit-autofill': {
                        WebkitBoxShadow: theme.palette.type === 'dark' ? '0 0 0 100px #266798 inset' : null,
                        WebkitTextFillColor: theme.palette.type === 'dark' ? '#fff' : null,
                        borderTopLeftRadius: 'inherit',
                        borderTopRightRadius: 'inherit'
                    }
                },

                /* Styles applied to the `input` element if `margin="dense"`. */
                inputMarginDense: {
                    paddingTop: 23,
                    paddingBottom: 6
                },

                /* Styles applied to the `input` if in `<FormControl hiddenLabel />`. */
                inputHiddenLabel: {
                    paddingTop: 18,
                    paddingBottom: 19,
                    '&$inputMarginDense': {
                        paddingTop: 10,
                        paddingBottom: 11
                    }
                },

                /* Styles applied to the `input` element if `multiline={true}`. */
                inputMultiline: {
                    padding: 0
                },

                /* Styles applied to the `input` element if `startAdornment` is provided. */
                inputAdornedStart: {
                    paddingLeft: 0
                },

                /* Styles applied to the `input` element if `endAdornment` is provided. */
                inputAdornedEnd: {
                    paddingRight: 0
                }
            };
        };
        var FilledInput = react__WEBPACK_IMPORTED_MODULE_2__["default"].forwardRef(function FilledInput(props, ref) {
            var disableUnderline = props.disableUnderline
              , classes = props.classes
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$inputComponent = props.inputComponent
              , inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent
              , _props$multiline = props.multiline
              , multiline = _props$multiline === void 0 ? false : _props$multiline
              , _props$type = props.type
              , type = _props$type === void 0 ? 'text' : _props$type
              , other = Object(_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[/* default */
            "a"])(props, ["disableUnderline", "classes", "fullWidth", "inputComponent", "multiline", "type"]);

            return react__WEBPACK_IMPORTED_MODULE_2__["default"].createElement(_InputBase__WEBPACK_IMPORTED_MODULE_5__[/* default */
            "a"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
            "a"])({
                classes: Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */
                "a"])({}, classes, {
                    root: Object(clsx__WEBPACK_IMPORTED_MODULE_4__[/* default */
                    "a"])(classes.root, !disableUnderline && classes.underline),
                    underline: null
                }),
                fullWidth: fullWidth,
                inputComponent: inputComponent,
                multiline: multiline,
                ref: ref,
                type: type
            }, other));
        });
        false ? undefined : void 0;
        FilledInput.muiName = 'Input';
        /* harmony default export */
        __webpack_exports__["a"] = (Object(_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__[/* default */
        "a"])(styles, {
            name: 'MuiFilledInput'
        })(FilledInput));

        /***/
    }
    ), /* 779 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);
        /* harmony import */
        var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/
        __webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */
        var _utils_setRef__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
        /* harmony import */
        var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13);

        function getContainer(container) {
            container = typeof container === 'function' ? container() : container;
            // #StrictMode ready

            return react__WEBPACK_IMPORTED_MODULE_0__["default"].findDOMNode(container);
        }

        var useEnhancedEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__["default"].useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__["default"].useEffect;
        /**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */

        var Portal = react__WEBPACK_IMPORTED_MODULE_0__["default"].forwardRef(function Portal(props, ref) {
            var children = props.children
              , container = props.container
              , _props$disablePortal = props.disablePortal
              , disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal
              , onRendered = props.onRendered;

            var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__["default"].useState(null)
              , mountNode = _React$useState[0]
              , setMountNode = _React$useState[1];

            var handleRef = Object(_utils_useForkRef__WEBPACK_IMPORTED_MODULE_3__[/* default */
            "a"])(react__WEBPACK_IMPORTED_MODULE_0__["default"].isValidElement(children) ? children.ref : null, ref);
            useEnhancedEffect(function() {
                if (!disablePortal) {
                    setMountNode(getContainer(container) || document.body);
                }
            }, [container, disablePortal]);
            useEnhancedEffect(function() {
                if (mountNode && !disablePortal) {
                    Object(_utils_setRef__WEBPACK_IMPORTED_MODULE_2__[/* default */
                    "a"])(ref, mountNode);
                    return function() {
                        Object(_utils_setRef__WEBPACK_IMPORTED_MODULE_2__[/* default */
                        "a"])(ref, null);
                    }
                    ;
                }

                return undefined;
            }, [ref, mountNode, disablePortal]);
            useEnhancedEffect(function() {
                if (onRendered && (mountNode || disablePortal)) {
                    onRendered();
                }
            }, [onRendered, mountNode, disablePortal]);

            if (disablePortal) {
                if (react__WEBPACK_IMPORTED_MODULE_0__["default"].isValidElement(children)) {
                    return react__WEBPACK_IMPORTED_MODULE_0__["default"].cloneElement(children, {
                        ref: handleRef
                    });
                }

                return children;
            }

            return mountNode ? react__WEBPACK_IMPORTED_MODULE_0__["default"].createPortal(children, mountNode) : mountNode;
        });
        false ? undefined : void 0;

        if (false) {}

        /* harmony default export */
        __webpack_exports__["a"] = (Portal);

        /***/
    }
    ), /* 780 */
    /***/
    (function(module, __webpack_exports__, __webpack_require__) {

        "use strict";

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/extends.js
        var esm_extends = __webpack_require__(1);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
        var objectWithoutProperties = __webpack_require__(3);

        // EXTERNAL MODULE: ../node_modules/preact/compat/dist/compat.module.js + 2 modules
        var compat_module = __webpack_require__(0);

        // EXTERNAL MODULE: ../node_modules/prop-types/index.js
        var prop_types = __webpack_require__(5);

        // EXTERNAL MODULE: ../node_modules/clsx/dist/clsx.m.js
        var clsx_m = __webpack_require__(2);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/InputBase/InputBase.js
        var InputBase = __webpack_require__(435);

        // EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js
        var defineProperty = __webpack_require__(10);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules
        var withStyles = __webpack_require__(4);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/styles/useTheme.js
        var useTheme = __webpack_require__(17);

        // EXTERNAL MODULE: ../node_modules/@material-ui/core/esm/utils/capitalize.js
        var capitalize = __webpack_require__(7);

        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/OutlinedInput/NotchedOutline.js

        var styles = function styles(theme) {
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'absolute',
                    bottom: 0,
                    right: 0,
                    top: -5,
                    left: 0,
                    margin: 0,
                    padding: 0,
                    paddingLeft: 8,
                    pointerEvents: 'none',
                    borderRadius: 'inherit',
                    borderStyle: 'solid',
                    borderWidth: 1
                },

                /* Styles applied to the legend element when `labelWidth` is provided. */
                legend: {
                    textAlign: 'left',
                    padding: 0,
                    lineHeight: '11px',
                    // sync with `height` in `legend` styles
                    transition: theme.transitions.create('width', {
                        duration: 150,
                        easing: theme.transitions.easing.easeOut
                    })
                },

                /* Styles applied to the legend element. */
                legendLabelled: {
                    textAlign: 'left',
                    padding: 0,
                    height: 11,
                    // sync with `lineHeight` in `legend` styles
                    fontSize: '0.75rem',
                    visibility: 'hidden',
                    maxWidth: 0.01,
                    transition: theme.transitions.create('max-width', {
                        duration: 50,
                        easing: theme.transitions.easing.easeOut
                    }),
                    '& span': {
                        paddingLeft: 5,
                        paddingRight: 5
                    }
                },

                /* Styles applied to the legend element is notched. */
                legendNotched: {
                    maxWidth: 1000,
                    transition: theme.transitions.create('max-width', {
                        duration: 100,
                        easing: theme.transitions.easing.easeOut,
                        delay: 50
                    })
                }
            };
        };
        /**
 * @ignore - internal component.
 */

        var NotchedOutline_NotchedOutline = compat_module["default"].forwardRef(function NotchedOutline(props, ref) {
            var children = props.children
              , classes = props.classes
              , className = props.className
              , label = props.label
              , labelWidthProp = props.labelWidth
              , notched = props.notched
              , style = props.style
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["children", "classes", "className", "label", "labelWidth", "notched", "style"]);

            var theme = Object(useTheme["a"/* default */
            ])();
            var align = theme.direction === 'rtl' ? 'right' : 'left';

            if (label !== undefined) {
                return compat_module["default"].createElement("fieldset", Object(esm_extends["a"/* default */
                ])({
                    "aria-hidden": true,
                    className: Object(clsx_m["a"/* default */
                    ])(classes.root, className),
                    ref: ref,
                    style: style
                }, other), compat_module["default"].createElement("legend", {
                    className: Object(clsx_m["a"/* default */
                    ])(classes.legendLabelled, notched && classes.legendNotched)
                }, label ? compat_module["default"].createElement("span", null, label) : compat_module["default"].createElement("span", {
                    dangerouslySetInnerHTML: {
                        __html: '&#8203;'
                    }
                })));
            }

            var labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01;
            return compat_module["default"].createElement("fieldset", Object(esm_extends["a"/* default */
            ])({
                "aria-hidden": true,
                style: Object(esm_extends["a"/* default */
                ])(Object(defineProperty["a"/* default */
                ])({}, "padding".concat(Object(capitalize["a"/* default */
                ])(align)), 8), style),
                className: Object(clsx_m["a"/* default */
                ])(classes.root, className),
                ref: ref
            }, other), compat_module["default"].createElement("legend", {
                className: classes.legend,
                style: {
                    // IE 11: fieldset with legend does not render
                    // a border radius. This maintains consistency
                    // by always having a legend rendered
                    width: notched ? labelWidth : 0.01
                }
            }, compat_module["default"].createElement("span", {
                dangerouslySetInnerHTML: {
                    __html: '&#8203;'
                }
            })));
        });
        false ? undefined : void 0;
        /* harmony default export */
        var OutlinedInput_NotchedOutline = (Object(withStyles["a"/* default */
        ])(styles, {
            name: 'PrivateNotchedOutline'
        })(NotchedOutline_NotchedOutline));
        // CONCATENATED MODULE: ../node_modules/@material-ui/core/esm/OutlinedInput/OutlinedInput.js
        /* unused harmony export styles */

        var OutlinedInput_styles = function styles(theme) {
            var borderColor = theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)';
            return {
                /* Styles applied to the root element. */
                root: {
                    position: 'relative',
                    borderRadius: theme.shape.borderRadius,
                    '&:hover $notchedOutline': {
                        borderColor: theme.palette.text.primary
                    },
                    // Reset on touch devices, it doesn't add specificity
                    '@media (hover: none)': {
                        '&:hover $notchedOutline': {
                            borderColor: borderColor
                        }
                    },
                    '&$focused $notchedOutline': {
                        borderColor: theme.palette.primary.main,
                        borderWidth: 2
                    },
                    '&$error $notchedOutline': {
                        borderColor: theme.palette.error.main
                    },
                    '&$disabled $notchedOutline': {
                        borderColor: theme.palette.action.disabled
                    }
                },

                /* Styles applied to the root element if the color is secondary. */
                colorSecondary: {
                    '&$focused $notchedOutline': {
                        borderColor: theme.palette.secondary.main
                    }
                },

                /* Styles applied to the root element if the component is focused. */
                focused: {},

                /* Styles applied to the root element if `disabled={true}`. */
                disabled: {},

                /* Styles applied to the root element if `startAdornment` is provided. */
                adornedStart: {
                    paddingLeft: 14
                },

                /* Styles applied to the root element if `endAdornment` is provided. */
                adornedEnd: {
                    paddingRight: 14
                },

                /* Styles applied to the root element if `error={true}`. */
                error: {},

                /* Styles applied to the `input` element if `margin="dense"`. */
                marginDense: {},

                /* Styles applied to the root element if `multiline={true}`. */
                multiline: {
                    padding: '18.5px 14px',
                    '&$marginDense': {
                        paddingTop: 10.5,
                        paddingBottom: 10.5
                    }
                },

                /* Styles applied to the `NotchedOutline` element. */
                notchedOutline: {
                    borderColor: borderColor
                },

                /* Styles applied to the `input` element. */
                input: {
                    padding: '18.5px 14px',
                    '&:-webkit-autofill': {
                        WebkitBoxShadow: theme.palette.type === 'dark' ? '0 0 0 100px #266798 inset' : null,
                        WebkitTextFillColor: theme.palette.type === 'dark' ? '#fff' : null,
                        borderRadius: 'inherit'
                    }
                },

                /* Styles applied to the `input` element if `margin="dense"`. */
                inputMarginDense: {
                    paddingTop: 10.5,
                    paddingBottom: 10.5
                },

                /* Styles applied to the `input` element if `multiline={true}`. */
                inputMultiline: {
                    padding: 0
                },

                /* Styles applied to the `input` element if `startAdornment` is provided. */
                inputAdornedStart: {
                    paddingLeft: 0
                },

                /* Styles applied to the `input` element if `endAdornment` is provided. */
                inputAdornedEnd: {
                    paddingRight: 0
                }
            };
        };
        var OutlinedInput_OutlinedInput = compat_module["default"].forwardRef(function OutlinedInput(props, ref) {
            var classes = props.classes
              , _props$fullWidth = props.fullWidth
              , fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth
              , _props$inputComponent = props.inputComponent
              , inputComponent = _props$inputComponent === void 0 ? 'input' : _props$inputComponent
              , label = props.label
              , _props$labelWidth = props.labelWidth
              , labelWidth = _props$labelWidth === void 0 ? 0 : _props$labelWidth
              , _props$multiline = props.multiline
              , multiline = _props$multiline === void 0 ? false : _props$multiline
              , notched = props.notched
              , _props$type = props.type
              , type = _props$type === void 0 ? 'text' : _props$type
              , other = Object(objectWithoutProperties["a"/* default */
            ])(props, ["classes", "fullWidth", "inputComponent", "label", "labelWidth", "multiline", "notched", "type"]);

            return compat_module["default"].createElement(InputBase["a"/* default */
            ], Object(esm_extends["a"/* default */
            ])({
                renderSuffix: function renderSuffix(state) {
                    return compat_module["default"].createElement(OutlinedInput_NotchedOutline, {
                        className: classes.notchedOutline,
                        label: label,
                        labelWidth: labelWidth,
                        notched: typeof notched !== 'undefined' ? notched : Boolean(state.startAdornment || state.filled || state.focused)
                    });
                },
                classes: Object(esm_extends["a"/* default */
                ])({}, classes, {
                    root: Object(clsx_m["a"/* default */
                    ])(classes.root, classes.underline),
                    notchedOutline: null
                }),
                fullWidth: fullWidth,
                inputComponent: inputComponent,
                multiline: multiline,
                ref: ref,
                type: type
            }, other));
        });
        false ? undefined : void 0;
        OutlinedInput_OutlinedInput.muiName = 'Input';
        /* harmony default export */
        var esm_OutlinedInput_OutlinedInput = __webpack_exports__["a"] = (Object(withStyles["a"/* default */
        ])(OutlinedInput_styles, {
            name: 'MuiOutlinedInput'
        })(OutlinedInput_OutlinedInput));

        /***/
    }
    )/******/
    ]);
});
//# sourceMappingURL=index.js.map
